<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 1
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 1
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 1
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 1
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB132:
  30              		.file 1 "Core/Src/oled.cpp"
   1:Core/Src/oled.cpp **** #include "oled.h"
   2:Core/Src/oled.cpp **** 
   3:Core/Src/oled.cpp **** 
   4:Core/Src/oled.cpp **** #define OLED_RIGHT_HORIZONTAL_SCROLL              0x26
   5:Core/Src/oled.cpp **** #define OLED_LEFT_HORIZONTAL_SCROLL               0x27
   6:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
   7:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A
   8:Core/Src/oled.cpp **** #define OLED_DEACTIVATE_SCROLL                    0x2E // Stop scroll
   9:Core/Src/oled.cpp **** #define OLED_ACTIVATE_SCROLL                      0x2F // Start scroll
  10:Core/Src/oled.cpp **** #define OLED_SET_VERTICAL_SCROLL_AREA             0xA3 // Set scroll range
  11:Core/Src/oled.cpp **** 
  12:Core/Src/oled.cpp **** #define OLED_NORMALDISPLAY       0xA6
  13:Core/Src/oled.cpp **** #define OLED_INVERTDISPLAY       0xA7
  14:Core/Src/oled.cpp **** 
  15:Core/Src/oled.cpp **** 
  16:Core/Src/oled.cpp **** #define OLED_WRITECOMMAND(command)      comm[0]=COMMAND; comm[1]=(command); oled_write(comm,2)
  17:Core/Src/oled.cpp **** 
  18:Core/Src/oled.cpp **** oled::oled(I2C_HandleTypeDef *hi2c, uint8_t address,TIM_HandleTypeDef *htim)
  31              		.loc 1 18 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 18 1 is_stmt 0 view .LVU1
  37 0000 70B4     		push	{r4, r5, r6}
  38              	.LCFI0:
<<<<<<< HEAD
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 2
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 2
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 2
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 2
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


  41              		.cfi_offset 5, -8
  42              		.cfi_offset 6, -4
  43              	.LBB2:
  44              		.loc 1 18 76 view .LVU2
  45 0002 0025     		movs	r5, #0
  46 0004 C560     		str	r5, [r0, #12]
  47 0006 3C26     		movs	r6, #60
  48 0008 0661     		str	r6, [r0, #16]
  49 000a 0575     		strb	r5, [r0, #20]
  50 000c 0125     		movs	r5, #1
  51 000e 4575     		strb	r5, [r0, #21]
  19:Core/Src/oled.cpp **** {
  20:Core/Src/oled.cpp ****     this->hi2c=hi2c;
  52              		.loc 1 20 5 is_stmt 1 view .LVU3
  53              		.loc 1 20 15 is_stmt 0 view .LVU4
  54 0010 0160     		str	r1, [r0]
  21:Core/Src/oled.cpp **** 	this->address=address;
  55              		.loc 1 21 2 is_stmt 1 view .LVU5
  56              		.loc 1 21 15 is_stmt 0 view .LVU6
  57 0012 0272     		strb	r2, [r0, #8]
  22:Core/Src/oled.cpp **** 	this->htim=htim;
  58              		.loc 1 22 2 is_stmt 1 view .LVU7
  59              		.loc 1 22 12 is_stmt 0 view .LVU8
  60 0014 4360     		str	r3, [r0, #4]
  61              	.LBE2:
  23:Core/Src/oled.cpp **** }
  62              		.loc 1 23 1 view .LVU9
  63 0016 70BC     		pop	{r4, r5, r6}
  64              	.LCFI1:
  65              		.cfi_restore 6
  66              		.cfi_restore 5
  67              		.cfi_restore 4
  68              		.cfi_def_cfa_offset 0
  69 0018 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE132:
  72              		.cantunwind
  73              		.fnend
  75              		.global	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  76              		.thumb_set _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,_ZN4oledC2EP17I2C_HandleTypeDefhP1
  77              		.section	.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE,"ax",%progbits
  78              		.align	1
  79              		.global	_ZN4oled9oled_fillENS_12OLED_COLOR_tE
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	_ZN4oled9oled_fillENS_12OLED_COLOR_tE:
  86              		.fnstart
  87              	.LVL1:
  88              	.LFB135:
  24:Core/Src/oled.cpp **** void oled::init(void)
  25:Core/Src/oled.cpp **** {
  26:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
  27:Core/Src/oled.cpp **** 	}
  28:Core/Src/oled.cpp ****     
  29:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(0xAE); //display off
ARM GAS  /tmp/cc1XDnsz.s 			page 3


  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 3
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 3
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


=======
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
  57:Core/Src/oled.cpp **** 
  58:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(OLED_DEACTIVATE_SCROLL); //Deactivate scroll
  59:Core/Src/oled.cpp **** 
  60:Core/Src/oled.cpp ****     HAL_TIM_Base_Start_IT(htim);
  61:Core/Src/oled.cpp **** 
  62:Core/Src/oled.cpp **** }
  63:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
  89              		.loc 1 63 42 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		.loc 1 63 42 is_stmt 0 view .LVU11
  94 0000 70B5     		push	{r4, r5, r6, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 4, -16
  98              		.cfi_offset 5, -12
  99              		.cfi_offset 6, -8
 100              		.cfi_offset 14, -4
 101 0002 0646     		mov	r6, r0
 102 0004 0D46     		mov	r5, r1
  64:Core/Src/oled.cpp **** 	/* Set memory */
  65:Core/Src/oled.cpp ****     for (uint8_t m = 0; m < 8; m++) {
<<<<<<< HEAD
 100              		.loc 1 65 5 is_stmt 1 view .LVU12
 101              	.LVL2:
 102              	.LBB3:
 103              		.loc 1 65 18 is_stmt 0 view .LVU13
 104 0006 0024     		movs	r4, #0
 105 0008 09E0     		b	.L5
 106              	.LVL3:
 107              	.L7:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 108              		.loc 1 66 2 is_stmt 1 discriminator 2 view .LVU14
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 4
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 4
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 103              		.loc 1 65 5 is_stmt 1 view .LVU12
 104              	.LVL2:
 105              	.LBB3:
 106              		.loc 1 65 18 is_stmt 0 view .LVU13
 107 0006 0024     		movs	r4, #0
 108 0008 09E0     		b	.L5
 109              	.LVL3:
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 4
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 4
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 110              	.L7:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 111              		.loc 1 66 2 is_stmt 1 discriminator 2 view .LVU14
 112              		.loc 1 66 24 is_stmt 0 discriminator 2 view .LVU15
 113 000a E001     		lsls	r0, r4, #7
 114              		.loc 1 66 9 discriminator 2 view .LVU16
 115 000c 1130     		adds	r0, r0, #17
 116 000e 3044     		add	r0, r0, r6
 117              		.loc 1 66 8 discriminator 2 view .LVU17
 118 0010 8022     		movs	r2, #128
 119 0012 2946     		mov	r1, r5
 120 0014 0630     		adds	r0, r0, #6
 121 0016 FFF7FEFF 		bl	memset
 122              	.LVL4:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 123              		.loc 1 65 5 is_stmt 1 discriminator 2 view .LVU18
 124 001a 0134     		adds	r4, r4, #1
 125              	.LVL5:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 126              		.loc 1 65 5 is_stmt 0 discriminator 2 view .LVU19
 127 001c E4B2     		uxtb	r4, r4
 128              	.LVL6:
 129              	.L5:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 130              		.loc 1 65 27 is_stmt 1 discriminator 3 view .LVU20
 131 001e 072C     		cmp	r4, #7
 132 0020 F3D9     		bls	.L7
 133              	.LBE3:
  67:Core/Src/oled.cpp ****     }
  68:Core/Src/oled.cpp **** }
 134              		.loc 1 68 1 is_stmt 0 view .LVU21
 135 0022 70BD     		pop	{r4, r5, r6, pc}
 136              		.loc 1 68 1 view .LVU22
 137              		.cfi_endproc
 138              	.LFE135:
 139              		.cantunwind
 140              		.fnend
 142              		.section	.text._ZN4oled10oled_writeEPht,"ax",%progbits
 143              		.align	1
 144              		.global	_ZN4oled10oled_writeEPht
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	_ZN4oled10oled_writeEPht:
 151              		.fnstart
 152              	.LVL7:
 153              	.LFB136:
  69:Core/Src/oled.cpp **** uint8_t oled::oled_write(uint8_t* data, uint16_t count)
  70:Core/Src/oled.cpp **** {
<<<<<<< HEAD
 151              		.loc 1 70 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 70 1 is_stmt 0 view .LVU24
 156 0000 00B5     		push	{lr}
 157              		.save {lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 5
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 5
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 154              		.loc 1 70 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		.loc 1 70 1 is_stmt 0 view .LVU24
 159 0000 00B5     		push	{lr}
 160              		.save {lr}
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 5
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 5
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 14, -4
 164              		.pad #12
 165 0002 83B0     		sub	sp, sp, #12
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 16
 168 0004 1346     		mov	r3, r2
  71:Core/Src/oled.cpp **** 	HAL_I2C_Master_Transmit(hi2c, address, data, count, 10);
 169              		.loc 1 71 2 is_stmt 1 view .LVU25
 170              		.loc 1 71 25 is_stmt 0 view .LVU26
 171 0006 0A22     		movs	r2, #10
 172              	.LVL8:
 173              		.loc 1 71 25 view .LVU27
 174 0008 0092     		str	r2, [sp]
 175 000a 0A46     		mov	r2, r1
 176 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 177              	.LVL9:
 178              		.loc 1 71 25 view .LVU28
 179 000e 0068     		ldr	r0, [r0]
 180              	.LVL10:
 181              		.loc 1 71 25 view .LVU29
 182 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 183              	.LVL11:
  72:Core/Src/oled.cpp ****     return 1;
 184              		.loc 1 72 5 is_stmt 1 view .LVU30
  73:Core/Src/oled.cpp **** }
 185              		.loc 1 73 1 is_stmt 0 view .LVU31
 186 0014 0120     		movs	r0, #1
 187 0016 03B0     		add	sp, sp, #12
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 4
 190              		@ sp needed
 191 0018 5DF804FB 		ldr	pc, [sp], #4
 192              		.cfi_endproc
 193              	.LFE136:
 194              		.fnend
 196              		.section	.text._ZN4oled4initEv,"ax",%progbits
 197              		.align	1
 198              		.global	_ZN4oled4initEv
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	_ZN4oled4initEv:
 205              		.fnstart
 206              	.LVL12:
 207              	.LFB134:
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 208              		.loc 1 25 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
<<<<<<< HEAD
 209              		.loc 1 25 1 is_stmt 0 view .LVU33
 210 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 211              		.save {r4, r5, r6, r7, r8, lr}
 212              	.LCFI6:
 213              		.cfi_def_cfa_offset 24
 214              		.cfi_offset 4, -24
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 6
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 6
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 212              		.loc 1 25 1 is_stmt 0 view .LVU33
 213 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 214              		.save {r4, r5, r6, r7, r8, lr}
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 6
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 6
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 215              	.LCFI6:
 216              		.cfi_def_cfa_offset 24
 217              		.cfi_offset 4, -24
 218              		.cfi_offset 5, -20
 219              		.cfi_offset 6, -16
 220              		.cfi_offset 7, -12
 221              		.cfi_offset 8, -8
 222              		.cfi_offset 14, -4
 223 0004 0446     		mov	r4, r0
  26:Core/Src/oled.cpp **** 	}
 224              		.loc 1 26 2 is_stmt 1 view .LVU34
  26:Core/Src/oled.cpp **** 	}
 225              		.loc 1 26 27 is_stmt 0 view .LVU35
 226 0006 44F62063 		movw	r3, #20000
 227 000a 0122     		movs	r2, #1
 228 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 229 000e 0068     		ldr	r0, [r0]
 230              	.LVL13:
  26:Core/Src/oled.cpp **** 	}
 231              		.loc 1 26 27 view .LVU36
 232 0010 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 233              	.LVL14:
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 234              		.loc 1 29 5 is_stmt 1 view .LVU37
 235 0014 0025     		movs	r5, #0
 236 0016 6572     		strb	r5, [r4, #9]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 237              		.loc 1 29 5 view .LVU38
 238 0018 AE23     		movs	r3, #174
 239 001a A372     		strb	r3, [r4, #10]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 240              		.loc 1 29 5 view .LVU39
 241 001c 04F10906 		add	r6, r4, #9
 242 0020 0222     		movs	r2, #2
 243 0022 3146     		mov	r1, r6
 244 0024 2046     		mov	r0, r4
 245 0026 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 246              	.LVL15:
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 247              		.loc 1 30 2 view .LVU40
 248 002a 6572     		strb	r5, [r4, #9]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 249              		.loc 1 30 2 view .LVU41
 250 002c 2027     		movs	r7, #32
 251 002e A772     		strb	r7, [r4, #10]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 252              		.loc 1 30 2 view .LVU42
 253 0030 0222     		movs	r2, #2
 254 0032 3146     		mov	r1, r6
 255 0034 2046     		mov	r0, r4
 256 0036 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 257              	.LVL16:
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 258              		.loc 1 31 2 view .LVU43
 259 003a 6572     		strb	r5, [r4, #9]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
<<<<<<< HEAD
 257              		.loc 1 31 2 view .LVU44
 258 003c 4FF01008 		mov	r8, #16
 259 0040 84F80A80 		strb	r8, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 7
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 7
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 260              		.loc 1 31 2 view .LVU44
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 7
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 7
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 261 003c 4FF01008 		mov	r8, #16
 262 0040 84F80A80 		strb	r8, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 263              		.loc 1 31 2 view .LVU45
 264 0044 0222     		movs	r2, #2
 265 0046 3146     		mov	r1, r6
 266 0048 2046     		mov	r0, r4
 267 004a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 268              	.LVL17:
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 269              		.loc 1 32 2 view .LVU46
 270 004e 6572     		strb	r5, [r4, #9]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 271              		.loc 1 32 2 view .LVU47
 272 0050 B023     		movs	r3, #176
 273 0052 A372     		strb	r3, [r4, #10]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 274              		.loc 1 32 2 view .LVU48
 275 0054 0222     		movs	r2, #2
 276 0056 3146     		mov	r1, r6
 277 0058 2046     		mov	r0, r4
 278 005a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 279              	.LVL18:
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 280              		.loc 1 33 2 view .LVU49
 281 005e 6572     		strb	r5, [r4, #9]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 282              		.loc 1 33 2 view .LVU50
 283 0060 C823     		movs	r3, #200
 284 0062 A372     		strb	r3, [r4, #10]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 285              		.loc 1 33 2 view .LVU51
 286 0064 0222     		movs	r2, #2
 287 0066 3146     		mov	r1, r6
 288 0068 2046     		mov	r0, r4
 289 006a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 290              	.LVL19:
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 291              		.loc 1 34 2 view .LVU52
 292 006e 6572     		strb	r5, [r4, #9]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 293              		.loc 1 34 2 view .LVU53
 294 0070 A572     		strb	r5, [r4, #10]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 295              		.loc 1 34 2 view .LVU54
 296 0072 0222     		movs	r2, #2
 297 0074 3146     		mov	r1, r6
 298 0076 2046     		mov	r0, r4
 299 0078 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 300              	.LVL20:
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 301              		.loc 1 35 2 view .LVU55
 302 007c 6572     		strb	r5, [r4, #9]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 303              		.loc 1 35 2 view .LVU56
 304 007e 84F80A80 		strb	r8, [r4, #10]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
<<<<<<< HEAD
<<<<<<< HEAD
 302              		.loc 1 35 2 view .LVU57
 303 0082 0222     		movs	r2, #2
 304 0084 3146     		mov	r1, r6
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 8
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 8
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 8
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 8
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 305              		.loc 1 35 2 view .LVU57
 306 0082 0222     		movs	r2, #2
 307 0084 3146     		mov	r1, r6
 308 0086 2046     		mov	r0, r4
 309 0088 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 310              	.LVL21:
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 311              		.loc 1 36 2 view .LVU58
 312 008c 6572     		strb	r5, [r4, #9]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 313              		.loc 1 36 2 view .LVU59
 314 008e 4023     		movs	r3, #64
 315 0090 A372     		strb	r3, [r4, #10]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 316              		.loc 1 36 2 view .LVU60
 317 0092 0222     		movs	r2, #2
 318 0094 3146     		mov	r1, r6
 319 0096 2046     		mov	r0, r4
 320 0098 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 321              	.LVL22:
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 322              		.loc 1 37 2 view .LVU61
 323 009c 6572     		strb	r5, [r4, #9]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 324              		.loc 1 37 2 view .LVU62
 325 009e 8123     		movs	r3, #129
 326 00a0 A372     		strb	r3, [r4, #10]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 327              		.loc 1 37 2 view .LVU63
 328 00a2 0222     		movs	r2, #2
 329 00a4 3146     		mov	r1, r6
 330 00a6 2046     		mov	r0, r4
 331 00a8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 332              	.LVL23:
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 333              		.loc 1 38 2 view .LVU64
 334 00ac 6572     		strb	r5, [r4, #9]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 335              		.loc 1 38 2 view .LVU65
 336 00ae FF23     		movs	r3, #255
 337 00b0 A372     		strb	r3, [r4, #10]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 338              		.loc 1 38 2 view .LVU66
 339 00b2 0222     		movs	r2, #2
 340 00b4 3146     		mov	r1, r6
 341 00b6 2046     		mov	r0, r4
 342 00b8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 343              	.LVL24:
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 344              		.loc 1 39 2 view .LVU67
 345 00bc 6572     		strb	r5, [r4, #9]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 346              		.loc 1 39 2 view .LVU68
 347 00be A123     		movs	r3, #161
 348 00c0 A372     		strb	r3, [r4, #10]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
<<<<<<< HEAD
 346              		.loc 1 39 2 view .LVU69
 347 00c2 0222     		movs	r2, #2
 348 00c4 3146     		mov	r1, r6
 349 00c6 2046     		mov	r0, r4
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 9
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 9
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 349              		.loc 1 39 2 view .LVU69
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 9
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 9
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 350 00c2 0222     		movs	r2, #2
 351 00c4 3146     		mov	r1, r6
 352 00c6 2046     		mov	r0, r4
 353 00c8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 354              	.LVL25:
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 355              		.loc 1 40 2 view .LVU70
 356 00cc 6572     		strb	r5, [r4, #9]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 357              		.loc 1 40 2 view .LVU71
 358 00ce A623     		movs	r3, #166
 359 00d0 A372     		strb	r3, [r4, #10]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 360              		.loc 1 40 2 view .LVU72
 361 00d2 0222     		movs	r2, #2
 362 00d4 3146     		mov	r1, r6
 363 00d6 2046     		mov	r0, r4
 364 00d8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 365              	.LVL26:
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 366              		.loc 1 41 2 view .LVU73
 367 00dc 6572     		strb	r5, [r4, #9]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 368              		.loc 1 41 2 view .LVU74
 369 00de A823     		movs	r3, #168
 370 00e0 A372     		strb	r3, [r4, #10]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 371              		.loc 1 41 2 view .LVU75
 372 00e2 0222     		movs	r2, #2
 373 00e4 3146     		mov	r1, r6
 374 00e6 2046     		mov	r0, r4
 375 00e8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 376              	.LVL27:
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 377              		.loc 1 42 2 view .LVU76
 378 00ec 6572     		strb	r5, [r4, #9]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 379              		.loc 1 42 2 view .LVU77
 380 00ee 3F23     		movs	r3, #63
 381 00f0 A372     		strb	r3, [r4, #10]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 382              		.loc 1 42 2 view .LVU78
 383 00f2 0222     		movs	r2, #2
 384 00f4 3146     		mov	r1, r6
 385 00f6 2046     		mov	r0, r4
 386 00f8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 387              	.LVL28:
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 388              		.loc 1 43 2 view .LVU79
 389 00fc 6572     		strb	r5, [r4, #9]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 390              		.loc 1 43 2 view .LVU80
 391 00fe A423     		movs	r3, #164
 392 0100 A372     		strb	r3, [r4, #10]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
<<<<<<< HEAD
 390              		.loc 1 43 2 view .LVU81
 391 0102 0222     		movs	r2, #2
 392 0104 3146     		mov	r1, r6
 393 0106 2046     		mov	r0, r4
 394 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 10
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 10
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 393              		.loc 1 43 2 view .LVU81
 394 0102 0222     		movs	r2, #2
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 10
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 10
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 395 0104 3146     		mov	r1, r6
 396 0106 2046     		mov	r0, r4
 397 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 398              	.LVL29:
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 399              		.loc 1 44 2 view .LVU82
 400 010c 6572     		strb	r5, [r4, #9]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 401              		.loc 1 44 2 view .LVU83
 402 010e D323     		movs	r3, #211
 403 0110 A372     		strb	r3, [r4, #10]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 404              		.loc 1 44 2 view .LVU84
 405 0112 0222     		movs	r2, #2
 406 0114 3146     		mov	r1, r6
 407 0116 2046     		mov	r0, r4
 408 0118 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 409              	.LVL30:
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 410              		.loc 1 45 2 view .LVU85
 411 011c 6572     		strb	r5, [r4, #9]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 412              		.loc 1 45 2 view .LVU86
 413 011e A572     		strb	r5, [r4, #10]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 414              		.loc 1 45 2 view .LVU87
 415 0120 0222     		movs	r2, #2
 416 0122 3146     		mov	r1, r6
 417 0124 2046     		mov	r0, r4
 418 0126 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 419              	.LVL31:
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 420              		.loc 1 46 2 view .LVU88
 421 012a 6572     		strb	r5, [r4, #9]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 422              		.loc 1 46 2 view .LVU89
 423 012c D523     		movs	r3, #213
 424 012e A372     		strb	r3, [r4, #10]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 425              		.loc 1 46 2 view .LVU90
 426 0130 0222     		movs	r2, #2
 427 0132 3146     		mov	r1, r6
 428 0134 2046     		mov	r0, r4
 429 0136 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 430              	.LVL32:
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 431              		.loc 1 47 2 view .LVU91
 432 013a 6572     		strb	r5, [r4, #9]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 433              		.loc 1 47 2 view .LVU92
 434 013c F023     		movs	r3, #240
 435 013e A372     		strb	r3, [r4, #10]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
<<<<<<< HEAD
 433              		.loc 1 47 2 view .LVU93
 434 0140 0222     		movs	r2, #2
 435 0142 3146     		mov	r1, r6
 436 0144 2046     		mov	r0, r4
 437 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 438              	.LVL33:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 11
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 11
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 436              		.loc 1 47 2 view .LVU93
 437 0140 0222     		movs	r2, #2
 438 0142 3146     		mov	r1, r6
 439 0144 2046     		mov	r0, r4
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 11
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 11
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 440 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 441              	.LVL33:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 442              		.loc 1 48 2 view .LVU94
 443 014a 6572     		strb	r5, [r4, #9]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 444              		.loc 1 48 2 view .LVU95
 445 014c D923     		movs	r3, #217
 446 014e A372     		strb	r3, [r4, #10]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 447              		.loc 1 48 2 view .LVU96
 448 0150 0222     		movs	r2, #2
 449 0152 3146     		mov	r1, r6
 450 0154 2046     		mov	r0, r4
 451 0156 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 452              	.LVL34:
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 453              		.loc 1 49 2 view .LVU97
 454 015a 6572     		strb	r5, [r4, #9]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 455              		.loc 1 49 2 view .LVU98
 456 015c 2223     		movs	r3, #34
 457 015e A372     		strb	r3, [r4, #10]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 458              		.loc 1 49 2 view .LVU99
 459 0160 0222     		movs	r2, #2
 460 0162 3146     		mov	r1, r6
 461 0164 2046     		mov	r0, r4
 462 0166 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 463              	.LVL35:
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 464              		.loc 1 50 2 view .LVU100
 465 016a 6572     		strb	r5, [r4, #9]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 466              		.loc 1 50 2 view .LVU101
 467 016c DA23     		movs	r3, #218
 468 016e A372     		strb	r3, [r4, #10]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 469              		.loc 1 50 2 view .LVU102
 470 0170 0222     		movs	r2, #2
 471 0172 3146     		mov	r1, r6
 472 0174 2046     		mov	r0, r4
 473 0176 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 474              	.LVL36:
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 475              		.loc 1 51 2 view .LVU103
 476 017a 6572     		strb	r5, [r4, #9]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 477              		.loc 1 51 2 view .LVU104
 478 017c 1223     		movs	r3, #18
 479 017e A372     		strb	r3, [r4, #10]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
<<<<<<< HEAD
 477              		.loc 1 51 2 view .LVU105
 478 0180 0222     		movs	r2, #2
 479 0182 3146     		mov	r1, r6
 480 0184 2046     		mov	r0, r4
 481 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 482              	.LVL37:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 483              		.loc 1 52 2 view .LVU106
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 12
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 12
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 480              		.loc 1 51 2 view .LVU105
 481 0180 0222     		movs	r2, #2
 482 0182 3146     		mov	r1, r6
 483 0184 2046     		mov	r0, r4
 484 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 12
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 12
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 485              	.LVL37:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 486              		.loc 1 52 2 view .LVU106
 487 018a 6572     		strb	r5, [r4, #9]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 488              		.loc 1 52 2 view .LVU107
 489 018c DB23     		movs	r3, #219
 490 018e A372     		strb	r3, [r4, #10]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 491              		.loc 1 52 2 view .LVU108
 492 0190 0222     		movs	r2, #2
 493 0192 3146     		mov	r1, r6
 494 0194 2046     		mov	r0, r4
 495 0196 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 496              	.LVL38:
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 497              		.loc 1 53 2 view .LVU109
 498 019a 6572     		strb	r5, [r4, #9]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 499              		.loc 1 53 2 view .LVU110
 500 019c A772     		strb	r7, [r4, #10]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 501              		.loc 1 53 2 view .LVU111
 502 019e 0222     		movs	r2, #2
 503 01a0 3146     		mov	r1, r6
 504 01a2 2046     		mov	r0, r4
 505 01a4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 506              	.LVL39:
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 507              		.loc 1 54 2 view .LVU112
 508 01a8 6572     		strb	r5, [r4, #9]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 509              		.loc 1 54 2 view .LVU113
 510 01aa 8D23     		movs	r3, #141
 511 01ac A372     		strb	r3, [r4, #10]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 512              		.loc 1 54 2 view .LVU114
 513 01ae 0222     		movs	r2, #2
 514 01b0 3146     		mov	r1, r6
 515 01b2 2046     		mov	r0, r4
 516 01b4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 517              	.LVL40:
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 518              		.loc 1 55 2 view .LVU115
 519 01b8 6572     		strb	r5, [r4, #9]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 520              		.loc 1 55 2 view .LVU116
 521 01ba 1423     		movs	r3, #20
 522 01bc A372     		strb	r3, [r4, #10]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 523              		.loc 1 55 2 view .LVU117
 524 01be 0222     		movs	r2, #2
 525 01c0 3146     		mov	r1, r6
 526 01c2 2046     		mov	r0, r4
 527 01c4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 528              	.LVL41:
  56:Core/Src/oled.cpp **** 
<<<<<<< HEAD
<<<<<<< HEAD
 526              		.loc 1 56 2 view .LVU118
 527 01c8 6572     		strb	r5, [r4, #9]
  56:Core/Src/oled.cpp **** 
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 13
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 13
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 13
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 13
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 529              		.loc 1 56 2 view .LVU118
 530 01c8 6572     		strb	r5, [r4, #9]
  56:Core/Src/oled.cpp **** 
 531              		.loc 1 56 2 view .LVU119
 532 01ca AF23     		movs	r3, #175
 533 01cc A372     		strb	r3, [r4, #10]
  56:Core/Src/oled.cpp **** 
 534              		.loc 1 56 2 view .LVU120
 535 01ce 0222     		movs	r2, #2
 536 01d0 3146     		mov	r1, r6
 537 01d2 2046     		mov	r0, r4
 538 01d4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 539              	.LVL42:
  58:Core/Src/oled.cpp **** 
 540              		.loc 1 58 5 view .LVU121
 541 01d8 6572     		strb	r5, [r4, #9]
  58:Core/Src/oled.cpp **** 
 542              		.loc 1 58 5 view .LVU122
 543 01da 2E23     		movs	r3, #46
 544 01dc A372     		strb	r3, [r4, #10]
  58:Core/Src/oled.cpp **** 
 545              		.loc 1 58 5 view .LVU123
 546 01de 0222     		movs	r2, #2
 547 01e0 3146     		mov	r1, r6
 548 01e2 2046     		mov	r0, r4
 549 01e4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 550              	.LVL43:
  60:Core/Src/oled.cpp **** 
 551              		.loc 1 60 5 view .LVU124
  60:Core/Src/oled.cpp **** 
 552              		.loc 1 60 26 is_stmt 0 view .LVU125
 553 01e8 6068     		ldr	r0, [r4, #4]
 554 01ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 555              	.LVL44:
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 556              		.loc 1 62 1 view .LVU126
 557 01ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 558              		.loc 1 62 1 view .LVU127
 559              		.cfi_endproc
 560              	.LFE134:
 561              		.fnend
 563              		.section	.text._ZN4oled10oled_printEPc9FontDef_ttt,"ax",%progbits
 564              		.align	1
 565              		.global	_ZN4oled10oled_printEPc9FontDef_ttt
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	_ZN4oled10oled_printEPc9FontDef_ttt:
 572              		.fnstart
 573              	.LVL45:
 574              	.LFB138:
  74:Core/Src/oled.cpp **** void oled::oled_refresh(void)
  75:Core/Src/oled.cpp **** {
  76:Core/Src/oled.cpp **** 	uint8_t m;
  77:Core/Src/oled.cpp **** 	
ARM GAS  /tmp/cc1XDnsz.s 			page 14


  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 14
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 14
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


=======
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
  83:Core/Src/oled.cpp **** 		/* Write multi data */
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
  85:Core/Src/oled.cpp **** 	}
  86:Core/Src/oled.cpp **** 	Counter_increment();
  87:Core/Src/oled.cpp **** }
  88:Core/Src/oled.cpp **** 
  89:Core/Src/oled.cpp **** void oled::oled_print(char* string, FontDef_t size, uint16_t x , uint16_t y)
  90:Core/Src/oled.cpp **** {	
 575              		.loc 1 90 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 8, pretend = 0, frame = 8
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 90 1 is_stmt 0 view .LVU129
 580 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 581              	.LCFI7:
 582              		.cfi_def_cfa_offset 28
 583              		.cfi_offset 4, -28
 584              		.cfi_offset 5, -24
 585              		.cfi_offset 6, -20
 586              		.cfi_offset 7, -16
 587              		.cfi_offset 8, -12
 588              		.cfi_offset 9, -8
 589              		.cfi_offset 14, -4
 590 0004 83B0     		sub	sp, sp, #12
 591              	.LCFI8:
 592              		.cfi_def_cfa_offset 40
 593 0006 0646     		mov	r6, r0
 594 0008 0F46     		mov	r7, r1
 595 000a 02A9     		add	r1, sp, #8
 596              	.LVL46:
 597              		.loc 1 90 1 view .LVU130
 598 000c 01E90C00 		stmdb	r1, {r2, r3}
 599 0010 BDF82850 		ldrh	r5, [sp, #40]
 600 0014 BDF82C40 		ldrh	r4, [sp, #44]
  91:Core/Src/oled.cpp **** 	uint8_t strItr=0;
 601              		.loc 1 91 2 is_stmt 1 view .LVU131
 602              	.LVL47:
 603              		.loc 1 91 10 is_stmt 0 view .LVU132
 604 0018 4FF00008 		mov	r8, #0
 605 001c 79E0     		b	.L26
 606              	.LVL48:
 607              	.L16:
 608              	.LBB4:
  92:Core/Src/oled.cpp **** 	// //loop through the chars in the string
  93:Core/Src/oled.cpp **** 	while(strItr<=strlen(string)+3)
  94:Core/Src/oled.cpp **** 	{
  95:Core/Src/oled.cpp **** 		int i=0;
  96:Core/Src/oled.cpp **** 		int j=0;
  97:Core/Src/oled.cpp **** 		int b;
  98:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 100:Core/Src/oled.cpp **** 
<<<<<<< HEAD
<<<<<<< HEAD
 101:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 606              		.loc 1 101 25 discriminator 2 view .LVU133
 607 001e DB10     		asrs	r3, r3, #3
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 15
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 15
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 15
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 15
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 101:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 609              		.loc 1 101 25 discriminator 2 view .LVU133
 610 001e DB10     		asrs	r3, r3, #3
 611              		.loc 1 101 31 discriminator 2 view .LVU134
 612 0020 05EBC313 		add	r3, r5, r3, lsl #7
 613              		.loc 1 101 33 discriminator 2 view .LVU135
 614 0024 1344     		add	r3, r3, r2
 615              		.loc 1 101 36 discriminator 2 view .LVU136
 616 0026 3344     		add	r3, r3, r6
 617 0028 0020     		movs	r0, #0
 618 002a 9875     		strb	r0, [r3, #22]
  99:Core/Src/oled.cpp **** 
 619              		.loc 1 99 4 is_stmt 1 discriminator 2 view .LVU137
 620 002c 0132     		adds	r2, r2, #1
 621              	.LVL49:
 622              	.L17:
  99:Core/Src/oled.cpp **** 
 623              		.loc 1 99 18 discriminator 3 view .LVU138
  99:Core/Src/oled.cpp **** 
 624              		.loc 1 99 25 is_stmt 0 discriminator 3 view .LVU139
 625 002e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
  99:Core/Src/oled.cpp **** 
 626              		.loc 1 99 18 discriminator 3 view .LVU140
 627 0032 9342     		cmp	r3, r2
 628 0034 03DD     		ble	.L15
 629              		.loc 1 101 6 is_stmt 1 discriminator 2 view .LVU141
 630              		.loc 1 101 25 is_stmt 0 discriminator 2 view .LVU142
 631 0036 6318     		adds	r3, r4, r1
 632 0038 F1D5     		bpl	.L16
 633              		.loc 1 101 25 discriminator 2 view .LVU143
 634 003a 0733     		adds	r3, r3, #7
 635 003c EFE7     		b	.L16
 636              	.L15:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 637              		.loc 1 98 3 is_stmt 1 discriminator 2 view .LVU144
 638 003e 0131     		adds	r1, r1, #1
 639              	.LVL50:
 640              	.L18:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 641              		.loc 1 98 17 discriminator 1 view .LVU145
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 642              		.loc 1 98 24 is_stmt 0 discriminator 1 view .LVU146
 643 0040 9DF801C0 		ldrb	ip, [sp, #1]	@ zero_extendqisi2
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 644              		.loc 1 98 17 discriminator 1 view .LVU147
 645 0044 8C45     		cmp	ip, r1
 646 0046 01DD     		ble	.L27
  99:Core/Src/oled.cpp **** 
 647              		.loc 1 99 11 view .LVU148
 648 0048 0022     		movs	r2, #0
 649 004a F0E7     		b	.L17
 650              	.L27:
 102:Core/Src/oled.cpp **** 
 103:Core/Src/oled.cpp **** 				
 104:Core/Src/oled.cpp **** 			}
 105:Core/Src/oled.cpp **** 		}
 106:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
<<<<<<< HEAD
<<<<<<< HEAD
 648              		.loc 1 106 10 view .LVU149
 649 004c 0021     		movs	r1, #0
 650              	.LVL51:
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 16
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 16
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 16
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 16
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 651              		.loc 1 106 10 view .LVU149
 652 004c 0021     		movs	r1, #0
 653              	.LVL51:
 654              		.loc 1 106 10 view .LVU150
 655 004e 49E0     		b	.L14
 656              	.LVL52:
 657              	.L22:
 107:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 658              		.loc 1 110 25 view .LVU151
 659 0050 4FEAEE0E 		asr	lr, lr, #3
 660              		.loc 1 110 36 view .LVU152
 661 0054 05EBCE1E 		add	lr, r5, lr, lsl #7
 662 0058 9644     		add	lr, lr, r2
 663              		.loc 1 110 50 view .LVU153
 664 005a D3F10009 		rsbs	r9, r3, #0
 665 005e 03F00703 		and	r3, r3, #7
 666 0062 09F00709 		and	r9, r9, #7
 667 0066 58BF     		it	pl
 668 0068 C9F10003 		rsbpl	r3, r9, #0
 669              		.loc 1 110 40 view .LVU154
 670 006c 4FF00109 		mov	r9, #1
 671 0070 09FA03F9 		lsl	r9, r9, r3
 672              		.loc 1 110 36 view .LVU155
 673 0074 B644     		add	lr, lr, r6
 674 0076 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 675 007a 43EA0903 		orr	r3, r3, r9
 676 007e 8EF81630 		strb	r3, [lr, #22]
 677              	.L23:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 678              		.loc 1 108 4 is_stmt 1 discriminator 2 view .LVU156
 679 0082 0132     		adds	r2, r2, #1
 680              	.LVL53:
 681              	.L25:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 682              		.loc 1 108 18 discriminator 1 view .LVU157
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 683              		.loc 1 108 25 is_stmt 0 discriminator 1 view .LVU158
 684 0084 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 685              		.loc 1 108 18 discriminator 1 view .LVU159
 686 0088 9342     		cmp	r3, r2
 687 008a 2ADD     		ble	.L20
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 688              		.loc 1 109 5 is_stmt 1 view .LVU160
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 689              		.loc 1 109 12 is_stmt 0 view .LVU161
 690 008c 00FA02F3 		lsl	r3, r0, r2
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
<<<<<<< HEAD
 688              		.loc 1 109 5 view .LVU162
 689 0090 13F4004F 		tst	r3, #32768
 690 0094 06D0     		beq	.L21
 691              		.loc 1 110 6 is_stmt 1 view .LVU163
 692              		.loc 1 110 21 is_stmt 0 view .LVU164
 693 0096 6318     		adds	r3, r4, r1
 694              		.loc 1 110 25 view .LVU165
 695 0098 9E46     		mov	lr, r3
 696 009a 002B     		cmp	r3, #0
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 17
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 17
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 691              		.loc 1 109 5 view .LVU162
 692 0090 13F4004F 		tst	r3, #32768
 693 0094 06D0     		beq	.L21
 694              		.loc 1 110 6 is_stmt 1 view .LVU163
 695              		.loc 1 110 21 is_stmt 0 view .LVU164
 696 0096 6318     		adds	r3, r4, r1
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 17
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 17
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 697              		.loc 1 110 25 view .LVU165
 698 0098 9E46     		mov	lr, r3
 699 009a 002B     		cmp	r3, #0
 700 009c D8DA     		bge	.L22
 701              		.loc 1 110 25 view .LVU166
 702 009e 03F1070E 		add	lr, r3, #7
 703 00a2 D5E7     		b	.L22
 704              	.L21:
 111:Core/Src/oled.cpp **** 				} else {
 112:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]&= ~(1 << ((y+1) % 8));
 705              		.loc 1 112 6 is_stmt 1 view .LVU167
 706              		.loc 1 112 25 is_stmt 0 view .LVU168
 707 00a4 6318     		adds	r3, r4, r1
 708 00a6 1AD4     		bmi	.L29
 709              	.L24:
 710              		.loc 1 112 25 view .LVU169
 711 00a8 DB10     		asrs	r3, r3, #3
 712              		.loc 1 112 36 view .LVU170
 713 00aa 05EBC313 		add	r3, r5, r3, lsl #7
 714 00ae 03EB020E 		add	lr, r3, r2
 715              		.loc 1 112 49 view .LVU171
 716 00b2 631C     		adds	r3, r4, #1
 717              		.loc 1 112 53 view .LVU172
 718 00b4 D3F10009 		rsbs	r9, r3, #0
 719 00b8 03F00703 		and	r3, r3, #7
 720 00bc 09F00709 		and	r9, r9, #7
 721 00c0 58BF     		it	pl
 722 00c2 C9F10003 		rsbpl	r3, r9, #0
 723              		.loc 1 112 43 view .LVU173
 724 00c6 4FF00109 		mov	r9, #1
 725 00ca 09FA03F9 		lsl	r9, r9, r3
 726              		.loc 1 112 36 view .LVU174
 727 00ce B644     		add	lr, lr, r6
 728 00d0 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 729 00d4 23EA0903 		bic	r3, r3, r9
 730 00d8 8EF81630 		strb	r3, [lr, #22]
 731 00dc D1E7     		b	.L23
 732              	.L29:
 733              		.loc 1 112 25 view .LVU175
 734 00de 0733     		adds	r3, r3, #7
 735 00e0 E2E7     		b	.L24
 736              	.L20:
 106:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 737              		.loc 1 106 3 is_stmt 1 discriminator 2 view .LVU176
 738 00e2 0131     		adds	r1, r1, #1
 739              	.LVL54:
 740              	.L14:
 106:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 741              		.loc 1 106 17 discriminator 1 view .LVU177
 742 00e4 8C45     		cmp	ip, r1
 743 00e6 08DD     		ble	.L19
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 744              		.loc 1 107 4 view .LVU178
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 745              		.loc 1 107 19 is_stmt 0 view .LVU179
 746 00e8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 18
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 18
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 18
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 18
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 747              		.loc 1 107 27 view .LVU180
 748 00ea 203B     		subs	r3, r3, #32
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 749              		.loc 1 107 51 view .LVU181
 750 00ec 03FB0C13 		mla	r3, r3, ip, r1
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 751              		.loc 1 107 54 view .LVU182
 752 00f0 019A     		ldr	r2, [sp, #4]
 753 00f2 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 754              	.LVL55:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 755              		.loc 1 108 4 is_stmt 1 view .LVU183
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 756              		.loc 1 108 11 is_stmt 0 view .LVU184
 757 00f6 0022     		movs	r2, #0
 758 00f8 C4E7     		b	.L25
 759              	.LVL56:
 760              	.L19:
 113:Core/Src/oled.cpp **** 
 114:Core/Src/oled.cpp **** 				}
 115:Core/Src/oled.cpp **** 			}
 116:Core/Src/oled.cpp **** 		}
 117:Core/Src/oled.cpp **** 		x=x+i-size.FontWidth/2;
 761              		.loc 1 117 3 is_stmt 1 view .LVU185
 762              		.loc 1 117 6 is_stmt 0 view .LVU186
 763 00fa 0D44     		add	r5, r5, r1
 764              	.LVL57:
 765              		.loc 1 117 6 view .LVU187
 766 00fc ADB2     		uxth	r5, r5
 767              		.loc 1 117 14 view .LVU188
 768 00fe 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 769              		.loc 1 117 4 view .LVU189
 770 0102 A5EB5305 		sub	r5, r5, r3, lsr #1
 771 0106 ADB2     		uxth	r5, r5
 772              	.LVL58:
 118:Core/Src/oled.cpp **** 
 119:Core/Src/oled.cpp **** 
 120:Core/Src/oled.cpp **** 	
 121:Core/Src/oled.cpp **** 		string++;
 773              		.loc 1 121 3 is_stmt 1 view .LVU190
 774              		.loc 1 121 9 is_stmt 0 view .LVU191
 775 0108 0137     		adds	r7, r7, #1
 776              	.LVL59:
 122:Core/Src/oled.cpp **** 		strItr++;
 777              		.loc 1 122 3 is_stmt 1 view .LVU192
 778              		.loc 1 122 9 is_stmt 0 view .LVU193
 779 010a 08F10108 		add	r8, r8, #1
 780              	.LVL60:
 781              		.loc 1 122 9 view .LVU194
 782 010e 5FFA88F8 		uxtb	r8, r8
 783              	.LVL61:
 784              	.L26:
 785              		.loc 1 122 9 view .LVU195
 786              	.LBE4:
  93:Core/Src/oled.cpp **** 	{
 787              		.loc 1 93 2 is_stmt 1 view .LVU196
  93:Core/Src/oled.cpp **** 	{
<<<<<<< HEAD
<<<<<<< HEAD
 784              		.loc 1 93 21 is_stmt 0 view .LVU197
 785 010c 3846     		mov	r0, r7
 786 010e FFF7FEFF 		bl	strlen
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 19
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 19
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 19
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 19
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 788              		.loc 1 93 14 view .LVU197
  93:Core/Src/oled.cpp **** 	{
 789              		.loc 1 93 22 is_stmt 0 view .LVU198
 790 0112 3846     		mov	r0, r7
 791 0114 FFF7FEFF 		bl	strlen
 792              	.LVL62:
  93:Core/Src/oled.cpp **** 	{
 793              		.loc 1 93 30 view .LVU199
 794 0118 C31C     		adds	r3, r0, #3
  93:Core/Src/oled.cpp **** 	{
 795              		.loc 1 93 14 view .LVU200
 796 011a 9845     		cmp	r8, r3
 797 011c 01D8     		bhi	.L12
 798              	.LBB5:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 799              		.loc 1 98 10 view .LVU201
 800 011e 0021     		movs	r1, #0
 801 0120 8EE7     		b	.L18
 802              	.L12:
 803              	.LBE5:
 123:Core/Src/oled.cpp **** 	}
 124:Core/Src/oled.cpp **** }
 804              		.loc 1 124 1 view .LVU202
 805 0122 03B0     		add	sp, sp, #12
 806              	.LCFI9:
 807              		.cfi_def_cfa_offset 28
 808              		@ sp needed
 809 0124 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 810              		.loc 1 124 1 view .LVU203
 811              		.cfi_endproc
 812              	.LFE138:
 813              		.cantunwind
 814              		.fnend
 816              		.global	__aeabi_f2d
 817              		.section	.rodata._ZN4oled19oled_update_batteryEf.str1.4,"aMS",%progbits,1
 818              		.align	2
 819              	.LC0:
 820 0000 252E3166 		.ascii	"%.1fv\000"
 820      7600
 821              		.section	.text._ZN4oled19oled_update_batteryEf,"ax",%progbits
 822              		.align	1
 823              		.global	_ZN4oled19oled_update_batteryEf
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv4-sp-d16
 829              	_ZN4oled19oled_update_batteryEf:
 830              		.fnstart
 831              	.LVL63:
 832              	.LFB139:
 125:Core/Src/oled.cpp **** void oled::oled_update_battery(float voltage)
 126:Core/Src/oled.cpp **** {
<<<<<<< HEAD
 826              		.loc 1 126 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 8
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		.loc 1 126 1 is_stmt 0 view .LVU203
 831 0000 10B5     		push	{r4, lr}
 832              	.LCFI10:
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 4, -8
 835              		.cfi_offset 14, -4
 836 0002 84B0     		sub	sp, sp, #16
 837              	.LCFI11:
 838              		.cfi_def_cfa_offset 24
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 20
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 20
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 833              		.loc 1 126 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 24
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		.loc 1 126 1 is_stmt 0 view .LVU205
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 20
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 20
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 838 0000 10B5     		push	{r4, lr}
 839              	.LCFI10:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 4, -8
 842              		.cfi_offset 14, -4
 843 0002 88B0     		sub	sp, sp, #32
 844              	.LCFI11:
 845              		.cfi_def_cfa_offset 40
 846 0004 0446     		mov	r4, r0
 847 0006 10EE100A 		vmov	r0, s0
 848              	.LVL64:
 127:Core/Src/oled.cpp **** 	char volt [20];
 849              		.loc 1 127 2 is_stmt 1 view .LVU206
 128:Core/Src/oled.cpp **** 	sprintf(volt,"%.1fv",voltage);
 850              		.loc 1 128 2 view .LVU207
 851              		.loc 1 128 9 is_stmt 0 view .LVU208
 852 000a FFF7FEFF 		bl	__aeabi_f2d
 853              	.LVL65:
 854              		.loc 1 128 9 view .LVU209
 855 000e 0246     		mov	r2, r0
 856 0010 0B46     		mov	r3, r1
 857 0012 0849     		ldr	r1, .L32
 858 0014 03A8     		add	r0, sp, #12
 859 0016 FFF7FEFF 		bl	sprintf
 860              	.LVL66:
 129:Core/Src/oled.cpp **** 	oled_print(volt,Font_7x10,90,0);
 861              		.loc 1 129 2 is_stmt 1 view .LVU210
 862              		.loc 1 129 12 is_stmt 0 view .LVU211
 863 001a 074B     		ldr	r3, .L32+4
 864 001c 0022     		movs	r2, #0
 865 001e 0192     		str	r2, [sp, #4]
 866 0020 5A22     		movs	r2, #90
 867 0022 0092     		str	r2, [sp]
 868 0024 0CCB     		ldm	r3, {r2, r3}
 869 0026 03A9     		add	r1, sp, #12
 870 0028 2046     		mov	r0, r4
 871 002a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 872              	.LVL67:
 130:Core/Src/oled.cpp **** }
<<<<<<< HEAD
 866              		.loc 1 130 1 view .LVU210
 867 002e 04B0     		add	sp, sp, #16
 868              	.LCFI12:
 869              		.cfi_def_cfa_offset 8
 870              		@ sp needed
 871 0030 10BD     		pop	{r4, pc}
 872              	.LVL68:
 873              	.L33:
 874              		.loc 1 130 1 view .LVU211
 875 0032 00BF     		.align	2
 876              	.L32:
 877 0034 00000000 		.word	.LC0
 878 0038 00000000 		.word	Font_7x10
 879              		.cfi_endproc
 880              	.LFE139:
 881              		.cantunwind
 882              		.fnend
 884              		.section	.text._ZN4oled8oled_offEv,"ax",%progbits
 885              		.align	1
 886              		.global	_ZN4oled8oled_offEv
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	_ZN4oled8oled_offEv:
 893              		.fnstart
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 21
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 21
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 873              		.loc 1 130 1 view .LVU212
 874 002e 08B0     		add	sp, sp, #32
 875              	.LCFI12:
 876              		.cfi_def_cfa_offset 8
 877              		@ sp needed
 878 0030 10BD     		pop	{r4, pc}
 879              	.LVL68:
 880              	.L33:
 881              		.loc 1 130 1 view .LVU213
 882 0032 00BF     		.align	2
 883              	.L32:
 884 0034 00000000 		.word	.LC0
 885 0038 00000000 		.word	Font_7x10
 886              		.cfi_endproc
 887              	.LFE139:
 888              		.cantunwind
 889              		.fnend
 891              		.section	.text._ZN4oled8oled_offEv,"ax",%progbits
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 21
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 21
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 892              		.align	1
 893              		.global	_ZN4oled8oled_offEv
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	_ZN4oled8oled_offEv:
 900              		.fnstart
 901              	.LVL69:
 902              	.LFB140:
 131:Core/Src/oled.cpp **** 
 132:Core/Src/oled.cpp **** void oled::oled_off()
 133:Core/Src/oled.cpp **** {
 903              		.loc 1 133 1 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		.loc 1 133 1 is_stmt 0 view .LVU215
 908 0000 38B5     		push	{r3, r4, r5, lr}
 909              		.save {r3, r4, r5, lr}
 910              	.LCFI13:
 911              		.cfi_def_cfa_offset 16
 912              		.cfi_offset 3, -16
 913              		.cfi_offset 4, -12
 914              		.cfi_offset 5, -8
 915              		.cfi_offset 14, -4
 916 0002 0446     		mov	r4, r0
 134:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAE); //display off
 917              		.loc 1 134 2 is_stmt 1 view .LVU216
 918 0004 0025     		movs	r5, #0
 919 0006 4572     		strb	r5, [r0, #9]
 920              		.loc 1 134 2 view .LVU217
 921 0008 AE23     		movs	r3, #174
 922 000a 8372     		strb	r3, [r0, #10]
 923              		.loc 1 134 2 view .LVU218
 924 000c 0222     		movs	r2, #2
 925 000e 00F10901 		add	r1, r0, #9
 926 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 927              	.LVL70:
 135:Core/Src/oled.cpp **** 	oledOn=0;
 928              		.loc 1 135 2 view .LVU219
 929              		.loc 1 135 8 is_stmt 0 view .LVU220
 930 0016 6575     		strb	r5, [r4, #21]
 136:Core/Src/oled.cpp **** }
 931              		.loc 1 136 1 view .LVU221
 932 0018 38BD     		pop	{r3, r4, r5, pc}
 933              		.loc 1 136 1 view .LVU222
 934              		.cfi_endproc
 935              	.LFE140:
 936              		.fnend
 938              		.section	.text._ZN4oled13oled_isOledOnEv,"ax",%progbits
 939              		.align	1
 940              		.global	_ZN4oled13oled_isOledOnEv
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 944              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc1XDnsz.s 			page 22


 946              	_ZN4oled13oled_isOledOnEv:
 947              		.fnstart
 948              	.LVL71:
 949              	.LFB142:
 137:Core/Src/oled.cpp **** 
 138:Core/Src/oled.cpp **** void oled::oled_on()
 139:Core/Src/oled.cpp **** {
 140:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 22
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 22
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


=======
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
 141:Core/Src/oled.cpp **** 	oledOn=1;
 142:Core/Src/oled.cpp **** 	oled_resetTimer();
 143:Core/Src/oled.cpp **** }
 144:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 145:Core/Src/oled.cpp **** {
 950              		.loc 1 145 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 146:Core/Src/oled.cpp **** 	return oledOn;
 955              		.loc 1 146 2 view .LVU224
 147:Core/Src/oled.cpp **** }
 956              		.loc 1 147 1 is_stmt 0 view .LVU225
 957 0000 407D     		ldrb	r0, [r0, #21]	@ zero_extendqisi2
 958              	.LVL72:
 959              		.loc 1 147 1 view .LVU226
 960 0002 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE142:
 963              		.cantunwind
 964              		.fnend
 966              		.section	.text._ZN4oled15oled_resetTimerEv,"ax",%progbits
 967              		.align	1
 968              		.global	_ZN4oled15oled_resetTimerEv
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv4-sp-d16
 974              	_ZN4oled15oled_resetTimerEv:
 975              		.fnstart
 976              	.LVL73:
 977              	.LFB143:
 148:Core/Src/oled.cpp **** void oled::oled_resetTimer()
 149:Core/Src/oled.cpp **** {
 978              		.loc 1 149 1 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 150:Core/Src/oled.cpp **** 	tmoCounter = 0;
 983              		.loc 1 150 2 view .LVU228
 984              		.loc 1 150 13 is_stmt 0 view .LVU229
 985 0000 0023     		movs	r3, #0
 986 0002 C360     		str	r3, [r0, #12]
 151:Core/Src/oled.cpp **** }
<<<<<<< HEAD
 980              		.loc 1 151 1 view .LVU228
 981 0004 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE143:
 984              		.cantunwind
 985              		.fnend
 987              		.section	.text._ZN4oled7oled_onEv,"ax",%progbits
 988              		.align	1
 989              		.global	_ZN4oled7oled_onEv
 990              		.syntax unified
 991              		.thumb
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 23
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 23
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 987              		.loc 1 151 1 view .LVU230
 988 0004 7047     		bx	lr
 989              		.cfi_endproc
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 23
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 23
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 990              	.LFE143:
 991              		.cantunwind
 992              		.fnend
 994              		.section	.text._ZN4oled7oled_onEv,"ax",%progbits
 995              		.align	1
 996              		.global	_ZN4oled7oled_onEv
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	_ZN4oled7oled_onEv:
 1003              		.fnstart
 1004              	.LVL74:
 1005              	.LFB141:
 139:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 1006              		.loc 1 139 1 is_stmt 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 139:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 1010              		.loc 1 139 1 is_stmt 0 view .LVU232
 1011 0000 10B5     		push	{r4, lr}
 1012              		.save {r4, lr}
 1013              	.LCFI14:
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 4, -8
 1016              		.cfi_offset 14, -4
 1017 0002 0446     		mov	r4, r0
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1018              		.loc 1 140 2 is_stmt 1 view .LVU233
 1019 0004 0023     		movs	r3, #0
 1020 0006 4372     		strb	r3, [r0, #9]
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1021              		.loc 1 140 2 view .LVU234
 1022 0008 AF23     		movs	r3, #175
 1023 000a 8372     		strb	r3, [r0, #10]
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1024              		.loc 1 140 2 view .LVU235
 1025 000c 0222     		movs	r2, #2
 1026 000e 00F10901 		add	r1, r0, #9
 1027 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1028              	.LVL75:
 141:Core/Src/oled.cpp **** 	oled_resetTimer();
 1029              		.loc 1 141 2 view .LVU236
 141:Core/Src/oled.cpp **** 	oled_resetTimer();
 1030              		.loc 1 141 8 is_stmt 0 view .LVU237
 1031 0016 0123     		movs	r3, #1
 1032 0018 6375     		strb	r3, [r4, #21]
 142:Core/Src/oled.cpp **** }
 1033              		.loc 1 142 2 is_stmt 1 view .LVU238
 142:Core/Src/oled.cpp **** }
 1034              		.loc 1 142 17 is_stmt 0 view .LVU239
 1035 001a 2046     		mov	r0, r4
 1036 001c FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1037              	.LVL76:
 143:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
<<<<<<< HEAD
 1031              		.loc 1 143 1 view .LVU238
 1032 0020 10BD     		pop	{r4, pc}
 143:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 1033              		.loc 1 143 1 view .LVU239
 1034              		.cfi_endproc
 1035              	.LFE141:
 1036              		.fnend
 1038              		.section	.text._ZN4oled13oled_setTimerEm,"ax",%progbits
 1039              		.align	1
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 24
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 24
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1038              		.loc 1 143 1 view .LVU240
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 24
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 24
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 1039 0020 10BD     		pop	{r4, pc}
 143:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 1040              		.loc 1 143 1 view .LVU241
 1041              		.cfi_endproc
 1042              	.LFE141:
 1043              		.fnend
 1045              		.section	.text._ZN4oled13oled_setTimerEm,"ax",%progbits
 1046              		.align	1
 1047              		.global	_ZN4oled13oled_setTimerEm
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	_ZN4oled13oled_setTimerEm:
 1054              		.fnstart
 1055              	.LVL77:
 1056              	.LFB144:
 152:Core/Src/oled.cpp **** 
 153:Core/Src/oled.cpp **** void oled::oled_setTimer(uint32_t time)
 154:Core/Src/oled.cpp **** {
 1057              		.loc 1 154 1 is_stmt 1 view -0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 155:Core/Src/oled.cpp **** 	tmoValue = ((time*1000)/200);
 1062              		.loc 1 155 2 view .LVU243
 1063              		.loc 1 155 19 is_stmt 0 view .LVU244
 1064 0000 4FF47A73 		mov	r3, #1000
 1065 0004 03FB01F3 		mul	r3, r3, r1
 1066              		.loc 1 155 25 view .LVU245
 1067 0008 0249     		ldr	r1, .L41
 1068              	.LVL78:
 1069              		.loc 1 155 25 view .LVU246
 1070 000a A1FB0323 		umull	r2, r3, r1, r3
 1071 000e 9B09     		lsrs	r3, r3, #6
 1072              		.loc 1 155 11 view .LVU247
 1073 0010 0361     		str	r3, [r0, #16]
 156:Core/Src/oled.cpp **** 	
 157:Core/Src/oled.cpp **** }
 1074              		.loc 1 157 1 view .LVU248
 1075 0012 7047     		bx	lr
 1076              	.L42:
 1077              		.align	2
 1078              	.L41:
 1079 0014 1F85EB51 		.word	1374389535
 1080              		.cfi_endproc
 1081              	.LFE144:
 1082              		.cantunwind
 1083              		.fnend
 1085              		.section	.text._ZN4oled17Counter_incrementEv,"ax",%progbits
 1086              		.align	1
 1087              		.global	_ZN4oled17Counter_incrementEv
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc1XDnsz.s 			page 25


 1093              	_ZN4oled17Counter_incrementEv:
 1094              		.fnstart
 1095              	.LVL79:
 1096              	.LFB145:
 158:Core/Src/oled.cpp **** 
 159:Core/Src/oled.cpp **** void oled::Counter_increment(void)
 160:Core/Src/oled.cpp **** {
<<<<<<< HEAD
 1090              		.loc 1 160 1 is_stmt 1 view -0
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 25
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 25
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		.loc 1 160 1 is_stmt 0 view .LVU248
 1095 0000 08B5     		push	{r3, lr}
 1096              		.save {r3, lr}
 1097              	.LCFI15:
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 3, -8
 1100              		.cfi_offset 14, -4
=======
 1097              		.loc 1 160 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		.loc 1 160 1 is_stmt 0 view .LVU250
 1102 0000 08B5     		push	{r3, lr}
 1103              		.save {r3, lr}
 1104              	.LCFI15:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 3, -8
 1107              		.cfi_offset 14, -4
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
 161:Core/Src/oled.cpp **** 	tmoCounter++;
 1108              		.loc 1 161 2 is_stmt 1 view .LVU251
 1109 0002 C368     		ldr	r3, [r0, #12]
 1110              		.loc 1 161 12 is_stmt 0 view .LVU252
 1111 0004 0133     		adds	r3, r3, #1
 1112 0006 C360     		str	r3, [r0, #12]
 162:Core/Src/oled.cpp **** 	if(tmoValue == tmoCounter)
 1113              		.loc 1 162 2 is_stmt 1 view .LVU253
 1114              		.loc 1 162 5 is_stmt 0 view .LVU254
 1115 0008 0269     		ldr	r2, [r0, #16]
 1116              		.loc 1 162 2 view .LVU255
 1117 000a 9342     		cmp	r3, r2
 1118 000c 00D0     		beq	.L46
 1119              	.LVL80:
 1120              	.L43:
 163:Core/Src/oled.cpp **** 	{
 164:Core/Src/oled.cpp **** 		oled_off();
 165:Core/Src/oled.cpp **** 	}
 166:Core/Src/oled.cpp **** }...
 1121              		.loc 1 166 1 view .LVU256
 1122 000e 08BD     		pop	{r3, pc}
 1123              	.LVL81:
 1124              	.L46:
 164:Core/Src/oled.cpp **** 		oled_off();
 1125              		.loc 1 164 3 is_stmt 1 view .LVU257
 164:Core/Src/oled.cpp **** 		oled_off();
<<<<<<< HEAD
 1119              		.loc 1 164 11 is_stmt 0 view .LVU256
 1120 0010 FFF7FEFF 		bl	_ZN4oled8oled_offEv
 1121              	.LVL82:
 1122              		.loc 1 166 1 view .LVU257
 1123 0014 FBE7     		b	.L43
 1124              		.cfi_endproc
 1125              	.LFE145:
 1126              		.fnend
 1128              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 1129              		.align	1
 1130              		.global	_ZN4oled12oled_refreshEv
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	_ZN4oled12oled_refreshEv:
 1137              		.fnstart
 1138              	.LVL83:
 1139              	.LFB137:
  75:Core/Src/oled.cpp **** {
 1140              		.loc 1 75 1 is_stmt 1 view -0
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 26
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 26
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1126              		.loc 1 164 11 is_stmt 0 view .LVU258
 1127 0010 FFF7FEFF 		bl	_ZN4oled8oled_offEv
 1128              	.LVL82:
 1129              		.loc 1 166 1 view .LVU259
 1130 0014 FBE7     		b	.L43
 1131              		.cfi_endproc
 1132              	.LFE145:
 1133              		.fnend
 1135              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 1136              		.align	1
 1137              		.global	_ZN4oled12oled_refreshEv
 1138              		.syntax unified
 1139              		.thumb
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 26
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 26
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


 1140              		.thumb_func
 1141              		.fpu fpv4-sp-d16
 1143              	_ZN4oled12oled_refreshEv:
 1144              		.fnstart
 1145              	.LVL83:
 1146              	.LFB137:
  75:Core/Src/oled.cpp **** {
 1147              		.loc 1 75 1 is_stmt 1 view -0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/oled.cpp **** {
 1151              		.loc 1 75 1 is_stmt 0 view .LVU261
 1152 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1153              		.save {r3, r4, r5, r6, r7, lr}
 1154              	.LCFI16:
 1155              		.cfi_def_cfa_offset 24
 1156              		.cfi_offset 3, -24
 1157              		.cfi_offset 4, -20
 1158              		.cfi_offset 5, -16
 1159              		.cfi_offset 6, -12
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 0446     		mov	r4, r0
  76:Core/Src/oled.cpp **** 	uint8_t m;
 1163              		.loc 1 76 2 is_stmt 1 view .LVU262
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1164              		.loc 1 78 2 view .LVU263
 1165              	.LVL84:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1166              		.loc 1 78 9 is_stmt 0 view .LVU264
 1167 0004 0025     		movs	r5, #0
 1168 0006 28E0     		b	.L49
 1169              	.LVL85:
 1170              	.L51:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1171              		.loc 1 79 3 is_stmt 1 discriminator 2 view .LVU265
 1172 0008 0027     		movs	r7, #0
 1173 000a 6772     		strb	r7, [r4, #9]
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1174              		.loc 1 79 3 discriminator 2 view .LVU266
 1175 000c A5F15003 		sub	r3, r5, #80
 1176 0010 A372     		strb	r3, [r4, #10]
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1177              		.loc 1 79 3 discriminator 2 view .LVU267
 1178 0012 04F10906 		add	r6, r4, #9
 1179 0016 0222     		movs	r2, #2
 1180 0018 3146     		mov	r1, r6
 1181 001a 2046     		mov	r0, r4
 1182 001c FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1183              	.LVL86:
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1184              		.loc 1 80 3 discriminator 2 view .LVU268
 1185 0020 6772     		strb	r7, [r4, #9]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
<<<<<<< HEAD
 1179              		.loc 1 80 3 discriminator 2 view .LVU267
 1180 0022 A772     		strb	r7, [r4, #10]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1181              		.loc 1 80 3 discriminator 2 view .LVU268
 1182 0024 0222     		movs	r2, #2
 1183 0026 3146     		mov	r1, r6
 1184 0028 2046     		mov	r0, r4
 1185 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1186              	.LVL87:
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 27
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 27
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1186              		.loc 1 80 3 discriminator 2 view .LVU269
 1187 0022 A772     		strb	r7, [r4, #10]
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 27
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 27
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1188              		.loc 1 80 3 discriminator 2 view .LVU270
 1189 0024 0222     		movs	r2, #2
 1190 0026 3146     		mov	r1, r6
 1191 0028 2046     		mov	r0, r4
 1192 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1193              	.LVL87:
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1194              		.loc 1 81 3 discriminator 2 view .LVU271
 1195 002e 6772     		strb	r7, [r4, #9]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1196              		.loc 1 81 3 discriminator 2 view .LVU272
 1197 0030 1023     		movs	r3, #16
 1198 0032 A372     		strb	r3, [r4, #10]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1199              		.loc 1 81 3 discriminator 2 view .LVU273
 1200 0034 0222     		movs	r2, #2
 1201 0036 3146     		mov	r1, r6
 1202 0038 2046     		mov	r0, r4
 1203 003a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1204              	.LVL88:
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1205              		.loc 1 82 9 discriminator 2 view .LVU274
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1206              		.loc 1 82 23 is_stmt 0 discriminator 2 view .LVU275
 1207 003e E901     		lsls	r1, r5, #7
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1208              		.loc 1 82 27 discriminator 2 view .LVU276
 1209 0040 04EBC513 		add	r3, r4, r5, lsl #7
 1210 0044 4022     		movs	r2, #64
 1211 0046 9A75     		strb	r2, [r3, #22]
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 1212              		.loc 1 84 3 is_stmt 1 discriminator 2 view .LVU277
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 1213              		.loc 1 84 13 is_stmt 0 discriminator 2 view .LVU278
 1214 0048 1031     		adds	r1, r1, #16
 1215 004a 2144     		add	r1, r1, r4
 1216 004c 8122     		movs	r2, #129
 1217 004e 0631     		adds	r1, r1, #6
 1218 0050 2046     		mov	r0, r4
 1219 0052 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1220              	.LVL89:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1221              		.loc 1 78 2 is_stmt 1 discriminator 2 view .LVU279
 1222 0056 0135     		adds	r5, r5, #1
 1223              	.LVL90:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1224              		.loc 1 78 2 is_stmt 0 discriminator 2 view .LVU280
 1225 0058 EDB2     		uxtb	r5, r5
 1226              	.LVL91:
 1227              	.L49:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1228              		.loc 1 78 16 is_stmt 1 discriminator 3 view .LVU281
 1229 005a 072D     		cmp	r5, #7
 1230 005c D4D9     		bls	.L51
  86:Core/Src/oled.cpp **** 	Counter_increment();
<<<<<<< HEAD
 1225              		.loc 1 86 19 is_stmt 0 view .LVU281
 1226 005e 2046     		mov	r0, r4
 1227 0060 FFF7FEFF 		bl	_ZN4oled17Counter_incrementEv
 1228              	.LVL92:
  87:Core/Src/oled.cpp **** }
 1229              		.loc 1 87 1 view .LVU282
 1230 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 28
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 28
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1231              		.loc 1 86 2 view .LVU282
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 28
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 28
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


  86:Core/Src/oled.cpp **** 	Counter_increment();
 1232              		.loc 1 86 19 is_stmt 0 view .LVU283
 1233 005e 2046     		mov	r0, r4
 1234 0060 FFF7FEFF 		bl	_ZN4oled17Counter_incrementEv
 1235              	.LVL92:
  87:Core/Src/oled.cpp **** }
 1236              		.loc 1 87 1 view .LVU284
 1237 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  87:Core/Src/oled.cpp **** }
<<<<<<< HEAD
 1231              		.loc 1 87 1 view .LVU283
 1232              		.cfi_endproc
 1233              	.LFE137:
 1234              		.fnend
 1236              		.text
 1237              	.Letext0:
 1238              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1239              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1240              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1241              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1242              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1243              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1244              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1245              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1246              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1247              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1248              		.file 12 "/usr/include/newlib/sys/_types.h"
 1249              		.file 13 "/usr/include/newlib/sys/reent.h"
 1250              		.file 14 "/usr/include/newlib/sys/lock.h"
 1251              		.file 15 "Core/Inc/fonts.h"
 1252              		.file 16 "Core/Inc/oled.h"
 1253              		.file 17 "/usr/include/newlib/stdio.h"
 1254              		.file 18 "/usr/include/newlib/string.h"
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 29
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 29
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1238              		.loc 1 87 1 view .LVU285
 1239              		.cfi_endproc
 1240              	.LFE137:
 1241              		.fnend
 1243              		.text
 1244              	.Letext0:
 1245              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1246              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1247              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1248              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1249              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1250              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1251              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1252              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1253              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1254              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1255              		.file 12 "/usr/include/newlib/sys/_types.h"
 1256              		.file 13 "/usr/include/newlib/sys/reent.h"
 1257              		.file 14 "/usr/include/newlib/sys/lock.h"
 1258              		.file 15 "Core/Inc/fonts.h"
 1259              		.file 16 "Core/Inc/oled.h"
 1260              		.file 17 "/usr/include/newlib/stdio.h"
 1261              		.file 18 "/usr/include/newlib/string.h"
<<<<<<< HEAD
ARM GAS  /tmp/ccVncu5o.s 			page 29
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 29
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.cpp
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
     /tmp/ccM3cWia.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccM3cWia.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/ccM3cWia.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/ccM3cWia.s:75     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/ccM3cWia.s:82     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/ccM3cWia.s:140    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/ccM3cWia.s:147    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/ccM3cWia.s:194    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/ccM3cWia.s:201    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/ccM3cWia.s:561    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $t
     /tmp/ccM3cWia.s:568    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPc9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $d
     /tmp/ccM3cWia.s:811    .rodata._ZN4oled19oled_update_batteryEf.str1.4:0000000000000000 $d
     /tmp/ccM3cWia.s:815    .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
     /tmp/ccM3cWia.s:822    .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/ccM3cWia.s:877    .text._ZN4oled19oled_update_batteryEf:0000000000000034 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d
     /tmp/ccM3cWia.s:885    .text._ZN4oled8oled_offEv:0000000000000000 $t
     /tmp/ccM3cWia.s:892    .text._ZN4oled8oled_offEv:0000000000000000 _ZN4oled8oled_offEv
.ARM.exidx.text._ZN4oled8oled_offEv:0000000000000000 $d
     /tmp/ccM3cWia.s:932    .text._ZN4oled13oled_isOledOnEv:0000000000000000 $t
     /tmp/ccM3cWia.s:939    .text._ZN4oled13oled_isOledOnEv:0000000000000000 _ZN4oled13oled_isOledOnEv
.ARM.exidx.text._ZN4oled13oled_isOledOnEv:0000000000000000 $d
     /tmp/ccM3cWia.s:960    .text._ZN4oled15oled_resetTimerEv:0000000000000000 $t
     /tmp/ccM3cWia.s:967    .text._ZN4oled15oled_resetTimerEv:0000000000000000 _ZN4oled15oled_resetTimerEv
.ARM.exidx.text._ZN4oled15oled_resetTimerEv:0000000000000000 $d
     /tmp/ccM3cWia.s:988    .text._ZN4oled7oled_onEv:0000000000000000 $t
     /tmp/ccM3cWia.s:995    .text._ZN4oled7oled_onEv:0000000000000000 _ZN4oled7oled_onEv
.ARM.exidx.text._ZN4oled7oled_onEv:0000000000000000 $d
     /tmp/ccM3cWia.s:1039   .text._ZN4oled13oled_setTimerEm:0000000000000000 $t
     /tmp/ccM3cWia.s:1046   .text._ZN4oled13oled_setTimerEm:0000000000000000 _ZN4oled13oled_setTimerEm
     /tmp/ccM3cWia.s:1072   .text._ZN4oled13oled_setTimerEm:0000000000000014 $d
.ARM.exidx.text._ZN4oled13oled_setTimerEm:0000000000000000 $d
     /tmp/ccM3cWia.s:1079   .text._ZN4oled17Counter_incrementEv:0000000000000000 $t
     /tmp/ccM3cWia.s:1086   .text._ZN4oled17Counter_incrementEv:0000000000000000 _ZN4oled17Counter_incrementEv
.ARM.extab.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
.ARM.exidx.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
     /tmp/ccM3cWia.s:1129   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccM3cWia.s:1136   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
=======
     /tmp/ccsiO9CP.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccsiO9CP.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
=======
     /tmp/ccVncu5o.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccVncu5o.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
     /tmp/cc1XDnsz.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/cc1XDnsz.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/cc1XDnsz.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/cc1XDnsz.s:78     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/cc1XDnsz.s:85     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/cc1XDnsz.s:143    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/cc1XDnsz.s:150    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/cc1XDnsz.s:197    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:204    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/cc1XDnsz.s:564    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $t
     /tmp/cc1XDnsz.s:571    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPc9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $d
     /tmp/cc1XDnsz.s:818    .rodata._ZN4oled19oled_update_batteryEf.str1.4:0000000000000000 $d
     /tmp/cc1XDnsz.s:822    .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
     /tmp/cc1XDnsz.s:829    .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/cc1XDnsz.s:884    .text._ZN4oled19oled_update_batteryEf:0000000000000034 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d
     /tmp/cc1XDnsz.s:892    .text._ZN4oled8oled_offEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:899    .text._ZN4oled8oled_offEv:0000000000000000 _ZN4oled8oled_offEv
.ARM.exidx.text._ZN4oled8oled_offEv:0000000000000000 $d
     /tmp/cc1XDnsz.s:939    .text._ZN4oled13oled_isOledOnEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:946    .text._ZN4oled13oled_isOledOnEv:0000000000000000 _ZN4oled13oled_isOledOnEv
.ARM.exidx.text._ZN4oled13oled_isOledOnEv:0000000000000000 $d
     /tmp/cc1XDnsz.s:967    .text._ZN4oled15oled_resetTimerEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:974    .text._ZN4oled15oled_resetTimerEv:0000000000000000 _ZN4oled15oled_resetTimerEv
.ARM.exidx.text._ZN4oled15oled_resetTimerEv:0000000000000000 $d
     /tmp/cc1XDnsz.s:995    .text._ZN4oled7oled_onEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:1002   .text._ZN4oled7oled_onEv:0000000000000000 _ZN4oled7oled_onEv
.ARM.exidx.text._ZN4oled7oled_onEv:0000000000000000 $d
     /tmp/cc1XDnsz.s:1046   .text._ZN4oled13oled_setTimerEm:0000000000000000 $t
     /tmp/cc1XDnsz.s:1053   .text._ZN4oled13oled_setTimerEm:0000000000000000 _ZN4oled13oled_setTimerEm
     /tmp/cc1XDnsz.s:1079   .text._ZN4oled13oled_setTimerEm:0000000000000014 $d
.ARM.exidx.text._ZN4oled13oled_setTimerEm:0000000000000000 $d
     /tmp/cc1XDnsz.s:1086   .text._ZN4oled17Counter_incrementEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:1093   .text._ZN4oled17Counter_incrementEv:0000000000000000 _ZN4oled17Counter_incrementEv
.ARM.extab.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
.ARM.exidx.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
<<<<<<< HEAD
<<<<<<< HEAD
     /tmp/ccsiO9CP.s:1129   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccsiO9CP.s:1136   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
     /tmp/ccVncu5o.s:1136   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccVncu5o.s:1143   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
     /tmp/cc1XDnsz.s:1136   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/cc1XDnsz.s:1143   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
.ARM.exidx.text._ZN4oled12oled_refreshEv:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Master_Transmit
__aeabi_unwind_cpp_pr0
HAL_I2C_IsDeviceReady
HAL_TIM_Base_Start_IT
strlen
__aeabi_f2d
sprintf
Font_7x10
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/ccM3cWia.s 			page 30
=======
ARM GAS  /tmp/ccsiO9CP.s 			page 30
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccVncu5o.s 			page 30
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/cc1XDnsz.s 			page 30
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


__aeabi_unwind_cpp_pr1
