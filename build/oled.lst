ARM GAS  /tmp/ccOvoWwk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB132:
  30              		.file 1 "Core/Src/oled.cpp"
   1:Core/Src/oled.cpp **** #include "oled.h"
   2:Core/Src/oled.cpp **** 
   3:Core/Src/oled.cpp **** #define OLED_RIGHT_HORIZONTAL_SCROLL              0x26
   4:Core/Src/oled.cpp **** #define OLED_LEFT_HORIZONTAL_SCROLL               0x27
   5:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
   6:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A
   7:Core/Src/oled.cpp **** #define OLED_DEACTIVATE_SCROLL                    0x2E // Stop scroll
   8:Core/Src/oled.cpp **** #define OLED_ACTIVATE_SCROLL                      0x2F // Start scroll
   9:Core/Src/oled.cpp **** #define OLED_SET_VERTICAL_SCROLL_AREA             0xA3 // Set scroll range
  10:Core/Src/oled.cpp **** 
  11:Core/Src/oled.cpp **** #define OLED_NORMALDISPLAY       0xA6
  12:Core/Src/oled.cpp **** #define OLED_INVERTDISPLAY       0xA7
  13:Core/Src/oled.cpp **** 
  14:Core/Src/oled.cpp **** 
  15:Core/Src/oled.cpp **** #define OLED_WRITECOMMAND(command)      comm[0]=COMMAND; comm[1]=(command); oled_write(comm,2)
  16:Core/Src/oled.cpp **** 
  17:Core/Src/oled.cpp **** oled::oled(I2C_HandleTypeDef *hi2c, uint8_t address,TIM_HandleTypeDef *htim)
  31              		.loc 1 17 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 17 1 is_stmt 0 view .LVU1
  37 0000 10B4     		push	{r4}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 4, -4
  41              	.LBB2:
ARM GAS  /tmp/ccOvoWwk.s 			page 2


  18:Core/Src/oled.cpp **** {
  19:Core/Src/oled.cpp ****     this->hi2c=hi2c;
  42              		.loc 1 19 5 is_stmt 1 view .LVU2
  43              		.loc 1 19 15 is_stmt 0 view .LVU3
  44 0002 0160     		str	r1, [r0]
  20:Core/Src/oled.cpp **** 	this->address=address;
  45              		.loc 1 20 2 is_stmt 1 view .LVU4
  46              		.loc 1 20 15 is_stmt 0 view .LVU5
  47 0004 0272     		strb	r2, [r0, #8]
  21:Core/Src/oled.cpp **** 	this->htim=htim;
  48              		.loc 1 21 2 is_stmt 1 view .LVU6
  49              		.loc 1 21 12 is_stmt 0 view .LVU7
  50 0006 4360     		str	r3, [r0, #4]
  51              	.LBE2:
  22:Core/Src/oled.cpp **** }
  52              		.loc 1 22 1 view .LVU8
  53 0008 5DF8044B 		ldr	r4, [sp], #4
  54              	.LCFI1:
  55              		.cfi_restore 4
  56              		.cfi_def_cfa_offset 0
  57 000c 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE132:
  60              		.cantunwind
  61              		.fnend
  63              		.global	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  64              		.thumb_set _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,_ZN4oledC2EP17I2C_HandleTypeDefhP1
  65              		.section	.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE,"ax",%progbits
  66              		.align	1
  67              		.global	_ZN4oled9oled_fillENS_12OLED_COLOR_tE
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	_ZN4oled9oled_fillENS_12OLED_COLOR_tE:
  74              		.fnstart
  75              	.LVL1:
  76              	.LFB135:
  23:Core/Src/oled.cpp **** void oled::init(void)
  24:Core/Src/oled.cpp **** {
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
  26:Core/Src/oled.cpp **** 	}
  27:Core/Src/oled.cpp ****     
  28:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(0xAE); //display off
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
ARM GAS  /tmp/ccOvoWwk.s 			page 3


  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
  56:Core/Src/oled.cpp **** 
  57:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(OLED_DEACTIVATE_SCROLL); //Deactivate scroll
  58:Core/Src/oled.cpp **** 
  59:Core/Src/oled.cpp ****     HAL_TIM_Base_Start_IT(htim);
  60:Core/Src/oled.cpp **** 
  61:Core/Src/oled.cpp **** }
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
  77              		.loc 1 62 42 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 62 42 is_stmt 0 view .LVU10
  82 0000 70B5     		push	{r4, r5, r6, lr}
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 16
  85              		.cfi_offset 4, -16
  86              		.cfi_offset 5, -12
  87              		.cfi_offset 6, -8
  88              		.cfi_offset 14, -4
  89 0002 0646     		mov	r6, r0
  90 0004 0D46     		mov	r5, r1
  63:Core/Src/oled.cpp **** 	/* Set memory */
  64:Core/Src/oled.cpp ****     for (uint8_t m = 0; m < 8; m++) {
  91              		.loc 1 64 5 is_stmt 1 view .LVU11
  92              	.LVL2:
  93              	.LBB3:
  94              		.loc 1 64 18 is_stmt 0 view .LVU12
  95 0006 0024     		movs	r4, #0
  96 0008 09E0     		b	.L5
  97              	.LVL3:
  98              	.L7:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
  99              		.loc 1 65 2 is_stmt 1 discriminator 2 view .LVU13
 100              		.loc 1 65 24 is_stmt 0 discriminator 2 view .LVU14
 101 000a E001     		lsls	r0, r4, #7
 102              		.loc 1 65 9 discriminator 2 view .LVU15
 103 000c 0930     		adds	r0, r0, #9
 104 000e 3044     		add	r0, r0, r6
 105              		.loc 1 65 8 discriminator 2 view .LVU16
 106 0010 8022     		movs	r2, #128
 107 0012 2946     		mov	r1, r5
 108 0014 0330     		adds	r0, r0, #3
 109 0016 FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccOvoWwk.s 			page 4


 110              	.LVL4:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 111              		.loc 1 64 5 is_stmt 1 discriminator 2 view .LVU17
 112 001a 0134     		adds	r4, r4, #1
 113              	.LVL5:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 114              		.loc 1 64 5 is_stmt 0 discriminator 2 view .LVU18
 115 001c E4B2     		uxtb	r4, r4
 116              	.LVL6:
 117              	.L5:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 118              		.loc 1 64 27 is_stmt 1 discriminator 3 view .LVU19
 119 001e 072C     		cmp	r4, #7
 120 0020 F3D9     		bls	.L7
 121              	.LBE3:
  66:Core/Src/oled.cpp ****     }
  67:Core/Src/oled.cpp **** }
 122              		.loc 1 67 1 is_stmt 0 view .LVU20
 123 0022 70BD     		pop	{r4, r5, r6, pc}
 124              		.loc 1 67 1 view .LVU21
 125              		.cfi_endproc
 126              	.LFE135:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN4oled10oled_writeEPht,"ax",%progbits
 131              		.align	1
 132              		.global	_ZN4oled10oled_writeEPht
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	_ZN4oled10oled_writeEPht:
 139              		.fnstart
 140              	.LVL7:
 141              	.LFB136:
  68:Core/Src/oled.cpp **** uint8_t oled::oled_write(uint8_t* data, uint16_t count)
  69:Core/Src/oled.cpp **** {
 142              		.loc 1 69 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		.loc 1 69 1 is_stmt 0 view .LVU23
 147 0000 00B5     		push	{lr}
 148              		.save {lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 14, -4
 152              		.pad #12
 153 0002 83B0     		sub	sp, sp, #12
 154              	.LCFI4:
 155              		.cfi_def_cfa_offset 16
 156 0004 1346     		mov	r3, r2
  70:Core/Src/oled.cpp **** 	HAL_I2C_Master_Transmit(hi2c, address, data, count, 10);
 157              		.loc 1 70 2 is_stmt 1 view .LVU24
 158              		.loc 1 70 25 is_stmt 0 view .LVU25
 159 0006 0A22     		movs	r2, #10
 160              	.LVL8:
ARM GAS  /tmp/ccOvoWwk.s 			page 5


 161              		.loc 1 70 25 view .LVU26
 162 0008 0092     		str	r2, [sp]
 163 000a 0A46     		mov	r2, r1
 164 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 165              	.LVL9:
 166              		.loc 1 70 25 view .LVU27
 167 000e 0068     		ldr	r0, [r0]
 168              	.LVL10:
 169              		.loc 1 70 25 view .LVU28
 170 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 171              	.LVL11:
  71:Core/Src/oled.cpp ****     return 1;
 172              		.loc 1 71 5 is_stmt 1 view .LVU29
  72:Core/Src/oled.cpp **** }
 173              		.loc 1 72 1 is_stmt 0 view .LVU30
 174 0014 0120     		movs	r0, #1
 175 0016 03B0     		add	sp, sp, #12
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 4
 178              		@ sp needed
 179 0018 5DF804FB 		ldr	pc, [sp], #4
 180              		.cfi_endproc
 181              	.LFE136:
 182              		.fnend
 184              		.section	.text._ZN4oled4initEv,"ax",%progbits
 185              		.align	1
 186              		.global	_ZN4oled4initEv
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	_ZN4oled4initEv:
 193              		.fnstart
 194              	.LVL12:
 195              	.LFB134:
  24:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 196              		.loc 1 24 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 200              		.loc 1 24 1 is_stmt 0 view .LVU32
 201 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 202              		.save {r4, r5, r6, r7, r8, lr}
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 24
 205              		.cfi_offset 4, -24
 206              		.cfi_offset 5, -20
 207              		.cfi_offset 6, -16
 208              		.cfi_offset 7, -12
 209              		.cfi_offset 8, -8
 210              		.cfi_offset 14, -4
 211 0004 0446     		mov	r4, r0
  25:Core/Src/oled.cpp **** 	}
 212              		.loc 1 25 2 is_stmt 1 view .LVU33
  25:Core/Src/oled.cpp **** 	}
 213              		.loc 1 25 27 is_stmt 0 view .LVU34
ARM GAS  /tmp/ccOvoWwk.s 			page 6


 214 0006 44F62063 		movw	r3, #20000
 215 000a 0122     		movs	r2, #1
 216 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 217 000e 0068     		ldr	r0, [r0]
 218              	.LVL13:
  25:Core/Src/oled.cpp **** 	}
 219              		.loc 1 25 27 view .LVU35
 220 0010 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 221              	.LVL14:
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 222              		.loc 1 28 5 is_stmt 1 view .LVU36
 223 0014 0025     		movs	r5, #0
 224 0016 6572     		strb	r5, [r4, #9]
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 225              		.loc 1 28 5 view .LVU37
 226 0018 AE23     		movs	r3, #174
 227 001a A372     		strb	r3, [r4, #10]
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 228              		.loc 1 28 5 view .LVU38
 229 001c 04F10906 		add	r6, r4, #9
 230 0020 0222     		movs	r2, #2
 231 0022 3146     		mov	r1, r6
 232 0024 2046     		mov	r0, r4
 233 0026 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 234              	.LVL15:
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 235              		.loc 1 29 2 view .LVU39
 236 002a 6572     		strb	r5, [r4, #9]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 237              		.loc 1 29 2 view .LVU40
 238 002c 2027     		movs	r7, #32
 239 002e A772     		strb	r7, [r4, #10]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 240              		.loc 1 29 2 view .LVU41
 241 0030 0222     		movs	r2, #2
 242 0032 3146     		mov	r1, r6
 243 0034 2046     		mov	r0, r4
 244 0036 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 245              	.LVL16:
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 246              		.loc 1 30 2 view .LVU42
 247 003a 6572     		strb	r5, [r4, #9]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 248              		.loc 1 30 2 view .LVU43
 249 003c 4FF01008 		mov	r8, #16
 250 0040 84F80A80 		strb	r8, [r4, #10]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 251              		.loc 1 30 2 view .LVU44
 252 0044 0222     		movs	r2, #2
 253 0046 3146     		mov	r1, r6
 254 0048 2046     		mov	r0, r4
 255 004a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 256              	.LVL17:
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 257              		.loc 1 31 2 view .LVU45
 258 004e 6572     		strb	r5, [r4, #9]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
ARM GAS  /tmp/ccOvoWwk.s 			page 7


 259              		.loc 1 31 2 view .LVU46
 260 0050 B023     		movs	r3, #176
 261 0052 A372     		strb	r3, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 262              		.loc 1 31 2 view .LVU47
 263 0054 0222     		movs	r2, #2
 264 0056 3146     		mov	r1, r6
 265 0058 2046     		mov	r0, r4
 266 005a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 267              	.LVL18:
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 268              		.loc 1 32 2 view .LVU48
 269 005e 6572     		strb	r5, [r4, #9]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 270              		.loc 1 32 2 view .LVU49
 271 0060 C823     		movs	r3, #200
 272 0062 A372     		strb	r3, [r4, #10]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 273              		.loc 1 32 2 view .LVU50
 274 0064 0222     		movs	r2, #2
 275 0066 3146     		mov	r1, r6
 276 0068 2046     		mov	r0, r4
 277 006a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 278              	.LVL19:
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 279              		.loc 1 33 2 view .LVU51
 280 006e 6572     		strb	r5, [r4, #9]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 281              		.loc 1 33 2 view .LVU52
 282 0070 A572     		strb	r5, [r4, #10]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 283              		.loc 1 33 2 view .LVU53
 284 0072 0222     		movs	r2, #2
 285 0074 3146     		mov	r1, r6
 286 0076 2046     		mov	r0, r4
 287 0078 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 288              	.LVL20:
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 289              		.loc 1 34 2 view .LVU54
 290 007c 6572     		strb	r5, [r4, #9]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 291              		.loc 1 34 2 view .LVU55
 292 007e 84F80A80 		strb	r8, [r4, #10]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 293              		.loc 1 34 2 view .LVU56
 294 0082 0222     		movs	r2, #2
 295 0084 3146     		mov	r1, r6
 296 0086 2046     		mov	r0, r4
 297 0088 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 298              	.LVL21:
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 299              		.loc 1 35 2 view .LVU57
 300 008c 6572     		strb	r5, [r4, #9]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 301              		.loc 1 35 2 view .LVU58
 302 008e 4023     		movs	r3, #64
 303 0090 A372     		strb	r3, [r4, #10]
ARM GAS  /tmp/ccOvoWwk.s 			page 8


  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 304              		.loc 1 35 2 view .LVU59
 305 0092 0222     		movs	r2, #2
 306 0094 3146     		mov	r1, r6
 307 0096 2046     		mov	r0, r4
 308 0098 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 309              	.LVL22:
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 310              		.loc 1 36 2 view .LVU60
 311 009c 6572     		strb	r5, [r4, #9]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 312              		.loc 1 36 2 view .LVU61
 313 009e 8123     		movs	r3, #129
 314 00a0 A372     		strb	r3, [r4, #10]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 315              		.loc 1 36 2 view .LVU62
 316 00a2 0222     		movs	r2, #2
 317 00a4 3146     		mov	r1, r6
 318 00a6 2046     		mov	r0, r4
 319 00a8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 320              	.LVL23:
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 321              		.loc 1 37 2 view .LVU63
 322 00ac 6572     		strb	r5, [r4, #9]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 323              		.loc 1 37 2 view .LVU64
 324 00ae FF23     		movs	r3, #255
 325 00b0 A372     		strb	r3, [r4, #10]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 326              		.loc 1 37 2 view .LVU65
 327 00b2 0222     		movs	r2, #2
 328 00b4 3146     		mov	r1, r6
 329 00b6 2046     		mov	r0, r4
 330 00b8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 331              	.LVL24:
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 332              		.loc 1 38 2 view .LVU66
 333 00bc 6572     		strb	r5, [r4, #9]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 334              		.loc 1 38 2 view .LVU67
 335 00be A123     		movs	r3, #161
 336 00c0 A372     		strb	r3, [r4, #10]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 337              		.loc 1 38 2 view .LVU68
 338 00c2 0222     		movs	r2, #2
 339 00c4 3146     		mov	r1, r6
 340 00c6 2046     		mov	r0, r4
 341 00c8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 342              	.LVL25:
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 343              		.loc 1 39 2 view .LVU69
 344 00cc 6572     		strb	r5, [r4, #9]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 345              		.loc 1 39 2 view .LVU70
 346 00ce A623     		movs	r3, #166
 347 00d0 A372     		strb	r3, [r4, #10]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
ARM GAS  /tmp/ccOvoWwk.s 			page 9


 348              		.loc 1 39 2 view .LVU71
 349 00d2 0222     		movs	r2, #2
 350 00d4 3146     		mov	r1, r6
 351 00d6 2046     		mov	r0, r4
 352 00d8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 353              	.LVL26:
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 354              		.loc 1 40 2 view .LVU72
 355 00dc 6572     		strb	r5, [r4, #9]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 356              		.loc 1 40 2 view .LVU73
 357 00de A823     		movs	r3, #168
 358 00e0 A372     		strb	r3, [r4, #10]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 359              		.loc 1 40 2 view .LVU74
 360 00e2 0222     		movs	r2, #2
 361 00e4 3146     		mov	r1, r6
 362 00e6 2046     		mov	r0, r4
 363 00e8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 364              	.LVL27:
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 365              		.loc 1 41 2 view .LVU75
 366 00ec 6572     		strb	r5, [r4, #9]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 367              		.loc 1 41 2 view .LVU76
 368 00ee 3F23     		movs	r3, #63
 369 00f0 A372     		strb	r3, [r4, #10]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 370              		.loc 1 41 2 view .LVU77
 371 00f2 0222     		movs	r2, #2
 372 00f4 3146     		mov	r1, r6
 373 00f6 2046     		mov	r0, r4
 374 00f8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 375              	.LVL28:
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 376              		.loc 1 42 2 view .LVU78
 377 00fc 6572     		strb	r5, [r4, #9]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 378              		.loc 1 42 2 view .LVU79
 379 00fe A423     		movs	r3, #164
 380 0100 A372     		strb	r3, [r4, #10]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 381              		.loc 1 42 2 view .LVU80
 382 0102 0222     		movs	r2, #2
 383 0104 3146     		mov	r1, r6
 384 0106 2046     		mov	r0, r4
 385 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 386              	.LVL29:
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 387              		.loc 1 43 2 view .LVU81
 388 010c 6572     		strb	r5, [r4, #9]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 389              		.loc 1 43 2 view .LVU82
 390 010e D323     		movs	r3, #211
 391 0110 A372     		strb	r3, [r4, #10]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 392              		.loc 1 43 2 view .LVU83
ARM GAS  /tmp/ccOvoWwk.s 			page 10


 393 0112 0222     		movs	r2, #2
 394 0114 3146     		mov	r1, r6
 395 0116 2046     		mov	r0, r4
 396 0118 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 397              	.LVL30:
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 398              		.loc 1 44 2 view .LVU84
 399 011c 6572     		strb	r5, [r4, #9]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 400              		.loc 1 44 2 view .LVU85
 401 011e A572     		strb	r5, [r4, #10]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 402              		.loc 1 44 2 view .LVU86
 403 0120 0222     		movs	r2, #2
 404 0122 3146     		mov	r1, r6
 405 0124 2046     		mov	r0, r4
 406 0126 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 407              	.LVL31:
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 408              		.loc 1 45 2 view .LVU87
 409 012a 6572     		strb	r5, [r4, #9]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 410              		.loc 1 45 2 view .LVU88
 411 012c D523     		movs	r3, #213
 412 012e A372     		strb	r3, [r4, #10]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 413              		.loc 1 45 2 view .LVU89
 414 0130 0222     		movs	r2, #2
 415 0132 3146     		mov	r1, r6
 416 0134 2046     		mov	r0, r4
 417 0136 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 418              	.LVL32:
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 419              		.loc 1 46 2 view .LVU90
 420 013a 6572     		strb	r5, [r4, #9]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 421              		.loc 1 46 2 view .LVU91
 422 013c F023     		movs	r3, #240
 423 013e A372     		strb	r3, [r4, #10]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 424              		.loc 1 46 2 view .LVU92
 425 0140 0222     		movs	r2, #2
 426 0142 3146     		mov	r1, r6
 427 0144 2046     		mov	r0, r4
 428 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 429              	.LVL33:
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 430              		.loc 1 47 2 view .LVU93
 431 014a 6572     		strb	r5, [r4, #9]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 432              		.loc 1 47 2 view .LVU94
 433 014c D923     		movs	r3, #217
 434 014e A372     		strb	r3, [r4, #10]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 435              		.loc 1 47 2 view .LVU95
 436 0150 0222     		movs	r2, #2
 437 0152 3146     		mov	r1, r6
ARM GAS  /tmp/ccOvoWwk.s 			page 11


 438 0154 2046     		mov	r0, r4
 439 0156 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 440              	.LVL34:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 441              		.loc 1 48 2 view .LVU96
 442 015a 6572     		strb	r5, [r4, #9]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 443              		.loc 1 48 2 view .LVU97
 444 015c 2223     		movs	r3, #34
 445 015e A372     		strb	r3, [r4, #10]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 446              		.loc 1 48 2 view .LVU98
 447 0160 0222     		movs	r2, #2
 448 0162 3146     		mov	r1, r6
 449 0164 2046     		mov	r0, r4
 450 0166 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 451              	.LVL35:
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 452              		.loc 1 49 2 view .LVU99
 453 016a 6572     		strb	r5, [r4, #9]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 454              		.loc 1 49 2 view .LVU100
 455 016c DA23     		movs	r3, #218
 456 016e A372     		strb	r3, [r4, #10]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 457              		.loc 1 49 2 view .LVU101
 458 0170 0222     		movs	r2, #2
 459 0172 3146     		mov	r1, r6
 460 0174 2046     		mov	r0, r4
 461 0176 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 462              	.LVL36:
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 463              		.loc 1 50 2 view .LVU102
 464 017a 6572     		strb	r5, [r4, #9]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 465              		.loc 1 50 2 view .LVU103
 466 017c 1223     		movs	r3, #18
 467 017e A372     		strb	r3, [r4, #10]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 468              		.loc 1 50 2 view .LVU104
 469 0180 0222     		movs	r2, #2
 470 0182 3146     		mov	r1, r6
 471 0184 2046     		mov	r0, r4
 472 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 473              	.LVL37:
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 474              		.loc 1 51 2 view .LVU105
 475 018a 6572     		strb	r5, [r4, #9]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 476              		.loc 1 51 2 view .LVU106
 477 018c DB23     		movs	r3, #219
 478 018e A372     		strb	r3, [r4, #10]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 479              		.loc 1 51 2 view .LVU107
 480 0190 0222     		movs	r2, #2
 481 0192 3146     		mov	r1, r6
 482 0194 2046     		mov	r0, r4
ARM GAS  /tmp/ccOvoWwk.s 			page 12


 483 0196 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 484              	.LVL38:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 485              		.loc 1 52 2 view .LVU108
 486 019a 6572     		strb	r5, [r4, #9]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 487              		.loc 1 52 2 view .LVU109
 488 019c A772     		strb	r7, [r4, #10]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 489              		.loc 1 52 2 view .LVU110
 490 019e 0222     		movs	r2, #2
 491 01a0 3146     		mov	r1, r6
 492 01a2 2046     		mov	r0, r4
 493 01a4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 494              	.LVL39:
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 495              		.loc 1 53 2 view .LVU111
 496 01a8 6572     		strb	r5, [r4, #9]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 497              		.loc 1 53 2 view .LVU112
 498 01aa 8D23     		movs	r3, #141
 499 01ac A372     		strb	r3, [r4, #10]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 500              		.loc 1 53 2 view .LVU113
 501 01ae 0222     		movs	r2, #2
 502 01b0 3146     		mov	r1, r6
 503 01b2 2046     		mov	r0, r4
 504 01b4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 505              	.LVL40:
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 506              		.loc 1 54 2 view .LVU114
 507 01b8 6572     		strb	r5, [r4, #9]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 508              		.loc 1 54 2 view .LVU115
 509 01ba 1423     		movs	r3, #20
 510 01bc A372     		strb	r3, [r4, #10]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 511              		.loc 1 54 2 view .LVU116
 512 01be 0222     		movs	r2, #2
 513 01c0 3146     		mov	r1, r6
 514 01c2 2046     		mov	r0, r4
 515 01c4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 516              	.LVL41:
  55:Core/Src/oled.cpp **** 
 517              		.loc 1 55 2 view .LVU117
 518 01c8 6572     		strb	r5, [r4, #9]
  55:Core/Src/oled.cpp **** 
 519              		.loc 1 55 2 view .LVU118
 520 01ca AF23     		movs	r3, #175
 521 01cc A372     		strb	r3, [r4, #10]
  55:Core/Src/oled.cpp **** 
 522              		.loc 1 55 2 view .LVU119
 523 01ce 0222     		movs	r2, #2
 524 01d0 3146     		mov	r1, r6
 525 01d2 2046     		mov	r0, r4
 526 01d4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 527              	.LVL42:
ARM GAS  /tmp/ccOvoWwk.s 			page 13


  57:Core/Src/oled.cpp **** 
 528              		.loc 1 57 5 view .LVU120
 529 01d8 6572     		strb	r5, [r4, #9]
  57:Core/Src/oled.cpp **** 
 530              		.loc 1 57 5 view .LVU121
 531 01da 2E23     		movs	r3, #46
 532 01dc A372     		strb	r3, [r4, #10]
  57:Core/Src/oled.cpp **** 
 533              		.loc 1 57 5 view .LVU122
 534 01de 0222     		movs	r2, #2
 535 01e0 3146     		mov	r1, r6
 536 01e2 2046     		mov	r0, r4
 537 01e4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 538              	.LVL43:
  59:Core/Src/oled.cpp **** 
 539              		.loc 1 59 5 view .LVU123
  59:Core/Src/oled.cpp **** 
 540              		.loc 1 59 26 is_stmt 0 view .LVU124
 541 01e8 6068     		ldr	r0, [r4, #4]
 542 01ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 543              	.LVL44:
  61:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 544              		.loc 1 61 1 view .LVU125
 545 01ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  61:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 546              		.loc 1 61 1 view .LVU126
 547              		.cfi_endproc
 548              	.LFE134:
 549              		.fnend
 551              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 552              		.align	1
 553              		.global	_ZN4oled12oled_refreshEv
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv4-sp-d16
 559              	_ZN4oled12oled_refreshEv:
 560              		.fnstart
 561              	.LVL45:
 562              	.LFB137:
  73:Core/Src/oled.cpp **** void oled::oled_refresh(void)
  74:Core/Src/oled.cpp **** {
 563              		.loc 1 74 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		.loc 1 74 1 is_stmt 0 view .LVU128
 568 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 569              		.save {r3, r4, r5, r6, r7, lr}
 570              	.LCFI7:
 571              		.cfi_def_cfa_offset 24
 572              		.cfi_offset 3, -24
 573              		.cfi_offset 4, -20
 574              		.cfi_offset 5, -16
 575              		.cfi_offset 6, -12
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOvoWwk.s 			page 14


 578 0002 0446     		mov	r4, r0
  75:Core/Src/oled.cpp **** 	uint8_t m;
 579              		.loc 1 75 2 is_stmt 1 view .LVU129
  76:Core/Src/oled.cpp **** 	
  77:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 580              		.loc 1 77 2 view .LVU130
 581              	.LVL46:
 582              		.loc 1 77 9 is_stmt 0 view .LVU131
 583 0004 0025     		movs	r5, #0
 584 0006 28E0     		b	.L14
 585              	.LVL47:
 586              	.L16:
  78:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 587              		.loc 1 78 3 is_stmt 1 discriminator 2 view .LVU132
 588 0008 0027     		movs	r7, #0
 589 000a 6772     		strb	r7, [r4, #9]
 590              		.loc 1 78 3 discriminator 2 view .LVU133
 591 000c A5F15003 		sub	r3, r5, #80
 592 0010 A372     		strb	r3, [r4, #10]
 593              		.loc 1 78 3 discriminator 2 view .LVU134
 594 0012 04F10906 		add	r6, r4, #9
 595 0016 0222     		movs	r2, #2
 596 0018 3146     		mov	r1, r6
 597 001a 2046     		mov	r0, r4
 598 001c FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 599              	.LVL48:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 600              		.loc 1 79 3 discriminator 2 view .LVU135
 601 0020 6772     		strb	r7, [r4, #9]
 602              		.loc 1 79 3 discriminator 2 view .LVU136
 603 0022 A772     		strb	r7, [r4, #10]
 604              		.loc 1 79 3 discriminator 2 view .LVU137
 605 0024 0222     		movs	r2, #2
 606 0026 3146     		mov	r1, r6
 607 0028 2046     		mov	r0, r4
 608 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 609              	.LVL49:
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 610              		.loc 1 80 3 discriminator 2 view .LVU138
 611 002e 6772     		strb	r7, [r4, #9]
 612              		.loc 1 80 3 discriminator 2 view .LVU139
 613 0030 1023     		movs	r3, #16
 614 0032 A372     		strb	r3, [r4, #10]
 615              		.loc 1 80 3 discriminator 2 view .LVU140
 616 0034 0222     		movs	r2, #2
 617 0036 3146     		mov	r1, r6
 618 0038 2046     		mov	r0, r4
 619 003a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 620              	.LVL50:
  81:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 621              		.loc 1 81 9 discriminator 2 view .LVU141
 622              		.loc 1 81 23 is_stmt 0 discriminator 2 view .LVU142
 623 003e E901     		lsls	r1, r5, #7
 624              		.loc 1 81 27 discriminator 2 view .LVU143
 625 0040 04EBC513 		add	r3, r4, r5, lsl #7
 626 0044 4022     		movs	r2, #64
 627 0046 DA72     		strb	r2, [r3, #11]
ARM GAS  /tmp/ccOvoWwk.s 			page 15


  82:Core/Src/oled.cpp **** 		/* Write multi data */
  83:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 628              		.loc 1 83 3 is_stmt 1 discriminator 2 view .LVU144
 629              		.loc 1 83 13 is_stmt 0 discriminator 2 view .LVU145
 630 0048 0831     		adds	r1, r1, #8
 631 004a 2144     		add	r1, r1, r4
 632 004c 8122     		movs	r2, #129
 633 004e 0331     		adds	r1, r1, #3
 634 0050 2046     		mov	r0, r4
 635 0052 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 636              	.LVL51:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 637              		.loc 1 77 2 is_stmt 1 discriminator 2 view .LVU146
 638 0056 0135     		adds	r5, r5, #1
 639              	.LVL52:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 640              		.loc 1 77 2 is_stmt 0 discriminator 2 view .LVU147
 641 0058 EDB2     		uxtb	r5, r5
 642              	.LVL53:
 643              	.L14:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 644              		.loc 1 77 16 is_stmt 1 discriminator 3 view .LVU148
 645 005a 072D     		cmp	r5, #7
 646 005c D4D9     		bls	.L16
  84:Core/Src/oled.cpp **** 	}
  85:Core/Src/oled.cpp **** }
 647              		.loc 1 85 1 is_stmt 0 view .LVU149
 648 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 649              		.loc 1 85 1 view .LVU150
 650              		.cfi_endproc
 651              	.LFE137:
 652              		.fnend
 654              		.section	.text._ZN4oled10oled_printEPch9FontDef_ttt,"ax",%progbits
 655              		.align	1
 656              		.global	_ZN4oled10oled_printEPch9FontDef_ttt
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 660              		.fpu fpv4-sp-d16
 662              	_ZN4oled10oled_printEPch9FontDef_ttt:
 663              		.fnstart
 664              	.LVL54:
 665              	.LFB138:
  86:Core/Src/oled.cpp **** 
  87:Core/Src/oled.cpp **** void oled::oled_print(char* string, uint8_t count, FontDef_t size, uint16_t x , uint16_t y)
  88:Core/Src/oled.cpp **** {	
 666              		.loc 1 88 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 20, pretend = 8, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		.loc 1 88 1 is_stmt 0 view .LVU152
 671 0000 82B0     		sub	sp, sp, #8
 672              	.LCFI8:
 673              		.cfi_def_cfa_offset 8
 674 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 675              	.LCFI9:
 676              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccOvoWwk.s 			page 16


 677              		.cfi_offset 4, -40
 678              		.cfi_offset 5, -36
 679              		.cfi_offset 6, -32
 680              		.cfi_offset 7, -28
 681              		.cfi_offset 8, -24
 682              		.cfi_offset 9, -20
 683              		.cfi_offset 10, -16
 684              		.cfi_offset 14, -12
 685 0006 0446     		mov	r4, r0
 686 0008 0D46     		mov	r5, r1
 687 000a 1646     		mov	r6, r2
 688 000c 0993     		str	r3, [sp, #36]
 689 000e BDF82C00 		ldrh	r0, [sp, #44]
 690              	.LVL55:
 691              		.loc 1 88 1 view .LVU153
 692 0012 BDF83010 		ldrh	r1, [sp, #48]
 693              	.LVL56:
  89:Core/Src/oled.cpp **** 	uint8_t strItr=0;
 694              		.loc 1 89 2 is_stmt 1 view .LVU154
 695              		.loc 1 89 10 is_stmt 0 view .LVU155
 696 0016 0027     		movs	r7, #0
 697 0018 7CE0     		b	.L31
 698              	.LVL57:
 699              	.L21:
 700              	.LBB4:
  90:Core/Src/oled.cpp **** 	// //loop through the chars in the string
  91:Core/Src/oled.cpp **** 	while(strItr<count)
  92:Core/Src/oled.cpp **** 	{
  93:Core/Src/oled.cpp **** 		int i=0;
  94:Core/Src/oled.cpp **** 		int j=0;
  95:Core/Src/oled.cpp **** 		int b;
  96:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
  97:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
  98:Core/Src/oled.cpp **** 
  99:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 701              		.loc 1 99 25 discriminator 2 view .LVU156
 702 001a DB10     		asrs	r3, r3, #3
 703              		.loc 1 99 31 discriminator 2 view .LVU157
 704 001c 00EBC313 		add	r3, r0, r3, lsl #7
 705              		.loc 1 99 33 discriminator 2 view .LVU158
 706 0020 1344     		add	r3, r3, r2
 707              		.loc 1 99 36 discriminator 2 view .LVU159
 708 0022 2344     		add	r3, r3, r4
 709 0024 4FF0000E 		mov	lr, #0
 710 0028 83F80BE0 		strb	lr, [r3, #11]
  97:Core/Src/oled.cpp **** 
 711              		.loc 1 97 4 is_stmt 1 discriminator 2 view .LVU160
 712 002c 0132     		adds	r2, r2, #1
 713              	.LVL58:
 714              	.L22:
  97:Core/Src/oled.cpp **** 
 715              		.loc 1 97 18 discriminator 3 view .LVU161
  97:Core/Src/oled.cpp **** 
 716              		.loc 1 97 25 is_stmt 0 discriminator 3 view .LVU162
 717 002e 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
  97:Core/Src/oled.cpp **** 
 718              		.loc 1 97 18 discriminator 3 view .LVU163
ARM GAS  /tmp/ccOvoWwk.s 			page 17


 719 0032 9342     		cmp	r3, r2
 720 0034 04DD     		ble	.L20
 721              		.loc 1 99 6 is_stmt 1 discriminator 2 view .LVU164
 722              		.loc 1 99 25 is_stmt 0 discriminator 2 view .LVU165
 723 0036 11EB0C03 		adds	r3, r1, ip
 724 003a EED5     		bpl	.L21
 725              		.loc 1 99 25 discriminator 2 view .LVU166
 726 003c 0733     		adds	r3, r3, #7
 727 003e ECE7     		b	.L21
 728              	.L20:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 729              		.loc 1 96 3 is_stmt 1 discriminator 2 view .LVU167
 730 0040 0CF1010C 		add	ip, ip, #1
 731              	.LVL59:
 732              	.L23:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 733              		.loc 1 96 17 discriminator 1 view .LVU168
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 734              		.loc 1 96 24 is_stmt 0 discriminator 1 view .LVU169
 735 0044 9DF825E0 		ldrb	lr, [sp, #37]	@ zero_extendqisi2
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 736              		.loc 1 96 17 discriminator 1 view .LVU170
 737 0048 E645     		cmp	lr, ip
 738 004a 01DD     		ble	.L32
  97:Core/Src/oled.cpp **** 
 739              		.loc 1 97 11 view .LVU171
 740 004c 0022     		movs	r2, #0
 741 004e EEE7     		b	.L22
 742              	.L32:
 100:Core/Src/oled.cpp **** 
 101:Core/Src/oled.cpp **** 				
 102:Core/Src/oled.cpp **** 			}
 103:Core/Src/oled.cpp **** 		}
 104:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
 743              		.loc 1 104 10 view .LVU172
 744 0050 4FF0000C 		mov	ip, #0
 745              	.LVL60:
 746              		.loc 1 104 10 view .LVU173
 747 0054 4CE0     		b	.L19
 748              	.LVL61:
 749              	.L27:
 105:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 106:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 107:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 108:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 750              		.loc 1 108 25 view .LVU174
 751 0056 DB10     		asrs	r3, r3, #3
 752              		.loc 1 108 36 view .LVU175
 753 0058 00EBC313 		add	r3, r0, r3, lsl #7
 754 005c 1344     		add	r3, r3, r2
 755              		.loc 1 108 50 view .LVU176
 756 005e D9F1000A 		rsbs	r10, r9, #0
 757 0062 09F00709 		and	r9, r9, #7
 758 0066 0AF0070A 		and	r10, r10, #7
 759 006a 58BF     		it	pl
 760 006c CAF10009 		rsbpl	r9, r10, #0
 761              		.loc 1 108 40 view .LVU177
ARM GAS  /tmp/ccOvoWwk.s 			page 18


 762 0070 4FF0010A 		mov	r10, #1
 763 0074 0AFA09FA 		lsl	r10, r10, r9
 764              		.loc 1 108 36 view .LVU178
 765 0078 2344     		add	r3, r3, r4
 766 007a 93F80B90 		ldrb	r9, [r3, #11]	@ zero_extendqisi2
 767 007e 49EA0A09 		orr	r9, r9, r10
 768 0082 83F80B90 		strb	r9, [r3, #11]
 769              	.L28:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 770              		.loc 1 106 4 is_stmt 1 discriminator 2 view .LVU179
 771 0086 0132     		adds	r2, r2, #1
 772              	.LVL62:
 773              	.L30:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 774              		.loc 1 106 18 discriminator 1 view .LVU180
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 775              		.loc 1 106 25 is_stmt 0 discriminator 1 view .LVU181
 776 0088 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 777              		.loc 1 106 18 discriminator 1 view .LVU182
 778 008c 9342     		cmp	r3, r2
 779 008e 2DDD     		ble	.L25
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 780              		.loc 1 107 5 is_stmt 1 view .LVU183
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 781              		.loc 1 107 12 is_stmt 0 view .LVU184
 782 0090 08FA02F3 		lsl	r3, r8, r2
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 783              		.loc 1 107 5 view .LVU185
 784 0094 13F4004F 		tst	r3, #32768
 785 0098 08D0     		beq	.L26
 786              		.loc 1 108 6 is_stmt 1 view .LVU186
 787              		.loc 1 108 21 is_stmt 0 view .LVU187
 788 009a 01EB0C09 		add	r9, r1, ip
 789              		.loc 1 108 25 view .LVU188
 790 009e 4B46     		mov	r3, r9
 791 00a0 B9F1000F 		cmp	r9, #0
 792 00a4 D7DA     		bge	.L27
 793              		.loc 1 108 25 view .LVU189
 794 00a6 09F10703 		add	r3, r9, #7
 795 00aa D4E7     		b	.L27
 796              	.L26:
 109:Core/Src/oled.cpp **** 				} else {
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]&= ~(1 << ((y+1) % 8));
 797              		.loc 1 110 6 is_stmt 1 view .LVU190
 798              		.loc 1 110 25 is_stmt 0 view .LVU191
 799 00ac 11EB0C03 		adds	r3, r1, ip
 800 00b0 1AD4     		bmi	.L34
 801              	.L29:
 802              		.loc 1 110 25 view .LVU192
 803 00b2 DB10     		asrs	r3, r3, #3
 804              		.loc 1 110 36 view .LVU193
 805 00b4 00EBC313 		add	r3, r0, r3, lsl #7
 806 00b8 1344     		add	r3, r3, r2
 807              		.loc 1 110 49 view .LVU194
 808 00ba 01F10109 		add	r9, r1, #1
 809              		.loc 1 110 53 view .LVU195
ARM GAS  /tmp/ccOvoWwk.s 			page 19


 810 00be D9F1000A 		rsbs	r10, r9, #0
 811 00c2 09F00709 		and	r9, r9, #7
 812 00c6 0AF0070A 		and	r10, r10, #7
 813 00ca 58BF     		it	pl
 814 00cc CAF10009 		rsbpl	r9, r10, #0
 815              		.loc 1 110 43 view .LVU196
 816 00d0 4FF0010A 		mov	r10, #1
 817 00d4 0AFA09FA 		lsl	r10, r10, r9
 818              		.loc 1 110 36 view .LVU197
 819 00d8 2344     		add	r3, r3, r4
 820 00da 93F80B90 		ldrb	r9, [r3, #11]	@ zero_extendqisi2
 821 00de 29EA0A09 		bic	r9, r9, r10
 822 00e2 83F80B90 		strb	r9, [r3, #11]
 823 00e6 CEE7     		b	.L28
 824              	.L34:
 825              		.loc 1 110 25 view .LVU198
 826 00e8 0733     		adds	r3, r3, #7
 827 00ea E2E7     		b	.L29
 828              	.L25:
 104:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 829              		.loc 1 104 3 is_stmt 1 discriminator 2 view .LVU199
 830 00ec 0CF1010C 		add	ip, ip, #1
 831              	.LVL63:
 832              	.L19:
 104:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 833              		.loc 1 104 17 discriminator 1 view .LVU200
 834 00f0 E645     		cmp	lr, ip
 835 00f2 08DD     		ble	.L24
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 836              		.loc 1 105 4 view .LVU201
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 837              		.loc 1 105 19 is_stmt 0 view .LVU202
 838 00f4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 839              		.loc 1 105 27 view .LVU203
 840 00f6 203A     		subs	r2, r2, #32
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 841              		.loc 1 105 51 view .LVU204
 842 00f8 02FB0EC2 		mla	r2, r2, lr, ip
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 843              		.loc 1 105 54 view .LVU205
 844 00fc 0A9B     		ldr	r3, [sp, #40]
 845 00fe 33F81280 		ldrh	r8, [r3, r2, lsl #1]
 846              	.LVL64:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 847              		.loc 1 106 4 is_stmt 1 view .LVU206
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 848              		.loc 1 106 11 is_stmt 0 view .LVU207
 849 0102 0022     		movs	r2, #0
 850 0104 C0E7     		b	.L30
 851              	.LVL65:
 852              	.L24:
 111:Core/Src/oled.cpp **** 
 112:Core/Src/oled.cpp **** 				}
 113:Core/Src/oled.cpp **** 			}
 114:Core/Src/oled.cpp **** 		}
 115:Core/Src/oled.cpp **** 		x=x+i-2;
ARM GAS  /tmp/ccOvoWwk.s 			page 20


 853              		.loc 1 115 3 is_stmt 1 view .LVU208
 854              		.loc 1 115 6 is_stmt 0 view .LVU209
 855 0106 6044     		add	r0, r0, ip
 856              	.LVL66:
 857              		.loc 1 115 6 view .LVU210
 858 0108 80B2     		uxth	r0, r0
 859              		.loc 1 115 4 view .LVU211
 860 010a 0238     		subs	r0, r0, #2
 861 010c 80B2     		uxth	r0, r0
 862              	.LVL67:
 116:Core/Src/oled.cpp **** 
 117:Core/Src/oled.cpp **** 
 118:Core/Src/oled.cpp **** 	
 119:Core/Src/oled.cpp **** 		string++;
 863              		.loc 1 119 3 is_stmt 1 view .LVU212
 864              		.loc 1 119 9 is_stmt 0 view .LVU213
 865 010e 0135     		adds	r5, r5, #1
 866              	.LVL68:
 120:Core/Src/oled.cpp **** 		strItr++;
 867              		.loc 1 120 3 is_stmt 1 view .LVU214
 868              		.loc 1 120 9 is_stmt 0 view .LVU215
 869 0110 0137     		adds	r7, r7, #1
 870              	.LVL69:
 871              		.loc 1 120 9 view .LVU216
 872 0112 FFB2     		uxtb	r7, r7
 873              	.LVL70:
 874              	.L31:
 875              		.loc 1 120 9 view .LVU217
 876              	.LBE4:
  91:Core/Src/oled.cpp **** 	{
 877              		.loc 1 91 2 is_stmt 1 view .LVU218
  91:Core/Src/oled.cpp **** 	{
 878              		.loc 1 91 14 view .LVU219
 879 0114 B742     		cmp	r7, r6
 880 0116 02D2     		bcs	.L17
 881              	.LBB5:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 882              		.loc 1 96 10 is_stmt 0 view .LVU220
 883 0118 4FF0000C 		mov	ip, #0
 884 011c 92E7     		b	.L23
 885              	.L17:
 886              	.LBE5:
 121:Core/Src/oled.cpp **** 	}
 122:Core/Src/oled.cpp **** }
 887              		.loc 1 122 1 view .LVU221
 888 011e BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 889              	.LCFI10:
 890              		.cfi_restore 14
 891              		.cfi_restore 10
 892              		.cfi_restore 9
 893              		.cfi_restore 8
 894              		.cfi_restore 7
 895              		.cfi_restore 6
 896              		.cfi_restore 5
 897              		.cfi_restore 4
 898              		.cfi_def_cfa_offset 8
 899              	.LVL71:
ARM GAS  /tmp/ccOvoWwk.s 			page 21


 900              		.loc 1 122 1 view .LVU222
 901 0122 02B0     		add	sp, sp, #8
 902              	.LCFI11:
 903              		.cfi_def_cfa_offset 0
 904 0124 7047     		bx	lr
 905              		.cfi_endproc
 906              	.LFE138:
 907              		.cantunwind
 908              		.fnend
 910              		.global	__aeabi_f2d
 911              		.section	.rodata._ZN4oled19oled_update_batteryEf.str1.4,"aMS",%progbits,1
 912              		.align	2
 913              	.LC0:
 914 0000 252E3166 		.ascii	"%.1fv\000"
 914      7600
 915              		.section	.text._ZN4oled19oled_update_batteryEf,"ax",%progbits
 916              		.align	1
 917              		.global	_ZN4oled19oled_update_batteryEf
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv4-sp-d16
 923              	_ZN4oled19oled_update_batteryEf:
 924              		.fnstart
 925              	.LVL72:
 926              	.LFB139:
 123:Core/Src/oled.cpp **** void oled::oled_update_battery(float voltage)
 124:Core/Src/oled.cpp **** {
 927              		.loc 1 124 1 is_stmt 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 8
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              		.loc 1 124 1 is_stmt 0 view .LVU224
 932 0000 10B5     		push	{r4, lr}
 933              	.LCFI12:
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937 0002 86B0     		sub	sp, sp, #24
 938              	.LCFI13:
 939              		.cfi_def_cfa_offset 32
 940 0004 0446     		mov	r4, r0
 941 0006 10EE100A 		vmov	r0, s0
 942              	.LVL73:
 125:Core/Src/oled.cpp **** char volt [4];
 943              		.loc 1 125 1 is_stmt 1 view .LVU225
 126:Core/Src/oled.cpp **** sprintf(volt,"%.1fv",voltage);
 944              		.loc 1 126 1 view .LVU226
 945              		.loc 1 126 8 is_stmt 0 view .LVU227
 946 000a FFF7FEFF 		bl	__aeabi_f2d
 947              	.LVL74:
 948              		.loc 1 126 8 view .LVU228
 949 000e 0246     		mov	r2, r0
 950 0010 0B46     		mov	r3, r1
 951 0012 0949     		ldr	r1, .L37
 952 0014 05A8     		add	r0, sp, #20
 953 0016 FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccOvoWwk.s 			page 22


 954              	.LVL75:
 127:Core/Src/oled.cpp **** oled_print(volt,4,Font_7x10,90,0);
 955              		.loc 1 127 1 is_stmt 1 view .LVU229
 956              		.loc 1 127 11 is_stmt 0 view .LVU230
 957 001a 084B     		ldr	r3, .L37+4
 958 001c 0022     		movs	r2, #0
 959 001e 0292     		str	r2, [sp, #8]
 960 0020 5A22     		movs	r2, #90
 961 0022 0192     		str	r2, [sp, #4]
 962 0024 5A68     		ldr	r2, [r3, #4]
 963 0026 0092     		str	r2, [sp]
 964 0028 1B68     		ldr	r3, [r3]
 965 002a 0422     		movs	r2, #4
 966 002c 05A9     		add	r1, sp, #20
 967 002e 2046     		mov	r0, r4
 968 0030 FFF7FEFF 		bl	_ZN4oled10oled_printEPch9FontDef_ttt
 969              	.LVL76:
 128:Core/Src/oled.cpp **** }...
 970              		.loc 1 128 1 view .LVU231
 971 0034 06B0     		add	sp, sp, #24
 972              	.LCFI14:
 973              		.cfi_def_cfa_offset 8
 974              		@ sp needed
 975 0036 10BD     		pop	{r4, pc}
 976              	.LVL77:
 977              	.L38:
 978              		.loc 1 128 1 view .LVU232
 979              		.align	2
 980              	.L37:
 981 0038 00000000 		.word	.LC0
 982 003c 00000000 		.word	Font_7x10
 983              		.cfi_endproc
 984              	.LFE139:
 985              		.cantunwind
 986              		.fnend
 988              		.text
 989              	.Letext0:
 990              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 991              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 992              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 993              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 994              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 995              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 996              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 997              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 998              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 999              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1000              		.file 12 "/usr/include/newlib/sys/_types.h"
 1001              		.file 13 "/usr/include/newlib/sys/reent.h"
 1002              		.file 14 "/usr/include/newlib/sys/lock.h"
 1003              		.file 15 "Core/Inc/fonts.h"
 1004              		.file 16 "Core/Inc/oled.h"
 1005              		.file 17 "/usr/include/newlib/stdio.h"
 1006              		.file 18 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccOvoWwk.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.cpp
     /tmp/ccOvoWwk.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccOvoWwk.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/ccOvoWwk.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/ccOvoWwk.s:66     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/ccOvoWwk.s:73     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/ccOvoWwk.s:131    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/ccOvoWwk.s:138    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/ccOvoWwk.s:185    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/ccOvoWwk.s:192    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/ccOvoWwk.s:552    .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccOvoWwk.s:559    .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
.ARM.exidx.text._ZN4oled12oled_refreshEv:0000000000000000 $d
     /tmp/ccOvoWwk.s:655    .text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 $t
     /tmp/ccOvoWwk.s:662    .text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPch9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 $d
     /tmp/ccOvoWwk.s:912    .rodata._ZN4oled19oled_update_batteryEf.str1.4:0000000000000000 $d
     /tmp/ccOvoWwk.s:916    .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
     /tmp/ccOvoWwk.s:923    .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/ccOvoWwk.s:981    .text._ZN4oled19oled_update_batteryEf:0000000000000038 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Master_Transmit
__aeabi_unwind_cpp_pr0
HAL_I2C_IsDeviceReady
HAL_TIM_Base_Start_IT
__aeabi_f2d
sprintf
Font_7x10
