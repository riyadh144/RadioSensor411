ARM GAS  /tmp/ccRpnWtg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB132:
  30              		.file 1 "Core/Src/oled.cpp"
   1:Core/Src/oled.cpp **** #include "oled.h"
   2:Core/Src/oled.cpp **** 
   3:Core/Src/oled.cpp **** #define OLED_RIGHT_HORIZONTAL_SCROLL              0x26
   4:Core/Src/oled.cpp **** #define OLED_LEFT_HORIZONTAL_SCROLL               0x27
   5:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
   6:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A
   7:Core/Src/oled.cpp **** #define OLED_DEACTIVATE_SCROLL                    0x2E // Stop scroll
   8:Core/Src/oled.cpp **** #define OLED_ACTIVATE_SCROLL                      0x2F // Start scroll
   9:Core/Src/oled.cpp **** #define OLED_SET_VERTICAL_SCROLL_AREA             0xA3 // Set scroll range
  10:Core/Src/oled.cpp **** 
  11:Core/Src/oled.cpp **** #define OLED_NORMALDISPLAY       0xA6
  12:Core/Src/oled.cpp **** #define OLED_INVERTDISPLAY       0xA7
  13:Core/Src/oled.cpp **** 
  14:Core/Src/oled.cpp **** 
  15:Core/Src/oled.cpp **** #define OLED_WRITECOMMAND(command)      comm[0]=COMMAND; comm[1]=(command); oled_write(comm,2)
  16:Core/Src/oled.cpp **** 
  17:Core/Src/oled.cpp **** oled::oled(I2C_HandleTypeDef *hi2c, uint8_t address,TIM_HandleTypeDef *htim)
  31              		.loc 1 17 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 17 1 is_stmt 0 view .LVU1
  37 0000 30B4     		push	{r4, r5}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 5, -4
ARM GAS  /tmp/ccRpnWtg.s 			page 2


  42              	.LBB2:
  43              		.loc 1 17 76 view .LVU2
  44 0002 0025     		movs	r5, #0
  45 0004 8581     		strh	r5, [r0, #12]	@ movhi
  46 0006 C581     		strh	r5, [r0, #14]	@ movhi
  47 0008 0125     		movs	r5, #1
  48 000a 0574     		strb	r5, [r0, #16]
  18:Core/Src/oled.cpp **** {
  19:Core/Src/oled.cpp ****     this->hi2c=hi2c;
  49              		.loc 1 19 5 is_stmt 1 view .LVU3
  50              		.loc 1 19 15 is_stmt 0 view .LVU4
  51 000c 0160     		str	r1, [r0]
  20:Core/Src/oled.cpp **** 	this->address=address;
  52              		.loc 1 20 2 is_stmt 1 view .LVU5
  53              		.loc 1 20 15 is_stmt 0 view .LVU6
  54 000e 0272     		strb	r2, [r0, #8]
  21:Core/Src/oled.cpp **** 	this->htim=htim;
  55              		.loc 1 21 2 is_stmt 1 view .LVU7
  56              		.loc 1 21 12 is_stmt 0 view .LVU8
  57 0010 4360     		str	r3, [r0, #4]
  58              	.LBE2:
  22:Core/Src/oled.cpp **** }
  59              		.loc 1 22 1 view .LVU9
  60 0012 30BC     		pop	{r4, r5}
  61              	.LCFI1:
  62              		.cfi_restore 5
  63              		.cfi_restore 4
  64              		.cfi_def_cfa_offset 0
  65 0014 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE132:
  68              		.cantunwind
  69              		.fnend
  71              		.global	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  72              		.thumb_set _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,_ZN4oledC2EP17I2C_HandleTypeDefhP1
  73              		.section	.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE,"ax",%progbits
  74              		.align	1
  75              		.global	_ZN4oled9oled_fillENS_12OLED_COLOR_tE
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv4-sp-d16
  81              	_ZN4oled9oled_fillENS_12OLED_COLOR_tE:
  82              		.fnstart
  83              	.LVL1:
  84              	.LFB135:
  23:Core/Src/oled.cpp **** void oled::init(void)
  24:Core/Src/oled.cpp **** {
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
  26:Core/Src/oled.cpp **** 	}
  27:Core/Src/oled.cpp ****     
  28:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(0xAE); //display off
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
ARM GAS  /tmp/ccRpnWtg.s 			page 3


  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
  56:Core/Src/oled.cpp **** 
  57:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(OLED_DEACTIVATE_SCROLL); //Deactivate scroll
  58:Core/Src/oled.cpp **** 
  59:Core/Src/oled.cpp ****     HAL_TIM_Base_Start_IT(htim);
  60:Core/Src/oled.cpp **** 
  61:Core/Src/oled.cpp **** }
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
  85              		.loc 1 62 42 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 62 42 is_stmt 0 view .LVU11
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
  97 0002 0646     		mov	r6, r0
  98 0004 0D46     		mov	r5, r1
  63:Core/Src/oled.cpp **** 	/* Set memory */
  64:Core/Src/oled.cpp ****     for (uint8_t m = 0; m < 8; m++) {
  99              		.loc 1 64 5 is_stmt 1 view .LVU12
 100              	.LVL2:
 101              	.LBB3:
 102              		.loc 1 64 18 is_stmt 0 view .LVU13
 103 0006 0024     		movs	r4, #0
 104 0008 09E0     		b	.L5
 105              	.LVL3:
 106              	.L7:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 107              		.loc 1 65 2 is_stmt 1 discriminator 2 view .LVU14
 108              		.loc 1 65 24 is_stmt 0 discriminator 2 view .LVU15
 109 000a E001     		lsls	r0, r4, #7
ARM GAS  /tmp/ccRpnWtg.s 			page 4


 110              		.loc 1 65 9 discriminator 2 view .LVU16
 111 000c 1130     		adds	r0, r0, #17
 112 000e 3044     		add	r0, r0, r6
 113              		.loc 1 65 8 discriminator 2 view .LVU17
 114 0010 8022     		movs	r2, #128
 115 0012 2946     		mov	r1, r5
 116 0014 0130     		adds	r0, r0, #1
 117 0016 FFF7FEFF 		bl	memset
 118              	.LVL4:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 119              		.loc 1 64 5 is_stmt 1 discriminator 2 view .LVU18
 120 001a 0134     		adds	r4, r4, #1
 121              	.LVL5:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 122              		.loc 1 64 5 is_stmt 0 discriminator 2 view .LVU19
 123 001c E4B2     		uxtb	r4, r4
 124              	.LVL6:
 125              	.L5:
  64:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 126              		.loc 1 64 27 is_stmt 1 discriminator 3 view .LVU20
 127 001e 072C     		cmp	r4, #7
 128 0020 F3D9     		bls	.L7
 129              	.LBE3:
  66:Core/Src/oled.cpp ****     }
  67:Core/Src/oled.cpp **** }
 130              		.loc 1 67 1 is_stmt 0 view .LVU21
 131 0022 70BD     		pop	{r4, r5, r6, pc}
 132              		.loc 1 67 1 view .LVU22
 133              		.cfi_endproc
 134              	.LFE135:
 135              		.cantunwind
 136              		.fnend
 138              		.section	.text._ZN4oled10oled_writeEPht,"ax",%progbits
 139              		.align	1
 140              		.global	_ZN4oled10oled_writeEPht
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	_ZN4oled10oled_writeEPht:
 147              		.fnstart
 148              	.LVL7:
 149              	.LFB136:
  68:Core/Src/oled.cpp **** uint8_t oled::oled_write(uint8_t* data, uint16_t count)
  69:Core/Src/oled.cpp **** {
 150              		.loc 1 69 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 69 1 is_stmt 0 view .LVU24
 155 0000 00B5     		push	{lr}
 156              		.save {lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 14, -4
 160              		.pad #12
 161 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccRpnWtg.s 			page 5


 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 16
 164 0004 1346     		mov	r3, r2
  70:Core/Src/oled.cpp **** 	HAL_I2C_Master_Transmit(hi2c, address, data, count, 10);
 165              		.loc 1 70 2 is_stmt 1 view .LVU25
 166              		.loc 1 70 25 is_stmt 0 view .LVU26
 167 0006 0A22     		movs	r2, #10
 168              	.LVL8:
 169              		.loc 1 70 25 view .LVU27
 170 0008 0092     		str	r2, [sp]
 171 000a 0A46     		mov	r2, r1
 172 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 173              	.LVL9:
 174              		.loc 1 70 25 view .LVU28
 175 000e 0068     		ldr	r0, [r0]
 176              	.LVL10:
 177              		.loc 1 70 25 view .LVU29
 178 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 179              	.LVL11:
  71:Core/Src/oled.cpp ****     return 1;
 180              		.loc 1 71 5 is_stmt 1 view .LVU30
  72:Core/Src/oled.cpp **** }
 181              		.loc 1 72 1 is_stmt 0 view .LVU31
 182 0014 0120     		movs	r0, #1
 183 0016 03B0     		add	sp, sp, #12
 184              	.LCFI5:
 185              		.cfi_def_cfa_offset 4
 186              		@ sp needed
 187 0018 5DF804FB 		ldr	pc, [sp], #4
 188              		.cfi_endproc
 189              	.LFE136:
 190              		.fnend
 192              		.section	.text._ZN4oled4initEv,"ax",%progbits
 193              		.align	1
 194              		.global	_ZN4oled4initEv
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	_ZN4oled4initEv:
 201              		.fnstart
 202              	.LVL12:
 203              	.LFB134:
  24:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 204              		.loc 1 24 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 208              		.loc 1 24 1 is_stmt 0 view .LVU33
 209 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 210              		.save {r4, r5, r6, r7, r8, lr}
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 24
 213              		.cfi_offset 4, -24
 214              		.cfi_offset 5, -20
 215              		.cfi_offset 6, -16
ARM GAS  /tmp/ccRpnWtg.s 			page 6


 216              		.cfi_offset 7, -12
 217              		.cfi_offset 8, -8
 218              		.cfi_offset 14, -4
 219 0004 0446     		mov	r4, r0
  25:Core/Src/oled.cpp **** 	}
 220              		.loc 1 25 2 is_stmt 1 view .LVU34
  25:Core/Src/oled.cpp **** 	}
 221              		.loc 1 25 27 is_stmt 0 view .LVU35
 222 0006 44F62063 		movw	r3, #20000
 223 000a 0122     		movs	r2, #1
 224 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 225 000e 0068     		ldr	r0, [r0]
 226              	.LVL13:
  25:Core/Src/oled.cpp **** 	}
 227              		.loc 1 25 27 view .LVU36
 228 0010 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 229              	.LVL14:
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 230              		.loc 1 28 5 is_stmt 1 view .LVU37
 231 0014 0025     		movs	r5, #0
 232 0016 6572     		strb	r5, [r4, #9]
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 233              		.loc 1 28 5 view .LVU38
 234 0018 AE23     		movs	r3, #174
 235 001a A372     		strb	r3, [r4, #10]
  28:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 236              		.loc 1 28 5 view .LVU39
 237 001c 04F10906 		add	r6, r4, #9
 238 0020 0222     		movs	r2, #2
 239 0022 3146     		mov	r1, r6
 240 0024 2046     		mov	r0, r4
 241 0026 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 242              	.LVL15:
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 243              		.loc 1 29 2 view .LVU40
 244 002a 6572     		strb	r5, [r4, #9]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 245              		.loc 1 29 2 view .LVU41
 246 002c 2027     		movs	r7, #32
 247 002e A772     		strb	r7, [r4, #10]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 248              		.loc 1 29 2 view .LVU42
 249 0030 0222     		movs	r2, #2
 250 0032 3146     		mov	r1, r6
 251 0034 2046     		mov	r0, r4
 252 0036 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 253              	.LVL16:
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 254              		.loc 1 30 2 view .LVU43
 255 003a 6572     		strb	r5, [r4, #9]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 256              		.loc 1 30 2 view .LVU44
 257 003c 4FF01008 		mov	r8, #16
 258 0040 84F80A80 		strb	r8, [r4, #10]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 259              		.loc 1 30 2 view .LVU45
 260 0044 0222     		movs	r2, #2
ARM GAS  /tmp/ccRpnWtg.s 			page 7


 261 0046 3146     		mov	r1, r6
 262 0048 2046     		mov	r0, r4
 263 004a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 264              	.LVL17:
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 265              		.loc 1 31 2 view .LVU46
 266 004e 6572     		strb	r5, [r4, #9]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 267              		.loc 1 31 2 view .LVU47
 268 0050 B023     		movs	r3, #176
 269 0052 A372     		strb	r3, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 270              		.loc 1 31 2 view .LVU48
 271 0054 0222     		movs	r2, #2
 272 0056 3146     		mov	r1, r6
 273 0058 2046     		mov	r0, r4
 274 005a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 275              	.LVL18:
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 276              		.loc 1 32 2 view .LVU49
 277 005e 6572     		strb	r5, [r4, #9]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 278              		.loc 1 32 2 view .LVU50
 279 0060 C823     		movs	r3, #200
 280 0062 A372     		strb	r3, [r4, #10]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 281              		.loc 1 32 2 view .LVU51
 282 0064 0222     		movs	r2, #2
 283 0066 3146     		mov	r1, r6
 284 0068 2046     		mov	r0, r4
 285 006a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 286              	.LVL19:
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 287              		.loc 1 33 2 view .LVU52
 288 006e 6572     		strb	r5, [r4, #9]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 289              		.loc 1 33 2 view .LVU53
 290 0070 A572     		strb	r5, [r4, #10]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 291              		.loc 1 33 2 view .LVU54
 292 0072 0222     		movs	r2, #2
 293 0074 3146     		mov	r1, r6
 294 0076 2046     		mov	r0, r4
 295 0078 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 296              	.LVL20:
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 297              		.loc 1 34 2 view .LVU55
 298 007c 6572     		strb	r5, [r4, #9]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 299              		.loc 1 34 2 view .LVU56
 300 007e 84F80A80 		strb	r8, [r4, #10]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 301              		.loc 1 34 2 view .LVU57
 302 0082 0222     		movs	r2, #2
 303 0084 3146     		mov	r1, r6
 304 0086 2046     		mov	r0, r4
 305 0088 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
ARM GAS  /tmp/ccRpnWtg.s 			page 8


 306              	.LVL21:
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 307              		.loc 1 35 2 view .LVU58
 308 008c 6572     		strb	r5, [r4, #9]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 309              		.loc 1 35 2 view .LVU59
 310 008e 4023     		movs	r3, #64
 311 0090 A372     		strb	r3, [r4, #10]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 312              		.loc 1 35 2 view .LVU60
 313 0092 0222     		movs	r2, #2
 314 0094 3146     		mov	r1, r6
 315 0096 2046     		mov	r0, r4
 316 0098 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 317              	.LVL22:
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 318              		.loc 1 36 2 view .LVU61
 319 009c 6572     		strb	r5, [r4, #9]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 320              		.loc 1 36 2 view .LVU62
 321 009e 8123     		movs	r3, #129
 322 00a0 A372     		strb	r3, [r4, #10]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 323              		.loc 1 36 2 view .LVU63
 324 00a2 0222     		movs	r2, #2
 325 00a4 3146     		mov	r1, r6
 326 00a6 2046     		mov	r0, r4
 327 00a8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 328              	.LVL23:
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 329              		.loc 1 37 2 view .LVU64
 330 00ac 6572     		strb	r5, [r4, #9]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 331              		.loc 1 37 2 view .LVU65
 332 00ae FF23     		movs	r3, #255
 333 00b0 A372     		strb	r3, [r4, #10]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 334              		.loc 1 37 2 view .LVU66
 335 00b2 0222     		movs	r2, #2
 336 00b4 3146     		mov	r1, r6
 337 00b6 2046     		mov	r0, r4
 338 00b8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 339              	.LVL24:
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 340              		.loc 1 38 2 view .LVU67
 341 00bc 6572     		strb	r5, [r4, #9]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 342              		.loc 1 38 2 view .LVU68
 343 00be A123     		movs	r3, #161
 344 00c0 A372     		strb	r3, [r4, #10]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 345              		.loc 1 38 2 view .LVU69
 346 00c2 0222     		movs	r2, #2
 347 00c4 3146     		mov	r1, r6
 348 00c6 2046     		mov	r0, r4
 349 00c8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 350              	.LVL25:
ARM GAS  /tmp/ccRpnWtg.s 			page 9


  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 351              		.loc 1 39 2 view .LVU70
 352 00cc 6572     		strb	r5, [r4, #9]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 353              		.loc 1 39 2 view .LVU71
 354 00ce A623     		movs	r3, #166
 355 00d0 A372     		strb	r3, [r4, #10]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 356              		.loc 1 39 2 view .LVU72
 357 00d2 0222     		movs	r2, #2
 358 00d4 3146     		mov	r1, r6
 359 00d6 2046     		mov	r0, r4
 360 00d8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 361              	.LVL26:
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 362              		.loc 1 40 2 view .LVU73
 363 00dc 6572     		strb	r5, [r4, #9]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 364              		.loc 1 40 2 view .LVU74
 365 00de A823     		movs	r3, #168
 366 00e0 A372     		strb	r3, [r4, #10]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 367              		.loc 1 40 2 view .LVU75
 368 00e2 0222     		movs	r2, #2
 369 00e4 3146     		mov	r1, r6
 370 00e6 2046     		mov	r0, r4
 371 00e8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 372              	.LVL27:
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 373              		.loc 1 41 2 view .LVU76
 374 00ec 6572     		strb	r5, [r4, #9]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 375              		.loc 1 41 2 view .LVU77
 376 00ee 3F23     		movs	r3, #63
 377 00f0 A372     		strb	r3, [r4, #10]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 378              		.loc 1 41 2 view .LVU78
 379 00f2 0222     		movs	r2, #2
 380 00f4 3146     		mov	r1, r6
 381 00f6 2046     		mov	r0, r4
 382 00f8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 383              	.LVL28:
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 384              		.loc 1 42 2 view .LVU79
 385 00fc 6572     		strb	r5, [r4, #9]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 386              		.loc 1 42 2 view .LVU80
 387 00fe A423     		movs	r3, #164
 388 0100 A372     		strb	r3, [r4, #10]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 389              		.loc 1 42 2 view .LVU81
 390 0102 0222     		movs	r2, #2
 391 0104 3146     		mov	r1, r6
 392 0106 2046     		mov	r0, r4
 393 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 394              	.LVL29:
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
ARM GAS  /tmp/ccRpnWtg.s 			page 10


 395              		.loc 1 43 2 view .LVU82
 396 010c 6572     		strb	r5, [r4, #9]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 397              		.loc 1 43 2 view .LVU83
 398 010e D323     		movs	r3, #211
 399 0110 A372     		strb	r3, [r4, #10]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 400              		.loc 1 43 2 view .LVU84
 401 0112 0222     		movs	r2, #2
 402 0114 3146     		mov	r1, r6
 403 0116 2046     		mov	r0, r4
 404 0118 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 405              	.LVL30:
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 406              		.loc 1 44 2 view .LVU85
 407 011c 6572     		strb	r5, [r4, #9]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 408              		.loc 1 44 2 view .LVU86
 409 011e A572     		strb	r5, [r4, #10]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 410              		.loc 1 44 2 view .LVU87
 411 0120 0222     		movs	r2, #2
 412 0122 3146     		mov	r1, r6
 413 0124 2046     		mov	r0, r4
 414 0126 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 415              	.LVL31:
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 416              		.loc 1 45 2 view .LVU88
 417 012a 6572     		strb	r5, [r4, #9]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 418              		.loc 1 45 2 view .LVU89
 419 012c D523     		movs	r3, #213
 420 012e A372     		strb	r3, [r4, #10]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 421              		.loc 1 45 2 view .LVU90
 422 0130 0222     		movs	r2, #2
 423 0132 3146     		mov	r1, r6
 424 0134 2046     		mov	r0, r4
 425 0136 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 426              	.LVL32:
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 427              		.loc 1 46 2 view .LVU91
 428 013a 6572     		strb	r5, [r4, #9]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 429              		.loc 1 46 2 view .LVU92
 430 013c F023     		movs	r3, #240
 431 013e A372     		strb	r3, [r4, #10]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 432              		.loc 1 46 2 view .LVU93
 433 0140 0222     		movs	r2, #2
 434 0142 3146     		mov	r1, r6
 435 0144 2046     		mov	r0, r4
 436 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 437              	.LVL33:
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 438              		.loc 1 47 2 view .LVU94
 439 014a 6572     		strb	r5, [r4, #9]
ARM GAS  /tmp/ccRpnWtg.s 			page 11


  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 440              		.loc 1 47 2 view .LVU95
 441 014c D923     		movs	r3, #217
 442 014e A372     		strb	r3, [r4, #10]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 443              		.loc 1 47 2 view .LVU96
 444 0150 0222     		movs	r2, #2
 445 0152 3146     		mov	r1, r6
 446 0154 2046     		mov	r0, r4
 447 0156 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 448              	.LVL34:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 449              		.loc 1 48 2 view .LVU97
 450 015a 6572     		strb	r5, [r4, #9]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 451              		.loc 1 48 2 view .LVU98
 452 015c 2223     		movs	r3, #34
 453 015e A372     		strb	r3, [r4, #10]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 454              		.loc 1 48 2 view .LVU99
 455 0160 0222     		movs	r2, #2
 456 0162 3146     		mov	r1, r6
 457 0164 2046     		mov	r0, r4
 458 0166 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 459              	.LVL35:
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 460              		.loc 1 49 2 view .LVU100
 461 016a 6572     		strb	r5, [r4, #9]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 462              		.loc 1 49 2 view .LVU101
 463 016c DA23     		movs	r3, #218
 464 016e A372     		strb	r3, [r4, #10]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 465              		.loc 1 49 2 view .LVU102
 466 0170 0222     		movs	r2, #2
 467 0172 3146     		mov	r1, r6
 468 0174 2046     		mov	r0, r4
 469 0176 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 470              	.LVL36:
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 471              		.loc 1 50 2 view .LVU103
 472 017a 6572     		strb	r5, [r4, #9]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 473              		.loc 1 50 2 view .LVU104
 474 017c 1223     		movs	r3, #18
 475 017e A372     		strb	r3, [r4, #10]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 476              		.loc 1 50 2 view .LVU105
 477 0180 0222     		movs	r2, #2
 478 0182 3146     		mov	r1, r6
 479 0184 2046     		mov	r0, r4
 480 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 481              	.LVL37:
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 482              		.loc 1 51 2 view .LVU106
 483 018a 6572     		strb	r5, [r4, #9]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
ARM GAS  /tmp/ccRpnWtg.s 			page 12


 484              		.loc 1 51 2 view .LVU107
 485 018c DB23     		movs	r3, #219
 486 018e A372     		strb	r3, [r4, #10]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 487              		.loc 1 51 2 view .LVU108
 488 0190 0222     		movs	r2, #2
 489 0192 3146     		mov	r1, r6
 490 0194 2046     		mov	r0, r4
 491 0196 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 492              	.LVL38:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 493              		.loc 1 52 2 view .LVU109
 494 019a 6572     		strb	r5, [r4, #9]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 495              		.loc 1 52 2 view .LVU110
 496 019c A772     		strb	r7, [r4, #10]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 497              		.loc 1 52 2 view .LVU111
 498 019e 0222     		movs	r2, #2
 499 01a0 3146     		mov	r1, r6
 500 01a2 2046     		mov	r0, r4
 501 01a4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 502              	.LVL39:
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 503              		.loc 1 53 2 view .LVU112
 504 01a8 6572     		strb	r5, [r4, #9]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 505              		.loc 1 53 2 view .LVU113
 506 01aa 8D23     		movs	r3, #141
 507 01ac A372     		strb	r3, [r4, #10]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 508              		.loc 1 53 2 view .LVU114
 509 01ae 0222     		movs	r2, #2
 510 01b0 3146     		mov	r1, r6
 511 01b2 2046     		mov	r0, r4
 512 01b4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 513              	.LVL40:
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 514              		.loc 1 54 2 view .LVU115
 515 01b8 6572     		strb	r5, [r4, #9]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 516              		.loc 1 54 2 view .LVU116
 517 01ba 1423     		movs	r3, #20
 518 01bc A372     		strb	r3, [r4, #10]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 519              		.loc 1 54 2 view .LVU117
 520 01be 0222     		movs	r2, #2
 521 01c0 3146     		mov	r1, r6
 522 01c2 2046     		mov	r0, r4
 523 01c4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 524              	.LVL41:
  55:Core/Src/oled.cpp **** 
 525              		.loc 1 55 2 view .LVU118
 526 01c8 6572     		strb	r5, [r4, #9]
  55:Core/Src/oled.cpp **** 
 527              		.loc 1 55 2 view .LVU119
 528 01ca AF23     		movs	r3, #175
ARM GAS  /tmp/ccRpnWtg.s 			page 13


 529 01cc A372     		strb	r3, [r4, #10]
  55:Core/Src/oled.cpp **** 
 530              		.loc 1 55 2 view .LVU120
 531 01ce 0222     		movs	r2, #2
 532 01d0 3146     		mov	r1, r6
 533 01d2 2046     		mov	r0, r4
 534 01d4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 535              	.LVL42:
  57:Core/Src/oled.cpp **** 
 536              		.loc 1 57 5 view .LVU121
 537 01d8 6572     		strb	r5, [r4, #9]
  57:Core/Src/oled.cpp **** 
 538              		.loc 1 57 5 view .LVU122
 539 01da 2E23     		movs	r3, #46
 540 01dc A372     		strb	r3, [r4, #10]
  57:Core/Src/oled.cpp **** 
 541              		.loc 1 57 5 view .LVU123
 542 01de 0222     		movs	r2, #2
 543 01e0 3146     		mov	r1, r6
 544 01e2 2046     		mov	r0, r4
 545 01e4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 546              	.LVL43:
  59:Core/Src/oled.cpp **** 
 547              		.loc 1 59 5 view .LVU124
  59:Core/Src/oled.cpp **** 
 548              		.loc 1 59 26 is_stmt 0 view .LVU125
 549 01e8 6068     		ldr	r0, [r4, #4]
 550 01ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 551              	.LVL44:
  61:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 552              		.loc 1 61 1 view .LVU126
 553 01ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  61:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 554              		.loc 1 61 1 view .LVU127
 555              		.cfi_endproc
 556              	.LFE134:
 557              		.fnend
 559              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 560              		.align	1
 561              		.global	_ZN4oled12oled_refreshEv
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv4-sp-d16
 567              	_ZN4oled12oled_refreshEv:
 568              		.fnstart
 569              	.LVL45:
 570              	.LFB137:
  73:Core/Src/oled.cpp **** void oled::oled_refresh(void)
  74:Core/Src/oled.cpp **** {
 571              		.loc 1 74 1 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		.loc 1 74 1 is_stmt 0 view .LVU129
 576 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 577              		.save {r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccRpnWtg.s 			page 14


 578              	.LCFI7:
 579              		.cfi_def_cfa_offset 24
 580              		.cfi_offset 3, -24
 581              		.cfi_offset 4, -20
 582              		.cfi_offset 5, -16
 583              		.cfi_offset 6, -12
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 0446     		mov	r4, r0
  75:Core/Src/oled.cpp **** 	uint8_t m;
 587              		.loc 1 75 2 is_stmt 1 view .LVU130
  76:Core/Src/oled.cpp **** 	
  77:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 588              		.loc 1 77 2 view .LVU131
 589              	.LVL46:
 590              		.loc 1 77 9 is_stmt 0 view .LVU132
 591 0004 0025     		movs	r5, #0
 592 0006 28E0     		b	.L14
 593              	.LVL47:
 594              	.L16:
  78:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 595              		.loc 1 78 3 is_stmt 1 discriminator 2 view .LVU133
 596 0008 0027     		movs	r7, #0
 597 000a 6772     		strb	r7, [r4, #9]
 598              		.loc 1 78 3 discriminator 2 view .LVU134
 599 000c A5F15003 		sub	r3, r5, #80
 600 0010 A372     		strb	r3, [r4, #10]
 601              		.loc 1 78 3 discriminator 2 view .LVU135
 602 0012 04F10906 		add	r6, r4, #9
 603 0016 0222     		movs	r2, #2
 604 0018 3146     		mov	r1, r6
 605 001a 2046     		mov	r0, r4
 606 001c FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 607              	.LVL48:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 608              		.loc 1 79 3 discriminator 2 view .LVU136
 609 0020 6772     		strb	r7, [r4, #9]
 610              		.loc 1 79 3 discriminator 2 view .LVU137
 611 0022 A772     		strb	r7, [r4, #10]
 612              		.loc 1 79 3 discriminator 2 view .LVU138
 613 0024 0222     		movs	r2, #2
 614 0026 3146     		mov	r1, r6
 615 0028 2046     		mov	r0, r4
 616 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 617              	.LVL49:
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 618              		.loc 1 80 3 discriminator 2 view .LVU139
 619 002e 6772     		strb	r7, [r4, #9]
 620              		.loc 1 80 3 discriminator 2 view .LVU140
 621 0030 1023     		movs	r3, #16
 622 0032 A372     		strb	r3, [r4, #10]
 623              		.loc 1 80 3 discriminator 2 view .LVU141
 624 0034 0222     		movs	r2, #2
 625 0036 3146     		mov	r1, r6
 626 0038 2046     		mov	r0, r4
 627 003a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 628              	.LVL50:
ARM GAS  /tmp/ccRpnWtg.s 			page 15


  81:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 629              		.loc 1 81 9 discriminator 2 view .LVU142
 630              		.loc 1 81 23 is_stmt 0 discriminator 2 view .LVU143
 631 003e E901     		lsls	r1, r5, #7
 632              		.loc 1 81 27 discriminator 2 view .LVU144
 633 0040 04EBC513 		add	r3, r4, r5, lsl #7
 634 0044 4022     		movs	r2, #64
 635 0046 5A74     		strb	r2, [r3, #17]
  82:Core/Src/oled.cpp **** 		/* Write multi data */
  83:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 636              		.loc 1 83 3 is_stmt 1 discriminator 2 view .LVU145
 637              		.loc 1 83 13 is_stmt 0 discriminator 2 view .LVU146
 638 0048 1031     		adds	r1, r1, #16
 639 004a 2144     		add	r1, r1, r4
 640 004c 8122     		movs	r2, #129
 641 004e 0131     		adds	r1, r1, #1
 642 0050 2046     		mov	r0, r4
 643 0052 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 644              	.LVL51:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 645              		.loc 1 77 2 is_stmt 1 discriminator 2 view .LVU147
 646 0056 0135     		adds	r5, r5, #1
 647              	.LVL52:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 648              		.loc 1 77 2 is_stmt 0 discriminator 2 view .LVU148
 649 0058 EDB2     		uxtb	r5, r5
 650              	.LVL53:
 651              	.L14:
  77:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 652              		.loc 1 77 16 is_stmt 1 discriminator 3 view .LVU149
 653 005a 072D     		cmp	r5, #7
 654 005c D4D9     		bls	.L16
  84:Core/Src/oled.cpp **** 	}
  85:Core/Src/oled.cpp **** }
 655              		.loc 1 85 1 is_stmt 0 view .LVU150
 656 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 657              		.loc 1 85 1 view .LVU151
 658              		.cfi_endproc
 659              	.LFE137:
 660              		.fnend
 662              		.section	.text._ZN4oled10oled_printEPch9FontDef_ttt,"ax",%progbits
 663              		.align	1
 664              		.global	_ZN4oled10oled_printEPch9FontDef_ttt
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	_ZN4oled10oled_printEPch9FontDef_ttt:
 671              		.fnstart
 672              	.LVL54:
 673              	.LFB138:
  86:Core/Src/oled.cpp **** 
  87:Core/Src/oled.cpp **** void oled::oled_print(char* string, uint8_t count, FontDef_t size, uint16_t x , uint16_t y)
  88:Core/Src/oled.cpp **** {	
 674              		.loc 1 88 1 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 20, pretend = 8, frame = 0
ARM GAS  /tmp/ccRpnWtg.s 			page 16


 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		.loc 1 88 1 is_stmt 0 view .LVU153
 679 0000 82B0     		sub	sp, sp, #8
 680              	.LCFI8:
 681              		.cfi_def_cfa_offset 8
 682 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 683              	.LCFI9:
 684              		.cfi_def_cfa_offset 40
 685              		.cfi_offset 4, -40
 686              		.cfi_offset 5, -36
 687              		.cfi_offset 6, -32
 688              		.cfi_offset 7, -28
 689              		.cfi_offset 8, -24
 690              		.cfi_offset 9, -20
 691              		.cfi_offset 10, -16
 692              		.cfi_offset 14, -12
 693 0006 0446     		mov	r4, r0
 694 0008 0D46     		mov	r5, r1
 695 000a 1646     		mov	r6, r2
 696 000c 0993     		str	r3, [sp, #36]
 697 000e BDF82C00 		ldrh	r0, [sp, #44]
 698              	.LVL55:
 699              		.loc 1 88 1 view .LVU154
 700 0012 BDF83010 		ldrh	r1, [sp, #48]
 701              	.LVL56:
  89:Core/Src/oled.cpp **** 	uint8_t strItr=0;
 702              		.loc 1 89 2 is_stmt 1 view .LVU155
 703              		.loc 1 89 10 is_stmt 0 view .LVU156
 704 0016 0027     		movs	r7, #0
 705 0018 7CE0     		b	.L31
 706              	.LVL57:
 707              	.L21:
 708              	.LBB4:
  90:Core/Src/oled.cpp **** 	// //loop through the chars in the string
  91:Core/Src/oled.cpp **** 	while(strItr<count)
  92:Core/Src/oled.cpp **** 	{
  93:Core/Src/oled.cpp **** 		int i=0;
  94:Core/Src/oled.cpp **** 		int j=0;
  95:Core/Src/oled.cpp **** 		int b;
  96:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
  97:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
  98:Core/Src/oled.cpp **** 
  99:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 709              		.loc 1 99 25 discriminator 2 view .LVU157
 710 001a DB10     		asrs	r3, r3, #3
 711              		.loc 1 99 31 discriminator 2 view .LVU158
 712 001c 00EBC313 		add	r3, r0, r3, lsl #7
 713              		.loc 1 99 33 discriminator 2 view .LVU159
 714 0020 1344     		add	r3, r3, r2
 715              		.loc 1 99 36 discriminator 2 view .LVU160
 716 0022 2344     		add	r3, r3, r4
 717 0024 4FF0000E 		mov	lr, #0
 718 0028 83F811E0 		strb	lr, [r3, #17]
  97:Core/Src/oled.cpp **** 
 719              		.loc 1 97 4 is_stmt 1 discriminator 2 view .LVU161
 720 002c 0132     		adds	r2, r2, #1
 721              	.LVL58:
ARM GAS  /tmp/ccRpnWtg.s 			page 17


 722              	.L22:
  97:Core/Src/oled.cpp **** 
 723              		.loc 1 97 18 discriminator 3 view .LVU162
  97:Core/Src/oled.cpp **** 
 724              		.loc 1 97 25 is_stmt 0 discriminator 3 view .LVU163
 725 002e 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
  97:Core/Src/oled.cpp **** 
 726              		.loc 1 97 18 discriminator 3 view .LVU164
 727 0032 9342     		cmp	r3, r2
 728 0034 04DD     		ble	.L20
 729              		.loc 1 99 6 is_stmt 1 discriminator 2 view .LVU165
 730              		.loc 1 99 25 is_stmt 0 discriminator 2 view .LVU166
 731 0036 11EB0C03 		adds	r3, r1, ip
 732 003a EED5     		bpl	.L21
 733              		.loc 1 99 25 discriminator 2 view .LVU167
 734 003c 0733     		adds	r3, r3, #7
 735 003e ECE7     		b	.L21
 736              	.L20:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 737              		.loc 1 96 3 is_stmt 1 discriminator 2 view .LVU168
 738 0040 0CF1010C 		add	ip, ip, #1
 739              	.LVL59:
 740              	.L23:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 741              		.loc 1 96 17 discriminator 1 view .LVU169
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 742              		.loc 1 96 24 is_stmt 0 discriminator 1 view .LVU170
 743 0044 9DF825E0 		ldrb	lr, [sp, #37]	@ zero_extendqisi2
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 744              		.loc 1 96 17 discriminator 1 view .LVU171
 745 0048 E645     		cmp	lr, ip
 746 004a 01DD     		ble	.L32
  97:Core/Src/oled.cpp **** 
 747              		.loc 1 97 11 view .LVU172
 748 004c 0022     		movs	r2, #0
 749 004e EEE7     		b	.L22
 750              	.L32:
 100:Core/Src/oled.cpp **** 
 101:Core/Src/oled.cpp **** 				
 102:Core/Src/oled.cpp **** 			}
 103:Core/Src/oled.cpp **** 		}
 104:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
 751              		.loc 1 104 10 view .LVU173
 752 0050 4FF0000C 		mov	ip, #0
 753              	.LVL60:
 754              		.loc 1 104 10 view .LVU174
 755 0054 4CE0     		b	.L19
 756              	.LVL61:
 757              	.L27:
 105:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 106:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 107:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 108:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 758              		.loc 1 108 25 view .LVU175
 759 0056 DB10     		asrs	r3, r3, #3
 760              		.loc 1 108 36 view .LVU176
 761 0058 00EBC313 		add	r3, r0, r3, lsl #7
ARM GAS  /tmp/ccRpnWtg.s 			page 18


 762 005c 1344     		add	r3, r3, r2
 763              		.loc 1 108 50 view .LVU177
 764 005e D9F1000A 		rsbs	r10, r9, #0
 765 0062 09F00709 		and	r9, r9, #7
 766 0066 0AF0070A 		and	r10, r10, #7
 767 006a 58BF     		it	pl
 768 006c CAF10009 		rsbpl	r9, r10, #0
 769              		.loc 1 108 40 view .LVU178
 770 0070 4FF0010A 		mov	r10, #1
 771 0074 0AFA09FA 		lsl	r10, r10, r9
 772              		.loc 1 108 36 view .LVU179
 773 0078 2344     		add	r3, r3, r4
 774 007a 93F81190 		ldrb	r9, [r3, #17]	@ zero_extendqisi2
 775 007e 49EA0A09 		orr	r9, r9, r10
 776 0082 83F81190 		strb	r9, [r3, #17]
 777              	.L28:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 778              		.loc 1 106 4 is_stmt 1 discriminator 2 view .LVU180
 779 0086 0132     		adds	r2, r2, #1
 780              	.LVL62:
 781              	.L30:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 782              		.loc 1 106 18 discriminator 1 view .LVU181
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 783              		.loc 1 106 25 is_stmt 0 discriminator 1 view .LVU182
 784 0088 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 785              		.loc 1 106 18 discriminator 1 view .LVU183
 786 008c 9342     		cmp	r3, r2
 787 008e 2DDD     		ble	.L25
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 788              		.loc 1 107 5 is_stmt 1 view .LVU184
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 789              		.loc 1 107 12 is_stmt 0 view .LVU185
 790 0090 08FA02F3 		lsl	r3, r8, r2
 107:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 791              		.loc 1 107 5 view .LVU186
 792 0094 13F4004F 		tst	r3, #32768
 793 0098 08D0     		beq	.L26
 794              		.loc 1 108 6 is_stmt 1 view .LVU187
 795              		.loc 1 108 21 is_stmt 0 view .LVU188
 796 009a 01EB0C09 		add	r9, r1, ip
 797              		.loc 1 108 25 view .LVU189
 798 009e 4B46     		mov	r3, r9
 799 00a0 B9F1000F 		cmp	r9, #0
 800 00a4 D7DA     		bge	.L27
 801              		.loc 1 108 25 view .LVU190
 802 00a6 09F10703 		add	r3, r9, #7
 803 00aa D4E7     		b	.L27
 804              	.L26:
 109:Core/Src/oled.cpp **** 				} else {
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]&= ~(1 << ((y+1) % 8));
 805              		.loc 1 110 6 is_stmt 1 view .LVU191
 806              		.loc 1 110 25 is_stmt 0 view .LVU192
 807 00ac 11EB0C03 		adds	r3, r1, ip
 808 00b0 1AD4     		bmi	.L34
 809              	.L29:
ARM GAS  /tmp/ccRpnWtg.s 			page 19


 810              		.loc 1 110 25 view .LVU193
 811 00b2 DB10     		asrs	r3, r3, #3
 812              		.loc 1 110 36 view .LVU194
 813 00b4 00EBC313 		add	r3, r0, r3, lsl #7
 814 00b8 1344     		add	r3, r3, r2
 815              		.loc 1 110 49 view .LVU195
 816 00ba 01F10109 		add	r9, r1, #1
 817              		.loc 1 110 53 view .LVU196
 818 00be D9F1000A 		rsbs	r10, r9, #0
 819 00c2 09F00709 		and	r9, r9, #7
 820 00c6 0AF0070A 		and	r10, r10, #7
 821 00ca 58BF     		it	pl
 822 00cc CAF10009 		rsbpl	r9, r10, #0
 823              		.loc 1 110 43 view .LVU197
 824 00d0 4FF0010A 		mov	r10, #1
 825 00d4 0AFA09FA 		lsl	r10, r10, r9
 826              		.loc 1 110 36 view .LVU198
 827 00d8 2344     		add	r3, r3, r4
 828 00da 93F81190 		ldrb	r9, [r3, #17]	@ zero_extendqisi2
 829 00de 29EA0A09 		bic	r9, r9, r10
 830 00e2 83F81190 		strb	r9, [r3, #17]
 831 00e6 CEE7     		b	.L28
 832              	.L34:
 833              		.loc 1 110 25 view .LVU199
 834 00e8 0733     		adds	r3, r3, #7
 835 00ea E2E7     		b	.L29
 836              	.L25:
 104:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 837              		.loc 1 104 3 is_stmt 1 discriminator 2 view .LVU200
 838 00ec 0CF1010C 		add	ip, ip, #1
 839              	.LVL63:
 840              	.L19:
 104:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 841              		.loc 1 104 17 discriminator 1 view .LVU201
 842 00f0 E645     		cmp	lr, ip
 843 00f2 08DD     		ble	.L24
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 844              		.loc 1 105 4 view .LVU202
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 845              		.loc 1 105 19 is_stmt 0 view .LVU203
 846 00f4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 847              		.loc 1 105 27 view .LVU204
 848 00f6 203A     		subs	r2, r2, #32
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 849              		.loc 1 105 51 view .LVU205
 850 00f8 02FB0EC2 		mla	r2, r2, lr, ip
 105:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 851              		.loc 1 105 54 view .LVU206
 852 00fc 0A9B     		ldr	r3, [sp, #40]
 853 00fe 33F81280 		ldrh	r8, [r3, r2, lsl #1]
 854              	.LVL64:
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 855              		.loc 1 106 4 is_stmt 1 view .LVU207
 106:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 856              		.loc 1 106 11 is_stmt 0 view .LVU208
 857 0102 0022     		movs	r2, #0
ARM GAS  /tmp/ccRpnWtg.s 			page 20


 858 0104 C0E7     		b	.L30
 859              	.LVL65:
 860              	.L24:
 111:Core/Src/oled.cpp **** 
 112:Core/Src/oled.cpp **** 				}
 113:Core/Src/oled.cpp **** 			}
 114:Core/Src/oled.cpp **** 		}
 115:Core/Src/oled.cpp **** 		x=x+i-2;
 861              		.loc 1 115 3 is_stmt 1 view .LVU209
 862              		.loc 1 115 6 is_stmt 0 view .LVU210
 863 0106 6044     		add	r0, r0, ip
 864              	.LVL66:
 865              		.loc 1 115 6 view .LVU211
 866 0108 80B2     		uxth	r0, r0
 867              		.loc 1 115 4 view .LVU212
 868 010a 0238     		subs	r0, r0, #2
 869 010c 80B2     		uxth	r0, r0
 870              	.LVL67:
 116:Core/Src/oled.cpp **** 
 117:Core/Src/oled.cpp **** 
 118:Core/Src/oled.cpp **** 	
 119:Core/Src/oled.cpp **** 		string++;
 871              		.loc 1 119 3 is_stmt 1 view .LVU213
 872              		.loc 1 119 9 is_stmt 0 view .LVU214
 873 010e 0135     		adds	r5, r5, #1
 874              	.LVL68:
 120:Core/Src/oled.cpp **** 		strItr++;
 875              		.loc 1 120 3 is_stmt 1 view .LVU215
 876              		.loc 1 120 9 is_stmt 0 view .LVU216
 877 0110 0137     		adds	r7, r7, #1
 878              	.LVL69:
 879              		.loc 1 120 9 view .LVU217
 880 0112 FFB2     		uxtb	r7, r7
 881              	.LVL70:
 882              	.L31:
 883              		.loc 1 120 9 view .LVU218
 884              	.LBE4:
  91:Core/Src/oled.cpp **** 	{
 885              		.loc 1 91 2 is_stmt 1 view .LVU219
  91:Core/Src/oled.cpp **** 	{
 886              		.loc 1 91 14 view .LVU220
 887 0114 B742     		cmp	r7, r6
 888 0116 02D2     		bcs	.L17
 889              	.LBB5:
  96:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 890              		.loc 1 96 10 is_stmt 0 view .LVU221
 891 0118 4FF0000C 		mov	ip, #0
 892 011c 92E7     		b	.L23
 893              	.L17:
 894              	.LBE5:
 121:Core/Src/oled.cpp **** 	}
 122:Core/Src/oled.cpp **** }
 895              		.loc 1 122 1 view .LVU222
 896 011e BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 897              	.LCFI10:
 898              		.cfi_restore 14
 899              		.cfi_restore 10
ARM GAS  /tmp/ccRpnWtg.s 			page 21


 900              		.cfi_restore 9
 901              		.cfi_restore 8
 902              		.cfi_restore 7
 903              		.cfi_restore 6
 904              		.cfi_restore 5
 905              		.cfi_restore 4
 906              		.cfi_def_cfa_offset 8
 907              	.LVL71:
 908              		.loc 1 122 1 view .LVU223
 909 0122 02B0     		add	sp, sp, #8
 910              	.LCFI11:
 911              		.cfi_def_cfa_offset 0
 912 0124 7047     		bx	lr
 913              		.cfi_endproc
 914              	.LFE138:
 915              		.cantunwind
 916              		.fnend
 918              		.global	__aeabi_f2d
 919              		.section	.rodata._ZN4oled19oled_update_batteryEf.str1.4,"aMS",%progbits,1
 920              		.align	2
 921              	.LC0:
 922 0000 252E3166 		.ascii	"%.1fv\000"
 922      7600
 923              		.section	.text._ZN4oled19oled_update_batteryEf,"ax",%progbits
 924              		.align	1
 925              		.global	_ZN4oled19oled_update_batteryEf
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu fpv4-sp-d16
 931              	_ZN4oled19oled_update_batteryEf:
 932              		.fnstart
 933              	.LVL72:
 934              	.LFB139:
 123:Core/Src/oled.cpp **** void oled::oled_update_battery(float voltage)
 124:Core/Src/oled.cpp **** {
 935              		.loc 1 124 1 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 8
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		.loc 1 124 1 is_stmt 0 view .LVU225
 940 0000 10B5     		push	{r4, lr}
 941              	.LCFI12:
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 4, -8
 944              		.cfi_offset 14, -4
 945 0002 86B0     		sub	sp, sp, #24
 946              	.LCFI13:
 947              		.cfi_def_cfa_offset 32
 948 0004 0446     		mov	r4, r0
 949 0006 10EE100A 		vmov	r0, s0
 950              	.LVL73:
 125:Core/Src/oled.cpp **** 	char volt [4];
 951              		.loc 1 125 2 is_stmt 1 view .LVU226
 126:Core/Src/oled.cpp **** 	sprintf(volt,"%.1fv",voltage);
 952              		.loc 1 126 2 view .LVU227
 953              		.loc 1 126 9 is_stmt 0 view .LVU228
ARM GAS  /tmp/ccRpnWtg.s 			page 22


 954 000a FFF7FEFF 		bl	__aeabi_f2d
 955              	.LVL74:
 956              		.loc 1 126 9 view .LVU229
 957 000e 0246     		mov	r2, r0
 958 0010 0B46     		mov	r3, r1
 959 0012 0949     		ldr	r1, .L37
 960 0014 05A8     		add	r0, sp, #20
 961 0016 FFF7FEFF 		bl	sprintf
 962              	.LVL75:
 127:Core/Src/oled.cpp **** 	oled_print(volt,4,Font_7x10,90,0);
 963              		.loc 1 127 2 is_stmt 1 view .LVU230
 964              		.loc 1 127 12 is_stmt 0 view .LVU231
 965 001a 084B     		ldr	r3, .L37+4
 966 001c 0022     		movs	r2, #0
 967 001e 0292     		str	r2, [sp, #8]
 968 0020 5A22     		movs	r2, #90
 969 0022 0192     		str	r2, [sp, #4]
 970 0024 5A68     		ldr	r2, [r3, #4]
 971 0026 0092     		str	r2, [sp]
 972 0028 1B68     		ldr	r3, [r3]
 973 002a 0422     		movs	r2, #4
 974 002c 05A9     		add	r1, sp, #20
 975 002e 2046     		mov	r0, r4
 976 0030 FFF7FEFF 		bl	_ZN4oled10oled_printEPch9FontDef_ttt
 977              	.LVL76:
 128:Core/Src/oled.cpp **** }
 978              		.loc 1 128 1 view .LVU232
 979 0034 06B0     		add	sp, sp, #24
 980              	.LCFI14:
 981              		.cfi_def_cfa_offset 8
 982              		@ sp needed
 983 0036 10BD     		pop	{r4, pc}
 984              	.LVL77:
 985              	.L38:
 986              		.loc 1 128 1 view .LVU233
 987              		.align	2
 988              	.L37:
 989 0038 00000000 		.word	.LC0
 990 003c 00000000 		.word	Font_7x10
 991              		.cfi_endproc
 992              	.LFE139:
 993              		.cantunwind
 994              		.fnend
 996              		.section	.text._ZN4oled8oled_offEv,"ax",%progbits
 997              		.align	1
 998              		.global	_ZN4oled8oled_offEv
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	_ZN4oled8oled_offEv:
 1005              		.fnstart
 1006              	.LVL78:
 1007              	.LFB140:
 129:Core/Src/oled.cpp **** 
 130:Core/Src/oled.cpp **** void oled::oled_off()
 131:Core/Src/oled.cpp **** {
ARM GAS  /tmp/ccRpnWtg.s 			page 23


 1008              		.loc 1 131 1 is_stmt 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              		.loc 1 131 1 is_stmt 0 view .LVU235
 1013 0000 38B5     		push	{r3, r4, r5, lr}
 1014              		.save {r3, r4, r5, lr}
 1015              	.LCFI15:
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 3, -16
 1018              		.cfi_offset 4, -12
 1019              		.cfi_offset 5, -8
 1020              		.cfi_offset 14, -4
 1021 0002 0446     		mov	r4, r0
 132:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAE); //display off
 1022              		.loc 1 132 2 is_stmt 1 view .LVU236
 1023 0004 0025     		movs	r5, #0
 1024 0006 4572     		strb	r5, [r0, #9]
 1025              		.loc 1 132 2 view .LVU237
 1026 0008 AE23     		movs	r3, #174
 1027 000a 8372     		strb	r3, [r0, #10]
 1028              		.loc 1 132 2 view .LVU238
 1029 000c 0222     		movs	r2, #2
 1030 000e 00F10901 		add	r1, r0, #9
 1031 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1032              	.LVL79:
 133:Core/Src/oled.cpp **** 	oledOn=0;
 1033              		.loc 1 133 2 view .LVU239
 1034              		.loc 1 133 8 is_stmt 0 view .LVU240
 1035 0016 2574     		strb	r5, [r4, #16]
 134:Core/Src/oled.cpp **** }
 1036              		.loc 1 134 1 view .LVU241
 1037 0018 38BD     		pop	{r3, r4, r5, pc}
 1038              		.loc 1 134 1 view .LVU242
 1039              		.cfi_endproc
 1040              	.LFE140:
 1041              		.fnend
 1043              		.section	.text._ZN4oled7oled_onEv,"ax",%progbits
 1044              		.align	1
 1045              		.global	_ZN4oled7oled_onEv
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv4-sp-d16
 1051              	_ZN4oled7oled_onEv:
 1052              		.fnstart
 1053              	.LVL80:
 1054              	.LFB141:
 135:Core/Src/oled.cpp **** 
 136:Core/Src/oled.cpp **** void oled::oled_on()
 137:Core/Src/oled.cpp **** {
 1055              		.loc 1 137 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		.loc 1 137 1 is_stmt 0 view .LVU244
 1060 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccRpnWtg.s 			page 24


 1061              		.save {r4, lr}
 1062              	.LCFI16:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
 1066 0002 0446     		mov	r4, r0
 138:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 1067              		.loc 1 138 2 is_stmt 1 view .LVU245
 1068 0004 0023     		movs	r3, #0
 1069 0006 4372     		strb	r3, [r0, #9]
 1070              		.loc 1 138 2 view .LVU246
 1071 0008 AF23     		movs	r3, #175
 1072 000a 8372     		strb	r3, [r0, #10]
 1073              		.loc 1 138 2 view .LVU247
 1074 000c 0222     		movs	r2, #2
 1075 000e 00F10901 		add	r1, r0, #9
 1076 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1077              	.LVL81:
 139:Core/Src/oled.cpp **** 	oledOn=1;
 1078              		.loc 1 139 2 view .LVU248
 1079              		.loc 1 139 8 is_stmt 0 view .LVU249
 1080 0016 0123     		movs	r3, #1
 1081 0018 2374     		strb	r3, [r4, #16]
 140:Core/Src/oled.cpp **** 	oled_reset_timer();
 1082              		.loc 1 140 2 is_stmt 1 view .LVU250
 1083              		.loc 1 140 18 is_stmt 0 view .LVU251
 1084 001a 2046     		mov	r0, r4
 1085 001c FFF7FEFF 		bl	_ZN4oled16oled_reset_timerEv
 1086              	.LVL82:
 141:Core/Src/oled.cpp **** }
 1087              		.loc 1 141 1 view .LVU252
 1088 0020 10BD     		pop	{r4, pc}
 1089              		.loc 1 141 1 view .LVU253
 1090              		.cfi_endproc
 1091              	.LFE141:
 1092              		.fnend
 1094              		.section	.text._ZN4oled13oled_isOledOnEv,"ax",%progbits
 1095              		.align	1
 1096              		.global	_ZN4oled13oled_isOledOnEv
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu fpv4-sp-d16
 1102              	_ZN4oled13oled_isOledOnEv:
 1103              		.fnstart
 1104              	.LVL83:
 1105              	.LFB142:
 142:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 143:Core/Src/oled.cpp **** {
 1106              		.loc 1 143 1 is_stmt 1 view -0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 144:Core/Src/oled.cpp **** 	return oledOn;
 1111              		.loc 1 144 2 view .LVU255
 145:Core/Src/oled.cpp **** }...
ARM GAS  /tmp/ccRpnWtg.s 			page 25


 1112              		.loc 1 145 1 is_stmt 0 view .LVU256
 1113 0000 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1114              	.LVL84:
 1115              		.loc 1 145 1 view .LVU257
 1116 0002 7047     		bx	lr
 1117              		.cfi_endproc
 1118              	.LFE142:
 1119              		.cantunwind
 1120              		.fnend
 1122              		.text
 1123              	.Letext0:
 1124              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1125              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1126              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1127              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1128              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1129              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1130              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1131              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1132              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1133              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1134              		.file 12 "/usr/include/newlib/sys/_types.h"
 1135              		.file 13 "/usr/include/newlib/sys/reent.h"
 1136              		.file 14 "/usr/include/newlib/sys/lock.h"
 1137              		.file 15 "Core/Inc/fonts.h"
 1138              		.file 16 "Core/Inc/oled.h"
 1139              		.file 17 "/usr/include/newlib/stdio.h"
 1140              		.file 18 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccRpnWtg.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.cpp
     /tmp/ccRpnWtg.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccRpnWtg.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/ccRpnWtg.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/ccRpnWtg.s:74     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/ccRpnWtg.s:81     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/ccRpnWtg.s:139    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/ccRpnWtg.s:146    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/ccRpnWtg.s:193    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/ccRpnWtg.s:200    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/ccRpnWtg.s:560    .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccRpnWtg.s:567    .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
.ARM.exidx.text._ZN4oled12oled_refreshEv:0000000000000000 $d
     /tmp/ccRpnWtg.s:663    .text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 $t
     /tmp/ccRpnWtg.s:670    .text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPch9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPch9FontDef_ttt:0000000000000000 $d
     /tmp/ccRpnWtg.s:920    .rodata._ZN4oled19oled_update_batteryEf.str1.4:0000000000000000 $d
     /tmp/ccRpnWtg.s:924    .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
     /tmp/ccRpnWtg.s:931    .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/ccRpnWtg.s:989    .text._ZN4oled19oled_update_batteryEf:0000000000000038 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d
     /tmp/ccRpnWtg.s:997    .text._ZN4oled8oled_offEv:0000000000000000 $t
     /tmp/ccRpnWtg.s:1004   .text._ZN4oled8oled_offEv:0000000000000000 _ZN4oled8oled_offEv
.ARM.exidx.text._ZN4oled8oled_offEv:0000000000000000 $d
     /tmp/ccRpnWtg.s:1044   .text._ZN4oled7oled_onEv:0000000000000000 $t
     /tmp/ccRpnWtg.s:1051   .text._ZN4oled7oled_onEv:0000000000000000 _ZN4oled7oled_onEv
.ARM.exidx.text._ZN4oled7oled_onEv:0000000000000000 $d
     /tmp/ccRpnWtg.s:1095   .text._ZN4oled13oled_isOledOnEv:0000000000000000 $t
     /tmp/ccRpnWtg.s:1102   .text._ZN4oled13oled_isOledOnEv:0000000000000000 _ZN4oled13oled_isOledOnEv
.ARM.exidx.text._ZN4oled13oled_isOledOnEv:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Master_Transmit
__aeabi_unwind_cpp_pr0
HAL_I2C_IsDeviceReady
HAL_TIM_Base_Start_IT
__aeabi_f2d
sprintf
Font_7x10
_ZN4oled16oled_reset_timerEv
