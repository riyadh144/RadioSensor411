ARM GAS  /tmp/ccfSqDSx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB132:
  30              		.file 1 "Core/Src/oled.cpp"
   1:Core/Src/oled.cpp **** #include "oled.h"
   2:Core/Src/oled.cpp **** 
   3:Core/Src/oled.cpp **** 
   4:Core/Src/oled.cpp **** #define OLED_RIGHT_HORIZONTAL_SCROLL              0x26
   5:Core/Src/oled.cpp **** #define OLED_LEFT_HORIZONTAL_SCROLL               0x27
   6:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
   7:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A
   8:Core/Src/oled.cpp **** #define OLED_DEACTIVATE_SCROLL                    0x2E // Stop scroll
   9:Core/Src/oled.cpp **** #define OLED_ACTIVATE_SCROLL                      0x2F // Start scroll
  10:Core/Src/oled.cpp **** #define OLED_SET_VERTICAL_SCROLL_AREA             0xA3 // Set scroll range
  11:Core/Src/oled.cpp **** 
  12:Core/Src/oled.cpp **** #define OLED_NORMALDISPLAY       0xA6
  13:Core/Src/oled.cpp **** #define OLED_INVERTDISPLAY       0xA7
  14:Core/Src/oled.cpp **** 
  15:Core/Src/oled.cpp **** 
  16:Core/Src/oled.cpp **** #define OLED_WRITECOMMAND(command)      comm[0]=COMMAND; comm[1]=(command); oled_write(comm,2)
  17:Core/Src/oled.cpp **** 
  18:Core/Src/oled.cpp **** oled::oled(I2C_HandleTypeDef *hi2c, uint8_t address,TIM_HandleTypeDef *htim)
  31              		.loc 1 18 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 18 1 is_stmt 0 view .LVU1
  37 0000 30B4     		push	{r4, r5}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
ARM GAS  /tmp/ccfSqDSx.s 			page 2


  41              		.cfi_offset 5, -4
  42              	.LBB2:
  43              		.loc 1 18 76 view .LVU2
  44 0002 0025     		movs	r5, #0
  45 0004 C560     		str	r5, [r0, #12]
  46 0006 0561     		str	r5, [r0, #16]
  47 0008 0575     		strb	r5, [r0, #20]
  48 000a 0125     		movs	r5, #1
  49 000c 4575     		strb	r5, [r0, #21]
  19:Core/Src/oled.cpp **** {
  20:Core/Src/oled.cpp ****     this->hi2c=hi2c;
  50              		.loc 1 20 5 is_stmt 1 view .LVU3
  51              		.loc 1 20 15 is_stmt 0 view .LVU4
  52 000e 0160     		str	r1, [r0]
  21:Core/Src/oled.cpp **** 	this->address=address;
  53              		.loc 1 21 2 is_stmt 1 view .LVU5
  54              		.loc 1 21 15 is_stmt 0 view .LVU6
  55 0010 0272     		strb	r2, [r0, #8]
  22:Core/Src/oled.cpp **** 	this->htim=htim;
  56              		.loc 1 22 2 is_stmt 1 view .LVU7
  57              		.loc 1 22 12 is_stmt 0 view .LVU8
  58 0012 4360     		str	r3, [r0, #4]
  59              	.LBE2:
  23:Core/Src/oled.cpp **** }
  60              		.loc 1 23 1 view .LVU9
  61 0014 30BC     		pop	{r4, r5}
  62              	.LCFI1:
  63              		.cfi_restore 5
  64              		.cfi_restore 4
  65              		.cfi_def_cfa_offset 0
  66 0016 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE132:
  69              		.cantunwind
  70              		.fnend
  72              		.global	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  73              		.thumb_set _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,_ZN4oledC2EP17I2C_HandleTypeDefhP1
  74              		.section	.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE,"ax",%progbits
  75              		.align	1
  76              		.global	_ZN4oled9oled_fillENS_12OLED_COLOR_tE
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	_ZN4oled9oled_fillENS_12OLED_COLOR_tE:
  83              		.fnstart
  84              	.LVL1:
  85              	.LFB135:
  24:Core/Src/oled.cpp **** void oled::init(void)
  25:Core/Src/oled.cpp **** {
  26:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
  27:Core/Src/oled.cpp **** 	}
  28:Core/Src/oled.cpp ****     
  29:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(0xAE); //display off
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
ARM GAS  /tmp/ccfSqDSx.s 			page 3


  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
  57:Core/Src/oled.cpp **** 
  58:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(OLED_DEACTIVATE_SCROLL); //Deactivate scroll
  59:Core/Src/oled.cpp **** 
  60:Core/Src/oled.cpp ****     HAL_TIM_Base_Start_IT(htim);
  61:Core/Src/oled.cpp **** 
  62:Core/Src/oled.cpp **** }
  63:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
  86              		.loc 1 63 42 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		.loc 1 63 42 is_stmt 0 view .LVU11
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 0646     		mov	r6, r0
  99 0004 0D46     		mov	r5, r1
  64:Core/Src/oled.cpp **** 	/* Set memory */
  65:Core/Src/oled.cpp ****     for (uint8_t m = 0; m < 8; m++) {
 100              		.loc 1 65 5 is_stmt 1 view .LVU12
 101              	.LVL2:
 102              	.LBB3:
 103              		.loc 1 65 18 is_stmt 0 view .LVU13
 104 0006 0024     		movs	r4, #0
 105 0008 09E0     		b	.L5
 106              	.LVL3:
 107              	.L7:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 108              		.loc 1 66 2 is_stmt 1 discriminator 2 view .LVU14
ARM GAS  /tmp/ccfSqDSx.s 			page 4


 109              		.loc 1 66 24 is_stmt 0 discriminator 2 view .LVU15
 110 000a E001     		lsls	r0, r4, #7
 111              		.loc 1 66 9 discriminator 2 view .LVU16
 112 000c 1130     		adds	r0, r0, #17
 113 000e 3044     		add	r0, r0, r6
 114              		.loc 1 66 8 discriminator 2 view .LVU17
 115 0010 8022     		movs	r2, #128
 116 0012 2946     		mov	r1, r5
 117 0014 0630     		adds	r0, r0, #6
 118 0016 FFF7FEFF 		bl	memset
 119              	.LVL4:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 120              		.loc 1 65 5 is_stmt 1 discriminator 2 view .LVU18
 121 001a 0134     		adds	r4, r4, #1
 122              	.LVL5:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 123              		.loc 1 65 5 is_stmt 0 discriminator 2 view .LVU19
 124 001c E4B2     		uxtb	r4, r4
 125              	.LVL6:
 126              	.L5:
  65:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 127              		.loc 1 65 27 is_stmt 1 discriminator 3 view .LVU20
 128 001e 072C     		cmp	r4, #7
 129 0020 F3D9     		bls	.L7
 130              	.LBE3:
  67:Core/Src/oled.cpp ****     }
  68:Core/Src/oled.cpp **** }
 131              		.loc 1 68 1 is_stmt 0 view .LVU21
 132 0022 70BD     		pop	{r4, r5, r6, pc}
 133              		.loc 1 68 1 view .LVU22
 134              		.cfi_endproc
 135              	.LFE135:
 136              		.cantunwind
 137              		.fnend
 139              		.section	.text._ZN4oled10oled_writeEPht,"ax",%progbits
 140              		.align	1
 141              		.global	_ZN4oled10oled_writeEPht
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	_ZN4oled10oled_writeEPht:
 148              		.fnstart
 149              	.LVL7:
 150              	.LFB136:
  69:Core/Src/oled.cpp **** uint8_t oled::oled_write(uint8_t* data, uint16_t count)
  70:Core/Src/oled.cpp **** {
 151              		.loc 1 70 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 70 1 is_stmt 0 view .LVU24
 156 0000 00B5     		push	{lr}
 157              		.save {lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfSqDSx.s 			page 5


 161              		.pad #12
 162 0002 83B0     		sub	sp, sp, #12
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 16
 165 0004 1346     		mov	r3, r2
  71:Core/Src/oled.cpp **** 	HAL_I2C_Master_Transmit(hi2c, address, data, count, 10);
 166              		.loc 1 71 2 is_stmt 1 view .LVU25
 167              		.loc 1 71 25 is_stmt 0 view .LVU26
 168 0006 0A22     		movs	r2, #10
 169              	.LVL8:
 170              		.loc 1 71 25 view .LVU27
 171 0008 0092     		str	r2, [sp]
 172 000a 0A46     		mov	r2, r1
 173 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 174              	.LVL9:
 175              		.loc 1 71 25 view .LVU28
 176 000e 0068     		ldr	r0, [r0]
 177              	.LVL10:
 178              		.loc 1 71 25 view .LVU29
 179 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 180              	.LVL11:
  72:Core/Src/oled.cpp ****     return 1;
 181              		.loc 1 72 5 is_stmt 1 view .LVU30
  73:Core/Src/oled.cpp **** }
 182              		.loc 1 73 1 is_stmt 0 view .LVU31
 183 0014 0120     		movs	r0, #1
 184 0016 03B0     		add	sp, sp, #12
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 4
 187              		@ sp needed
 188 0018 5DF804FB 		ldr	pc, [sp], #4
 189              		.cfi_endproc
 190              	.LFE136:
 191              		.fnend
 193              		.section	.text._ZN4oled4initEv,"ax",%progbits
 194              		.align	1
 195              		.global	_ZN4oled4initEv
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	_ZN4oled4initEv:
 202              		.fnstart
 203              	.LVL12:
 204              	.LFB134:
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 205              		.loc 1 25 1 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
  25:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 209              		.loc 1 25 1 is_stmt 0 view .LVU33
 210 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 211              		.save {r4, r5, r6, r7, r8, lr}
 212              	.LCFI6:
 213              		.cfi_def_cfa_offset 24
 214              		.cfi_offset 4, -24
ARM GAS  /tmp/ccfSqDSx.s 			page 6


 215              		.cfi_offset 5, -20
 216              		.cfi_offset 6, -16
 217              		.cfi_offset 7, -12
 218              		.cfi_offset 8, -8
 219              		.cfi_offset 14, -4
 220 0004 0446     		mov	r4, r0
  26:Core/Src/oled.cpp **** 	}
 221              		.loc 1 26 2 is_stmt 1 view .LVU34
  26:Core/Src/oled.cpp **** 	}
 222              		.loc 1 26 27 is_stmt 0 view .LVU35
 223 0006 44F62063 		movw	r3, #20000
 224 000a 0122     		movs	r2, #1
 225 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 226 000e 0068     		ldr	r0, [r0]
 227              	.LVL13:
  26:Core/Src/oled.cpp **** 	}
 228              		.loc 1 26 27 view .LVU36
 229 0010 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 230              	.LVL14:
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 231              		.loc 1 29 5 is_stmt 1 view .LVU37
 232 0014 0025     		movs	r5, #0
 233 0016 6572     		strb	r5, [r4, #9]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 234              		.loc 1 29 5 view .LVU38
 235 0018 AE23     		movs	r3, #174
 236 001a A372     		strb	r3, [r4, #10]
  29:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 237              		.loc 1 29 5 view .LVU39
 238 001c 04F10906 		add	r6, r4, #9
 239 0020 0222     		movs	r2, #2
 240 0022 3146     		mov	r1, r6
 241 0024 2046     		mov	r0, r4
 242 0026 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 243              	.LVL15:
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 244              		.loc 1 30 2 view .LVU40
 245 002a 6572     		strb	r5, [r4, #9]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 246              		.loc 1 30 2 view .LVU41
 247 002c 2027     		movs	r7, #32
 248 002e A772     		strb	r7, [r4, #10]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 249              		.loc 1 30 2 view .LVU42
 250 0030 0222     		movs	r2, #2
 251 0032 3146     		mov	r1, r6
 252 0034 2046     		mov	r0, r4
 253 0036 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 254              	.LVL16:
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 255              		.loc 1 31 2 view .LVU43
 256 003a 6572     		strb	r5, [r4, #9]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 257              		.loc 1 31 2 view .LVU44
 258 003c 4FF01008 		mov	r8, #16
 259 0040 84F80A80 		strb	r8, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
ARM GAS  /tmp/ccfSqDSx.s 			page 7


 260              		.loc 1 31 2 view .LVU45
 261 0044 0222     		movs	r2, #2
 262 0046 3146     		mov	r1, r6
 263 0048 2046     		mov	r0, r4
 264 004a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 265              	.LVL17:
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 266              		.loc 1 32 2 view .LVU46
 267 004e 6572     		strb	r5, [r4, #9]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 268              		.loc 1 32 2 view .LVU47
 269 0050 B023     		movs	r3, #176
 270 0052 A372     		strb	r3, [r4, #10]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 271              		.loc 1 32 2 view .LVU48
 272 0054 0222     		movs	r2, #2
 273 0056 3146     		mov	r1, r6
 274 0058 2046     		mov	r0, r4
 275 005a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 276              	.LVL18:
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 277              		.loc 1 33 2 view .LVU49
 278 005e 6572     		strb	r5, [r4, #9]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 279              		.loc 1 33 2 view .LVU50
 280 0060 C823     		movs	r3, #200
 281 0062 A372     		strb	r3, [r4, #10]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 282              		.loc 1 33 2 view .LVU51
 283 0064 0222     		movs	r2, #2
 284 0066 3146     		mov	r1, r6
 285 0068 2046     		mov	r0, r4
 286 006a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 287              	.LVL19:
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 288              		.loc 1 34 2 view .LVU52
 289 006e 6572     		strb	r5, [r4, #9]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 290              		.loc 1 34 2 view .LVU53
 291 0070 A572     		strb	r5, [r4, #10]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 292              		.loc 1 34 2 view .LVU54
 293 0072 0222     		movs	r2, #2
 294 0074 3146     		mov	r1, r6
 295 0076 2046     		mov	r0, r4
 296 0078 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 297              	.LVL20:
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 298              		.loc 1 35 2 view .LVU55
 299 007c 6572     		strb	r5, [r4, #9]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 300              		.loc 1 35 2 view .LVU56
 301 007e 84F80A80 		strb	r8, [r4, #10]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 302              		.loc 1 35 2 view .LVU57
 303 0082 0222     		movs	r2, #2
 304 0084 3146     		mov	r1, r6
ARM GAS  /tmp/ccfSqDSx.s 			page 8


 305 0086 2046     		mov	r0, r4
 306 0088 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 307              	.LVL21:
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 308              		.loc 1 36 2 view .LVU58
 309 008c 6572     		strb	r5, [r4, #9]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 310              		.loc 1 36 2 view .LVU59
 311 008e 4023     		movs	r3, #64
 312 0090 A372     		strb	r3, [r4, #10]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 313              		.loc 1 36 2 view .LVU60
 314 0092 0222     		movs	r2, #2
 315 0094 3146     		mov	r1, r6
 316 0096 2046     		mov	r0, r4
 317 0098 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 318              	.LVL22:
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 319              		.loc 1 37 2 view .LVU61
 320 009c 6572     		strb	r5, [r4, #9]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 321              		.loc 1 37 2 view .LVU62
 322 009e 8123     		movs	r3, #129
 323 00a0 A372     		strb	r3, [r4, #10]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 324              		.loc 1 37 2 view .LVU63
 325 00a2 0222     		movs	r2, #2
 326 00a4 3146     		mov	r1, r6
 327 00a6 2046     		mov	r0, r4
 328 00a8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 329              	.LVL23:
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 330              		.loc 1 38 2 view .LVU64
 331 00ac 6572     		strb	r5, [r4, #9]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 332              		.loc 1 38 2 view .LVU65
 333 00ae FF23     		movs	r3, #255
 334 00b0 A372     		strb	r3, [r4, #10]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 335              		.loc 1 38 2 view .LVU66
 336 00b2 0222     		movs	r2, #2
 337 00b4 3146     		mov	r1, r6
 338 00b6 2046     		mov	r0, r4
 339 00b8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 340              	.LVL24:
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 341              		.loc 1 39 2 view .LVU67
 342 00bc 6572     		strb	r5, [r4, #9]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 343              		.loc 1 39 2 view .LVU68
 344 00be A123     		movs	r3, #161
 345 00c0 A372     		strb	r3, [r4, #10]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 346              		.loc 1 39 2 view .LVU69
 347 00c2 0222     		movs	r2, #2
 348 00c4 3146     		mov	r1, r6
 349 00c6 2046     		mov	r0, r4
ARM GAS  /tmp/ccfSqDSx.s 			page 9


 350 00c8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 351              	.LVL25:
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 352              		.loc 1 40 2 view .LVU70
 353 00cc 6572     		strb	r5, [r4, #9]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 354              		.loc 1 40 2 view .LVU71
 355 00ce A623     		movs	r3, #166
 356 00d0 A372     		strb	r3, [r4, #10]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 357              		.loc 1 40 2 view .LVU72
 358 00d2 0222     		movs	r2, #2
 359 00d4 3146     		mov	r1, r6
 360 00d6 2046     		mov	r0, r4
 361 00d8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 362              	.LVL26:
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 363              		.loc 1 41 2 view .LVU73
 364 00dc 6572     		strb	r5, [r4, #9]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 365              		.loc 1 41 2 view .LVU74
 366 00de A823     		movs	r3, #168
 367 00e0 A372     		strb	r3, [r4, #10]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 368              		.loc 1 41 2 view .LVU75
 369 00e2 0222     		movs	r2, #2
 370 00e4 3146     		mov	r1, r6
 371 00e6 2046     		mov	r0, r4
 372 00e8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 373              	.LVL27:
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 374              		.loc 1 42 2 view .LVU76
 375 00ec 6572     		strb	r5, [r4, #9]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 376              		.loc 1 42 2 view .LVU77
 377 00ee 3F23     		movs	r3, #63
 378 00f0 A372     		strb	r3, [r4, #10]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 379              		.loc 1 42 2 view .LVU78
 380 00f2 0222     		movs	r2, #2
 381 00f4 3146     		mov	r1, r6
 382 00f6 2046     		mov	r0, r4
 383 00f8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 384              	.LVL28:
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 385              		.loc 1 43 2 view .LVU79
 386 00fc 6572     		strb	r5, [r4, #9]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 387              		.loc 1 43 2 view .LVU80
 388 00fe A423     		movs	r3, #164
 389 0100 A372     		strb	r3, [r4, #10]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 390              		.loc 1 43 2 view .LVU81
 391 0102 0222     		movs	r2, #2
 392 0104 3146     		mov	r1, r6
 393 0106 2046     		mov	r0, r4
 394 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
ARM GAS  /tmp/ccfSqDSx.s 			page 10


 395              	.LVL29:
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 396              		.loc 1 44 2 view .LVU82
 397 010c 6572     		strb	r5, [r4, #9]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 398              		.loc 1 44 2 view .LVU83
 399 010e D323     		movs	r3, #211
 400 0110 A372     		strb	r3, [r4, #10]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 401              		.loc 1 44 2 view .LVU84
 402 0112 0222     		movs	r2, #2
 403 0114 3146     		mov	r1, r6
 404 0116 2046     		mov	r0, r4
 405 0118 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 406              	.LVL30:
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 407              		.loc 1 45 2 view .LVU85
 408 011c 6572     		strb	r5, [r4, #9]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 409              		.loc 1 45 2 view .LVU86
 410 011e A572     		strb	r5, [r4, #10]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 411              		.loc 1 45 2 view .LVU87
 412 0120 0222     		movs	r2, #2
 413 0122 3146     		mov	r1, r6
 414 0124 2046     		mov	r0, r4
 415 0126 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 416              	.LVL31:
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 417              		.loc 1 46 2 view .LVU88
 418 012a 6572     		strb	r5, [r4, #9]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 419              		.loc 1 46 2 view .LVU89
 420 012c D523     		movs	r3, #213
 421 012e A372     		strb	r3, [r4, #10]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 422              		.loc 1 46 2 view .LVU90
 423 0130 0222     		movs	r2, #2
 424 0132 3146     		mov	r1, r6
 425 0134 2046     		mov	r0, r4
 426 0136 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 427              	.LVL32:
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 428              		.loc 1 47 2 view .LVU91
 429 013a 6572     		strb	r5, [r4, #9]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 430              		.loc 1 47 2 view .LVU92
 431 013c F023     		movs	r3, #240
 432 013e A372     		strb	r3, [r4, #10]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 433              		.loc 1 47 2 view .LVU93
 434 0140 0222     		movs	r2, #2
 435 0142 3146     		mov	r1, r6
 436 0144 2046     		mov	r0, r4
 437 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 438              	.LVL33:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
ARM GAS  /tmp/ccfSqDSx.s 			page 11


 439              		.loc 1 48 2 view .LVU94
 440 014a 6572     		strb	r5, [r4, #9]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 441              		.loc 1 48 2 view .LVU95
 442 014c D923     		movs	r3, #217
 443 014e A372     		strb	r3, [r4, #10]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 444              		.loc 1 48 2 view .LVU96
 445 0150 0222     		movs	r2, #2
 446 0152 3146     		mov	r1, r6
 447 0154 2046     		mov	r0, r4
 448 0156 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 449              	.LVL34:
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 450              		.loc 1 49 2 view .LVU97
 451 015a 6572     		strb	r5, [r4, #9]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 452              		.loc 1 49 2 view .LVU98
 453 015c 2223     		movs	r3, #34
 454 015e A372     		strb	r3, [r4, #10]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 455              		.loc 1 49 2 view .LVU99
 456 0160 0222     		movs	r2, #2
 457 0162 3146     		mov	r1, r6
 458 0164 2046     		mov	r0, r4
 459 0166 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 460              	.LVL35:
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 461              		.loc 1 50 2 view .LVU100
 462 016a 6572     		strb	r5, [r4, #9]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 463              		.loc 1 50 2 view .LVU101
 464 016c DA23     		movs	r3, #218
 465 016e A372     		strb	r3, [r4, #10]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 466              		.loc 1 50 2 view .LVU102
 467 0170 0222     		movs	r2, #2
 468 0172 3146     		mov	r1, r6
 469 0174 2046     		mov	r0, r4
 470 0176 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 471              	.LVL36:
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 472              		.loc 1 51 2 view .LVU103
 473 017a 6572     		strb	r5, [r4, #9]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 474              		.loc 1 51 2 view .LVU104
 475 017c 1223     		movs	r3, #18
 476 017e A372     		strb	r3, [r4, #10]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 477              		.loc 1 51 2 view .LVU105
 478 0180 0222     		movs	r2, #2
 479 0182 3146     		mov	r1, r6
 480 0184 2046     		mov	r0, r4
 481 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 482              	.LVL37:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 483              		.loc 1 52 2 view .LVU106
ARM GAS  /tmp/ccfSqDSx.s 			page 12


 484 018a 6572     		strb	r5, [r4, #9]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 485              		.loc 1 52 2 view .LVU107
 486 018c DB23     		movs	r3, #219
 487 018e A372     		strb	r3, [r4, #10]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 488              		.loc 1 52 2 view .LVU108
 489 0190 0222     		movs	r2, #2
 490 0192 3146     		mov	r1, r6
 491 0194 2046     		mov	r0, r4
 492 0196 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 493              	.LVL38:
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 494              		.loc 1 53 2 view .LVU109
 495 019a 6572     		strb	r5, [r4, #9]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 496              		.loc 1 53 2 view .LVU110
 497 019c A772     		strb	r7, [r4, #10]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 498              		.loc 1 53 2 view .LVU111
 499 019e 0222     		movs	r2, #2
 500 01a0 3146     		mov	r1, r6
 501 01a2 2046     		mov	r0, r4
 502 01a4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 503              	.LVL39:
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 504              		.loc 1 54 2 view .LVU112
 505 01a8 6572     		strb	r5, [r4, #9]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 506              		.loc 1 54 2 view .LVU113
 507 01aa 8D23     		movs	r3, #141
 508 01ac A372     		strb	r3, [r4, #10]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 509              		.loc 1 54 2 view .LVU114
 510 01ae 0222     		movs	r2, #2
 511 01b0 3146     		mov	r1, r6
 512 01b2 2046     		mov	r0, r4
 513 01b4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 514              	.LVL40:
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 515              		.loc 1 55 2 view .LVU115
 516 01b8 6572     		strb	r5, [r4, #9]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 517              		.loc 1 55 2 view .LVU116
 518 01ba 1423     		movs	r3, #20
 519 01bc A372     		strb	r3, [r4, #10]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 520              		.loc 1 55 2 view .LVU117
 521 01be 0222     		movs	r2, #2
 522 01c0 3146     		mov	r1, r6
 523 01c2 2046     		mov	r0, r4
 524 01c4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 525              	.LVL41:
  56:Core/Src/oled.cpp **** 
 526              		.loc 1 56 2 view .LVU118
 527 01c8 6572     		strb	r5, [r4, #9]
  56:Core/Src/oled.cpp **** 
ARM GAS  /tmp/ccfSqDSx.s 			page 13


 528              		.loc 1 56 2 view .LVU119
 529 01ca AF23     		movs	r3, #175
 530 01cc A372     		strb	r3, [r4, #10]
  56:Core/Src/oled.cpp **** 
 531              		.loc 1 56 2 view .LVU120
 532 01ce 0222     		movs	r2, #2
 533 01d0 3146     		mov	r1, r6
 534 01d2 2046     		mov	r0, r4
 535 01d4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 536              	.LVL42:
  58:Core/Src/oled.cpp **** 
 537              		.loc 1 58 5 view .LVU121
 538 01d8 6572     		strb	r5, [r4, #9]
  58:Core/Src/oled.cpp **** 
 539              		.loc 1 58 5 view .LVU122
 540 01da 2E23     		movs	r3, #46
 541 01dc A372     		strb	r3, [r4, #10]
  58:Core/Src/oled.cpp **** 
 542              		.loc 1 58 5 view .LVU123
 543 01de 0222     		movs	r2, #2
 544 01e0 3146     		mov	r1, r6
 545 01e2 2046     		mov	r0, r4
 546 01e4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 547              	.LVL43:
  60:Core/Src/oled.cpp **** 
 548              		.loc 1 60 5 view .LVU124
  60:Core/Src/oled.cpp **** 
 549              		.loc 1 60 26 is_stmt 0 view .LVU125
 550 01e8 6068     		ldr	r0, [r4, #4]
 551 01ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 552              	.LVL44:
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 553              		.loc 1 62 1 view .LVU126
 554 01ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  62:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 555              		.loc 1 62 1 view .LVU127
 556              		.cfi_endproc
 557              	.LFE134:
 558              		.fnend
 560              		.section	.text._ZN4oled10oled_printEPc9FontDef_ttt,"ax",%progbits
 561              		.align	1
 562              		.global	_ZN4oled10oled_printEPc9FontDef_ttt
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	_ZN4oled10oled_printEPc9FontDef_ttt:
 569              		.fnstart
 570              	.LVL45:
 571              	.LFB138:
  74:Core/Src/oled.cpp **** void oled::oled_refresh(void)
  75:Core/Src/oled.cpp **** {
  76:Core/Src/oled.cpp **** 	uint8_t m;
  77:Core/Src/oled.cpp **** 	
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
ARM GAS  /tmp/ccfSqDSx.s 			page 14


  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
  83:Core/Src/oled.cpp **** 		/* Write multi data */
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
  85:Core/Src/oled.cpp **** 	}
  86:Core/Src/oled.cpp **** 	Counter_increment();
  87:Core/Src/oled.cpp **** }
  88:Core/Src/oled.cpp **** 
  89:Core/Src/oled.cpp **** void oled::oled_print(char* string, FontDef_t size, uint16_t x , uint16_t y)
  90:Core/Src/oled.cpp **** {	
 572              		.loc 1 90 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 8, pretend = 0, frame = 8
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		.loc 1 90 1 is_stmt 0 view .LVU129
 577 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 578              	.LCFI7:
 579              		.cfi_def_cfa_offset 28
 580              		.cfi_offset 4, -28
 581              		.cfi_offset 5, -24
 582              		.cfi_offset 6, -20
 583              		.cfi_offset 7, -16
 584              		.cfi_offset 8, -12
 585              		.cfi_offset 9, -8
 586              		.cfi_offset 14, -4
 587 0004 83B0     		sub	sp, sp, #12
 588              	.LCFI8:
 589              		.cfi_def_cfa_offset 40
 590 0006 0646     		mov	r6, r0
 591 0008 0F46     		mov	r7, r1
 592 000a 02A9     		add	r1, sp, #8
 593              	.LVL46:
 594              		.loc 1 90 1 view .LVU130
 595 000c 01E90C00 		stmdb	r1, {r2, r3}
 596 0010 BDF82850 		ldrh	r5, [sp, #40]
 597 0014 BDF82C40 		ldrh	r4, [sp, #44]
  91:Core/Src/oled.cpp **** 	uint8_t strItr=0;
 598              		.loc 1 91 2 is_stmt 1 view .LVU131
 599              	.LVL47:
 600              		.loc 1 91 10 is_stmt 0 view .LVU132
 601 0018 4FF00008 		mov	r8, #0
 602 001c 79E0     		b	.L26
 603              	.LVL48:
 604              	.L16:
 605              	.LBB4:
  92:Core/Src/oled.cpp **** 	// //loop through the chars in the string
  93:Core/Src/oled.cpp **** 	while(strItr<=strlen(string)+3)
  94:Core/Src/oled.cpp **** 	{
  95:Core/Src/oled.cpp **** 		int i=0;
  96:Core/Src/oled.cpp **** 		int j=0;
  97:Core/Src/oled.cpp **** 		int b;
  98:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 100:Core/Src/oled.cpp **** 
 101:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 606              		.loc 1 101 25 discriminator 2 view .LVU133
 607 001e DB10     		asrs	r3, r3, #3
ARM GAS  /tmp/ccfSqDSx.s 			page 15


 608              		.loc 1 101 31 discriminator 2 view .LVU134
 609 0020 05EBC313 		add	r3, r5, r3, lsl #7
 610              		.loc 1 101 33 discriminator 2 view .LVU135
 611 0024 1344     		add	r3, r3, r2
 612              		.loc 1 101 36 discriminator 2 view .LVU136
 613 0026 3344     		add	r3, r3, r6
 614 0028 0020     		movs	r0, #0
 615 002a 9875     		strb	r0, [r3, #22]
  99:Core/Src/oled.cpp **** 
 616              		.loc 1 99 4 is_stmt 1 discriminator 2 view .LVU137
 617 002c 0132     		adds	r2, r2, #1
 618              	.LVL49:
 619              	.L17:
  99:Core/Src/oled.cpp **** 
 620              		.loc 1 99 18 discriminator 3 view .LVU138
  99:Core/Src/oled.cpp **** 
 621              		.loc 1 99 25 is_stmt 0 discriminator 3 view .LVU139
 622 002e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
  99:Core/Src/oled.cpp **** 
 623              		.loc 1 99 18 discriminator 3 view .LVU140
 624 0032 9342     		cmp	r3, r2
 625 0034 03DD     		ble	.L15
 626              		.loc 1 101 6 is_stmt 1 discriminator 2 view .LVU141
 627              		.loc 1 101 25 is_stmt 0 discriminator 2 view .LVU142
 628 0036 6318     		adds	r3, r4, r1
 629 0038 F1D5     		bpl	.L16
 630              		.loc 1 101 25 discriminator 2 view .LVU143
 631 003a 0733     		adds	r3, r3, #7
 632 003c EFE7     		b	.L16
 633              	.L15:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 634              		.loc 1 98 3 is_stmt 1 discriminator 2 view .LVU144
 635 003e 0131     		adds	r1, r1, #1
 636              	.LVL50:
 637              	.L18:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 638              		.loc 1 98 17 discriminator 1 view .LVU145
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 639              		.loc 1 98 24 is_stmt 0 discriminator 1 view .LVU146
 640 0040 9DF801C0 		ldrb	ip, [sp, #1]	@ zero_extendqisi2
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 641              		.loc 1 98 17 discriminator 1 view .LVU147
 642 0044 8C45     		cmp	ip, r1
 643 0046 01DD     		ble	.L27
  99:Core/Src/oled.cpp **** 
 644              		.loc 1 99 11 view .LVU148
 645 0048 0022     		movs	r2, #0
 646 004a F0E7     		b	.L17
 647              	.L27:
 102:Core/Src/oled.cpp **** 
 103:Core/Src/oled.cpp **** 				
 104:Core/Src/oled.cpp **** 			}
 105:Core/Src/oled.cpp **** 		}
 106:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
 648              		.loc 1 106 10 view .LVU149
 649 004c 0021     		movs	r1, #0
 650              	.LVL51:
ARM GAS  /tmp/ccfSqDSx.s 			page 16


 651              		.loc 1 106 10 view .LVU150
 652 004e 49E0     		b	.L14
 653              	.LVL52:
 654              	.L22:
 107:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 655              		.loc 1 110 25 view .LVU151
 656 0050 4FEAEE0E 		asr	lr, lr, #3
 657              		.loc 1 110 36 view .LVU152
 658 0054 05EBCE1E 		add	lr, r5, lr, lsl #7
 659 0058 9644     		add	lr, lr, r2
 660              		.loc 1 110 50 view .LVU153
 661 005a D3F10009 		rsbs	r9, r3, #0
 662 005e 03F00703 		and	r3, r3, #7
 663 0062 09F00709 		and	r9, r9, #7
 664 0066 58BF     		it	pl
 665 0068 C9F10003 		rsbpl	r3, r9, #0
 666              		.loc 1 110 40 view .LVU154
 667 006c 4FF00109 		mov	r9, #1
 668 0070 09FA03F9 		lsl	r9, r9, r3
 669              		.loc 1 110 36 view .LVU155
 670 0074 B644     		add	lr, lr, r6
 671 0076 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 672 007a 43EA0903 		orr	r3, r3, r9
 673 007e 8EF81630 		strb	r3, [lr, #22]
 674              	.L23:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 675              		.loc 1 108 4 is_stmt 1 discriminator 2 view .LVU156
 676 0082 0132     		adds	r2, r2, #1
 677              	.LVL53:
 678              	.L25:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 679              		.loc 1 108 18 discriminator 1 view .LVU157
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 680              		.loc 1 108 25 is_stmt 0 discriminator 1 view .LVU158
 681 0084 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 682              		.loc 1 108 18 discriminator 1 view .LVU159
 683 0088 9342     		cmp	r3, r2
 684 008a 2ADD     		ble	.L20
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 685              		.loc 1 109 5 is_stmt 1 view .LVU160
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 686              		.loc 1 109 12 is_stmt 0 view .LVU161
 687 008c 00FA02F3 		lsl	r3, r0, r2
 109:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 688              		.loc 1 109 5 view .LVU162
 689 0090 13F4004F 		tst	r3, #32768
 690 0094 06D0     		beq	.L21
 691              		.loc 1 110 6 is_stmt 1 view .LVU163
 692              		.loc 1 110 21 is_stmt 0 view .LVU164
 693 0096 6318     		adds	r3, r4, r1
 694              		.loc 1 110 25 view .LVU165
 695 0098 9E46     		mov	lr, r3
 696 009a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccfSqDSx.s 			page 17


 697 009c D8DA     		bge	.L22
 698              		.loc 1 110 25 view .LVU166
 699 009e 03F1070E 		add	lr, r3, #7
 700 00a2 D5E7     		b	.L22
 701              	.L21:
 111:Core/Src/oled.cpp **** 				} else {
 112:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]&= ~(1 << ((y+1) % 8));
 702              		.loc 1 112 6 is_stmt 1 view .LVU167
 703              		.loc 1 112 25 is_stmt 0 view .LVU168
 704 00a4 6318     		adds	r3, r4, r1
 705 00a6 1AD4     		bmi	.L29
 706              	.L24:
 707              		.loc 1 112 25 view .LVU169
 708 00a8 DB10     		asrs	r3, r3, #3
 709              		.loc 1 112 36 view .LVU170
 710 00aa 05EBC313 		add	r3, r5, r3, lsl #7
 711 00ae 03EB020E 		add	lr, r3, r2
 712              		.loc 1 112 49 view .LVU171
 713 00b2 631C     		adds	r3, r4, #1
 714              		.loc 1 112 53 view .LVU172
 715 00b4 D3F10009 		rsbs	r9, r3, #0
 716 00b8 03F00703 		and	r3, r3, #7
 717 00bc 09F00709 		and	r9, r9, #7
 718 00c0 58BF     		it	pl
 719 00c2 C9F10003 		rsbpl	r3, r9, #0
 720              		.loc 1 112 43 view .LVU173
 721 00c6 4FF00109 		mov	r9, #1
 722 00ca 09FA03F9 		lsl	r9, r9, r3
 723              		.loc 1 112 36 view .LVU174
 724 00ce B644     		add	lr, lr, r6
 725 00d0 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 726 00d4 23EA0903 		bic	r3, r3, r9
 727 00d8 8EF81630 		strb	r3, [lr, #22]
 728 00dc D1E7     		b	.L23
 729              	.L29:
 730              		.loc 1 112 25 view .LVU175
 731 00de 0733     		adds	r3, r3, #7
 732 00e0 E2E7     		b	.L24
 733              	.L20:
 106:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 734              		.loc 1 106 3 is_stmt 1 discriminator 2 view .LVU176
 735 00e2 0131     		adds	r1, r1, #1
 736              	.LVL54:
 737              	.L14:
 106:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 738              		.loc 1 106 17 discriminator 1 view .LVU177
 739 00e4 8C45     		cmp	ip, r1
 740 00e6 08DD     		ble	.L19
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 741              		.loc 1 107 4 view .LVU178
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 742              		.loc 1 107 19 is_stmt 0 view .LVU179
 743 00e8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 744              		.loc 1 107 27 view .LVU180
 745 00ea 203B     		subs	r3, r3, #32
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
ARM GAS  /tmp/ccfSqDSx.s 			page 18


 746              		.loc 1 107 51 view .LVU181
 747 00ec 03FB0C13 		mla	r3, r3, ip, r1
 107:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 748              		.loc 1 107 54 view .LVU182
 749 00f0 019A     		ldr	r2, [sp, #4]
 750 00f2 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 751              	.LVL55:
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 752              		.loc 1 108 4 is_stmt 1 view .LVU183
 108:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 753              		.loc 1 108 11 is_stmt 0 view .LVU184
 754 00f6 0022     		movs	r2, #0
 755 00f8 C4E7     		b	.L25
 756              	.LVL56:
 757              	.L19:
 113:Core/Src/oled.cpp **** 
 114:Core/Src/oled.cpp **** 				}
 115:Core/Src/oled.cpp **** 			}
 116:Core/Src/oled.cpp **** 		}
 117:Core/Src/oled.cpp **** 		x=x+i-size.FontWidth/2;
 758              		.loc 1 117 3 is_stmt 1 view .LVU185
 759              		.loc 1 117 6 is_stmt 0 view .LVU186
 760 00fa 0D44     		add	r5, r5, r1
 761              	.LVL57:
 762              		.loc 1 117 6 view .LVU187
 763 00fc ADB2     		uxth	r5, r5
 764              		.loc 1 117 14 view .LVU188
 765 00fe 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 766              		.loc 1 117 4 view .LVU189
 767 0102 A5EB5305 		sub	r5, r5, r3, lsr #1
 768 0106 ADB2     		uxth	r5, r5
 769              	.LVL58:
 118:Core/Src/oled.cpp **** 
 119:Core/Src/oled.cpp **** 
 120:Core/Src/oled.cpp **** 	
 121:Core/Src/oled.cpp **** 		string++;
 770              		.loc 1 121 3 is_stmt 1 view .LVU190
 771              		.loc 1 121 9 is_stmt 0 view .LVU191
 772 0108 0137     		adds	r7, r7, #1
 773              	.LVL59:
 122:Core/Src/oled.cpp **** 		strItr++;
 774              		.loc 1 122 3 is_stmt 1 view .LVU192
 775              		.loc 1 122 9 is_stmt 0 view .LVU193
 776 010a 08F10108 		add	r8, r8, #1
 777              	.LVL60:
 778              		.loc 1 122 9 view .LVU194
 779 010e 5FFA88F8 		uxtb	r8, r8
 780              	.LVL61:
 781              	.L26:
 782              		.loc 1 122 9 view .LVU195
 783              	.LBE4:
  93:Core/Src/oled.cpp **** 	{
 784              		.loc 1 93 2 is_stmt 1 view .LVU196
  93:Core/Src/oled.cpp **** 	{
 785              		.loc 1 93 14 view .LVU197
  93:Core/Src/oled.cpp **** 	{
 786              		.loc 1 93 22 is_stmt 0 view .LVU198
ARM GAS  /tmp/ccfSqDSx.s 			page 19


 787 0112 3846     		mov	r0, r7
 788 0114 FFF7FEFF 		bl	strlen
 789              	.LVL62:
  93:Core/Src/oled.cpp **** 	{
 790              		.loc 1 93 30 view .LVU199
 791 0118 C31C     		adds	r3, r0, #3
  93:Core/Src/oled.cpp **** 	{
 792              		.loc 1 93 14 view .LVU200
 793 011a 9845     		cmp	r8, r3
 794 011c 01D8     		bhi	.L12
 795              	.LBB5:
  98:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 796              		.loc 1 98 10 view .LVU201
 797 011e 0021     		movs	r1, #0
 798 0120 8EE7     		b	.L18
 799              	.L12:
 800              	.LBE5:
 123:Core/Src/oled.cpp **** 	}
 124:Core/Src/oled.cpp **** }
 801              		.loc 1 124 1 view .LVU202
 802 0122 03B0     		add	sp, sp, #12
 803              	.LCFI9:
 804              		.cfi_def_cfa_offset 28
 805              		@ sp needed
 806 0124 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 807              		.loc 1 124 1 view .LVU203
 808              		.cfi_endproc
 809              	.LFE138:
 810              		.cantunwind
 811              		.fnend
 813              		.global	__aeabi_f2d
 814              		.section	.rodata._ZN4oled19oled_update_batteryEf.str1.4,"aMS",%progbits,1
 815              		.align	2
 816              	.LC0:
 817 0000 252E3166 		.ascii	"%.1fv\000"
 817      7600
 818              		.section	.text._ZN4oled19oled_update_batteryEf,"ax",%progbits
 819              		.align	1
 820              		.global	_ZN4oled19oled_update_batteryEf
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	_ZN4oled19oled_update_batteryEf:
 827              		.fnstart
 828              	.LVL63:
 829              	.LFB139:
 125:Core/Src/oled.cpp **** void oled::oled_update_battery(float voltage)
 126:Core/Src/oled.cpp **** {
 830              		.loc 1 126 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 24
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 126 1 is_stmt 0 view .LVU205
 835 0000 10B5     		push	{r4, lr}
 836              	.LCFI10:
 837              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfSqDSx.s 			page 20


 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 88B0     		sub	sp, sp, #32
 841              	.LCFI11:
 842              		.cfi_def_cfa_offset 40
 843 0004 0446     		mov	r4, r0
 844 0006 10EE100A 		vmov	r0, s0
 845              	.LVL64:
 127:Core/Src/oled.cpp **** 	char volt [20];
 846              		.loc 1 127 2 is_stmt 1 view .LVU206
 128:Core/Src/oled.cpp **** 	sprintf(volt,"%.1fv",voltage);
 847              		.loc 1 128 2 view .LVU207
 848              		.loc 1 128 9 is_stmt 0 view .LVU208
 849 000a FFF7FEFF 		bl	__aeabi_f2d
 850              	.LVL65:
 851              		.loc 1 128 9 view .LVU209
 852 000e 0246     		mov	r2, r0
 853 0010 0B46     		mov	r3, r1
 854 0012 0849     		ldr	r1, .L32
 855 0014 03A8     		add	r0, sp, #12
 856 0016 FFF7FEFF 		bl	sprintf
 857              	.LVL66:
 129:Core/Src/oled.cpp **** 	oled_print(volt,Font_7x10,90,0);
 858              		.loc 1 129 2 is_stmt 1 view .LVU210
 859              		.loc 1 129 12 is_stmt 0 view .LVU211
 860 001a 074B     		ldr	r3, .L32+4
 861 001c 0022     		movs	r2, #0
 862 001e 0192     		str	r2, [sp, #4]
 863 0020 5A22     		movs	r2, #90
 864 0022 0092     		str	r2, [sp]
 865 0024 0CCB     		ldm	r3, {r2, r3}
 866 0026 03A9     		add	r1, sp, #12
 867 0028 2046     		mov	r0, r4
 868 002a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 869              	.LVL67:
 130:Core/Src/oled.cpp **** }
 870              		.loc 1 130 1 view .LVU212
 871 002e 08B0     		add	sp, sp, #32
 872              	.LCFI12:
 873              		.cfi_def_cfa_offset 8
 874              		@ sp needed
 875 0030 10BD     		pop	{r4, pc}
 876              	.LVL68:
 877              	.L33:
 878              		.loc 1 130 1 view .LVU213
 879 0032 00BF     		.align	2
 880              	.L32:
 881 0034 00000000 		.word	.LC0
 882 0038 00000000 		.word	Font_7x10
 883              		.cfi_endproc
 884              	.LFE139:
 885              		.cantunwind
 886              		.fnend
 888              		.section	.text._ZN4oled8oled_offEv,"ax",%progbits
 889              		.align	1
 890              		.global	_ZN4oled8oled_offEv
 891              		.syntax unified
ARM GAS  /tmp/ccfSqDSx.s 			page 21


 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv4-sp-d16
 896              	_ZN4oled8oled_offEv:
 897              		.fnstart
 898              	.LVL69:
 899              	.LFB140:
 131:Core/Src/oled.cpp **** 
 132:Core/Src/oled.cpp **** void oled::oled_off()
 133:Core/Src/oled.cpp **** {
 900              		.loc 1 133 1 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		.loc 1 133 1 is_stmt 0 view .LVU215
 905 0000 38B5     		push	{r3, r4, r5, lr}
 906              		.save {r3, r4, r5, lr}
 907              	.LCFI13:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 3, -16
 910              		.cfi_offset 4, -12
 911              		.cfi_offset 5, -8
 912              		.cfi_offset 14, -4
 913 0002 0446     		mov	r4, r0
 134:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAE); //display off
 914              		.loc 1 134 2 is_stmt 1 view .LVU216
 915 0004 0025     		movs	r5, #0
 916 0006 4572     		strb	r5, [r0, #9]
 917              		.loc 1 134 2 view .LVU217
 918 0008 AE23     		movs	r3, #174
 919 000a 8372     		strb	r3, [r0, #10]
 920              		.loc 1 134 2 view .LVU218
 921 000c 0222     		movs	r2, #2
 922 000e 00F10901 		add	r1, r0, #9
 923 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 924              	.LVL70:
 135:Core/Src/oled.cpp **** 	oledOn=0;
 925              		.loc 1 135 2 view .LVU219
 926              		.loc 1 135 8 is_stmt 0 view .LVU220
 927 0016 6575     		strb	r5, [r4, #21]
 136:Core/Src/oled.cpp **** }
 928              		.loc 1 136 1 view .LVU221
 929 0018 38BD     		pop	{r3, r4, r5, pc}
 930              		.loc 1 136 1 view .LVU222
 931              		.cfi_endproc
 932              	.LFE140:
 933              		.fnend
 935              		.section	.text._ZN4oled13oled_isOledOnEv,"ax",%progbits
 936              		.align	1
 937              		.global	_ZN4oled13oled_isOledOnEv
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu fpv4-sp-d16
 943              	_ZN4oled13oled_isOledOnEv:
 944              		.fnstart
 945              	.LVL71:
ARM GAS  /tmp/ccfSqDSx.s 			page 22


 946              	.LFB142:
 137:Core/Src/oled.cpp **** 
 138:Core/Src/oled.cpp **** void oled::oled_on()
 139:Core/Src/oled.cpp **** {
 140:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 141:Core/Src/oled.cpp **** 	oledOn=1;
 142:Core/Src/oled.cpp **** 	oled_resetTimer();
 143:Core/Src/oled.cpp **** }
 144:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 145:Core/Src/oled.cpp **** {
 947              		.loc 1 145 1 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 146:Core/Src/oled.cpp **** 	return oledOn;
 952              		.loc 1 146 2 view .LVU224
 147:Core/Src/oled.cpp **** }
 953              		.loc 1 147 1 is_stmt 0 view .LVU225
 954 0000 407D     		ldrb	r0, [r0, #21]	@ zero_extendqisi2
 955              	.LVL72:
 956              		.loc 1 147 1 view .LVU226
 957 0002 7047     		bx	lr
 958              		.cfi_endproc
 959              	.LFE142:
 960              		.cantunwind
 961              		.fnend
 963              		.section	.text._ZN4oled15oled_resetTimerEv,"ax",%progbits
 964              		.align	1
 965              		.global	_ZN4oled15oled_resetTimerEv
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu fpv4-sp-d16
 971              	_ZN4oled15oled_resetTimerEv:
 972              		.fnstart
 973              	.LVL73:
 974              	.LFB143:
 148:Core/Src/oled.cpp **** void oled::oled_resetTimer()
 149:Core/Src/oled.cpp **** {
 975              		.loc 1 149 1 is_stmt 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 150:Core/Src/oled.cpp **** 	tmoCounter = 0;
 980              		.loc 1 150 2 view .LVU228
 981              		.loc 1 150 13 is_stmt 0 view .LVU229
 982 0000 0023     		movs	r3, #0
 983 0002 C360     		str	r3, [r0, #12]
 151:Core/Src/oled.cpp **** }
 984              		.loc 1 151 1 view .LVU230
 985 0004 7047     		bx	lr
 986              		.cfi_endproc
 987              	.LFE143:
 988              		.cantunwind
 989              		.fnend
ARM GAS  /tmp/ccfSqDSx.s 			page 23


 991              		.section	.text._ZN4oled7oled_onEv,"ax",%progbits
 992              		.align	1
 993              		.global	_ZN4oled7oled_onEv
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv4-sp-d16
 999              	_ZN4oled7oled_onEv:
 1000              		.fnstart
 1001              	.LVL74:
 1002              	.LFB141:
 139:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 1003              		.loc 1 139 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 139:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 1007              		.loc 1 139 1 is_stmt 0 view .LVU232
 1008 0000 10B5     		push	{r4, lr}
 1009              		.save {r4, lr}
 1010              	.LCFI14:
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 4, -8
 1013              		.cfi_offset 14, -4
 1014 0002 0446     		mov	r4, r0
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1015              		.loc 1 140 2 is_stmt 1 view .LVU233
 1016 0004 0023     		movs	r3, #0
 1017 0006 4372     		strb	r3, [r0, #9]
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1018              		.loc 1 140 2 view .LVU234
 1019 0008 AF23     		movs	r3, #175
 1020 000a 8372     		strb	r3, [r0, #10]
 140:Core/Src/oled.cpp **** 	oledOn=1;
 1021              		.loc 1 140 2 view .LVU235
 1022 000c 0222     		movs	r2, #2
 1023 000e 00F10901 		add	r1, r0, #9
 1024 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1025              	.LVL75:
 141:Core/Src/oled.cpp **** 	oled_resetTimer();
 1026              		.loc 1 141 2 view .LVU236
 141:Core/Src/oled.cpp **** 	oled_resetTimer();
 1027              		.loc 1 141 8 is_stmt 0 view .LVU237
 1028 0016 0123     		movs	r3, #1
 1029 0018 6375     		strb	r3, [r4, #21]
 142:Core/Src/oled.cpp **** }
 1030              		.loc 1 142 2 is_stmt 1 view .LVU238
 142:Core/Src/oled.cpp **** }
 1031              		.loc 1 142 17 is_stmt 0 view .LVU239
 1032 001a 2046     		mov	r0, r4
 1033 001c FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1034              	.LVL76:
 143:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 1035              		.loc 1 143 1 view .LVU240
 1036 0020 10BD     		pop	{r4, pc}
 143:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 1037              		.loc 1 143 1 view .LVU241
ARM GAS  /tmp/ccfSqDSx.s 			page 24


 1038              		.cfi_endproc
 1039              	.LFE141:
 1040              		.fnend
 1042              		.section	.text._ZN4oled13oled_setTimerEm,"ax",%progbits
 1043              		.align	1
 1044              		.global	_ZN4oled13oled_setTimerEm
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv4-sp-d16
 1050              	_ZN4oled13oled_setTimerEm:
 1051              		.fnstart
 1052              	.LVL77:
 1053              	.LFB144:
 152:Core/Src/oled.cpp **** 
 153:Core/Src/oled.cpp **** void oled::oled_setTimer(uint32_t time)
 154:Core/Src/oled.cpp **** {
 1054              		.loc 1 154 1 is_stmt 1 view -0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              		@ link register save eliminated.
 155:Core/Src/oled.cpp **** 	tmoValue = ((time*1000)/66);
 1059              		.loc 1 155 2 view .LVU243
 1060              		.loc 1 155 19 is_stmt 0 view .LVU244
 1061 0000 4FF47A73 		mov	r3, #1000
 1062 0004 03FB01F3 		mul	r3, r3, r1
 1063              		.loc 1 155 25 view .LVU245
 1064 0008 0249     		ldr	r1, .L41
 1065              	.LVL78:
 1066              		.loc 1 155 25 view .LVU246
 1067 000a A1FB0323 		umull	r2, r3, r1, r3
 1068 000e 1B09     		lsrs	r3, r3, #4
 1069              		.loc 1 155 11 view .LVU247
 1070 0010 0361     		str	r3, [r0, #16]
 156:Core/Src/oled.cpp **** 	
 157:Core/Src/oled.cpp **** }
 1071              		.loc 1 157 1 view .LVU248
 1072 0012 7047     		bx	lr
 1073              	.L42:
 1074              		.align	2
 1075              	.L41:
 1076 0014 E1830F3E 		.word	1041204193
 1077              		.cfi_endproc
 1078              	.LFE144:
 1079              		.cantunwind
 1080              		.fnend
 1082              		.section	.text._ZN4oled17Counter_incrementEv,"ax",%progbits
 1083              		.align	1
 1084              		.global	_ZN4oled17Counter_incrementEv
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu fpv4-sp-d16
 1090              	_ZN4oled17Counter_incrementEv:
 1091              		.fnstart
 1092              	.LVL79:
ARM GAS  /tmp/ccfSqDSx.s 			page 25


 1093              	.LFB145:
 158:Core/Src/oled.cpp **** 
 159:Core/Src/oled.cpp **** void oled::Counter_increment(void)
 160:Core/Src/oled.cpp **** {
 1094              		.loc 1 160 1 is_stmt 1 view -0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		.loc 1 160 1 is_stmt 0 view .LVU250
 1099 0000 08B5     		push	{r3, lr}
 1100              		.save {r3, lr}
 1101              	.LCFI15:
 1102              		.cfi_def_cfa_offset 8
 1103              		.cfi_offset 3, -8
 1104              		.cfi_offset 14, -4
 161:Core/Src/oled.cpp **** 	tmoCounter++;
 1105              		.loc 1 161 2 is_stmt 1 view .LVU251
 1106 0002 C368     		ldr	r3, [r0, #12]
 1107              		.loc 1 161 12 is_stmt 0 view .LVU252
 1108 0004 0133     		adds	r3, r3, #1
 1109 0006 C360     		str	r3, [r0, #12]
 162:Core/Src/oled.cpp **** 	if(tmoValue == tmoCounter)
 1110              		.loc 1 162 2 is_stmt 1 view .LVU253
 1111              		.loc 1 162 5 is_stmt 0 view .LVU254
 1112 0008 0269     		ldr	r2, [r0, #16]
 1113              		.loc 1 162 2 view .LVU255
 1114 000a 9342     		cmp	r3, r2
 1115 000c 00D0     		beq	.L46
 1116              	.LVL80:
 1117              	.L43:
 163:Core/Src/oled.cpp **** 	{
 164:Core/Src/oled.cpp **** 		oled_off();
 165:Core/Src/oled.cpp **** 	}
 166:Core/Src/oled.cpp **** }...
 1118              		.loc 1 166 1 view .LVU256
 1119 000e 08BD     		pop	{r3, pc}
 1120              	.LVL81:
 1121              	.L46:
 164:Core/Src/oled.cpp **** 		oled_off();
 1122              		.loc 1 164 3 is_stmt 1 view .LVU257
 164:Core/Src/oled.cpp **** 		oled_off();
 1123              		.loc 1 164 11 is_stmt 0 view .LVU258
 1124 0010 FFF7FEFF 		bl	_ZN4oled8oled_offEv
 1125              	.LVL82:
 1126              		.loc 1 166 1 view .LVU259
 1127 0014 FBE7     		b	.L43
 1128              		.cfi_endproc
 1129              	.LFE145:
 1130              		.fnend
 1132              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 1133              		.align	1
 1134              		.global	_ZN4oled12oled_refreshEv
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv4-sp-d16
 1140              	_ZN4oled12oled_refreshEv:
ARM GAS  /tmp/ccfSqDSx.s 			page 26


 1141              		.fnstart
 1142              	.LVL83:
 1143              	.LFB137:
  75:Core/Src/oled.cpp **** {
 1144              		.loc 1 75 1 is_stmt 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/oled.cpp **** {
 1148              		.loc 1 75 1 is_stmt 0 view .LVU261
 1149 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1150              		.save {r3, r4, r5, r6, r7, lr}
 1151              	.LCFI16:
 1152              		.cfi_def_cfa_offset 24
 1153              		.cfi_offset 3, -24
 1154              		.cfi_offset 4, -20
 1155              		.cfi_offset 5, -16
 1156              		.cfi_offset 6, -12
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 0446     		mov	r4, r0
  76:Core/Src/oled.cpp **** 	uint8_t m;
 1160              		.loc 1 76 2 is_stmt 1 view .LVU262
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1161              		.loc 1 78 2 view .LVU263
 1162              	.LVL84:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1163              		.loc 1 78 9 is_stmt 0 view .LVU264
 1164 0004 0025     		movs	r5, #0
 1165 0006 28E0     		b	.L49
 1166              	.LVL85:
 1167              	.L51:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1168              		.loc 1 79 3 is_stmt 1 discriminator 2 view .LVU265
 1169 0008 0027     		movs	r7, #0
 1170 000a 6772     		strb	r7, [r4, #9]
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1171              		.loc 1 79 3 discriminator 2 view .LVU266
 1172 000c A5F15003 		sub	r3, r5, #80
 1173 0010 A372     		strb	r3, [r4, #10]
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1174              		.loc 1 79 3 discriminator 2 view .LVU267
 1175 0012 04F10906 		add	r6, r4, #9
 1176 0016 0222     		movs	r2, #2
 1177 0018 3146     		mov	r1, r6
 1178 001a 2046     		mov	r0, r4
 1179 001c FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1180              	.LVL86:
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1181              		.loc 1 80 3 discriminator 2 view .LVU268
 1182 0020 6772     		strb	r7, [r4, #9]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1183              		.loc 1 80 3 discriminator 2 view .LVU269
 1184 0022 A772     		strb	r7, [r4, #10]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1185              		.loc 1 80 3 discriminator 2 view .LVU270
 1186 0024 0222     		movs	r2, #2
ARM GAS  /tmp/ccfSqDSx.s 			page 27


 1187 0026 3146     		mov	r1, r6
 1188 0028 2046     		mov	r0, r4
 1189 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1190              	.LVL87:
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1191              		.loc 1 81 3 discriminator 2 view .LVU271
 1192 002e 6772     		strb	r7, [r4, #9]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1193              		.loc 1 81 3 discriminator 2 view .LVU272
 1194 0030 1023     		movs	r3, #16
 1195 0032 A372     		strb	r3, [r4, #10]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1196              		.loc 1 81 3 discriminator 2 view .LVU273
 1197 0034 0222     		movs	r2, #2
 1198 0036 3146     		mov	r1, r6
 1199 0038 2046     		mov	r0, r4
 1200 003a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1201              	.LVL88:
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1202              		.loc 1 82 9 discriminator 2 view .LVU274
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1203              		.loc 1 82 23 is_stmt 0 discriminator 2 view .LVU275
 1204 003e E901     		lsls	r1, r5, #7
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1205              		.loc 1 82 27 discriminator 2 view .LVU276
 1206 0040 04EBC513 		add	r3, r4, r5, lsl #7
 1207 0044 4022     		movs	r2, #64
 1208 0046 9A75     		strb	r2, [r3, #22]
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 1209              		.loc 1 84 3 is_stmt 1 discriminator 2 view .LVU277
  84:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
 1210              		.loc 1 84 13 is_stmt 0 discriminator 2 view .LVU278
 1211 0048 1031     		adds	r1, r1, #16
 1212 004a 2144     		add	r1, r1, r4
 1213 004c 8122     		movs	r2, #129
 1214 004e 0631     		adds	r1, r1, #6
 1215 0050 2046     		mov	r0, r4
 1216 0052 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1217              	.LVL89:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1218              		.loc 1 78 2 is_stmt 1 discriminator 2 view .LVU279
 1219 0056 0135     		adds	r5, r5, #1
 1220              	.LVL90:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1221              		.loc 1 78 2 is_stmt 0 discriminator 2 view .LVU280
 1222 0058 EDB2     		uxtb	r5, r5
 1223              	.LVL91:
 1224              	.L49:
  78:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
 1225              		.loc 1 78 16 is_stmt 1 discriminator 3 view .LVU281
 1226 005a 072D     		cmp	r5, #7
 1227 005c D4D9     		bls	.L51
  86:Core/Src/oled.cpp **** 	Counter_increment();
 1228              		.loc 1 86 2 view .LVU282
  86:Core/Src/oled.cpp **** 	Counter_increment();
 1229              		.loc 1 86 19 is_stmt 0 view .LVU283
 1230 005e 2046     		mov	r0, r4
ARM GAS  /tmp/ccfSqDSx.s 			page 28


 1231 0060 FFF7FEFF 		bl	_ZN4oled17Counter_incrementEv
 1232              	.LVL92:
  87:Core/Src/oled.cpp **** }
 1233              		.loc 1 87 1 view .LVU284
 1234 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  87:Core/Src/oled.cpp **** }
 1235              		.loc 1 87 1 view .LVU285
 1236              		.cfi_endproc
 1237              	.LFE137:
 1238              		.fnend
 1240              		.text
 1241              	.Letext0:
 1242              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1243              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1244              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1245              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1246              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1247              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1248              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1249              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1250              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1251              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1252              		.file 12 "/usr/include/newlib/sys/_types.h"
 1253              		.file 13 "/usr/include/newlib/sys/reent.h"
 1254              		.file 14 "/usr/include/newlib/sys/lock.h"
 1255              		.file 15 "Core/Inc/fonts.h"
 1256              		.file 16 "Core/Inc/oled.h"
 1257              		.file 17 "/usr/include/newlib/stdio.h"
 1258              		.file 18 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccfSqDSx.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.cpp
     /tmp/ccfSqDSx.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccfSqDSx.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/ccfSqDSx.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/ccfSqDSx.s:75     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/ccfSqDSx.s:82     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/ccfSqDSx.s:140    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/ccfSqDSx.s:147    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/ccfSqDSx.s:194    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:201    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:561    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $t
     /tmp/ccfSqDSx.s:568    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPc9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $d
     /tmp/ccfSqDSx.s:815    .rodata._ZN4oled19oled_update_batteryEf.str1.4:0000000000000000 $d
     /tmp/ccfSqDSx.s:819    .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
     /tmp/ccfSqDSx.s:826    .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/ccfSqDSx.s:881    .text._ZN4oled19oled_update_batteryEf:0000000000000034 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d
     /tmp/ccfSqDSx.s:889    .text._ZN4oled8oled_offEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:896    .text._ZN4oled8oled_offEv:0000000000000000 _ZN4oled8oled_offEv
.ARM.exidx.text._ZN4oled8oled_offEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:936    .text._ZN4oled13oled_isOledOnEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:943    .text._ZN4oled13oled_isOledOnEv:0000000000000000 _ZN4oled13oled_isOledOnEv
.ARM.exidx.text._ZN4oled13oled_isOledOnEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:964    .text._ZN4oled15oled_resetTimerEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:971    .text._ZN4oled15oled_resetTimerEv:0000000000000000 _ZN4oled15oled_resetTimerEv
.ARM.exidx.text._ZN4oled15oled_resetTimerEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:992    .text._ZN4oled7oled_onEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:999    .text._ZN4oled7oled_onEv:0000000000000000 _ZN4oled7oled_onEv
.ARM.exidx.text._ZN4oled7oled_onEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:1043   .text._ZN4oled13oled_setTimerEm:0000000000000000 $t
     /tmp/ccfSqDSx.s:1050   .text._ZN4oled13oled_setTimerEm:0000000000000000 _ZN4oled13oled_setTimerEm
     /tmp/ccfSqDSx.s:1076   .text._ZN4oled13oled_setTimerEm:0000000000000014 $d
.ARM.exidx.text._ZN4oled13oled_setTimerEm:0000000000000000 $d
     /tmp/ccfSqDSx.s:1083   .text._ZN4oled17Counter_incrementEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:1090   .text._ZN4oled17Counter_incrementEv:0000000000000000 _ZN4oled17Counter_incrementEv
.ARM.extab.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
.ARM.exidx.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
     /tmp/ccfSqDSx.s:1133   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccfSqDSx.s:1140   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
.ARM.exidx.text._ZN4oled12oled_refreshEv:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Master_Transmit
__aeabi_unwind_cpp_pr0
HAL_I2C_IsDeviceReady
HAL_TIM_Base_Start_IT
strlen
__aeabi_f2d
sprintf
Font_7x10
ARM GAS  /tmp/ccfSqDSx.s 			page 30


__aeabi_unwind_cpp_pr1
