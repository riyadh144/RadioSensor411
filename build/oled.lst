ARM GAS  /tmp/ccbFoK9Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB139:
  30              		.file 1 "Core/Src/oled.cpp"
   1:Core/Src/oled.cpp **** #include "oled.h"
   2:Core/Src/oled.cpp **** #include "stdlib.h"
   3:Core/Src/oled.cpp **** 
   4:Core/Src/oled.cpp **** 
   5:Core/Src/oled.cpp **** #define OLED_RIGHT_HORIZONTAL_SCROLL              0x26
   6:Core/Src/oled.cpp **** #define OLED_LEFT_HORIZONTAL_SCROLL               0x27
   7:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
   8:Core/Src/oled.cpp **** #define OLED_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL  0x2A
   9:Core/Src/oled.cpp **** #define OLED_DEACTIVATE_SCROLL                    0x2E // Stop scroll
  10:Core/Src/oled.cpp **** #define OLED_ACTIVATE_SCROLL                      0x2F // Start scroll
  11:Core/Src/oled.cpp **** #define OLED_SET_VERTICAL_SCROLL_AREA             0xA3 // Set scroll range
  12:Core/Src/oled.cpp **** 
  13:Core/Src/oled.cpp **** #define OLED_NORMALDISPLAY       0xA6
  14:Core/Src/oled.cpp **** #define OLED_INVERTDISPLAY       0xA7
  15:Core/Src/oled.cpp **** 
  16:Core/Src/oled.cpp **** 
  17:Core/Src/oled.cpp **** #define OLED_WRITECOMMAND(command)      comm[0]=COMMAND; comm[1]=(command); oled_write(comm,2)
  18:Core/Src/oled.cpp **** 
  19:Core/Src/oled.cpp **** oled::oled(I2C_HandleTypeDef *hi2c, uint8_t address,TIM_HandleTypeDef *htim)
  31              		.loc 1 19 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 19 1 is_stmt 0 view .LVU1
  37 0000 70B4     		push	{r4, r5, r6}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccbFoK9Z.s 			page 2


  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 6, -4
  43              	.LBB2:
  44              		.loc 1 19 76 view .LVU2
  45 0002 0025     		movs	r5, #0
  46 0004 C560     		str	r5, [r0, #12]
  47 0006 3C26     		movs	r6, #60
  48 0008 0661     		str	r6, [r0, #16]
  49 000a 0575     		strb	r5, [r0, #20]
  50 000c 0125     		movs	r5, #1
  51 000e 4575     		strb	r5, [r0, #21]
  20:Core/Src/oled.cpp **** {
  21:Core/Src/oled.cpp ****     this->hi2c=hi2c;
  52              		.loc 1 21 5 is_stmt 1 view .LVU3
  53              		.loc 1 21 15 is_stmt 0 view .LVU4
  54 0010 0160     		str	r1, [r0]
  22:Core/Src/oled.cpp **** 	this->address=address;
  55              		.loc 1 22 2 is_stmt 1 view .LVU5
  56              		.loc 1 22 15 is_stmt 0 view .LVU6
  57 0012 0272     		strb	r2, [r0, #8]
  23:Core/Src/oled.cpp **** 	this->htim=htim;
  58              		.loc 1 23 2 is_stmt 1 view .LVU7
  59              		.loc 1 23 12 is_stmt 0 view .LVU8
  60 0014 4360     		str	r3, [r0, #4]
  61              	.LBE2:
  24:Core/Src/oled.cpp **** }
  62              		.loc 1 24 1 view .LVU9
  63 0016 70BC     		pop	{r4, r5, r6}
  64              	.LCFI1:
  65              		.cfi_restore 6
  66              		.cfi_restore 5
  67              		.cfi_restore 4
  68              		.cfi_def_cfa_offset 0
  69 0018 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE139:
  72              		.cantunwind
  73              		.fnend
  75              		.global	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
  76              		.thumb_set _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef,_ZN4oledC2EP17I2C_HandleTypeDefhP1
  77              		.section	.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE,"ax",%progbits
  78              		.align	1
  79              		.global	_ZN4oled9oled_fillENS_12OLED_COLOR_tE
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	_ZN4oled9oled_fillENS_12OLED_COLOR_tE:
  86              		.fnstart
  87              	.LVL1:
  88              	.LFB142:
  25:Core/Src/oled.cpp **** void oled::init(void)
  26:Core/Src/oled.cpp **** {
  27:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
  28:Core/Src/oled.cpp **** 	}
  29:Core/Src/oled.cpp ****     
ARM GAS  /tmp/ccbFoK9Z.s 			page 3


  30:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(0xAE); //display off
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
  57:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
  58:Core/Src/oled.cpp **** 
  59:Core/Src/oled.cpp ****     OLED_WRITECOMMAND(OLED_DEACTIVATE_SCROLL); //Deactivate scroll
  60:Core/Src/oled.cpp **** 
  61:Core/Src/oled.cpp ****     HAL_TIM_Base_Start_IT(htim);
  62:Core/Src/oled.cpp **** 
  63:Core/Src/oled.cpp **** }
  64:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
  89              		.loc 1 64 42 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		.loc 1 64 42 is_stmt 0 view .LVU11
  94 0000 70B5     		push	{r4, r5, r6, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 4, -16
  98              		.cfi_offset 5, -12
  99              		.cfi_offset 6, -8
 100              		.cfi_offset 14, -4
 101 0002 0646     		mov	r6, r0
 102 0004 0D46     		mov	r5, r1
  65:Core/Src/oled.cpp **** 	/* Set memory */
  66:Core/Src/oled.cpp ****     for (uint8_t m = 0; m < 8; m++) {
 103              		.loc 1 66 5 is_stmt 1 view .LVU12
 104              	.LVL2:
 105              	.LBB3:
 106              		.loc 1 66 18 is_stmt 0 view .LVU13
 107 0006 0024     		movs	r4, #0
 108 0008 09E0     		b	.L5
ARM GAS  /tmp/ccbFoK9Z.s 			page 4


 109              	.LVL3:
 110              	.L7:
  67:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 111              		.loc 1 67 2 is_stmt 1 discriminator 2 view .LVU14
 112              		.loc 1 67 24 is_stmt 0 discriminator 2 view .LVU15
 113 000a E001     		lsls	r0, r4, #7
 114              		.loc 1 67 9 discriminator 2 view .LVU16
 115 000c 1130     		adds	r0, r0, #17
 116 000e 3044     		add	r0, r0, r6
 117              		.loc 1 67 8 discriminator 2 view .LVU17
 118 0010 8022     		movs	r2, #128
 119 0012 2946     		mov	r1, r5
 120 0014 0630     		adds	r0, r0, #6
 121 0016 FFF7FEFF 		bl	memset
 122              	.LVL4:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 123              		.loc 1 66 5 is_stmt 1 discriminator 2 view .LVU18
 124 001a 0134     		adds	r4, r4, #1
 125              	.LVL5:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 126              		.loc 1 66 5 is_stmt 0 discriminator 2 view .LVU19
 127 001c E4B2     		uxtb	r4, r4
 128              	.LVL6:
 129              	.L5:
  66:Core/Src/oled.cpp **** 	memset(&oled_buffer[W * m + 1], (uint8_t)color, W);
 130              		.loc 1 66 27 is_stmt 1 discriminator 3 view .LVU20
 131 001e 072C     		cmp	r4, #7
 132 0020 F3D9     		bls	.L7
 133              	.LBE3:
  68:Core/Src/oled.cpp ****     }
  69:Core/Src/oled.cpp **** }
 134              		.loc 1 69 1 is_stmt 0 view .LVU21
 135 0022 70BD     		pop	{r4, r5, r6, pc}
 136              		.loc 1 69 1 view .LVU22
 137              		.cfi_endproc
 138              	.LFE142:
 139              		.cantunwind
 140              		.fnend
 142              		.section	.text._ZN4oled10oled_writeEPht,"ax",%progbits
 143              		.align	1
 144              		.global	_ZN4oled10oled_writeEPht
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	_ZN4oled10oled_writeEPht:
 151              		.fnstart
 152              	.LVL7:
 153              	.LFB143:
  70:Core/Src/oled.cpp **** uint8_t oled::oled_write(uint8_t* data, uint16_t count)
  71:Core/Src/oled.cpp **** {
 154              		.loc 1 71 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		.loc 1 71 1 is_stmt 0 view .LVU24
 159 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccbFoK9Z.s 			page 5


 160              		.save {lr}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 14, -4
 164              		.pad #12
 165 0002 83B0     		sub	sp, sp, #12
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 16
 168 0004 1346     		mov	r3, r2
  72:Core/Src/oled.cpp **** 	HAL_I2C_Master_Transmit(hi2c, address, data, count, 10);
 169              		.loc 1 72 2 is_stmt 1 view .LVU25
 170              		.loc 1 72 25 is_stmt 0 view .LVU26
 171 0006 0A22     		movs	r2, #10
 172              	.LVL8:
 173              		.loc 1 72 25 view .LVU27
 174 0008 0092     		str	r2, [sp]
 175 000a 0A46     		mov	r2, r1
 176 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 177              	.LVL9:
 178              		.loc 1 72 25 view .LVU28
 179 000e 0068     		ldr	r0, [r0]
 180              	.LVL10:
 181              		.loc 1 72 25 view .LVU29
 182 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 183              	.LVL11:
  73:Core/Src/oled.cpp ****     return 1;
 184              		.loc 1 73 5 is_stmt 1 view .LVU30
  74:Core/Src/oled.cpp **** }
 185              		.loc 1 74 1 is_stmt 0 view .LVU31
 186 0014 0120     		movs	r0, #1
 187 0016 03B0     		add	sp, sp, #12
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 4
 190              		@ sp needed
 191 0018 5DF804FB 		ldr	pc, [sp], #4
 192              		.cfi_endproc
 193              	.LFE143:
 194              		.fnend
 196              		.section	.text._ZN4oled4initEv,"ax",%progbits
 197              		.align	1
 198              		.global	_ZN4oled4initEv
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv4-sp-d16
 204              	_ZN4oled4initEv:
 205              		.fnstart
 206              	.LVL12:
 207              	.LFB141:
  26:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 208              		.loc 1 26 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
  26:Core/Src/oled.cpp **** 	if (HAL_I2C_IsDeviceReady(this->hi2c, this->address, 1, 20000) != HAL_OK) {
 212              		.loc 1 26 1 is_stmt 0 view .LVU33
 213 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /tmp/ccbFoK9Z.s 			page 6


 214              		.save {r4, r5, r6, r7, r8, lr}
 215              	.LCFI6:
 216              		.cfi_def_cfa_offset 24
 217              		.cfi_offset 4, -24
 218              		.cfi_offset 5, -20
 219              		.cfi_offset 6, -16
 220              		.cfi_offset 7, -12
 221              		.cfi_offset 8, -8
 222              		.cfi_offset 14, -4
 223 0004 0446     		mov	r4, r0
  27:Core/Src/oled.cpp **** 	}
 224              		.loc 1 27 2 is_stmt 1 view .LVU34
  27:Core/Src/oled.cpp **** 	}
 225              		.loc 1 27 27 is_stmt 0 view .LVU35
 226 0006 44F62063 		movw	r3, #20000
 227 000a 0122     		movs	r2, #1
 228 000c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 229 000e 0068     		ldr	r0, [r0]
 230              	.LVL13:
  27:Core/Src/oled.cpp **** 	}
 231              		.loc 1 27 27 view .LVU36
 232 0010 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 233              	.LVL14:
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 234              		.loc 1 30 5 is_stmt 1 view .LVU37
 235 0014 0025     		movs	r5, #0
 236 0016 6572     		strb	r5, [r4, #9]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 237              		.loc 1 30 5 view .LVU38
 238 0018 AE23     		movs	r3, #174
 239 001a A372     		strb	r3, [r4, #10]
  30:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //Set Memory Addressing Mode   
 240              		.loc 1 30 5 view .LVU39
 241 001c 04F10906 		add	r6, r4, #9
 242 0020 0222     		movs	r2, #2
 243 0022 3146     		mov	r1, r6
 244 0024 2046     		mov	r0, r4
 245 0026 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 246              	.LVL15:
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 247              		.loc 1 31 2 view .LVU40
 248 002a 6572     		strb	r5, [r4, #9]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 249              		.loc 1 31 2 view .LVU41
 250 002c 2027     		movs	r7, #32
 251 002e A772     		strb	r7, [r4, #10]
  31:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addre
 252              		.loc 1 31 2 view .LVU42
 253 0030 0222     		movs	r2, #2
 254 0032 3146     		mov	r1, r6
 255 0034 2046     		mov	r0, r4
 256 0036 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 257              	.LVL16:
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 258              		.loc 1 32 2 view .LVU43
 259 003a 6572     		strb	r5, [r4, #9]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
ARM GAS  /tmp/ccbFoK9Z.s 			page 7


 260              		.loc 1 32 2 view .LVU44
 261 003c 4FF01008 		mov	r8, #16
 262 0040 84F80A80 		strb	r8, [r4, #10]
  32:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 263              		.loc 1 32 2 view .LVU45
 264 0044 0222     		movs	r2, #2
 265 0046 3146     		mov	r1, r6
 266 0048 2046     		mov	r0, r4
 267 004a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 268              	.LVL17:
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 269              		.loc 1 33 2 view .LVU46
 270 004e 6572     		strb	r5, [r4, #9]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 271              		.loc 1 33 2 view .LVU47
 272 0050 B023     		movs	r3, #176
 273 0052 A372     		strb	r3, [r4, #10]
  33:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 274              		.loc 1 33 2 view .LVU48
 275 0054 0222     		movs	r2, #2
 276 0056 3146     		mov	r1, r6
 277 0058 2046     		mov	r0, r4
 278 005a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 279              	.LVL18:
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 280              		.loc 1 34 2 view .LVU49
 281 005e 6572     		strb	r5, [r4, #9]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 282              		.loc 1 34 2 view .LVU50
 283 0060 C823     		movs	r3, #200
 284 0062 A372     		strb	r3, [r4, #10]
  34:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //---set low column address
 285              		.loc 1 34 2 view .LVU51
 286 0064 0222     		movs	r2, #2
 287 0066 3146     		mov	r1, r6
 288 0068 2046     		mov	r0, r4
 289 006a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 290              	.LVL19:
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 291              		.loc 1 35 2 view .LVU52
 292 006e 6572     		strb	r5, [r4, #9]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 293              		.loc 1 35 2 view .LVU53
 294 0070 A572     		strb	r5, [r4, #10]
  35:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x10); //---set high column address
 295              		.loc 1 35 2 view .LVU54
 296 0072 0222     		movs	r2, #2
 297 0074 3146     		mov	r1, r6
 298 0076 2046     		mov	r0, r4
 299 0078 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 300              	.LVL20:
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 301              		.loc 1 36 2 view .LVU55
 302 007c 6572     		strb	r5, [r4, #9]
  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 303              		.loc 1 36 2 view .LVU56
 304 007e 84F80A80 		strb	r8, [r4, #10]
ARM GAS  /tmp/ccbFoK9Z.s 			page 8


  36:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x40); //--set start line address
 305              		.loc 1 36 2 view .LVU57
 306 0082 0222     		movs	r2, #2
 307 0084 3146     		mov	r1, r6
 308 0086 2046     		mov	r0, r4
 309 0088 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 310              	.LVL21:
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 311              		.loc 1 37 2 view .LVU58
 312 008c 6572     		strb	r5, [r4, #9]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 313              		.loc 1 37 2 view .LVU59
 314 008e 4023     		movs	r3, #64
 315 0090 A372     		strb	r3, [r4, #10]
  37:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x81); //--set contrast control register
 316              		.loc 1 37 2 view .LVU60
 317 0092 0222     		movs	r2, #2
 318 0094 3146     		mov	r1, r6
 319 0096 2046     		mov	r0, r4
 320 0098 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 321              	.LVL22:
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 322              		.loc 1 38 2 view .LVU61
 323 009c 6572     		strb	r5, [r4, #9]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 324              		.loc 1 38 2 view .LVU62
 325 009e 8123     		movs	r3, #129
 326 00a0 A372     		strb	r3, [r4, #10]
  38:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xFF);
 327              		.loc 1 38 2 view .LVU63
 328 00a2 0222     		movs	r2, #2
 329 00a4 3146     		mov	r1, r6
 330 00a6 2046     		mov	r0, r4
 331 00a8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 332              	.LVL23:
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 333              		.loc 1 39 2 view .LVU64
 334 00ac 6572     		strb	r5, [r4, #9]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 335              		.loc 1 39 2 view .LVU65
 336 00ae FF23     		movs	r3, #255
 337 00b0 A372     		strb	r3, [r4, #10]
  39:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 338              		.loc 1 39 2 view .LVU66
 339 00b2 0222     		movs	r2, #2
 340 00b4 3146     		mov	r1, r6
 341 00b6 2046     		mov	r0, r4
 342 00b8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 343              	.LVL24:
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 344              		.loc 1 40 2 view .LVU67
 345 00bc 6572     		strb	r5, [r4, #9]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
 346              		.loc 1 40 2 view .LVU68
 347 00be A123     		movs	r3, #161
 348 00c0 A372     		strb	r3, [r4, #10]
  40:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA6); //--set normal display
ARM GAS  /tmp/ccbFoK9Z.s 			page 9


 349              		.loc 1 40 2 view .LVU69
 350 00c2 0222     		movs	r2, #2
 351 00c4 3146     		mov	r1, r6
 352 00c6 2046     		mov	r0, r4
 353 00c8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 354              	.LVL25:
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 355              		.loc 1 41 2 view .LVU70
 356 00cc 6572     		strb	r5, [r4, #9]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 357              		.loc 1 41 2 view .LVU71
 358 00ce A623     		movs	r3, #166
 359 00d0 A372     		strb	r3, [r4, #10]
  41:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 360              		.loc 1 41 2 view .LVU72
 361 00d2 0222     		movs	r2, #2
 362 00d4 3146     		mov	r1, r6
 363 00d6 2046     		mov	r0, r4
 364 00d8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 365              	.LVL26:
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 366              		.loc 1 42 2 view .LVU73
 367 00dc 6572     		strb	r5, [r4, #9]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 368              		.loc 1 42 2 view .LVU74
 369 00de A823     		movs	r3, #168
 370 00e0 A372     		strb	r3, [r4, #10]
  42:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x3F); //
 371              		.loc 1 42 2 view .LVU75
 372 00e2 0222     		movs	r2, #2
 373 00e4 3146     		mov	r1, r6
 374 00e6 2046     		mov	r0, r4
 375 00e8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 376              	.LVL27:
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 377              		.loc 1 43 2 view .LVU76
 378 00ec 6572     		strb	r5, [r4, #9]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 379              		.loc 1 43 2 view .LVU77
 380 00ee 3F23     		movs	r3, #63
 381 00f0 A372     		strb	r3, [r4, #10]
  43:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 382              		.loc 1 43 2 view .LVU78
 383 00f2 0222     		movs	r2, #2
 384 00f4 3146     		mov	r1, r6
 385 00f6 2046     		mov	r0, r4
 386 00f8 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 387              	.LVL28:
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 388              		.loc 1 44 2 view .LVU79
 389 00fc 6572     		strb	r5, [r4, #9]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 390              		.loc 1 44 2 view .LVU80
 391 00fe A423     		movs	r3, #164
 392 0100 A372     		strb	r3, [r4, #10]
  44:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD3); //-set display offset
 393              		.loc 1 44 2 view .LVU81
ARM GAS  /tmp/ccbFoK9Z.s 			page 10


 394 0102 0222     		movs	r2, #2
 395 0104 3146     		mov	r1, r6
 396 0106 2046     		mov	r0, r4
 397 0108 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 398              	.LVL29:
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 399              		.loc 1 45 2 view .LVU82
 400 010c 6572     		strb	r5, [r4, #9]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 401              		.loc 1 45 2 view .LVU83
 402 010e D323     		movs	r3, #211
 403 0110 A372     		strb	r3, [r4, #10]
  45:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x00); //-not offset
 404              		.loc 1 45 2 view .LVU84
 405 0112 0222     		movs	r2, #2
 406 0114 3146     		mov	r1, r6
 407 0116 2046     		mov	r0, r4
 408 0118 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 409              	.LVL30:
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 410              		.loc 1 46 2 view .LVU85
 411 011c 6572     		strb	r5, [r4, #9]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 412              		.loc 1 46 2 view .LVU86
 413 011e A572     		strb	r5, [r4, #10]
  46:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 414              		.loc 1 46 2 view .LVU87
 415 0120 0222     		movs	r2, #2
 416 0122 3146     		mov	r1, r6
 417 0124 2046     		mov	r0, r4
 418 0126 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 419              	.LVL31:
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 420              		.loc 1 47 2 view .LVU88
 421 012a 6572     		strb	r5, [r4, #9]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 422              		.loc 1 47 2 view .LVU89
 423 012c D523     		movs	r3, #213
 424 012e A372     		strb	r3, [r4, #10]
  47:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xF0); //--set divide ratio
 425              		.loc 1 47 2 view .LVU90
 426 0130 0222     		movs	r2, #2
 427 0132 3146     		mov	r1, r6
 428 0134 2046     		mov	r0, r4
 429 0136 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 430              	.LVL32:
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 431              		.loc 1 48 2 view .LVU91
 432 013a 6572     		strb	r5, [r4, #9]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 433              		.loc 1 48 2 view .LVU92
 434 013c F023     		movs	r3, #240
 435 013e A372     		strb	r3, [r4, #10]
  48:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xD9); //--set pre-charge period
 436              		.loc 1 48 2 view .LVU93
 437 0140 0222     		movs	r2, #2
 438 0142 3146     		mov	r1, r6
ARM GAS  /tmp/ccbFoK9Z.s 			page 11


 439 0144 2046     		mov	r0, r4
 440 0146 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 441              	.LVL33:
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 442              		.loc 1 49 2 view .LVU94
 443 014a 6572     		strb	r5, [r4, #9]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 444              		.loc 1 49 2 view .LVU95
 445 014c D923     		movs	r3, #217
 446 014e A372     		strb	r3, [r4, #10]
  49:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x22); //
 447              		.loc 1 49 2 view .LVU96
 448 0150 0222     		movs	r2, #2
 449 0152 3146     		mov	r1, r6
 450 0154 2046     		mov	r0, r4
 451 0156 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 452              	.LVL34:
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 453              		.loc 1 50 2 view .LVU97
 454 015a 6572     		strb	r5, [r4, #9]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 455              		.loc 1 50 2 view .LVU98
 456 015c 2223     		movs	r3, #34
 457 015e A372     		strb	r3, [r4, #10]
  50:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 458              		.loc 1 50 2 view .LVU99
 459 0160 0222     		movs	r2, #2
 460 0162 3146     		mov	r1, r6
 461 0164 2046     		mov	r0, r4
 462 0166 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 463              	.LVL35:
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 464              		.loc 1 51 2 view .LVU100
 465 016a 6572     		strb	r5, [r4, #9]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 466              		.loc 1 51 2 view .LVU101
 467 016c DA23     		movs	r3, #218
 468 016e A372     		strb	r3, [r4, #10]
  51:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x12);
 469              		.loc 1 51 2 view .LVU102
 470 0170 0222     		movs	r2, #2
 471 0172 3146     		mov	r1, r6
 472 0174 2046     		mov	r0, r4
 473 0176 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 474              	.LVL36:
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 475              		.loc 1 52 2 view .LVU103
 476 017a 6572     		strb	r5, [r4, #9]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 477              		.loc 1 52 2 view .LVU104
 478 017c 1223     		movs	r3, #18
 479 017e A372     		strb	r3, [r4, #10]
  52:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xDB); //--set vcomh
 480              		.loc 1 52 2 view .LVU105
 481 0180 0222     		movs	r2, #2
 482 0182 3146     		mov	r1, r6
 483 0184 2046     		mov	r0, r4
ARM GAS  /tmp/ccbFoK9Z.s 			page 12


 484 0186 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 485              	.LVL37:
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 486              		.loc 1 53 2 view .LVU106
 487 018a 6572     		strb	r5, [r4, #9]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 488              		.loc 1 53 2 view .LVU107
 489 018c DB23     		movs	r3, #219
 490 018e A372     		strb	r3, [r4, #10]
  53:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x20); //0x20,0.77xVcc
 491              		.loc 1 53 2 view .LVU108
 492 0190 0222     		movs	r2, #2
 493 0192 3146     		mov	r1, r6
 494 0194 2046     		mov	r0, r4
 495 0196 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 496              	.LVL38:
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 497              		.loc 1 54 2 view .LVU109
 498 019a 6572     		strb	r5, [r4, #9]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 499              		.loc 1 54 2 view .LVU110
 500 019c A772     		strb	r7, [r4, #10]
  54:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x8D); //--set DC-DC enable
 501              		.loc 1 54 2 view .LVU111
 502 019e 0222     		movs	r2, #2
 503 01a0 3146     		mov	r1, r6
 504 01a2 2046     		mov	r0, r4
 505 01a4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 506              	.LVL39:
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 507              		.loc 1 55 2 view .LVU112
 508 01a8 6572     		strb	r5, [r4, #9]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 509              		.loc 1 55 2 view .LVU113
 510 01aa 8D23     		movs	r3, #141
 511 01ac A372     		strb	r3, [r4, #10]
  55:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0x14); //
 512              		.loc 1 55 2 view .LVU114
 513 01ae 0222     		movs	r2, #2
 514 01b0 3146     		mov	r1, r6
 515 01b2 2046     		mov	r0, r4
 516 01b4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 517              	.LVL40:
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 518              		.loc 1 56 2 view .LVU115
 519 01b8 6572     		strb	r5, [r4, #9]
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 520              		.loc 1 56 2 view .LVU116
 521 01ba 1423     		movs	r3, #20
 522 01bc A372     		strb	r3, [r4, #10]
  56:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //--turn on OLED panel
 523              		.loc 1 56 2 view .LVU117
 524 01be 0222     		movs	r2, #2
 525 01c0 3146     		mov	r1, r6
 526 01c2 2046     		mov	r0, r4
 527 01c4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 528              	.LVL41:
ARM GAS  /tmp/ccbFoK9Z.s 			page 13


  57:Core/Src/oled.cpp **** 
 529              		.loc 1 57 2 view .LVU118
 530 01c8 6572     		strb	r5, [r4, #9]
  57:Core/Src/oled.cpp **** 
 531              		.loc 1 57 2 view .LVU119
 532 01ca AF23     		movs	r3, #175
 533 01cc A372     		strb	r3, [r4, #10]
  57:Core/Src/oled.cpp **** 
 534              		.loc 1 57 2 view .LVU120
 535 01ce 0222     		movs	r2, #2
 536 01d0 3146     		mov	r1, r6
 537 01d2 2046     		mov	r0, r4
 538 01d4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 539              	.LVL42:
  59:Core/Src/oled.cpp **** 
 540              		.loc 1 59 5 view .LVU121
 541 01d8 6572     		strb	r5, [r4, #9]
  59:Core/Src/oled.cpp **** 
 542              		.loc 1 59 5 view .LVU122
 543 01da 2E23     		movs	r3, #46
 544 01dc A372     		strb	r3, [r4, #10]
  59:Core/Src/oled.cpp **** 
 545              		.loc 1 59 5 view .LVU123
 546 01de 0222     		movs	r2, #2
 547 01e0 3146     		mov	r1, r6
 548 01e2 2046     		mov	r0, r4
 549 01e4 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 550              	.LVL43:
  61:Core/Src/oled.cpp **** 
 551              		.loc 1 61 5 view .LVU124
  61:Core/Src/oled.cpp **** 
 552              		.loc 1 61 26 is_stmt 0 view .LVU125
 553 01e8 6068     		ldr	r0, [r4, #4]
 554 01ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 555              	.LVL44:
  63:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 556              		.loc 1 63 1 view .LVU126
 557 01ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  63:Core/Src/oled.cpp **** void oled::oled_fill(OLED_COLOR_t color) {
 558              		.loc 1 63 1 view .LVU127
 559              		.cfi_endproc
 560              	.LFE141:
 561              		.fnend
 563              		.section	.text._ZN4oled10oled_printEPc9FontDef_ttt,"ax",%progbits
 564              		.align	1
 565              		.global	_ZN4oled10oled_printEPc9FontDef_ttt
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	_ZN4oled10oled_printEPc9FontDef_ttt:
 572              		.fnstart
 573              	.LVL45:
 574              	.LFB145:
  75:Core/Src/oled.cpp **** void oled::oled_refresh(void)
  76:Core/Src/oled.cpp **** {
  77:Core/Src/oled.cpp **** 	uint8_t m;
ARM GAS  /tmp/ccbFoK9Z.s 			page 14


  78:Core/Src/oled.cpp **** 	
  79:Core/Src/oled.cpp **** 	for (m = 0; m < 8; m++) {
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
  82:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
  83:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
  84:Core/Src/oled.cpp **** 		/* Write multi data */
  85:Core/Src/oled.cpp **** 		oled_write(&oled_buffer[W * m], W+1 );
  86:Core/Src/oled.cpp **** 	}
  87:Core/Src/oled.cpp **** 	Counter_increment();
  88:Core/Src/oled.cpp **** }
  89:Core/Src/oled.cpp **** 
  90:Core/Src/oled.cpp **** void oled::oled_print(char* string, FontDef_t size, uint16_t x , uint16_t y)
  91:Core/Src/oled.cpp **** {	
 575              		.loc 1 91 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 8, pretend = 0, frame = 8
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 91 1 is_stmt 0 view .LVU129
 580 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 581              	.LCFI7:
 582              		.cfi_def_cfa_offset 28
 583              		.cfi_offset 4, -28
 584              		.cfi_offset 5, -24
 585              		.cfi_offset 6, -20
 586              		.cfi_offset 7, -16
 587              		.cfi_offset 8, -12
 588              		.cfi_offset 9, -8
 589              		.cfi_offset 14, -4
 590 0004 83B0     		sub	sp, sp, #12
 591              	.LCFI8:
 592              		.cfi_def_cfa_offset 40
 593 0006 0646     		mov	r6, r0
 594 0008 0F46     		mov	r7, r1
 595 000a 02A9     		add	r1, sp, #8
 596              	.LVL46:
 597              		.loc 1 91 1 view .LVU130
 598 000c 01E90C00 		stmdb	r1, {r2, r3}
 599 0010 BDF82850 		ldrh	r5, [sp, #40]
 600 0014 BDF82C40 		ldrh	r4, [sp, #44]
  92:Core/Src/oled.cpp **** 	uint8_t strItr=0;
 601              		.loc 1 92 2 is_stmt 1 view .LVU131
 602              	.LVL47:
 603              		.loc 1 92 10 is_stmt 0 view .LVU132
 604 0018 4FF00008 		mov	r8, #0
 605 001c 79E0     		b	.L26
 606              	.LVL48:
 607              	.L16:
 608              	.LBB4:
  93:Core/Src/oled.cpp **** 	// //loop through the chars in the string
  94:Core/Src/oled.cpp **** 	while(strItr<=strlen(string)+3)
  95:Core/Src/oled.cpp **** 	{
  96:Core/Src/oled.cpp **** 		int i=0;
  97:Core/Src/oled.cpp **** 		int j=0;
  98:Core/Src/oled.cpp **** 		int b;
  99:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
 100:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
ARM GAS  /tmp/ccbFoK9Z.s 			page 15


 101:Core/Src/oled.cpp **** 
 102:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]=0;
 609              		.loc 1 102 25 discriminator 2 view .LVU133
 610 001e DB10     		asrs	r3, r3, #3
 611              		.loc 1 102 31 discriminator 2 view .LVU134
 612 0020 05EBC313 		add	r3, r5, r3, lsl #7
 613              		.loc 1 102 33 discriminator 2 view .LVU135
 614 0024 1344     		add	r3, r3, r2
 615              		.loc 1 102 36 discriminator 2 view .LVU136
 616 0026 3344     		add	r3, r3, r6
 617 0028 0020     		movs	r0, #0
 618 002a 9875     		strb	r0, [r3, #22]
 100:Core/Src/oled.cpp **** 
 619              		.loc 1 100 4 is_stmt 1 discriminator 2 view .LVU137
 620 002c 0132     		adds	r2, r2, #1
 621              	.LVL49:
 622              	.L17:
 100:Core/Src/oled.cpp **** 
 623              		.loc 1 100 18 discriminator 3 view .LVU138
 100:Core/Src/oled.cpp **** 
 624              		.loc 1 100 25 is_stmt 0 discriminator 3 view .LVU139
 625 002e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 100:Core/Src/oled.cpp **** 
 626              		.loc 1 100 18 discriminator 3 view .LVU140
 627 0032 9342     		cmp	r3, r2
 628 0034 03DD     		ble	.L15
 629              		.loc 1 102 6 is_stmt 1 discriminator 2 view .LVU141
 630              		.loc 1 102 25 is_stmt 0 discriminator 2 view .LVU142
 631 0036 6318     		adds	r3, r4, r1
 632 0038 F1D5     		bpl	.L16
 633              		.loc 1 102 25 discriminator 2 view .LVU143
 634 003a 0733     		adds	r3, r3, #7
 635 003c EFE7     		b	.L16
 636              	.L15:
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 637              		.loc 1 99 3 is_stmt 1 discriminator 2 view .LVU144
 638 003e 0131     		adds	r1, r1, #1
 639              	.LVL50:
 640              	.L18:
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 641              		.loc 1 99 17 discriminator 1 view .LVU145
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 642              		.loc 1 99 24 is_stmt 0 discriminator 1 view .LVU146
 643 0040 9DF801C0 		ldrb	ip, [sp, #1]	@ zero_extendqisi2
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 644              		.loc 1 99 17 discriminator 1 view .LVU147
 645 0044 8C45     		cmp	ip, r1
 646 0046 01DD     		ble	.L27
 100:Core/Src/oled.cpp **** 
 647              		.loc 1 100 11 view .LVU148
 648 0048 0022     		movs	r2, #0
 649 004a F0E7     		b	.L17
 650              	.L27:
 103:Core/Src/oled.cpp **** 
 104:Core/Src/oled.cpp **** 				
 105:Core/Src/oled.cpp **** 			}
 106:Core/Src/oled.cpp **** 		}
ARM GAS  /tmp/ccbFoK9Z.s 			page 16


 107:Core/Src/oled.cpp **** 		for (i = 0; i < size.FontHeight; i++) {
 651              		.loc 1 107 10 view .LVU149
 652 004c 0021     		movs	r1, #0
 653              	.LVL51:
 654              		.loc 1 107 10 view .LVU150
 655 004e 49E0     		b	.L14
 656              	.LVL52:
 657              	.L22:
 108:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 109:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 110:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 111:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 658              		.loc 1 111 25 view .LVU151
 659 0050 4FEAEE0E 		asr	lr, lr, #3
 660              		.loc 1 111 36 view .LVU152
 661 0054 05EBCE1E 		add	lr, r5, lr, lsl #7
 662 0058 9644     		add	lr, lr, r2
 663              		.loc 1 111 50 view .LVU153
 664 005a D3F10009 		rsbs	r9, r3, #0
 665 005e 03F00703 		and	r3, r3, #7
 666 0062 09F00709 		and	r9, r9, #7
 667 0066 58BF     		it	pl
 668 0068 C9F10003 		rsbpl	r3, r9, #0
 669              		.loc 1 111 40 view .LVU154
 670 006c 4FF00109 		mov	r9, #1
 671 0070 09FA03F9 		lsl	r9, r9, r3
 672              		.loc 1 111 36 view .LVU155
 673 0074 B644     		add	lr, lr, r6
 674 0076 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 675 007a 43EA0903 		orr	r3, r3, r9
 676 007e 8EF81630 		strb	r3, [lr, #22]
 677              	.L23:
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 678              		.loc 1 109 4 is_stmt 1 discriminator 2 view .LVU156
 679 0082 0132     		adds	r2, r2, #1
 680              	.LVL53:
 681              	.L25:
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 682              		.loc 1 109 18 discriminator 1 view .LVU157
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 683              		.loc 1 109 25 is_stmt 0 discriminator 1 view .LVU158
 684 0084 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 685              		.loc 1 109 18 discriminator 1 view .LVU159
 686 0088 9342     		cmp	r3, r2
 687 008a 2ADD     		ble	.L20
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 688              		.loc 1 110 5 is_stmt 1 view .LVU160
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 689              		.loc 1 110 12 is_stmt 0 view .LVU161
 690 008c 00FA02F3 		lsl	r3, r0, r2
 110:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]|=1 << ((y+i) % 8);
 691              		.loc 1 110 5 view .LVU162
 692 0090 13F4004F 		tst	r3, #32768
 693 0094 06D0     		beq	.L21
 694              		.loc 1 111 6 is_stmt 1 view .LVU163
 695              		.loc 1 111 21 is_stmt 0 view .LVU164
ARM GAS  /tmp/ccbFoK9Z.s 			page 17


 696 0096 6318     		adds	r3, r4, r1
 697              		.loc 1 111 25 view .LVU165
 698 0098 9E46     		mov	lr, r3
 699 009a 002B     		cmp	r3, #0
 700 009c D8DA     		bge	.L22
 701              		.loc 1 111 25 view .LVU166
 702 009e 03F1070E 		add	lr, r3, #7
 703 00a2 D5E7     		b	.L22
 704              	.L21:
 112:Core/Src/oled.cpp **** 				} else {
 113:Core/Src/oled.cpp **** 					oled_buffer[((y+i) / 8)*W+x+j]&= ~(1 << ((y+1) % 8));
 705              		.loc 1 113 6 is_stmt 1 view .LVU167
 706              		.loc 1 113 25 is_stmt 0 view .LVU168
 707 00a4 6318     		adds	r3, r4, r1
 708 00a6 1AD4     		bmi	.L29
 709              	.L24:
 710              		.loc 1 113 25 view .LVU169
 711 00a8 DB10     		asrs	r3, r3, #3
 712              		.loc 1 113 36 view .LVU170
 713 00aa 05EBC313 		add	r3, r5, r3, lsl #7
 714 00ae 03EB020E 		add	lr, r3, r2
 715              		.loc 1 113 49 view .LVU171
 716 00b2 631C     		adds	r3, r4, #1
 717              		.loc 1 113 53 view .LVU172
 718 00b4 D3F10009 		rsbs	r9, r3, #0
 719 00b8 03F00703 		and	r3, r3, #7
 720 00bc 09F00709 		and	r9, r9, #7
 721 00c0 58BF     		it	pl
 722 00c2 C9F10003 		rsbpl	r3, r9, #0
 723              		.loc 1 113 43 view .LVU173
 724 00c6 4FF00109 		mov	r9, #1
 725 00ca 09FA03F9 		lsl	r9, r9, r3
 726              		.loc 1 113 36 view .LVU174
 727 00ce B644     		add	lr, lr, r6
 728 00d0 9EF81630 		ldrb	r3, [lr, #22]	@ zero_extendqisi2
 729 00d4 23EA0903 		bic	r3, r3, r9
 730 00d8 8EF81630 		strb	r3, [lr, #22]
 731 00dc D1E7     		b	.L23
 732              	.L29:
 733              		.loc 1 113 25 view .LVU175
 734 00de 0733     		adds	r3, r3, #7
 735 00e0 E2E7     		b	.L24
 736              	.L20:
 107:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 737              		.loc 1 107 3 is_stmt 1 discriminator 2 view .LVU176
 738 00e2 0131     		adds	r1, r1, #1
 739              	.LVL54:
 740              	.L14:
 107:Core/Src/oled.cpp **** 			b = size.data[(*string - 32) * size.FontHeight + i];
 741              		.loc 1 107 17 discriminator 1 view .LVU177
 742 00e4 8C45     		cmp	ip, r1
 743 00e6 08DD     		ble	.L19
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 744              		.loc 1 108 4 view .LVU178
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 745              		.loc 1 108 19 is_stmt 0 view .LVU179
 746 00e8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
ARM GAS  /tmp/ccbFoK9Z.s 			page 18


 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 747              		.loc 1 108 27 view .LVU180
 748 00ea 203B     		subs	r3, r3, #32
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 749              		.loc 1 108 51 view .LVU181
 750 00ec 03FB0C13 		mla	r3, r3, ip, r1
 108:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 751              		.loc 1 108 54 view .LVU182
 752 00f0 019A     		ldr	r2, [sp, #4]
 753 00f2 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 754              	.LVL55:
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 755              		.loc 1 109 4 is_stmt 1 view .LVU183
 109:Core/Src/oled.cpp **** 				if ((b << j) & 0x8000) {
 756              		.loc 1 109 11 is_stmt 0 view .LVU184
 757 00f6 0022     		movs	r2, #0
 758 00f8 C4E7     		b	.L25
 759              	.LVL56:
 760              	.L19:
 114:Core/Src/oled.cpp **** 
 115:Core/Src/oled.cpp **** 				}
 116:Core/Src/oled.cpp **** 			}
 117:Core/Src/oled.cpp **** 		}
 118:Core/Src/oled.cpp **** 		x=x+i-size.FontWidth/2;
 761              		.loc 1 118 3 is_stmt 1 view .LVU185
 762              		.loc 1 118 6 is_stmt 0 view .LVU186
 763 00fa 0D44     		add	r5, r5, r1
 764              	.LVL57:
 765              		.loc 1 118 6 view .LVU187
 766 00fc ADB2     		uxth	r5, r5
 767              		.loc 1 118 14 view .LVU188
 768 00fe 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 769              		.loc 1 118 4 view .LVU189
 770 0102 A5EB5305 		sub	r5, r5, r3, lsr #1
 771 0106 ADB2     		uxth	r5, r5
 772              	.LVL58:
 119:Core/Src/oled.cpp **** 
 120:Core/Src/oled.cpp **** 
 121:Core/Src/oled.cpp **** 	
 122:Core/Src/oled.cpp **** 		string++;
 773              		.loc 1 122 3 is_stmt 1 view .LVU190
 774              		.loc 1 122 9 is_stmt 0 view .LVU191
 775 0108 0137     		adds	r7, r7, #1
 776              	.LVL59:
 123:Core/Src/oled.cpp **** 		strItr++;
 777              		.loc 1 123 3 is_stmt 1 view .LVU192
 778              		.loc 1 123 9 is_stmt 0 view .LVU193
 779 010a 08F10108 		add	r8, r8, #1
 780              	.LVL60:
 781              		.loc 1 123 9 view .LVU194
 782 010e 5FFA88F8 		uxtb	r8, r8
 783              	.LVL61:
 784              	.L26:
 785              		.loc 1 123 9 view .LVU195
 786              	.LBE4:
  94:Core/Src/oled.cpp **** 	{
 787              		.loc 1 94 2 is_stmt 1 view .LVU196
ARM GAS  /tmp/ccbFoK9Z.s 			page 19


  94:Core/Src/oled.cpp **** 	{
 788              		.loc 1 94 14 view .LVU197
  94:Core/Src/oled.cpp **** 	{
 789              		.loc 1 94 22 is_stmt 0 view .LVU198
 790 0112 3846     		mov	r0, r7
 791 0114 FFF7FEFF 		bl	strlen
 792              	.LVL62:
  94:Core/Src/oled.cpp **** 	{
 793              		.loc 1 94 30 view .LVU199
 794 0118 C31C     		adds	r3, r0, #3
  94:Core/Src/oled.cpp **** 	{
 795              		.loc 1 94 14 view .LVU200
 796 011a 9845     		cmp	r8, r3
 797 011c 01D8     		bhi	.L12
 798              	.LBB5:
  99:Core/Src/oled.cpp **** 			for (j = 0; j < size.FontWidth; j++) {
 799              		.loc 1 99 10 view .LVU201
 800 011e 0021     		movs	r1, #0
 801 0120 8EE7     		b	.L18
 802              	.L12:
 803              	.LBE5:
 124:Core/Src/oled.cpp **** 	}
 125:Core/Src/oled.cpp **** }
 804              		.loc 1 125 1 view .LVU202
 805 0122 03B0     		add	sp, sp, #12
 806              	.LCFI9:
 807              		.cfi_def_cfa_offset 28
 808              		@ sp needed
 809 0124 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 810              		.loc 1 125 1 view .LVU203
 811              		.cfi_endproc
 812              	.LFE145:
 813              		.cantunwind
 814              		.fnend
 816              		.section	.text._ZN4oled13switch_cursorEv,"ax",%progbits
 817              		.align	1
 818              		.global	_ZN4oled13switch_cursorEv
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu fpv4-sp-d16
 824              	_ZN4oled13switch_cursorEv:
 825              		.fnstart
 826              	.LVL63:
 827              	.LFB146:
 126:Core/Src/oled.cpp **** 
 127:Core/Src/oled.cpp **** void oled::switch_cursor()
 128:Core/Src/oled.cpp **** {
 828              		.loc 1 128 1 is_stmt 1 view -0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 129:Core/Src/oled.cpp **** 	
 130:Core/Src/oled.cpp **** }
 833              		.loc 1 130 1 is_stmt 0 view .LVU205
 834 0000 7047     		bx	lr
ARM GAS  /tmp/ccbFoK9Z.s 			page 20


 835              		.cfi_endproc
 836              	.LFE146:
 837              		.cantunwind
 838              		.fnend
 840              		.section	.text._ZN4oled8oled_offEv,"ax",%progbits
 841              		.align	1
 842              		.global	_ZN4oled8oled_offEv
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	_ZN4oled8oled_offEv:
 849              		.fnstart
 850              	.LVL64:
 851              	.LFB148:
 131:Core/Src/oled.cpp **** 
 132:Core/Src/oled.cpp **** void oled::oled_update_battery(float voltage)
 133:Core/Src/oled.cpp **** {
 134:Core/Src/oled.cpp **** 	//char volt [20];
 135:Core/Src/oled.cpp **** 	//sprintf(volt,"%.1fv",voltage);
 136:Core/Src/oled.cpp **** 	//next lines are supposed to work as Battery GUI
 137:Core/Src/oled.cpp **** 
 138:Core/Src/oled.cpp **** 	DrawRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 139:Core/Src/oled.cpp **** 
 140:Core/Src/oled.cpp **** 	if(voltage >= 4.1){ //100%
 141:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 142:Core/Src/oled.cpp **** 	}
 143:Core/Src/oled.cpp **** 	else if(voltage >= 4.0){ //75%
 144:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,3.15);
 145:Core/Src/oled.cpp **** 	}
 146:Core/Src/oled.cpp **** 	else if(voltage >= 3.9){ //50%
 147:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,2.1);
 148:Core/Src/oled.cpp **** 	}
 149:Core/Src/oled.cpp **** 	else if(voltage >= 3.8){ //25%
 150:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,1.05);
 151:Core/Src/oled.cpp **** 	}
 152:Core/Src/oled.cpp **** 	else{//low battery less than 10%
 153:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,0.5);
 154:Core/Src/oled.cpp **** 	}
 155:Core/Src/oled.cpp **** }
 156:Core/Src/oled.cpp **** 
 157:Core/Src/oled.cpp **** void oled::oled_off()
 158:Core/Src/oled.cpp **** {
 852              		.loc 1 158 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		.loc 1 158 1 is_stmt 0 view .LVU207
 857 0000 38B5     		push	{r3, r4, r5, lr}
 858              		.save {r3, r4, r5, lr}
 859              	.LCFI10:
 860              		.cfi_def_cfa_offset 16
 861              		.cfi_offset 3, -16
 862              		.cfi_offset 4, -12
 863              		.cfi_offset 5, -8
 864              		.cfi_offset 14, -4
 865 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccbFoK9Z.s 			page 21


 159:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAE); //display off
 866              		.loc 1 159 2 is_stmt 1 view .LVU208
 867 0004 0025     		movs	r5, #0
 868 0006 4572     		strb	r5, [r0, #9]
 869              		.loc 1 159 2 view .LVU209
 870 0008 AE23     		movs	r3, #174
 871 000a 8372     		strb	r3, [r0, #10]
 872              		.loc 1 159 2 view .LVU210
 873 000c 0222     		movs	r2, #2
 874 000e 00F10901 		add	r1, r0, #9
 875 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 876              	.LVL65:
 160:Core/Src/oled.cpp **** 	oledOn=0;
 877              		.loc 1 160 2 view .LVU211
 878              		.loc 1 160 8 is_stmt 0 view .LVU212
 879 0016 6575     		strb	r5, [r4, #21]
 161:Core/Src/oled.cpp **** }
 880              		.loc 1 161 1 view .LVU213
 881 0018 38BD     		pop	{r3, r4, r5, pc}
 882              		.loc 1 161 1 view .LVU214
 883              		.cfi_endproc
 884              	.LFE148:
 885              		.fnend
 887              		.section	.text._ZN4oled13oled_isOledOnEv,"ax",%progbits
 888              		.align	1
 889              		.global	_ZN4oled13oled_isOledOnEv
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv4-sp-d16
 895              	_ZN4oled13oled_isOledOnEv:
 896              		.fnstart
 897              	.LVL66:
 898              	.LFB150:
 162:Core/Src/oled.cpp **** 
 163:Core/Src/oled.cpp **** void oled::oled_on()
 164:Core/Src/oled.cpp **** {
 165:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 166:Core/Src/oled.cpp **** 	oledOn=1;
 167:Core/Src/oled.cpp **** 	oled_resetTimer();
 168:Core/Src/oled.cpp **** }
 169:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 170:Core/Src/oled.cpp **** {
 899              		.loc 1 170 1 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 171:Core/Src/oled.cpp **** 	return oledOn;
 904              		.loc 1 171 2 view .LVU216
 172:Core/Src/oled.cpp **** }
 905              		.loc 1 172 1 is_stmt 0 view .LVU217
 906 0000 407D     		ldrb	r0, [r0, #21]	@ zero_extendqisi2
 907              	.LVL67:
 908              		.loc 1 172 1 view .LVU218
 909 0002 7047     		bx	lr
 910              		.cfi_endproc
ARM GAS  /tmp/ccbFoK9Z.s 			page 22


 911              	.LFE150:
 912              		.cantunwind
 913              		.fnend
 915              		.section	.text._ZN4oled15oled_resetTimerEv,"ax",%progbits
 916              		.align	1
 917              		.global	_ZN4oled15oled_resetTimerEv
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv4-sp-d16
 923              	_ZN4oled15oled_resetTimerEv:
 924              		.fnstart
 925              	.LVL68:
 926              	.LFB151:
 173:Core/Src/oled.cpp **** void oled::oled_resetTimer()
 174:Core/Src/oled.cpp **** {
 927              		.loc 1 174 1 is_stmt 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              		@ link register save eliminated.
 175:Core/Src/oled.cpp **** 	tmoCounter = 0;
 932              		.loc 1 175 2 view .LVU220
 933              		.loc 1 175 13 is_stmt 0 view .LVU221
 934 0000 0023     		movs	r3, #0
 935 0002 C360     		str	r3, [r0, #12]
 176:Core/Src/oled.cpp **** }
 936              		.loc 1 176 1 view .LVU222
 937 0004 7047     		bx	lr
 938              		.cfi_endproc
 939              	.LFE151:
 940              		.cantunwind
 941              		.fnend
 943              		.section	.text._ZN4oled7oled_onEv,"ax",%progbits
 944              		.align	1
 945              		.global	_ZN4oled7oled_onEv
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	_ZN4oled7oled_onEv:
 952              		.fnstart
 953              	.LVL69:
 954              	.LFB149:
 164:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 955              		.loc 1 164 1 is_stmt 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 164:Core/Src/oled.cpp **** 	OLED_WRITECOMMAND(0xAF); //display on
 959              		.loc 1 164 1 is_stmt 0 view .LVU224
 960 0000 10B5     		push	{r4, lr}
 961              		.save {r4, lr}
 962              	.LCFI11:
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 4, -8
 965              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbFoK9Z.s 			page 23


 966 0002 0446     		mov	r4, r0
 165:Core/Src/oled.cpp **** 	oledOn=1;
 967              		.loc 1 165 2 is_stmt 1 view .LVU225
 968 0004 0023     		movs	r3, #0
 969 0006 4372     		strb	r3, [r0, #9]
 165:Core/Src/oled.cpp **** 	oledOn=1;
 970              		.loc 1 165 2 view .LVU226
 971 0008 AF23     		movs	r3, #175
 972 000a 8372     		strb	r3, [r0, #10]
 165:Core/Src/oled.cpp **** 	oledOn=1;
 973              		.loc 1 165 2 view .LVU227
 974 000c 0222     		movs	r2, #2
 975 000e 00F10901 		add	r1, r0, #9
 976 0012 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 977              	.LVL70:
 166:Core/Src/oled.cpp **** 	oled_resetTimer();
 978              		.loc 1 166 2 view .LVU228
 166:Core/Src/oled.cpp **** 	oled_resetTimer();
 979              		.loc 1 166 8 is_stmt 0 view .LVU229
 980 0016 0123     		movs	r3, #1
 981 0018 6375     		strb	r3, [r4, #21]
 167:Core/Src/oled.cpp **** }
 982              		.loc 1 167 2 is_stmt 1 view .LVU230
 167:Core/Src/oled.cpp **** }
 983              		.loc 1 167 17 is_stmt 0 view .LVU231
 984 001a 2046     		mov	r0, r4
 985 001c FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 986              	.LVL71:
 168:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 987              		.loc 1 168 1 view .LVU232
 988 0020 10BD     		pop	{r4, pc}
 168:Core/Src/oled.cpp **** uint8_t oled::oled_isOledOn()
 989              		.loc 1 168 1 view .LVU233
 990              		.cfi_endproc
 991              	.LFE149:
 992              		.fnend
 994              		.section	.text._ZN4oled13oled_setTimerEm,"ax",%progbits
 995              		.align	1
 996              		.global	_ZN4oled13oled_setTimerEm
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	_ZN4oled13oled_setTimerEm:
 1003              		.fnstart
 1004              	.LVL72:
 1005              	.LFB152:
 177:Core/Src/oled.cpp **** 
 178:Core/Src/oled.cpp **** void oled::oled_setTimer(uint32_t time)
 179:Core/Src/oled.cpp **** {
 1006              		.loc 1 179 1 is_stmt 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 180:Core/Src/oled.cpp **** 	tmoValue = ((time*1000)/200);
 1011              		.loc 1 180 2 view .LVU235
ARM GAS  /tmp/ccbFoK9Z.s 			page 24


 1012              		.loc 1 180 19 is_stmt 0 view .LVU236
 1013 0000 4FF47A73 		mov	r3, #1000
 1014 0004 03FB01F3 		mul	r3, r3, r1
 1015              		.loc 1 180 25 view .LVU237
 1016 0008 0249     		ldr	r1, .L38
 1017              	.LVL73:
 1018              		.loc 1 180 25 view .LVU238
 1019 000a A1FB0323 		umull	r2, r3, r1, r3
 1020 000e 9B09     		lsrs	r3, r3, #6
 1021              		.loc 1 180 11 view .LVU239
 1022 0010 0361     		str	r3, [r0, #16]
 181:Core/Src/oled.cpp **** 	
 182:Core/Src/oled.cpp **** }
 1023              		.loc 1 182 1 view .LVU240
 1024 0012 7047     		bx	lr
 1025              	.L39:
 1026              		.align	2
 1027              	.L38:
 1028 0014 1F85EB51 		.word	1374389535
 1029              		.cfi_endproc
 1030              	.LFE152:
 1031              		.cantunwind
 1032              		.fnend
 1034              		.section	.text._ZN4oled17Counter_incrementEv,"ax",%progbits
 1035              		.align	1
 1036              		.global	_ZN4oled17Counter_incrementEv
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	_ZN4oled17Counter_incrementEv:
 1043              		.fnstart
 1044              	.LVL74:
 1045              	.LFB153:
 183:Core/Src/oled.cpp **** 
 184:Core/Src/oled.cpp **** void oled::Counter_increment(void)
 185:Core/Src/oled.cpp **** {
 1046              		.loc 1 185 1 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		.loc 1 185 1 is_stmt 0 view .LVU242
 1051 0000 08B5     		push	{r3, lr}
 1052              		.save {r3, lr}
 1053              	.LCFI12:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 3, -8
 1056              		.cfi_offset 14, -4
 186:Core/Src/oled.cpp **** 	tmoCounter++;
 1057              		.loc 1 186 2 is_stmt 1 view .LVU243
 1058 0002 C368     		ldr	r3, [r0, #12]
 1059              		.loc 1 186 12 is_stmt 0 view .LVU244
 1060 0004 0133     		adds	r3, r3, #1
 1061 0006 C360     		str	r3, [r0, #12]
 187:Core/Src/oled.cpp **** 	if(tmoValue == tmoCounter)
 1062              		.loc 1 187 2 is_stmt 1 view .LVU245
 1063              		.loc 1 187 5 is_stmt 0 view .LVU246
ARM GAS  /tmp/ccbFoK9Z.s 			page 25


 1064 0008 0269     		ldr	r2, [r0, #16]
 1065              		.loc 1 187 2 view .LVU247
 1066 000a 9342     		cmp	r3, r2
 1067 000c 00D0     		beq	.L43
 1068              	.LVL75:
 1069              	.L40:
 188:Core/Src/oled.cpp **** 	{
 189:Core/Src/oled.cpp **** 		oled_off();
 190:Core/Src/oled.cpp **** 	}
 191:Core/Src/oled.cpp **** }
 1070              		.loc 1 191 1 view .LVU248
 1071 000e 08BD     		pop	{r3, pc}
 1072              	.LVL76:
 1073              	.L43:
 189:Core/Src/oled.cpp **** 	}
 1074              		.loc 1 189 3 is_stmt 1 view .LVU249
 189:Core/Src/oled.cpp **** 	}
 1075              		.loc 1 189 11 is_stmt 0 view .LVU250
 1076 0010 FFF7FEFF 		bl	_ZN4oled8oled_offEv
 1077              	.LVL77:
 1078              		.loc 1 191 1 view .LVU251
 1079 0014 FBE7     		b	.L40
 1080              		.cfi_endproc
 1081              	.LFE153:
 1082              		.fnend
 1084              		.section	.text._ZN4oled12oled_refreshEv,"ax",%progbits
 1085              		.align	1
 1086              		.global	_ZN4oled12oled_refreshEv
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu fpv4-sp-d16
 1092              	_ZN4oled12oled_refreshEv:
 1093              		.fnstart
 1094              	.LVL78:
 1095              	.LFB144:
  76:Core/Src/oled.cpp **** 	uint8_t m;
 1096              		.loc 1 76 1 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
  76:Core/Src/oled.cpp **** 	uint8_t m;
 1100              		.loc 1 76 1 is_stmt 0 view .LVU253
 1101 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1102              		.save {r3, r4, r5, r6, r7, lr}
 1103              	.LCFI13:
 1104              		.cfi_def_cfa_offset 24
 1105              		.cfi_offset 3, -24
 1106              		.cfi_offset 4, -20
 1107              		.cfi_offset 5, -16
 1108              		.cfi_offset 6, -12
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 0446     		mov	r4, r0
  77:Core/Src/oled.cpp **** 	
 1112              		.loc 1 77 2 is_stmt 1 view .LVU254
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
ARM GAS  /tmp/ccbFoK9Z.s 			page 26


 1113              		.loc 1 79 2 view .LVU255
 1114              	.LVL79:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1115              		.loc 1 79 9 is_stmt 0 view .LVU256
 1116 0004 0025     		movs	r5, #0
 1117 0006 28E0     		b	.L46
 1118              	.LVL80:
 1119              	.L48:
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1120              		.loc 1 80 3 is_stmt 1 discriminator 2 view .LVU257
 1121 0008 0027     		movs	r7, #0
 1122 000a 6772     		strb	r7, [r4, #9]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1123              		.loc 1 80 3 discriminator 2 view .LVU258
 1124 000c A5F15003 		sub	r3, r5, #80
 1125 0010 A372     		strb	r3, [r4, #10]
  80:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x00);
 1126              		.loc 1 80 3 discriminator 2 view .LVU259
 1127 0012 04F10906 		add	r6, r4, #9
 1128 0016 0222     		movs	r2, #2
 1129 0018 3146     		mov	r1, r6
 1130 001a 2046     		mov	r0, r4
 1131 001c FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1132              	.LVL81:
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1133              		.loc 1 81 3 discriminator 2 view .LVU260
 1134 0020 6772     		strb	r7, [r4, #9]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1135              		.loc 1 81 3 discriminator 2 view .LVU261
 1136 0022 A772     		strb	r7, [r4, #10]
  81:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0x10);
 1137              		.loc 1 81 3 discriminator 2 view .LVU262
 1138 0024 0222     		movs	r2, #2
 1139 0026 3146     		mov	r1, r6
 1140 0028 2046     		mov	r0, r4
 1141 002a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1142              	.LVL82:
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1143              		.loc 1 82 3 discriminator 2 view .LVU263
 1144 002e 6772     		strb	r7, [r4, #9]
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1145              		.loc 1 82 3 discriminator 2 view .LVU264
 1146 0030 1023     		movs	r3, #16
 1147 0032 A372     		strb	r3, [r4, #10]
  82:Core/Src/oled.cpp ****         oled_buffer[W * m]=DATA;
 1148              		.loc 1 82 3 discriminator 2 view .LVU265
 1149 0034 0222     		movs	r2, #2
 1150 0036 3146     		mov	r1, r6
 1151 0038 2046     		mov	r0, r4
 1152 003a FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1153              	.LVL83:
  83:Core/Src/oled.cpp **** 		/* Write multi data */
 1154              		.loc 1 83 9 discriminator 2 view .LVU266
  83:Core/Src/oled.cpp **** 		/* Write multi data */
 1155              		.loc 1 83 23 is_stmt 0 discriminator 2 view .LVU267
 1156 003e E901     		lsls	r1, r5, #7
  83:Core/Src/oled.cpp **** 		/* Write multi data */
ARM GAS  /tmp/ccbFoK9Z.s 			page 27


 1157              		.loc 1 83 27 discriminator 2 view .LVU268
 1158 0040 04EBC513 		add	r3, r4, r5, lsl #7
 1159 0044 4022     		movs	r2, #64
 1160 0046 9A75     		strb	r2, [r3, #22]
  85:Core/Src/oled.cpp **** 	}
 1161              		.loc 1 85 3 is_stmt 1 discriminator 2 view .LVU269
  85:Core/Src/oled.cpp **** 	}
 1162              		.loc 1 85 13 is_stmt 0 discriminator 2 view .LVU270
 1163 0048 1031     		adds	r1, r1, #16
 1164 004a 2144     		add	r1, r1, r4
 1165 004c 8122     		movs	r2, #129
 1166 004e 0631     		adds	r1, r1, #6
 1167 0050 2046     		mov	r0, r4
 1168 0052 FFF7FEFF 		bl	_ZN4oled10oled_writeEPht
 1169              	.LVL84:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1170              		.loc 1 79 2 is_stmt 1 discriminator 2 view .LVU271
 1171 0056 0135     		adds	r5, r5, #1
 1172              	.LVL85:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1173              		.loc 1 79 2 is_stmt 0 discriminator 2 view .LVU272
 1174 0058 EDB2     		uxtb	r5, r5
 1175              	.LVL86:
 1176              	.L46:
  79:Core/Src/oled.cpp **** 		OLED_WRITECOMMAND(0xB0 + m);
 1177              		.loc 1 79 16 is_stmt 1 discriminator 3 view .LVU273
 1178 005a 072D     		cmp	r5, #7
 1179 005c D4D9     		bls	.L48
  87:Core/Src/oled.cpp **** }
 1180              		.loc 1 87 2 view .LVU274
  87:Core/Src/oled.cpp **** }
 1181              		.loc 1 87 19 is_stmt 0 view .LVU275
 1182 005e 2046     		mov	r0, r4
 1183 0060 FFF7FEFF 		bl	_ZN4oled17Counter_incrementEv
 1184              	.LVL87:
  88:Core/Src/oled.cpp **** 
 1185              		.loc 1 88 1 view .LVU276
 1186 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  88:Core/Src/oled.cpp **** 
 1187              		.loc 1 88 1 view .LVU277
 1188              		.cfi_endproc
 1189              	.LFE144:
 1190              		.fnend
 1192              		.section	.text._ZN4oled9DrawPixelEtt,"ax",%progbits
 1193              		.align	1
 1194              		.global	_ZN4oled9DrawPixelEtt
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu fpv4-sp-d16
 1200              	_ZN4oled9DrawPixelEtt:
 1201              		.fnstart
 1202              	.LVL88:
 1203              	.LFB154:
 192:Core/Src/oled.cpp **** 
 193:Core/Src/oled.cpp **** void oled::DrawPixel(uint16_t x, uint16_t y) {
 1204              		.loc 1 193 46 is_stmt 1 view -0
ARM GAS  /tmp/ccbFoK9Z.s 			page 28


 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208              		@ link register save eliminated.
 194:Core/Src/oled.cpp **** 	if (
 1209              		.loc 1 194 2 view .LVU279
 1210 0000 7F29     		cmp	r1, #127
 1211 0002 0CD8     		bhi	.L49
 195:Core/Src/oled.cpp **** 		x >= W||
 1212              		.loc 1 195 9 is_stmt 0 view .LVU280
 1213 0004 3F2A     		cmp	r2, #63
 1214 0006 0AD8     		bhi	.L49
 196:Core/Src/oled.cpp **** 		y >= H
 197:Core/Src/oled.cpp **** 	) {
 198:Core/Src/oled.cpp **** 		/* Error */
 199:Core/Src/oled.cpp **** 		return;
 200:Core/Src/oled.cpp **** 	}
 201:Core/Src/oled.cpp **** 		oled_buffer[x + (y / 8) * W] |= 1 << (y % 8);
 1215              		.loc 1 201 3 is_stmt 1 view .LVU281
 1216              		.loc 1 201 22 is_stmt 0 view .LVU282
 1217 0008 D308     		lsrs	r3, r2, #3
 1218              		.loc 1 201 32 view .LVU283
 1219 000a 01EBC311 		add	r1, r1, r3, lsl #7
 1220              	.LVL89:
 1221              		.loc 1 201 43 view .LVU284
 1222 000e 02F00702 		and	r2, r2, #7
 1223              	.LVL90:
 1224              		.loc 1 201 37 view .LVU285
 1225 0012 0123     		movs	r3, #1
 1226 0014 9340     		lsls	r3, r3, r2
 1227              		.loc 1 201 32 view .LVU286
 1228 0016 0144     		add	r1, r1, r0
 1229 0018 8A7D     		ldrb	r2, [r1, #22]	@ zero_extendqisi2
 1230 001a 1A43     		orrs	r2, r2, r3
 1231 001c 8A75     		strb	r2, [r1, #22]
 1232              	.L49:
 202:Core/Src/oled.cpp **** 
 203:Core/Src/oled.cpp **** }
 1233              		.loc 1 203 1 view .LVU287
 1234 001e 7047     		bx	lr
 1235              		.cfi_endproc
 1236              	.LFE154:
 1237              		.cantunwind
 1238              		.fnend
 1240              		.section	.text._ZN4oled8DrawLineEtttt,"ax",%progbits
 1241              		.align	1
 1242              		.global	_ZN4oled8DrawLineEtttt
 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1246              		.fpu fpv4-sp-d16
 1248              	_ZN4oled8DrawLineEtttt:
 1249              		.fnstart
 1250              	.LVL91:
 1251              	.LFB155:
 204:Core/Src/oled.cpp **** 
 205:Core/Src/oled.cpp **** void oled::DrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
ARM GAS  /tmp/ccbFoK9Z.s 			page 29


 1252              		.loc 1 205 73 is_stmt 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 4, pretend = 0, frame = 8
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		.loc 1 205 73 is_stmt 0 view .LVU289
 1257 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1258              	.LCFI14:
 1259              		.cfi_def_cfa_offset 36
 1260              		.cfi_offset 4, -36
 1261              		.cfi_offset 5, -32
 1262              		.cfi_offset 6, -28
 1263              		.cfi_offset 7, -24
 1264              		.cfi_offset 8, -20
 1265              		.cfi_offset 9, -16
 1266              		.cfi_offset 10, -12
 1267              		.cfi_offset 11, -8
 1268              		.cfi_offset 14, -4
 1269 0004 83B0     		sub	sp, sp, #12
 1270              	.LCFI15:
 1271              		.cfi_def_cfa_offset 48
 1272 0006 8346     		mov	fp, r0
 1273 0008 0C46     		mov	r4, r1
 1274 000a 1646     		mov	r6, r2
 1275 000c 1F46     		mov	r7, r3
 1276 000e BDF83080 		ldrh	r8, [sp, #48]
 206:Core/Src/oled.cpp **** 	int16_t dx, dy, sx, sy, err, e2, i, tmp; 
 1277              		.loc 1 206 2 is_stmt 1 view .LVU290
 207:Core/Src/oled.cpp **** 	
 208:Core/Src/oled.cpp **** 	/* Check for overflow */
 209:Core/Src/oled.cpp **** 	if (x0 >= W) {
 1278              		.loc 1 209 2 view .LVU291
 1279 0012 7F29     		cmp	r1, #127
 1280 0014 00D9     		bls	.L52
 210:Core/Src/oled.cpp **** 		x0 = W- 1;
 1281              		.loc 1 210 6 is_stmt 0 view .LVU292
 1282 0016 7F24     		movs	r4, #127
 1283              	.L52:
 1284              	.LVL92:
 211:Core/Src/oled.cpp **** 	}
 212:Core/Src/oled.cpp **** 	if (x1 >= W) {
 1285              		.loc 1 212 2 is_stmt 1 view .LVU293
 1286 0018 7F2F     		cmp	r7, #127
 1287 001a 00D9     		bls	.L53
 213:Core/Src/oled.cpp **** 		x1 = W- 1;
 1288              		.loc 1 213 6 is_stmt 0 view .LVU294
 1289 001c 7F27     		movs	r7, #127
 1290              	.L53:
 1291              	.LVL93:
 214:Core/Src/oled.cpp **** 	}
 215:Core/Src/oled.cpp **** 	if (y0 >= H) {
 1292              		.loc 1 215 2 is_stmt 1 view .LVU295
 1293 001e 3F2E     		cmp	r6, #63
 1294 0020 00D9     		bls	.L54
 216:Core/Src/oled.cpp **** 		y0 = H - 1;
 1295              		.loc 1 216 6 is_stmt 0 view .LVU296
 1296 0022 3F26     		movs	r6, #63
 1297              	.L54:
ARM GAS  /tmp/ccbFoK9Z.s 			page 30


 1298              	.LVL94:
 217:Core/Src/oled.cpp **** 	}
 218:Core/Src/oled.cpp **** 	if (y1 >= H) {
 1299              		.loc 1 218 2 is_stmt 1 view .LVU297
 1300 0024 B8F13F0F 		cmp	r8, #63
 1301 0028 01D9     		bls	.L55
 219:Core/Src/oled.cpp **** 		y1 = H - 1;
 1302              		.loc 1 219 6 is_stmt 0 view .LVU298
 1303 002a 4FF03F08 		mov	r8, #63
 1304              	.L55:
 1305              	.LVL95:
 220:Core/Src/oled.cpp **** 	}
 221:Core/Src/oled.cpp **** 	
 222:Core/Src/oled.cpp **** 	dx = (x0 < x1) ? (x1 - x0) : (x0 - x1); 
 1306              		.loc 1 222 2 is_stmt 1 view .LVU299
 1307              		.loc 1 222 5 is_stmt 0 view .LVU300
 1308 002e BC42     		cmp	r4, r7
 1309 0030 20D2     		bcs	.L56
 1310              		.loc 1 222 23 discriminator 1 view .LVU301
 1311 0032 A7EB0409 		sub	r9, r7, r4
 1312              		.loc 1 222 5 discriminator 1 view .LVU302
 1313 0036 0FFA89F9 		sxth	r9, r9
 1314              	.L57:
 1315              	.LVL96:
 223:Core/Src/oled.cpp **** 	dy = (y0 < y1) ? (y1 - y0) : (y0 - y1); 
 1316              		.loc 1 223 2 is_stmt 1 discriminator 4 view .LVU303
 1317              		.loc 1 223 5 is_stmt 0 discriminator 4 view .LVU304
 1318 003a 4645     		cmp	r6, r8
 1319 003c 1FD2     		bcs	.L58
 1320              		.loc 1 223 23 discriminator 1 view .LVU305
 1321 003e A8EB060A 		sub	r10, r8, r6
 1322              		.loc 1 223 5 discriminator 1 view .LVU306
 1323 0042 0FFA8AFA 		sxth	r10, r10
 1324              	.L59:
 1325              	.LVL97:
 224:Core/Src/oled.cpp **** 	sx = (x0 < x1) ? 1 : -1; 
 1326              		.loc 1 224 2 is_stmt 1 discriminator 4 view .LVU307
 1327              		.loc 1 224 5 is_stmt 0 discriminator 4 view .LVU308
 1328 0046 BC42     		cmp	r4, r7
 1329 0048 1ED2     		bcs	.L80
 1330              		.loc 1 224 5 view .LVU309
 1331 004a 0123     		movs	r3, #1
 1332 004c 1A46     		mov	r2, r3
 1333              	.L60:
 1334              	.LVL98:
 225:Core/Src/oled.cpp **** 	sy = (y0 < y1) ? 1 : -1; 
 1335              		.loc 1 225 2 is_stmt 1 discriminator 4 view .LVU310
 1336              		.loc 1 225 5 is_stmt 0 discriminator 4 view .LVU311
 1337 004e 4645     		cmp	r6, r8
 1338 0050 1ED2     		bcs	.L81
 1339              		.loc 1 225 5 view .LVU312
 1340 0052 0123     		movs	r3, #1
 1341 0054 0093     		str	r3, [sp]
 1342              	.L61:
 1343              	.LVL99:
 226:Core/Src/oled.cpp **** 	err = ((dx > dy) ? dx : -dy) / 2; 
 1344              		.loc 1 226 2 is_stmt 1 discriminator 4 view .LVU313
ARM GAS  /tmp/ccbFoK9Z.s 			page 31


 1345              		.loc 1 226 6 is_stmt 0 discriminator 4 view .LVU314
 1346 0056 D145     		cmp	r9, r10
 1347 0058 1EDD     		ble	.L62
 1348              		.loc 1 226 6 discriminator 1 view .LVU315
 1349 005a 09EBD975 		add	r5, r9, r9, lsr #31
 1350 005e 6D10     		asrs	r5, r5, #1
 1351              	.L63:
 1352              	.LVL100:
 227:Core/Src/oled.cpp **** 
 228:Core/Src/oled.cpp **** 	if (dx == 0) {
 1353              		.loc 1 228 2 is_stmt 1 discriminator 4 view .LVU316
 1354 0060 B9F1000F 		cmp	r9, #0
 1355 0064 1ED0     		beq	.L85
 229:Core/Src/oled.cpp **** 		if (y1 < y0) {
 230:Core/Src/oled.cpp **** 			tmp = y1;
 231:Core/Src/oled.cpp **** 			y1 = y0;
 232:Core/Src/oled.cpp **** 			y0 = tmp;
 233:Core/Src/oled.cpp **** 		}
 234:Core/Src/oled.cpp **** 		
 235:Core/Src/oled.cpp **** 		if (x1 < x0) {
 236:Core/Src/oled.cpp **** 			tmp = x1;
 237:Core/Src/oled.cpp **** 			x1 = x0;
 238:Core/Src/oled.cpp **** 			x0 = tmp;
 239:Core/Src/oled.cpp **** 		}
 240:Core/Src/oled.cpp **** 		
 241:Core/Src/oled.cpp **** 		/* Vertical line */
 242:Core/Src/oled.cpp **** 		for (i = y0; i <= y1; i++) {
 243:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 244:Core/Src/oled.cpp **** 		}
 245:Core/Src/oled.cpp **** 		
 246:Core/Src/oled.cpp **** 		/* Return from function */
 247:Core/Src/oled.cpp **** 		return;
 248:Core/Src/oled.cpp **** 	}
 249:Core/Src/oled.cpp **** 	
 250:Core/Src/oled.cpp **** 	if (dy == 0) {
 1356              		.loc 1 250 2 view .LVU317
 1357 0066 BAF1000F 		cmp	r10, #0
 1358 006a 33D0     		beq	.L86
 1359 006c CDF80480 		str	r8, [sp, #4]
 1360 0070 9046     		mov	r8, r2
 1361              	.LVL101:
 1362              		.loc 1 250 2 is_stmt 0 view .LVU318
 1363 0072 53E0     		b	.L69
 1364              	.LVL102:
 1365              	.L56:
 222:Core/Src/oled.cpp **** 	dy = (y0 < y1) ? (y1 - y0) : (y0 - y1); 
 1366              		.loc 1 222 35 discriminator 2 view .LVU319
 1367 0074 A4EB0709 		sub	r9, r4, r7
 222:Core/Src/oled.cpp **** 	dy = (y0 < y1) ? (y1 - y0) : (y0 - y1); 
 1368              		.loc 1 222 5 discriminator 2 view .LVU320
 1369 0078 0FFA89F9 		sxth	r9, r9
 1370 007c DDE7     		b	.L57
 1371              	.LVL103:
 1372              	.L58:
 223:Core/Src/oled.cpp **** 	sx = (x0 < x1) ? 1 : -1; 
 1373              		.loc 1 223 35 discriminator 2 view .LVU321
 1374 007e A6EB080A 		sub	r10, r6, r8
ARM GAS  /tmp/ccbFoK9Z.s 			page 32


 223:Core/Src/oled.cpp **** 	sx = (x0 < x1) ? 1 : -1; 
 1375              		.loc 1 223 5 discriminator 2 view .LVU322
 1376 0082 0FFA8AFA 		sxth	r10, r10
 1377 0086 DEE7     		b	.L59
 1378              	.LVL104:
 1379              	.L80:
 224:Core/Src/oled.cpp **** 	sy = (y0 < y1) ? 1 : -1; 
 1380              		.loc 1 224 5 view .LVU323
 1381 0088 4FF0FF33 		mov	r3, #-1
 1382 008c 1A46     		mov	r2, r3
 1383 008e DEE7     		b	.L60
 1384              	.LVL105:
 1385              	.L81:
 225:Core/Src/oled.cpp **** 	err = ((dx > dy) ? dx : -dy) / 2; 
 1386              		.loc 1 225 5 view .LVU324
 1387 0090 4FF0FF33 		mov	r3, #-1
 1388 0094 0093     		str	r3, [sp]
 1389 0096 DEE7     		b	.L61
 1390              	.LVL106:
 1391              	.L62:
 226:Core/Src/oled.cpp **** 
 1392              		.loc 1 226 6 discriminator 2 view .LVU325
 1393 0098 0AEBDA75 		add	r5, r10, r10, lsr #31
 1394 009c 6D10     		asrs	r5, r5, #1
 1395 009e 6D42     		rsbs	r5, r5, #0
 1396 00a0 2DB2     		sxth	r5, r5
 1397 00a2 DDE7     		b	.L63
 1398              	.LVL107:
 1399              	.L85:
 229:Core/Src/oled.cpp **** 			tmp = y1;
 1400              		.loc 1 229 3 is_stmt 1 view .LVU326
 1401 00a4 4645     		cmp	r6, r8
 1402 00a6 02D8     		bhi	.L65
 1403 00a8 4346     		mov	r3, r8
 1404 00aa B046     		mov	r8, r6
 1405              	.LVL108:
 229:Core/Src/oled.cpp **** 			tmp = y1;
 1406              		.loc 1 229 3 is_stmt 0 view .LVU327
 1407 00ac 1E46     		mov	r6, r3
 1408              	.LVL109:
 1409              	.L65:
 235:Core/Src/oled.cpp **** 			tmp = x1;
 1410              		.loc 1 235 3 is_stmt 1 view .LVU328
 1411 00ae BC42     		cmp	r4, r7
 1412 00b0 00D8     		bhi	.L66
 1413 00b2 2746     		mov	r7, r4
 1414              	.LVL110:
 1415              	.L66:
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1416              		.loc 1 242 3 view .LVU329
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1417              		.loc 1 242 10 is_stmt 0 view .LVU330
 1418 00b4 0FFA88F8 		sxth	r8, r8
 1419              	.LVL111:
 1420              	.L68:
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1421              		.loc 1 242 18 is_stmt 1 discriminator 3 view .LVU331
ARM GAS  /tmp/ccbFoK9Z.s 			page 33


 1422 00b8 B045     		cmp	r8, r6
 1423 00ba 23DC     		bgt	.L51
 243:Core/Src/oled.cpp **** 		}
 1424              		.loc 1 243 4 discriminator 2 view .LVU332
 243:Core/Src/oled.cpp **** 		}
 1425              		.loc 1 243 13 is_stmt 0 discriminator 2 view .LVU333
 1426 00bc 1FFA88F8 		uxth	r8, r8
 243:Core/Src/oled.cpp **** 		}
 1427              		.loc 1 243 13 discriminator 2 view .LVU334
 1428 00c0 4246     		mov	r2, r8
 1429 00c2 3946     		mov	r1, r7
 1430 00c4 5846     		mov	r0, fp
 1431 00c6 FFF7FEFF 		bl	_ZN4oled9DrawPixelEtt
 1432              	.LVL112:
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1433              		.loc 1 242 3 is_stmt 1 discriminator 2 view .LVU335
 1434 00ca 08F10108 		add	r8, r8, #1
 1435              	.LVL113:
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1436              		.loc 1 242 3 is_stmt 0 discriminator 2 view .LVU336
 1437 00ce 0FFA88F8 		sxth	r8, r8
 1438              	.LVL114:
 242:Core/Src/oled.cpp **** 			DrawPixel(x0, i);
 1439              		.loc 1 242 3 discriminator 2 view .LVU337
 1440 00d2 F1E7     		b	.L68
 1441              	.LVL115:
 1442              	.L86:
 251:Core/Src/oled.cpp **** 		if (y1 < y0) {
 1443              		.loc 1 251 3 is_stmt 1 view .LVU338
 1444 00d4 4645     		cmp	r6, r8
 1445 00d6 00D8     		bhi	.L70
 1446 00d8 B046     		mov	r8, r6
 1447              	.LVL116:
 1448              	.L70:
 252:Core/Src/oled.cpp **** 			tmp = y1;
 253:Core/Src/oled.cpp **** 			y1 = y0;
 254:Core/Src/oled.cpp **** 			y0 = tmp;
 255:Core/Src/oled.cpp **** 		}
 256:Core/Src/oled.cpp **** 		
 257:Core/Src/oled.cpp **** 		if (x1 < x0) {
 1449              		.loc 1 257 3 view .LVU339
 1450 00da BC42     		cmp	r4, r7
 1451 00dc 02D8     		bhi	.L71
 1452 00de 3B46     		mov	r3, r7
 1453 00e0 2746     		mov	r7, r4
 1454              	.LVL117:
 1455              		.loc 1 257 3 is_stmt 0 view .LVU340
 1456 00e2 1C46     		mov	r4, r3
 1457              	.LVL118:
 1458              	.L71:
 258:Core/Src/oled.cpp **** 			tmp = x1;
 259:Core/Src/oled.cpp **** 			x1 = x0;
 260:Core/Src/oled.cpp **** 			x0 = tmp;
 261:Core/Src/oled.cpp **** 		}
 262:Core/Src/oled.cpp **** 		
 263:Core/Src/oled.cpp **** 		/* Horizontal line */
 264:Core/Src/oled.cpp **** 		for (i = x0; i <= x1; i++) {
ARM GAS  /tmp/ccbFoK9Z.s 			page 34


 1459              		.loc 1 264 3 is_stmt 1 view .LVU341
 1460              		.loc 1 264 10 is_stmt 0 view .LVU342
 1461 00e4 3FB2     		sxth	r7, r7
 1462              	.LVL119:
 1463              		.loc 1 264 10 view .LVU343
 1464 00e6 07E0     		b	.L72
 1465              	.LVL120:
 1466              	.L87:
 265:Core/Src/oled.cpp **** 			DrawPixel(i, y0);
 1467              		.loc 1 265 4 is_stmt 1 discriminator 2 view .LVU344
 1468              		.loc 1 265 13 is_stmt 0 discriminator 2 view .LVU345
 1469 00e8 BFB2     		uxth	r7, r7
 1470              		.loc 1 265 13 discriminator 2 view .LVU346
 1471 00ea 4246     		mov	r2, r8
 1472 00ec 3946     		mov	r1, r7
 1473 00ee 5846     		mov	r0, fp
 1474 00f0 FFF7FEFF 		bl	_ZN4oled9DrawPixelEtt
 1475              	.LVL121:
 264:Core/Src/oled.cpp **** 			DrawPixel(i, y0);
 1476              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU347
 1477 00f4 0137     		adds	r7, r7, #1
 1478              	.LVL122:
 264:Core/Src/oled.cpp **** 			DrawPixel(i, y0);
 1479              		.loc 1 264 3 is_stmt 0 discriminator 2 view .LVU348
 1480 00f6 3FB2     		sxth	r7, r7
 1481              	.LVL123:
 1482              	.L72:
 264:Core/Src/oled.cpp **** 			DrawPixel(i, y0);
 1483              		.loc 1 264 18 is_stmt 1 discriminator 3 view .LVU349
 1484 00f8 A742     		cmp	r7, r4
 1485 00fa F5DD     		ble	.L87
 264:Core/Src/oled.cpp **** 			DrawPixel(i, y0);
 1486              		.loc 1 264 18 is_stmt 0 discriminator 3 view .LVU350
 1487 00fc 02E0     		b	.L51
 1488              	.LVL124:
 1489              	.L88:
 266:Core/Src/oled.cpp **** 		}
 267:Core/Src/oled.cpp **** 		
 268:Core/Src/oled.cpp **** 		/* Return from function */
 269:Core/Src/oled.cpp **** 		return;
 270:Core/Src/oled.cpp **** 	}
 271:Core/Src/oled.cpp **** 	
 272:Core/Src/oled.cpp **** 	while (1) {
 273:Core/Src/oled.cpp **** 		DrawPixel(x0, y0);
 274:Core/Src/oled.cpp **** 		if (x0 == x1 && y0 == y1) {
 1490              		.loc 1 274 16 discriminator 1 view .LVU351
 1491 00fe 019B     		ldr	r3, [sp, #4]
 1492 0100 9E42     		cmp	r6, r3
 1493 0102 12D1     		bne	.L73
 1494              	.LVL125:
 1495              	.L51:
 275:Core/Src/oled.cpp **** 			break;
 276:Core/Src/oled.cpp **** 		}
 277:Core/Src/oled.cpp **** 		e2 = err; 
 278:Core/Src/oled.cpp **** 		if (e2 > -dx) {
 279:Core/Src/oled.cpp **** 			err -= dy;
 280:Core/Src/oled.cpp **** 			x0 += sx;
ARM GAS  /tmp/ccbFoK9Z.s 			page 35


 281:Core/Src/oled.cpp **** 		} 
 282:Core/Src/oled.cpp **** 		if (e2 < dy) {
 283:Core/Src/oled.cpp **** 			err += dx;
 284:Core/Src/oled.cpp **** 			y0 += sy;
 285:Core/Src/oled.cpp **** 		} 
 286:Core/Src/oled.cpp **** 	}
 287:Core/Src/oled.cpp **** }
 1496              		.loc 1 287 1 view .LVU352
 1497 0104 03B0     		add	sp, sp, #12
 1498              	.LCFI16:
 1499              		.cfi_remember_state
 1500              		.cfi_def_cfa_offset 36
 1501              	.LVL126:
 1502              		.loc 1 287 1 view .LVU353
 1503              		@ sp needed
 1504 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1505              	.LVL127:
 1506              	.L82:
 1507              	.LCFI17:
 1508              		.cfi_restore_state
 1509              		.loc 1 287 1 view .LVU354
 1510 010a 2B46     		mov	r3, r5
 1511              	.LVL128:
 1512              	.L74:
 282:Core/Src/oled.cpp **** 			err += dx;
 1513              		.loc 1 282 3 is_stmt 1 view .LVU355
 1514 010c 5545     		cmp	r5, r10
 1515 010e 04DA     		bge	.L75
 283:Core/Src/oled.cpp **** 			y0 += sy;
 1516              		.loc 1 283 4 view .LVU356
 283:Core/Src/oled.cpp **** 			y0 += sy;
 1517              		.loc 1 283 8 is_stmt 0 view .LVU357
 1518 0110 4B44     		add	r3, r3, r9
 1519              	.LVL129:
 283:Core/Src/oled.cpp **** 			y0 += sy;
 1520              		.loc 1 283 8 view .LVU358
 1521 0112 1BB2     		sxth	r3, r3
 1522              	.LVL130:
 284:Core/Src/oled.cpp **** 		} 
 1523              		.loc 1 284 4 is_stmt 1 view .LVU359
 284:Core/Src/oled.cpp **** 		} 
 1524              		.loc 1 284 7 is_stmt 0 view .LVU360
 1525 0114 009A     		ldr	r2, [sp]
 1526 0116 1644     		add	r6, r6, r2
 1527              	.LVL131:
 284:Core/Src/oled.cpp **** 		} 
 1528              		.loc 1 284 7 view .LVU361
 1529 0118 B6B2     		uxth	r6, r6
 1530              	.LVL132:
 1531              	.L75:
 257:Core/Src/oled.cpp **** 			tmp = x1;
 1532              		.loc 1 257 3 view .LVU362
 1533 011a 1D46     		mov	r5, r3
 1534              	.LVL133:
 1535              	.L69:
 272:Core/Src/oled.cpp **** 		DrawPixel(x0, y0);
 1536              		.loc 1 272 2 is_stmt 1 view .LVU363
ARM GAS  /tmp/ccbFoK9Z.s 			page 36


 273:Core/Src/oled.cpp **** 		if (x0 == x1 && y0 == y1) {
 1537              		.loc 1 273 3 view .LVU364
 273:Core/Src/oled.cpp **** 		if (x0 == x1 && y0 == y1) {
 1538              		.loc 1 273 12 is_stmt 0 view .LVU365
 1539 011c 3246     		mov	r2, r6
 1540 011e 2146     		mov	r1, r4
 1541 0120 5846     		mov	r0, fp
 1542 0122 FFF7FEFF 		bl	_ZN4oled9DrawPixelEtt
 1543              	.LVL134:
 274:Core/Src/oled.cpp **** 			break;
 1544              		.loc 1 274 3 is_stmt 1 view .LVU366
 1545 0126 BC42     		cmp	r4, r7
 1546 0128 E9D0     		beq	.L88
 1547              	.L73:
 277:Core/Src/oled.cpp **** 		if (e2 > -dx) {
 1548              		.loc 1 277 3 view .LVU367
 1549              	.LVL135:
 278:Core/Src/oled.cpp **** 			err -= dy;
 1550              		.loc 1 278 3 view .LVU368
 278:Core/Src/oled.cpp **** 			err -= dy;
 1551              		.loc 1 278 12 is_stmt 0 view .LVU369
 1552 012a C9F10003 		rsb	r3, r9, #0
 278:Core/Src/oled.cpp **** 			err -= dy;
 1553              		.loc 1 278 3 view .LVU370
 1554 012e 9D42     		cmp	r5, r3
 1555 0130 EBDD     		ble	.L82
 279:Core/Src/oled.cpp **** 			x0 += sx;
 1556              		.loc 1 279 4 is_stmt 1 view .LVU371
 279:Core/Src/oled.cpp **** 			x0 += sx;
 1557              		.loc 1 279 8 is_stmt 0 view .LVU372
 1558 0132 A5EB0A03 		sub	r3, r5, r10
 1559 0136 1BB2     		sxth	r3, r3
 1560              	.LVL136:
 280:Core/Src/oled.cpp **** 		} 
 1561              		.loc 1 280 4 is_stmt 1 view .LVU373
 280:Core/Src/oled.cpp **** 		} 
 1562              		.loc 1 280 7 is_stmt 0 view .LVU374
 1563 0138 4444     		add	r4, r4, r8
 1564              	.LVL137:
 280:Core/Src/oled.cpp **** 		} 
 1565              		.loc 1 280 7 view .LVU375
 1566 013a A4B2     		uxth	r4, r4
 1567              	.LVL138:
 280:Core/Src/oled.cpp **** 		} 
 1568              		.loc 1 280 7 view .LVU376
 1569 013c E6E7     		b	.L74
 1570              		.cfi_endproc
 1571              	.LFE155:
 1572              		.cantunwind
 1573              		.fnend
 1575              		.section	.text._ZN4oled13DrawRectangleEtttt,"ax",%progbits
 1576              		.align	1
 1577              		.global	_ZN4oled13DrawRectangleEtttt
 1578              		.syntax unified
 1579              		.thumb
 1580              		.thumb_func
 1581              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccbFoK9Z.s 			page 37


 1583              	_ZN4oled13DrawRectangleEtttt:
 1584              		.fnstart
 1585              	.LVL139:
 1586              	.LFB156:
 288:Core/Src/oled.cpp **** 
 289:Core/Src/oled.cpp **** void oled::DrawRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h) {
 1587              		.loc 1 289 74 is_stmt 1 view -0
 1588              		.cfi_startproc
 1589              		@ args = 4, pretend = 0, frame = 0
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591              		.loc 1 289 74 is_stmt 0 view .LVU378
 1592 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1593              	.LCFI18:
 1594              		.cfi_def_cfa_offset 24
 1595              		.cfi_offset 4, -24
 1596              		.cfi_offset 5, -20
 1597              		.cfi_offset 6, -16
 1598              		.cfi_offset 7, -12
 1599              		.cfi_offset 8, -8
 1600              		.cfi_offset 14, -4
 1601 0004 82B0     		sub	sp, sp, #8
 1602              	.LCFI19:
 1603              		.cfi_def_cfa_offset 32
 1604 0006 0746     		mov	r7, r0
 1605 0008 0E46     		mov	r6, r1
 1606 000a 1546     		mov	r5, r2
 1607 000c BDF82080 		ldrh	r8, [sp, #32]
 290:Core/Src/oled.cpp **** 
 291:Core/Src/oled.cpp **** 	
 292:Core/Src/oled.cpp **** 	if ((x + w) == W) {
 1608              		.loc 1 292 2 is_stmt 1 view .LVU379
 1609              		.loc 1 292 9 is_stmt 0 view .LVU380
 1610 0010 CA18     		adds	r2, r1, r3
 1611              	.LVL140:
 1612              		.loc 1 292 2 view .LVU381
 1613 0012 802A     		cmp	r2, #128
 1614 0014 2AD0     		beq	.L93
 1615              	.L90:
 293:Core/Src/oled.cpp **** 		w = W- x;
 294:Core/Src/oled.cpp **** 	}
 295:Core/Src/oled.cpp **** 	if ((y + h) == H) {
 1616              		.loc 1 295 2 is_stmt 1 view .LVU382
 1617              		.loc 1 295 9 is_stmt 0 view .LVU383
 1618 0016 05EB0802 		add	r2, r5, r8
 1619              		.loc 1 295 2 view .LVU384
 1620 001a 402A     		cmp	r2, #64
 1621 001c 2AD0     		beq	.L94
 1622              	.LVL141:
 1623              	.L91:
 296:Core/Src/oled.cpp **** 		h = H - y;
 297:Core/Src/oled.cpp **** 	}
 298:Core/Src/oled.cpp **** 	
 299:Core/Src/oled.cpp **** 	DrawLine(x, y, x + w, y);          //Top line 
 1624              		.loc 1 299 2 is_stmt 1 view .LVU385
 1625              		.loc 1 299 10 is_stmt 0 view .LVU386
 1626 001e 3344     		add	r3, r3, r6
 1627              	.LVL142:
ARM GAS  /tmp/ccbFoK9Z.s 			page 38


 1628              		.loc 1 299 10 view .LVU387
 1629 0020 9CB2     		uxth	r4, r3
 1630 0022 0095     		str	r5, [sp]
 1631 0024 2346     		mov	r3, r4
 1632 0026 2A46     		mov	r2, r5
 1633 0028 3146     		mov	r1, r6
 1634              	.LVL143:
 1635              		.loc 1 299 10 view .LVU388
 1636 002a 3846     		mov	r0, r7
 1637              	.LVL144:
 1638              		.loc 1 299 10 view .LVU389
 1639 002c FFF7FEFF 		bl	_ZN4oled8DrawLineEtttt
 1640              	.LVL145:
 300:Core/Src/oled.cpp **** 	DrawLine(x, y + h, x + w, y + h );  //Bottom line 
 1641              		.loc 1 300 2 is_stmt 1 view .LVU390
 1642              		.loc 1 300 10 is_stmt 0 view .LVU391
 1643 0030 A844     		add	r8, r8, r5
 1644              	.LVL146:
 1645              		.loc 1 300 10 view .LVU392
 1646 0032 1FFA88F8 		uxth	r8, r8
 1647 0036 CDF80080 		str	r8, [sp]
 1648 003a 2346     		mov	r3, r4
 1649 003c 4246     		mov	r2, r8
 1650 003e 3146     		mov	r1, r6
 1651 0040 3846     		mov	r0, r7
 1652 0042 FFF7FEFF 		bl	_ZN4oled8DrawLineEtttt
 1653              	.LVL147:
 301:Core/Src/oled.cpp **** 	DrawLine(x, y, x, y + h);          //Left line 
 1654              		.loc 1 301 2 is_stmt 1 view .LVU393
 1655              		.loc 1 301 10 is_stmt 0 view .LVU394
 1656 0046 CDF80080 		str	r8, [sp]
 1657 004a 3346     		mov	r3, r6
 1658 004c 2A46     		mov	r2, r5
 1659 004e 3146     		mov	r1, r6
 1660 0050 3846     		mov	r0, r7
 1661 0052 FFF7FEFF 		bl	_ZN4oled8DrawLineEtttt
 1662              	.LVL148:
 302:Core/Src/oled.cpp **** 	DrawLine(x + w, y, x + w, y + h);  //Right line 
 1663              		.loc 1 302 2 is_stmt 1 view .LVU395
 1664              		.loc 1 302 10 is_stmt 0 view .LVU396
 1665 0056 CDF80080 		str	r8, [sp]
 1666 005a 2346     		mov	r3, r4
 1667 005c 2A46     		mov	r2, r5
 1668 005e 2146     		mov	r1, r4
 1669 0060 3846     		mov	r0, r7
 1670 0062 FFF7FEFF 		bl	_ZN4oled8DrawLineEtttt
 1671              	.LVL149:
 303:Core/Src/oled.cpp **** }
 1672              		.loc 1 303 1 view .LVU397
 1673 0066 02B0     		add	sp, sp, #8
 1674              	.LCFI20:
 1675              		.cfi_remember_state
 1676              		.cfi_def_cfa_offset 24
 1677              		@ sp needed
 1678 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1679              	.LVL150:
 1680              	.L93:
ARM GAS  /tmp/ccbFoK9Z.s 			page 39


 1681              	.LCFI21:
 1682              		.cfi_restore_state
 293:Core/Src/oled.cpp **** 	}
 1683              		.loc 1 293 3 is_stmt 1 view .LVU398
 293:Core/Src/oled.cpp **** 	}
 1684              		.loc 1 293 5 is_stmt 0 view .LVU399
 1685 006c C1F18003 		rsb	r3, r1, #128
 1686              	.LVL151:
 293:Core/Src/oled.cpp **** 	}
 1687              		.loc 1 293 5 view .LVU400
 1688 0070 9BB2     		uxth	r3, r3
 1689              	.LVL152:
 293:Core/Src/oled.cpp **** 	}
 1690              		.loc 1 293 5 view .LVU401
 1691 0072 D0E7     		b	.L90
 1692              	.L94:
 296:Core/Src/oled.cpp **** 	}
 1693              		.loc 1 296 3 is_stmt 1 view .LVU402
 296:Core/Src/oled.cpp **** 	}
 1694              		.loc 1 296 5 is_stmt 0 view .LVU403
 1695 0074 C5F14008 		rsb	r8, r5, #64
 1696 0078 1FFA88F8 		uxth	r8, r8
 1697              	.LVL153:
 296:Core/Src/oled.cpp **** 	}
 1698              		.loc 1 296 5 view .LVU404
 1699 007c CFE7     		b	.L91
 1700              		.cfi_endproc
 1701              	.LFE156:
 1702              		.cantunwind
 1703              		.fnend
 1705              		.section	.text._ZN4oled19DrawFilledRectangleEtttt,"ax",%progbits
 1706              		.align	1
 1707              		.global	_ZN4oled19DrawFilledRectangleEtttt
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv4-sp-d16
 1713              	_ZN4oled19DrawFilledRectangleEtttt:
 1714              		.fnstart
 1715              	.LVL154:
 1716              	.LFB157:
 304:Core/Src/oled.cpp **** 
 305:Core/Src/oled.cpp **** void oled::DrawFilledRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h) {
 1717              		.loc 1 305 80 is_stmt 1 view -0
 1718              		.cfi_startproc
 1719              		@ args = 4, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              		.loc 1 305 80 is_stmt 0 view .LVU406
 1722 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1723              	.LCFI22:
 1724              		.cfi_def_cfa_offset 24
 1725              		.cfi_offset 4, -24
 1726              		.cfi_offset 5, -20
 1727              		.cfi_offset 6, -16
 1728              		.cfi_offset 7, -12
 1729              		.cfi_offset 8, -8
 1730              		.cfi_offset 14, -4
ARM GAS  /tmp/ccbFoK9Z.s 			page 40


 1731 0004 82B0     		sub	sp, sp, #8
 1732              	.LCFI23:
 1733              		.cfi_def_cfa_offset 32
 1734 0006 8046     		mov	r8, r0
 1735 0008 0C46     		mov	r4, r1
 1736 000a 1646     		mov	r6, r2
 1737 000c 1F46     		mov	r7, r3
 1738 000e BDF82050 		ldrh	r5, [sp, #32]
 306:Core/Src/oled.cpp **** 	uint8_t i;
 1739              		.loc 1 306 2 is_stmt 1 view .LVU407
 307:Core/Src/oled.cpp **** 	
 308:Core/Src/oled.cpp **** 	// Check input parameters 
 309:Core/Src/oled.cpp **** 	if (
 1740              		.loc 1 309 2 view .LVU408
 1741 0012 8029     		cmp	r1, #128
 1742 0014 01D0     		beq	.L96
 310:Core/Src/oled.cpp **** 		x == W ||
 1743              		.loc 1 310 10 is_stmt 0 view .LVU409
 1744 0016 402A     		cmp	r2, #64
 1745 0018 1BD1     		bne	.L95
 1746              	.L96:
 311:Core/Src/oled.cpp **** 		y == H
 312:Core/Src/oled.cpp **** 	);
 313:Core/Src/oled.cpp **** 	else {
 314:Core/Src/oled.cpp **** 		return;
 315:Core/Src/oled.cpp **** 	}
 316:Core/Src/oled.cpp **** 	
 317:Core/Src/oled.cpp **** 	if ((x + w) == W) {
 1747              		.loc 1 317 2 is_stmt 1 view .LVU410
 1748              		.loc 1 317 9 is_stmt 0 view .LVU411
 1749 001a E319     		adds	r3, r4, r7
 1750              	.LVL155:
 1751              		.loc 1 317 2 view .LVU412
 1752 001c 802B     		cmp	r3, #128
 1753 001e 10D0     		beq	.L102
 1754              	.LVL156:
 1755              	.L98:
 318:Core/Src/oled.cpp **** 		w = W- x;
 319:Core/Src/oled.cpp **** 	}
 320:Core/Src/oled.cpp **** 	if ((y + h) == H) {
 1756              		.loc 1 320 2 is_stmt 1 view .LVU413
 1757              		.loc 1 320 9 is_stmt 0 view .LVU414
 1758 0020 7319     		adds	r3, r6, r5
 1759              		.loc 1 320 2 view .LVU415
 1760 0022 402B     		cmp	r3, #64
 1761 0024 11D0     		beq	.L103
 1762              	.LVL157:
 1763              	.L100:
 321:Core/Src/oled.cpp **** 		h = H - y;
 322:Core/Src/oled.cpp **** 	}
 323:Core/Src/oled.cpp **** 	
 324:Core/Src/oled.cpp **** 	for (i = 0; i = h; i++) {
 1764              		.loc 1 324 18 is_stmt 1 discriminator 3 view .LVU416
 1765              		.loc 1 324 18 is_stmt 0 discriminator 3 view .LVU417
 1766 0026 15F0FF0F 		tst	r5, #255
 1767 002a 12D0     		beq	.L95
 325:Core/Src/oled.cpp **** 		DrawLine(x, y + i, x + w, y + i);
ARM GAS  /tmp/ccbFoK9Z.s 			page 41


 1768              		.loc 1 325 3 is_stmt 1 discriminator 2 view .LVU418
 1769              		.loc 1 325 11 is_stmt 0 discriminator 2 view .LVU419
 1770 002c 56FA85F2 		uxtab	r2, r6, r5
 1771 0030 92B2     		uxth	r2, r2
 1772 0032 3B19     		adds	r3, r7, r4
 1773 0034 0092     		str	r2, [sp]
 1774 0036 9BB2     		uxth	r3, r3
 1775 0038 2146     		mov	r1, r4
 1776 003a 4046     		mov	r0, r8
 1777 003c FFF7FEFF 		bl	_ZN4oled8DrawLineEtttt
 1778              	.LVL158:
 324:Core/Src/oled.cpp **** 		DrawLine(x, y + i, x + w, y + i);
 1779              		.loc 1 324 2 is_stmt 1 discriminator 2 view .LVU420
 324:Core/Src/oled.cpp **** 		DrawLine(x, y + i, x + w, y + i);
 1780              		.loc 1 324 2 is_stmt 0 discriminator 2 view .LVU421
 1781 0040 F1E7     		b	.L100
 1782              	.LVL159:
 1783              	.L102:
 318:Core/Src/oled.cpp **** 	}
 1784              		.loc 1 318 3 is_stmt 1 view .LVU422
 318:Core/Src/oled.cpp **** 	}
 1785              		.loc 1 318 5 is_stmt 0 view .LVU423
 1786 0042 C4F18007 		rsb	r7, r4, #128
 1787 0046 BFB2     		uxth	r7, r7
 1788              	.LVL160:
 318:Core/Src/oled.cpp **** 	}
 1789              		.loc 1 318 5 view .LVU424
 1790 0048 EAE7     		b	.L98
 1791              	.L103:
 321:Core/Src/oled.cpp **** 	}
 1792              		.loc 1 321 3 is_stmt 1 view .LVU425
 321:Core/Src/oled.cpp **** 	}
 1793              		.loc 1 321 5 is_stmt 0 view .LVU426
 1794 004a C6F14005 		rsb	r5, r6, #64
 1795 004e ADB2     		uxth	r5, r5
 1796              	.LVL161:
 324:Core/Src/oled.cpp **** 		DrawLine(x, y + i, x + w, y + i);
 1797              		.loc 1 324 2 is_stmt 1 view .LVU427
 324:Core/Src/oled.cpp **** 		DrawLine(x, y + i, x + w, y + i);
 1798              		.loc 1 324 2 is_stmt 0 view .LVU428
 1799 0050 E9E7     		b	.L100
 1800              	.LVL162:
 1801              	.L95:
 326:Core/Src/oled.cpp **** 	}
 327:Core/Src/oled.cpp **** }...
 1802              		.loc 1 327 1 view .LVU429
 1803 0052 02B0     		add	sp, sp, #8
 1804              	.LCFI24:
 1805              		.cfi_def_cfa_offset 24
 1806              		@ sp needed
 1807 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1808              		.loc 1 327 1 view .LVU430
 1809              		.cfi_endproc
 1810              	.LFE157:
 1811              		.cantunwind
 1812              		.fnend
 1814              		.global	__aeabi_f2d
ARM GAS  /tmp/ccbFoK9Z.s 			page 42


 1815              		.global	__aeabi_dcmpge
 1816              		.section	.text._ZN4oled19oled_update_batteryEf,"ax",%progbits
 1817              		.align	1
 1818              		.global	_ZN4oled19oled_update_batteryEf
 1819              		.syntax unified
 1820              		.thumb
 1821              		.thumb_func
 1822              		.fpu fpv4-sp-d16
 1824              	_ZN4oled19oled_update_batteryEf:
 1825              		.fnstart
 1826              	.LVL163:
 1827              	.LFB147:
 133:Core/Src/oled.cpp **** {
 1828              		.loc 1 133 1 is_stmt 1 view -0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 0
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Core/Src/oled.cpp **** {
 1832              		.loc 1 133 1 is_stmt 0 view .LVU432
 1833 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1834              	.LCFI25:
 1835              		.cfi_def_cfa_offset 20
 1836              		.cfi_offset 4, -20
 1837              		.cfi_offset 5, -16
 1838              		.cfi_offset 6, -12
 1839              		.cfi_offset 7, -8
 1840              		.cfi_offset 14, -4
 1841 0002 83B0     		sub	sp, sp, #12
 1842              	.LCFI26:
 1843              		.cfi_def_cfa_offset 32
 1844 0004 0546     		mov	r5, r0
 1845 0006 10EE104A 		vmov	r4, s0
 138:Core/Src/oled.cpp **** 	DrawRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 1846              		.loc 1 138 2 is_stmt 1 view .LVU433
 138:Core/Src/oled.cpp **** 	DrawRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 1847              		.loc 1 138 15 is_stmt 0 view .LVU434
 1848 000a 0423     		movs	r3, #4
 1849 000c 0093     		str	r3, [sp]
 1850 000e 0022     		movs	r2, #0
 1851 0010 5A21     		movs	r1, #90
 1852 0012 FFF7FEFF 		bl	_ZN4oled13DrawRectangleEtttt
 1853              	.LVL164:
 140:Core/Src/oled.cpp **** 	if(voltage >= 4.1){ //100%
 1854              		.loc 1 140 2 is_stmt 1 view .LVU435
 140:Core/Src/oled.cpp **** 	if(voltage >= 4.1){ //100%
 1855              		.loc 1 140 5 is_stmt 0 view .LVU436
 1856 0016 2046     		mov	r0, r4	@ float
 1857 0018 FFF7FEFF 		bl	__aeabi_f2d
 1858              	.LVL165:
 1859 001c 0646     		mov	r6, r0
 1860 001e 0F46     		mov	r7, r1
 140:Core/Src/oled.cpp **** 	if(voltage >= 4.1){ //100%
 1861              		.loc 1 140 2 view .LVU437
 1862 0020 25A3     		adr	r3, .L126
 1863 0022 D3E90023 		ldrd	r2, [r3]
 1864 0026 FFF7FEFF 		bl	__aeabi_dcmpge
 1865              	.LVL166:
ARM GAS  /tmp/ccbFoK9Z.s 			page 43


 1866 002a 08BB     		cbnz	r0, .L123
 143:Core/Src/oled.cpp **** 	else if(voltage >= 4.0){ //75%
 1867              		.loc 1 143 7 is_stmt 1 view .LVU438
 1868 002c F1EE007A 		vmov.f32	s15, #4.0e+0
 1869 0030 07EE104A 		vmov	s14, r4
 1870 0034 B4EEE77A 		vcmpe.f32	s14, s15
 1871 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1872 003c 21DA     		bge	.L124
 146:Core/Src/oled.cpp **** 	else if(voltage >= 3.9){ //50%
 1873              		.loc 1 146 7 view .LVU439
 1874 003e 20A3     		adr	r3, .L126+8
 1875 0040 D3E90023 		ldrd	r2, [r3]
 1876 0044 3046     		mov	r0, r6
 1877 0046 3946     		mov	r1, r7
 1878 0048 FFF7FEFF 		bl	__aeabi_dcmpge
 1879              	.LVL167:
 1880 004c 10BB     		cbnz	r0, .L125
 149:Core/Src/oled.cpp **** 	else if(voltage >= 3.8){ //25%
 1881              		.loc 1 149 7 view .LVU440
 1882 004e 1EA3     		adr	r3, .L126+16
 1883 0050 D3E90023 		ldrd	r2, [r3]
 1884 0054 3046     		mov	r0, r6
 1885 0056 3946     		mov	r1, r7
 1886 0058 FFF7FEFF 		bl	__aeabi_dcmpge
 1887              	.LVL168:
 1888 005c 18B3     		cbz	r0, .L121
 150:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,1.05);
 1889              		.loc 1 150 3 view .LVU441
 150:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,1.05);
 1890              		.loc 1 150 22 is_stmt 0 view .LVU442
 1891 005e 0123     		movs	r3, #1
 1892 0060 0093     		str	r3, [sp]
 1893 0062 0423     		movs	r3, #4
 1894 0064 0022     		movs	r2, #0
 1895 0066 5A21     		movs	r1, #90
 1896 0068 2846     		mov	r0, r5
 1897 006a FFF7FEFF 		bl	_ZN4oled19DrawFilledRectangleEtttt
 1898              	.LVL169:
 1899 006e 06E0     		b	.L104
 1900              	.L123:
 141:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 1901              		.loc 1 141 3 is_stmt 1 view .LVU443
 141:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,4.2); // considering that 4.2 is the maximum voltage for our battery
 1902              		.loc 1 141 22 is_stmt 0 view .LVU444
 1903 0070 0423     		movs	r3, #4
 1904 0072 0093     		str	r3, [sp]
 1905 0074 0022     		movs	r2, #0
 1906 0076 5A21     		movs	r1, #90
 1907 0078 2846     		mov	r0, r5
 1908 007a FFF7FEFF 		bl	_ZN4oled19DrawFilledRectangleEtttt
 1909              	.LVL170:
 1910              	.L104:
 155:Core/Src/oled.cpp **** }
 1911              		.loc 1 155 1 view .LVU445
 1912 007e 03B0     		add	sp, sp, #12
 1913              	.LCFI27:
 1914              		.cfi_remember_state
ARM GAS  /tmp/ccbFoK9Z.s 			page 44


 1915              		.cfi_def_cfa_offset 20
 1916              		@ sp needed
 1917 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 1918              	.LVL171:
 1919              	.L124:
 1920              	.LCFI28:
 1921              		.cfi_restore_state
 144:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,3.15);
 1922              		.loc 1 144 3 is_stmt 1 view .LVU446
 144:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,3.15);
 1923              		.loc 1 144 22 is_stmt 0 view .LVU447
 1924 0082 0323     		movs	r3, #3
 1925 0084 0093     		str	r3, [sp]
 1926 0086 0423     		movs	r3, #4
 1927 0088 0022     		movs	r2, #0
 1928 008a 5A21     		movs	r1, #90
 1929 008c 2846     		mov	r0, r5
 1930 008e FFF7FEFF 		bl	_ZN4oled19DrawFilledRectangleEtttt
 1931              	.LVL172:
 1932 0092 F4E7     		b	.L104
 1933              	.L125:
 147:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,2.1);
 1934              		.loc 1 147 3 is_stmt 1 view .LVU448
 147:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,2.1);
 1935              		.loc 1 147 22 is_stmt 0 view .LVU449
 1936 0094 0223     		movs	r3, #2
 1937 0096 0093     		str	r3, [sp]
 1938 0098 0423     		movs	r3, #4
 1939 009a 0022     		movs	r2, #0
 1940 009c 5A21     		movs	r1, #90
 1941 009e 2846     		mov	r0, r5
 1942 00a0 FFF7FEFF 		bl	_ZN4oled19DrawFilledRectangleEtttt
 1943              	.LVL173:
 1944 00a4 EBE7     		b	.L104
 1945              	.L121:
 153:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,0.5);
 1946              		.loc 1 153 3 is_stmt 1 view .LVU450
 153:Core/Src/oled.cpp **** 		DrawFilledRectangle(90,0,4.2,0.5);
 1947              		.loc 1 153 22 is_stmt 0 view .LVU451
 1948 00a6 0022     		movs	r2, #0
 1949 00a8 0092     		str	r2, [sp]
 1950 00aa 0423     		movs	r3, #4
 1951 00ac 5A21     		movs	r1, #90
 1952 00ae 2846     		mov	r0, r5
 1953 00b0 FFF7FEFF 		bl	_ZN4oled19DrawFilledRectangleEtttt
 1954              	.LVL174:
 155:Core/Src/oled.cpp **** }
 1955              		.loc 1 155 1 view .LVU452
 1956 00b4 E3E7     		b	.L104
 1957              	.L127:
 1958 00b6 00BF     		.align	3
 1959              	.L126:
 1960 00b8 66666666 		.word	1717986918
 1961 00bc 66661040 		.word	1074816614
 1962 00c0 33333333 		.word	858993459
 1963 00c4 33330F40 		.word	1074737971
 1964 00c8 66666666 		.word	1717986918
ARM GAS  /tmp/ccbFoK9Z.s 			page 45


 1965 00cc 66660E40 		.word	1074685542
 1966              		.cfi_endproc
 1967              	.LFE147:
 1968              		.cantunwind
 1969              		.fnend
 1971              		.text
 1972              	.Letext0:
 1973              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1974              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1975              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1976              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1977              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1978              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1979              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1980              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1981              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1982              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1983              		.file 12 "/usr/include/newlib/sys/_types.h"
 1984              		.file 13 "/usr/include/newlib/sys/reent.h"
 1985              		.file 14 "/usr/include/newlib/sys/lock.h"
 1986              		.file 15 "Core/Inc/fonts.h"
 1987              		.file 16 "Core/Inc/oled.h"
 1988              		.file 17 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1989              		.file 18 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1990              		.file 19 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1991              		.file 20 "/usr/include/newlib/stdlib.h"
 1992              		.file 21 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1993              		.file 22 "/usr/include/newlib/string.h"
 1994              		.file 23 "<built-in>"
ARM GAS  /tmp/ccbFoK9Z.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.cpp
     /tmp/ccbFoK9Z.s:18     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $t
     /tmp/ccbFoK9Z.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
.ARM.exidx.text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 $d
     /tmp/ccbFoK9Z.s:26     .text._ZN4oledC2EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef:0000000000000000 _ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
     /tmp/ccbFoK9Z.s:78     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $t
     /tmp/ccbFoK9Z.s:85     .text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 _ZN4oled9oled_fillENS_12OLED_COLOR_tE
.ARM.exidx.text._ZN4oled9oled_fillENS_12OLED_COLOR_tE:0000000000000000 $d
     /tmp/ccbFoK9Z.s:143    .text._ZN4oled10oled_writeEPht:0000000000000000 $t
     /tmp/ccbFoK9Z.s:150    .text._ZN4oled10oled_writeEPht:0000000000000000 _ZN4oled10oled_writeEPht
.ARM.exidx.text._ZN4oled10oled_writeEPht:0000000000000000 $d
     /tmp/ccbFoK9Z.s:197    .text._ZN4oled4initEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:204    .text._ZN4oled4initEv:0000000000000000 _ZN4oled4initEv
  .ARM.exidx.text._ZN4oled4initEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:564    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $t
     /tmp/ccbFoK9Z.s:571    .text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 _ZN4oled10oled_printEPc9FontDef_ttt
.ARM.exidx.text._ZN4oled10oled_printEPc9FontDef_ttt:0000000000000000 $d
     /tmp/ccbFoK9Z.s:817    .text._ZN4oled13switch_cursorEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:824    .text._ZN4oled13switch_cursorEv:0000000000000000 _ZN4oled13switch_cursorEv
.ARM.exidx.text._ZN4oled13switch_cursorEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:841    .text._ZN4oled8oled_offEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:848    .text._ZN4oled8oled_offEv:0000000000000000 _ZN4oled8oled_offEv
.ARM.exidx.text._ZN4oled8oled_offEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:888    .text._ZN4oled13oled_isOledOnEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:895    .text._ZN4oled13oled_isOledOnEv:0000000000000000 _ZN4oled13oled_isOledOnEv
.ARM.exidx.text._ZN4oled13oled_isOledOnEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:916    .text._ZN4oled15oled_resetTimerEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:923    .text._ZN4oled15oled_resetTimerEv:0000000000000000 _ZN4oled15oled_resetTimerEv
.ARM.exidx.text._ZN4oled15oled_resetTimerEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:944    .text._ZN4oled7oled_onEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:951    .text._ZN4oled7oled_onEv:0000000000000000 _ZN4oled7oled_onEv
.ARM.exidx.text._ZN4oled7oled_onEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:995    .text._ZN4oled13oled_setTimerEm:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1002   .text._ZN4oled13oled_setTimerEm:0000000000000000 _ZN4oled13oled_setTimerEm
     /tmp/ccbFoK9Z.s:1028   .text._ZN4oled13oled_setTimerEm:0000000000000014 $d
.ARM.exidx.text._ZN4oled13oled_setTimerEm:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1035   .text._ZN4oled17Counter_incrementEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1042   .text._ZN4oled17Counter_incrementEv:0000000000000000 _ZN4oled17Counter_incrementEv
.ARM.extab.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
.ARM.exidx.text._ZN4oled17Counter_incrementEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1085   .text._ZN4oled12oled_refreshEv:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1092   .text._ZN4oled12oled_refreshEv:0000000000000000 _ZN4oled12oled_refreshEv
.ARM.exidx.text._ZN4oled12oled_refreshEv:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1193   .text._ZN4oled9DrawPixelEtt:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1200   .text._ZN4oled9DrawPixelEtt:0000000000000000 _ZN4oled9DrawPixelEtt
.ARM.exidx.text._ZN4oled9DrawPixelEtt:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1241   .text._ZN4oled8DrawLineEtttt:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1248   .text._ZN4oled8DrawLineEtttt:0000000000000000 _ZN4oled8DrawLineEtttt
.ARM.exidx.text._ZN4oled8DrawLineEtttt:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1576   .text._ZN4oled13DrawRectangleEtttt:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1583   .text._ZN4oled13DrawRectangleEtttt:0000000000000000 _ZN4oled13DrawRectangleEtttt
.ARM.exidx.text._ZN4oled13DrawRectangleEtttt:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1706   .text._ZN4oled19DrawFilledRectangleEtttt:0000000000000000 $t
     /tmp/ccbFoK9Z.s:1713   .text._ZN4oled19DrawFilledRectangleEtttt:0000000000000000 _ZN4oled19DrawFilledRectangleEtttt
.ARM.exidx.text._ZN4oled19DrawFilledRectangleEtttt:0000000000000000 $d
     /tmp/ccbFoK9Z.s:1817   .text._ZN4oled19oled_update_batteryEf:0000000000000000 $t
ARM GAS  /tmp/ccbFoK9Z.s 			page 47


     /tmp/ccbFoK9Z.s:1824   .text._ZN4oled19oled_update_batteryEf:0000000000000000 _ZN4oled19oled_update_batteryEf
     /tmp/ccbFoK9Z.s:1960   .text._ZN4oled19oled_update_batteryEf:00000000000000b8 $d
.ARM.exidx.text._ZN4oled19oled_update_batteryEf:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_I2C_Master_Transmit
__aeabi_unwind_cpp_pr0
HAL_I2C_IsDeviceReady
HAL_TIM_Base_Start_IT
strlen
__aeabi_unwind_cpp_pr1
__aeabi_f2d
__aeabi_dcmpge
