ARM GAS  /tmp/ccCbjvan.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZL12MX_GPIO_Initv,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZL12MX_GPIO_Initv:
  26              		.fnstart
  27              	.LFB1999:
  28              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.</center></h2>
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.cpp ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.cpp ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.cpp ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.cpp ****   *
  17:Core/Src/main.cpp ****   ******************************************************************************
  18:Core/Src/main.cpp ****   */
  19:Core/Src/main.cpp **** /* USER CODE END Header */
  20:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.cpp **** #include "main.h"
  22:Core/Src/main.cpp **** 
  23:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.cpp **** #include "oled.h"
  26:Core/Src/main.cpp **** #include "menu.hpp"
  27:Core/Src/main.cpp **** #include "adc.hpp"
  28:Core/Src/main.cpp **** #include "stm32f4xx_hal_conf.h"
  29:Core/Src/main.cpp **** #include "pin.hpp"
  30:Core/Src/main.cpp **** #include "sa818.h"
ARM GAS  /tmp/ccCbjvan.s 			page 2


  31:Core/Src/main.cpp **** #include "uart.hpp"
  32:Core/Src/main.cpp **** #include "trigger.hpp"
  33:Core/Src/main.cpp **** /* USER CODE END Includes */
  34:Core/Src/main.cpp **** 
  35:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** /* USER CODE END PTD */
  39:Core/Src/main.cpp **** 
  40:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  42:Core/Src/main.cpp **** /* USER CODE END PD */
  43:Core/Src/main.cpp **** 
  44:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* USER CODE END PM */
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.cpp **** ADC_HandleTypeDef hadc1;
  51:Core/Src/main.cpp **** 
  52:Core/Src/main.cpp **** I2C_HandleTypeDef hi2c1;
  53:Core/Src/main.cpp **** I2C_HandleTypeDef hi2c3;
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** I2S_HandleTypeDef hi2s2;
  56:Core/Src/main.cpp **** I2S_HandleTypeDef hi2s3;
  57:Core/Src/main.cpp **** I2S_HandleTypeDef hi2s4;
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** SD_HandleTypeDef hsd;
  60:Core/Src/main.cpp **** 
  61:Core/Src/main.cpp **** SPI_HandleTypeDef hspi1;
  62:Core/Src/main.cpp **** SPI_HandleTypeDef hspi5;
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** TIM_HandleTypeDef htim5;
  65:Core/Src/main.cpp **** TIM_HandleTypeDef htim9;
  66:Core/Src/main.cpp **** TIM_HandleTypeDef htim10;
  67:Core/Src/main.cpp **** 
  68:Core/Src/main.cpp **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  69:Core/Src/main.cpp **** 
  70:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  71:Core/Src/main.cpp **** DMA_HandleTypeDef hdma_usart2_rx;
  72:Core/Src/main.cpp **** DMA_HandleTypeDef hdma_usart2_tx;
  73:Core/Src/main.cpp **** /* USER CODE END PV */
  74:Core/Src/main.cpp **** 
  75:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.cpp **** void SystemClock_Config(void);
  77:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
  78:Core/Src/main.cpp **** static void MX_I2C1_Init(void);
  79:Core/Src/main.cpp **** static void MX_I2C3_Init(void);
  80:Core/Src/main.cpp **** static void MX_I2S2_Init(void);
  81:Core/Src/main.cpp **** static void MX_I2S3_Init(void);
  82:Core/Src/main.cpp **** static void MX_I2S4_Init(void);
  83:Core/Src/main.cpp **** static void MX_SDIO_SD_Init(void);
  84:Core/Src/main.cpp **** static void MX_SPI1_Init(void);
  85:Core/Src/main.cpp **** static void MX_SPI5_Init(void);
  86:Core/Src/main.cpp **** static void MX_USB_OTG_FS_PCD_Init(void);
  87:Core/Src/main.cpp **** static void MX_ADC1_Init(void);
ARM GAS  /tmp/ccCbjvan.s 			page 3


  88:Core/Src/main.cpp **** static void MX_TIM10_Init(void);
  89:Core/Src/main.cpp **** static void MX_TIM5_Init(void);
  90:Core/Src/main.cpp **** static void MX_TIM9_Init(void);
  91:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  92:Core/Src/main.cpp **** 
  93:Core/Src/main.cpp **** /* USER CODE END PFP */
  94:Core/Src/main.cpp **** 
  95:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  96:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  97:Core/Src/main.cpp **** oled oled1(&hi2c3,0x78,&htim10);
  98:Core/Src/main.cpp **** menu menu1(&oled1);
  99:Core/Src/main.cpp **** adc adc_bat(&hadc1);
 100:Core/Src/main.cpp **** pin radio_ptt(GPIOE,pin::PIN1,pin::out, pin::PullDown, pin::SPEED_LOW);
 101:Core/Src/main.cpp **** pin radio_pd(GPIOE,pin::PIN3,pin::out, pin::PullDown, pin::SPEED_LOW);
 102:Core/Src/main.cpp **** uart uart_sa818(uart::uart2,9600);
 103:Core/Src/main.cpp **** uart uart_pc(uart::uart1,115200);
 104:Core/Src/main.cpp **** sa818 sa8181(&uart_sa818, &radio_pd, &radio_ptt);
 105:Core/Src/main.cpp **** trigger triggerPB2(GPIOE,trigger::PIN2,trigger::NoPull);
 106:Core/Src/main.cpp **** 
 107:Core/Src/main.cpp **** /* USER CODE END 0 */
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp **** /**
 110:Core/Src/main.cpp ****   * @brief  The application entry point.
 111:Core/Src/main.cpp ****   * @retval int
 112:Core/Src/main.cpp ****   */
 113:Core/Src/main.cpp **** int main(void)
 114:Core/Src/main.cpp **** {
 115:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 116:Core/Src/main.cpp **** 
 117:Core/Src/main.cpp ****   /* USER CODE END 1 */
 118:Core/Src/main.cpp **** 
 119:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
 120:Core/Src/main.cpp **** 
 121:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 122:Core/Src/main.cpp ****   HAL_Init();
 123:Core/Src/main.cpp **** 
 124:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
 125:Core/Src/main.cpp **** 
 126:Core/Src/main.cpp ****   /* USER CODE END Init */
 127:Core/Src/main.cpp **** 
 128:Core/Src/main.cpp ****   /* Configure the system clock */
 129:Core/Src/main.cpp ****   SystemClock_Config();
 130:Core/Src/main.cpp **** 
 131:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
 132:Core/Src/main.cpp **** 
 133:Core/Src/main.cpp ****   /* USER CODE END SysInit */
 134:Core/Src/main.cpp **** 
 135:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
 136:Core/Src/main.cpp ****   MX_GPIO_Init();
 137:Core/Src/main.cpp ****   MX_I2C1_Init();
 138:Core/Src/main.cpp ****   MX_I2C3_Init();
 139:Core/Src/main.cpp ****   MX_I2S2_Init();
 140:Core/Src/main.cpp ****   MX_I2S3_Init();
 141:Core/Src/main.cpp ****   MX_I2S4_Init();
 142:Core/Src/main.cpp ****   MX_SDIO_SD_Init();
 143:Core/Src/main.cpp ****   MX_SPI1_Init();
 144:Core/Src/main.cpp ****   MX_SPI5_Init();
ARM GAS  /tmp/ccCbjvan.s 			page 4


 145:Core/Src/main.cpp ****   MX_USB_OTG_FS_PCD_Init();
 146:Core/Src/main.cpp ****   MX_ADC1_Init();
 147:Core/Src/main.cpp ****   MX_TIM10_Init();
 148:Core/Src/main.cpp ****   MX_TIM5_Init();
 149:Core/Src/main.cpp ****   MX_TIM9_Init();
 150:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.cpp ****   adc_bat.adc_setEquation(3.3*2/4096,0);
 152:Core/Src/main.cpp ****   oled1.init();
 153:Core/Src/main.cpp ****   radio_pd.init();
 154:Core/Src/main.cpp ****   radio_ptt.init();
 155:Core/Src/main.cpp ****   
 156:Core/Src/main.cpp ****   /* USER CODE END 2 */
 157:Core/Src/main.cpp **** 
 158:Core/Src/main.cpp ****   /* Infinite loop */
 159:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 160:Core/Src/main.cpp ****   while (1)
 161:Core/Src/main.cpp ****   {
 162:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 163:Core/Src/main.cpp **** 
 164:Core/Src/main.cpp ****     
 165:Core/Src/main.cpp **** 
 166:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 167:Core/Src/main.cpp ****   }
 168:Core/Src/main.cpp ****   /* USER CODE END 3 */
 169:Core/Src/main.cpp **** }
 170:Core/Src/main.cpp **** 
 171:Core/Src/main.cpp **** /**x
 172:Core/Src/main.cpp ****   * @brief System Clock Configuration
 173:Core/Src/main.cpp ****   * @retval None
 174:Core/Src/main.cpp ****   */
 175:Core/Src/main.cpp **** void SystemClock_Config(void)
 176:Core/Src/main.cpp **** {
 177:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 180:Core/Src/main.cpp **** 
 181:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.cpp ****   */
 183:Core/Src/main.cpp ****   __HAL_RCC_PWR_CLK_ENABLE();
 184:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 185:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 186:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 187:Core/Src/main.cpp ****   */
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 4;
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 72;
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 195:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 196:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Core/Src/main.cpp ****   {
 198:Core/Src/main.cpp ****     Error_Handler();
 199:Core/Src/main.cpp ****   }
 200:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 201:Core/Src/main.cpp ****   */
ARM GAS  /tmp/ccCbjvan.s 			page 5


 202:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 203:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 207:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 208:Core/Src/main.cpp **** 
 209:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 210:Core/Src/main.cpp ****   {
 211:Core/Src/main.cpp ****     Error_Handler();
 212:Core/Src/main.cpp ****   }
 213:Core/Src/main.cpp ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 214:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 215:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SM = 4;
 216:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 217:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 218:Core/Src/main.cpp ****   {
 219:Core/Src/main.cpp ****     Error_Handler();
 220:Core/Src/main.cpp ****   }
 221:Core/Src/main.cpp **** }
 222:Core/Src/main.cpp **** 
 223:Core/Src/main.cpp **** /**
 224:Core/Src/main.cpp ****   * @brief ADC1 Initialization Function
 225:Core/Src/main.cpp ****   * @param None
 226:Core/Src/main.cpp ****   * @retval None
 227:Core/Src/main.cpp ****   */
 228:Core/Src/main.cpp **** static void MX_ADC1_Init(void)
 229:Core/Src/main.cpp **** {
 230:Core/Src/main.cpp **** 
 231:Core/Src/main.cpp ****   /* USER CODE BEGIN ADC1_Init 0 */
 232:Core/Src/main.cpp **** 
 233:Core/Src/main.cpp ****   /* USER CODE END ADC1_Init 0 */
 234:Core/Src/main.cpp **** 
 235:Core/Src/main.cpp ****   ADC_ChannelConfTypeDef sConfig = {0};
 236:Core/Src/main.cpp **** 
 237:Core/Src/main.cpp ****   /* USER CODE BEGIN ADC1_Init 1 */
 238:Core/Src/main.cpp **** 
 239:Core/Src/main.cpp ****   /* USER CODE END ADC1_Init 1 */
 240:Core/Src/main.cpp ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 241:Core/Src/main.cpp ****   */
 242:Core/Src/main.cpp ****   hadc1.Instance = ADC1;
 243:Core/Src/main.cpp ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 244:Core/Src/main.cpp ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 245:Core/Src/main.cpp ****   hadc1.Init.ScanConvMode = DISABLE;
 246:Core/Src/main.cpp ****   hadc1.Init.ContinuousConvMode = DISABLE;
 247:Core/Src/main.cpp ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 248:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 249:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 250:Core/Src/main.cpp ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 251:Core/Src/main.cpp ****   hadc1.Init.NbrOfConversion = 1;
 252:Core/Src/main.cpp ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 253:Core/Src/main.cpp ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 254:Core/Src/main.cpp ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 255:Core/Src/main.cpp ****   {
 256:Core/Src/main.cpp ****     Error_Handler();
 257:Core/Src/main.cpp ****   }
 258:Core/Src/main.cpp ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
ARM GAS  /tmp/ccCbjvan.s 			page 6


 259:Core/Src/main.cpp ****   */
 260:Core/Src/main.cpp ****   sConfig.Channel = ADC_CHANNEL_10;
 261:Core/Src/main.cpp ****   sConfig.Rank = 1;
 262:Core/Src/main.cpp ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 263:Core/Src/main.cpp ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 264:Core/Src/main.cpp ****   {
 265:Core/Src/main.cpp ****     Error_Handler();
 266:Core/Src/main.cpp ****   }
 267:Core/Src/main.cpp ****   /* USER CODE BEGIN ADC1_Init 2 */
 268:Core/Src/main.cpp **** 
 269:Core/Src/main.cpp ****   /* USER CODE END ADC1_Init 2 */
 270:Core/Src/main.cpp **** 
 271:Core/Src/main.cpp **** }
 272:Core/Src/main.cpp **** 
 273:Core/Src/main.cpp **** /**
 274:Core/Src/main.cpp ****   * @brief I2C1 Initialization Function
 275:Core/Src/main.cpp ****   * @param None
 276:Core/Src/main.cpp ****   * @retval None
 277:Core/Src/main.cpp ****   */
 278:Core/Src/main.cpp **** static void MX_I2C1_Init(void)
 279:Core/Src/main.cpp **** {
 280:Core/Src/main.cpp **** 
 281:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 0 */
 282:Core/Src/main.cpp **** 
 283:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 0 */
 284:Core/Src/main.cpp **** 
 285:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 1 */
 286:Core/Src/main.cpp **** 
 287:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 1 */
 288:Core/Src/main.cpp ****   hi2c1.Instance = I2C1;
 289:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 290:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 291:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 292:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 293:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 294:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 295:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 296:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 297:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 298:Core/Src/main.cpp ****   {
 299:Core/Src/main.cpp ****     Error_Handler();
 300:Core/Src/main.cpp ****   }
 301:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 2 */
 302:Core/Src/main.cpp **** 
 303:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 2 */
 304:Core/Src/main.cpp **** 
 305:Core/Src/main.cpp **** }
 306:Core/Src/main.cpp **** 
 307:Core/Src/main.cpp **** /**
 308:Core/Src/main.cpp ****   * @brief I2C3 Initialization Function
 309:Core/Src/main.cpp ****   * @param None
 310:Core/Src/main.cpp ****   * @retval None
 311:Core/Src/main.cpp ****   */
 312:Core/Src/main.cpp **** static void MX_I2C3_Init(void)
 313:Core/Src/main.cpp **** {
 314:Core/Src/main.cpp **** 
 315:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C3_Init 0 */
ARM GAS  /tmp/ccCbjvan.s 			page 7


 316:Core/Src/main.cpp **** 
 317:Core/Src/main.cpp ****   /* USER CODE END I2C3_Init 0 */
 318:Core/Src/main.cpp **** 
 319:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C3_Init 1 */
 320:Core/Src/main.cpp **** 
 321:Core/Src/main.cpp ****   /* USER CODE END I2C3_Init 1 */
 322:Core/Src/main.cpp ****   hi2c3.Instance = I2C3;
 323:Core/Src/main.cpp ****   hi2c3.Init.ClockSpeed = 100000;
 324:Core/Src/main.cpp ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 325:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress1 = 0;
 326:Core/Src/main.cpp ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 327:Core/Src/main.cpp ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 328:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress2 = 0;
 329:Core/Src/main.cpp ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 330:Core/Src/main.cpp ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 331:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 332:Core/Src/main.cpp ****   {
 333:Core/Src/main.cpp ****     Error_Handler();
 334:Core/Src/main.cpp ****   }
 335:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C3_Init 2 */
 336:Core/Src/main.cpp **** 
 337:Core/Src/main.cpp ****   /* USER CODE END I2C3_Init 2 */
 338:Core/Src/main.cpp **** 
 339:Core/Src/main.cpp **** }
 340:Core/Src/main.cpp **** 
 341:Core/Src/main.cpp **** /**
 342:Core/Src/main.cpp ****   * @brief I2S2 Initialization Function
 343:Core/Src/main.cpp ****   * @param None
 344:Core/Src/main.cpp ****   * @retval None
 345:Core/Src/main.cpp ****   */
 346:Core/Src/main.cpp **** static void MX_I2S2_Init(void)
 347:Core/Src/main.cpp **** {
 348:Core/Src/main.cpp **** 
 349:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S2_Init 0 */
 350:Core/Src/main.cpp **** 
 351:Core/Src/main.cpp ****   /* USER CODE END I2S2_Init 0 */
 352:Core/Src/main.cpp **** 
 353:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S2_Init 1 */
 354:Core/Src/main.cpp **** 
 355:Core/Src/main.cpp ****   /* USER CODE END I2S2_Init 1 */
 356:Core/Src/main.cpp ****   hi2s2.Instance = SPI2;
 357:Core/Src/main.cpp ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 358:Core/Src/main.cpp ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 359:Core/Src/main.cpp ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 360:Core/Src/main.cpp ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 361:Core/Src/main.cpp ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 362:Core/Src/main.cpp ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 363:Core/Src/main.cpp ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 364:Core/Src/main.cpp ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 365:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 366:Core/Src/main.cpp ****   {
 367:Core/Src/main.cpp ****     Error_Handler();
 368:Core/Src/main.cpp ****   }
 369:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S2_Init 2 */
 370:Core/Src/main.cpp **** 
 371:Core/Src/main.cpp ****   /* USER CODE END I2S2_Init 2 */
 372:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccCbjvan.s 			page 8


 373:Core/Src/main.cpp **** }
 374:Core/Src/main.cpp **** 
 375:Core/Src/main.cpp **** /**
 376:Core/Src/main.cpp ****   * @brief I2S3 Initialization Function
 377:Core/Src/main.cpp ****   * @param None
 378:Core/Src/main.cpp ****   * @retval None
 379:Core/Src/main.cpp ****   */
 380:Core/Src/main.cpp **** static void MX_I2S3_Init(void)
 381:Core/Src/main.cpp **** {
 382:Core/Src/main.cpp **** 
 383:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S3_Init 0 */
 384:Core/Src/main.cpp **** 
 385:Core/Src/main.cpp ****   /* USER CODE END I2S3_Init 0 */
 386:Core/Src/main.cpp **** 
 387:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S3_Init 1 */
 388:Core/Src/main.cpp **** 
 389:Core/Src/main.cpp ****   /* USER CODE END I2S3_Init 1 */
 390:Core/Src/main.cpp ****   hi2s3.Instance = SPI3;
 391:Core/Src/main.cpp ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 392:Core/Src/main.cpp ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 393:Core/Src/main.cpp ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 394:Core/Src/main.cpp ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 395:Core/Src/main.cpp ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 396:Core/Src/main.cpp ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 397:Core/Src/main.cpp ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 398:Core/Src/main.cpp ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_ENABLE;
 399:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 400:Core/Src/main.cpp ****   {
 401:Core/Src/main.cpp ****     Error_Handler();
 402:Core/Src/main.cpp ****   }
 403:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S3_Init 2 */
 404:Core/Src/main.cpp **** 
 405:Core/Src/main.cpp ****   /* USER CODE END I2S3_Init 2 */
 406:Core/Src/main.cpp **** 
 407:Core/Src/main.cpp **** }
 408:Core/Src/main.cpp **** 
 409:Core/Src/main.cpp **** /**
 410:Core/Src/main.cpp ****   * @brief I2S4 Initialization Function
 411:Core/Src/main.cpp ****   * @param None
 412:Core/Src/main.cpp ****   * @retval None
 413:Core/Src/main.cpp ****   */
 414:Core/Src/main.cpp **** static void MX_I2S4_Init(void)
 415:Core/Src/main.cpp **** {
 416:Core/Src/main.cpp **** 
 417:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S4_Init 0 */
 418:Core/Src/main.cpp **** 
 419:Core/Src/main.cpp ****   /* USER CODE END I2S4_Init 0 */
 420:Core/Src/main.cpp **** 
 421:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S4_Init 1 */
 422:Core/Src/main.cpp **** 
 423:Core/Src/main.cpp ****   /* USER CODE END I2S4_Init 1 */
 424:Core/Src/main.cpp ****   hi2s4.Instance = SPI4;
 425:Core/Src/main.cpp ****   hi2s4.Init.Mode = I2S_MODE_MASTER_TX;
 426:Core/Src/main.cpp ****   hi2s4.Init.Standard = I2S_STANDARD_PHILIPS;
 427:Core/Src/main.cpp ****   hi2s4.Init.DataFormat = I2S_DATAFORMAT_16B;
 428:Core/Src/main.cpp ****   hi2s4.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 429:Core/Src/main.cpp ****   hi2s4.Init.AudioFreq = I2S_AUDIOFREQ_44K;
ARM GAS  /tmp/ccCbjvan.s 			page 9


 430:Core/Src/main.cpp ****   hi2s4.Init.CPOL = I2S_CPOL_LOW;
 431:Core/Src/main.cpp ****   hi2s4.Init.ClockSource = I2S_CLOCK_PLL;
 432:Core/Src/main.cpp ****   hi2s4.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 433:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s4) != HAL_OK)
 434:Core/Src/main.cpp ****   {
 435:Core/Src/main.cpp ****     Error_Handler();
 436:Core/Src/main.cpp ****   }
 437:Core/Src/main.cpp ****   /* USER CODE BEGIN I2S4_Init 2 */
 438:Core/Src/main.cpp **** 
 439:Core/Src/main.cpp ****   /* USER CODE END I2S4_Init 2 */
 440:Core/Src/main.cpp **** 
 441:Core/Src/main.cpp **** }
 442:Core/Src/main.cpp **** 
 443:Core/Src/main.cpp **** /**
 444:Core/Src/main.cpp ****   * @brief SDIO Initialization Function
 445:Core/Src/main.cpp ****   * @param None
 446:Core/Src/main.cpp ****   * @retval None
 447:Core/Src/main.cpp ****   */
 448:Core/Src/main.cpp **** static void MX_SDIO_SD_Init(void)
 449:Core/Src/main.cpp **** {
 450:Core/Src/main.cpp **** 
 451:Core/Src/main.cpp ****   /* USER CODE BEGIN SDIO_Init 0 */
 452:Core/Src/main.cpp **** 
 453:Core/Src/main.cpp ****   /* USER CODE END SDIO_Init 0 */
 454:Core/Src/main.cpp **** 
 455:Core/Src/main.cpp ****   /* USER CODE BEGIN SDIO_Init 1 */
 456:Core/Src/main.cpp **** 
 457:Core/Src/main.cpp ****   /* USER CODE END SDIO_Init 1 */
 458:Core/Src/main.cpp ****   hsd.Instance = SDIO;
 459:Core/Src/main.cpp ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 460:Core/Src/main.cpp ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 461:Core/Src/main.cpp ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 462:Core/Src/main.cpp ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 463:Core/Src/main.cpp ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 464:Core/Src/main.cpp ****   hsd.Init.ClockDiv = 0;
 465:Core/Src/main.cpp ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 466:Core/Src/main.cpp ****   {
 467:Core/Src/main.cpp ****     Error_Handler();
 468:Core/Src/main.cpp ****   }
 469:Core/Src/main.cpp ****   if (HAL_SD_ConfigWideBusOperation(&hsd, SDIO_BUS_WIDE_4B) != HAL_OK)
 470:Core/Src/main.cpp ****   {
 471:Core/Src/main.cpp ****     Error_Handler();
 472:Core/Src/main.cpp ****   }
 473:Core/Src/main.cpp ****   /* USER CODE BEGIN SDIO_Init 2 */
 474:Core/Src/main.cpp **** 
 475:Core/Src/main.cpp ****   /* USER CODE END SDIO_Init 2 */
 476:Core/Src/main.cpp **** 
 477:Core/Src/main.cpp **** }
 478:Core/Src/main.cpp **** 
 479:Core/Src/main.cpp **** /**
 480:Core/Src/main.cpp ****   * @brief SPI1 Initialization Function
 481:Core/Src/main.cpp ****   * @param None
 482:Core/Src/main.cpp ****   * @retval None
 483:Core/Src/main.cpp ****   */
 484:Core/Src/main.cpp **** static void MX_SPI1_Init(void)
 485:Core/Src/main.cpp **** {
 486:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccCbjvan.s 			page 10


 487:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI1_Init 0 */
 488:Core/Src/main.cpp **** 
 489:Core/Src/main.cpp ****   /* USER CODE END SPI1_Init 0 */
 490:Core/Src/main.cpp **** 
 491:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI1_Init 1 */
 492:Core/Src/main.cpp **** 
 493:Core/Src/main.cpp ****   /* USER CODE END SPI1_Init 1 */
 494:Core/Src/main.cpp ****   /* SPI1 parameter configuration*/
 495:Core/Src/main.cpp ****   hspi1.Instance = SPI1;
 496:Core/Src/main.cpp ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 497:Core/Src/main.cpp ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 498:Core/Src/main.cpp ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 499:Core/Src/main.cpp ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 500:Core/Src/main.cpp ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 501:Core/Src/main.cpp ****   hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 502:Core/Src/main.cpp ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 503:Core/Src/main.cpp ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 504:Core/Src/main.cpp ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 505:Core/Src/main.cpp ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 506:Core/Src/main.cpp ****   hspi1.Init.CRCPolynomial = 10;
 507:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 508:Core/Src/main.cpp ****   {
 509:Core/Src/main.cpp ****     Error_Handler();
 510:Core/Src/main.cpp ****   }
 511:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI1_Init 2 */
 512:Core/Src/main.cpp **** 
 513:Core/Src/main.cpp ****   /* USER CODE END SPI1_Init 2 */
 514:Core/Src/main.cpp **** 
 515:Core/Src/main.cpp **** }
 516:Core/Src/main.cpp **** 
 517:Core/Src/main.cpp **** /**
 518:Core/Src/main.cpp ****   * @brief SPI5 Initialization Function
 519:Core/Src/main.cpp ****   * @param None
 520:Core/Src/main.cpp ****   * @retval None
 521:Core/Src/main.cpp ****   */
 522:Core/Src/main.cpp **** static void MX_SPI5_Init(void)
 523:Core/Src/main.cpp **** {
 524:Core/Src/main.cpp **** 
 525:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI5_Init 0 */
 526:Core/Src/main.cpp **** 
 527:Core/Src/main.cpp ****   /* USER CODE END SPI5_Init 0 */
 528:Core/Src/main.cpp **** 
 529:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI5_Init 1 */
 530:Core/Src/main.cpp **** 
 531:Core/Src/main.cpp ****   /* USER CODE END SPI5_Init 1 */
 532:Core/Src/main.cpp ****   /* SPI5 parameter configuration*/
 533:Core/Src/main.cpp ****   hspi5.Instance = SPI5;
 534:Core/Src/main.cpp ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 535:Core/Src/main.cpp ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 536:Core/Src/main.cpp ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 537:Core/Src/main.cpp ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 538:Core/Src/main.cpp ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 539:Core/Src/main.cpp ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 540:Core/Src/main.cpp ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 541:Core/Src/main.cpp ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 542:Core/Src/main.cpp ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 543:Core/Src/main.cpp ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  /tmp/ccCbjvan.s 			page 11


 544:Core/Src/main.cpp ****   hspi5.Init.CRCPolynomial = 10;
 545:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 546:Core/Src/main.cpp ****   {
 547:Core/Src/main.cpp ****     Error_Handler();
 548:Core/Src/main.cpp ****   }
 549:Core/Src/main.cpp ****   /* USER CODE BEGIN SPI5_Init 2 */
 550:Core/Src/main.cpp **** 
 551:Core/Src/main.cpp ****   /* USER CODE END SPI5_Init 2 */
 552:Core/Src/main.cpp **** 
 553:Core/Src/main.cpp **** }
 554:Core/Src/main.cpp **** 
 555:Core/Src/main.cpp **** /**
 556:Core/Src/main.cpp ****   * @brief TIM5 Initialization Function
 557:Core/Src/main.cpp ****   * @param None
 558:Core/Src/main.cpp ****   * @retval None
 559:Core/Src/main.cpp ****   */
 560:Core/Src/main.cpp **** static void MX_TIM5_Init(void)
 561:Core/Src/main.cpp **** {
 562:Core/Src/main.cpp **** 
 563:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM5_Init 0 */
 564:Core/Src/main.cpp **** 
 565:Core/Src/main.cpp ****   /* USER CODE END TIM5_Init 0 */
 566:Core/Src/main.cpp **** 
 567:Core/Src/main.cpp ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 568:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 569:Core/Src/main.cpp **** 
 570:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM5_Init 1 */
 571:Core/Src/main.cpp **** 
 572:Core/Src/main.cpp ****   /* USER CODE END TIM5_Init 1 */
 573:Core/Src/main.cpp ****   htim5.Instance = TIM5;
 574:Core/Src/main.cpp ****   htim5.Init.Prescaler = 0;
 575:Core/Src/main.cpp ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 576:Core/Src/main.cpp ****   htim5.Init.Period = 4294967295;
 577:Core/Src/main.cpp ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 578:Core/Src/main.cpp ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 579:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 580:Core/Src/main.cpp ****   {
 581:Core/Src/main.cpp ****     Error_Handler();
 582:Core/Src/main.cpp ****   }
 583:Core/Src/main.cpp ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 584:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 585:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim5, &sSlaveConfig) != HAL_OK)
 586:Core/Src/main.cpp ****   {
 587:Core/Src/main.cpp ****     Error_Handler();
 588:Core/Src/main.cpp ****   }
 589:Core/Src/main.cpp ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 590:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 591:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 592:Core/Src/main.cpp ****   {
 593:Core/Src/main.cpp ****     Error_Handler();
 594:Core/Src/main.cpp ****   }
 595:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM5_Init 2 */
 596:Core/Src/main.cpp **** 
 597:Core/Src/main.cpp ****   /* USER CODE END TIM5_Init 2 */
 598:Core/Src/main.cpp **** 
 599:Core/Src/main.cpp **** }
 600:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccCbjvan.s 			page 12


 601:Core/Src/main.cpp **** /**
 602:Core/Src/main.cpp ****   * @brief TIM9 Initialization Function
 603:Core/Src/main.cpp ****   * @param None
 604:Core/Src/main.cpp ****   * @retval None
 605:Core/Src/main.cpp ****   */
 606:Core/Src/main.cpp **** static void MX_TIM9_Init(void)
 607:Core/Src/main.cpp **** {
 608:Core/Src/main.cpp **** 
 609:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM9_Init 0 */
 610:Core/Src/main.cpp **** 
 611:Core/Src/main.cpp ****   /* USER CODE END TIM9_Init 0 */
 612:Core/Src/main.cpp **** 
 613:Core/Src/main.cpp ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 614:Core/Src/main.cpp **** 
 615:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM9_Init 1 */
 616:Core/Src/main.cpp **** 
 617:Core/Src/main.cpp ****   /* USER CODE END TIM9_Init 1 */
 618:Core/Src/main.cpp ****   htim9.Instance = TIM9;
 619:Core/Src/main.cpp ****   htim9.Init.Prescaler = 0;
 620:Core/Src/main.cpp ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 621:Core/Src/main.cpp ****   htim9.Init.Period = 65535;
 622:Core/Src/main.cpp ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 623:Core/Src/main.cpp ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 624:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 625:Core/Src/main.cpp ****   {
 626:Core/Src/main.cpp ****     Error_Handler();
 627:Core/Src/main.cpp ****   }
 628:Core/Src/main.cpp ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 629:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 630:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim9, &sSlaveConfig) != HAL_OK)
 631:Core/Src/main.cpp ****   {
 632:Core/Src/main.cpp ****     Error_Handler();
 633:Core/Src/main.cpp ****   }
 634:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM9_Init 2 */
 635:Core/Src/main.cpp **** 
 636:Core/Src/main.cpp ****   /* USER CODE END TIM9_Init 2 */
 637:Core/Src/main.cpp **** 
 638:Core/Src/main.cpp **** }
 639:Core/Src/main.cpp **** 
 640:Core/Src/main.cpp **** /**
 641:Core/Src/main.cpp ****   * @brief TIM10 Initialization Function
 642:Core/Src/main.cpp ****   * @param None
 643:Core/Src/main.cpp ****   * @retval None
 644:Core/Src/main.cpp ****   */
 645:Core/Src/main.cpp **** static void MX_TIM10_Init(void)
 646:Core/Src/main.cpp **** {
 647:Core/Src/main.cpp **** 
 648:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM10_Init 0 */
 649:Core/Src/main.cpp **** 
 650:Core/Src/main.cpp ****   /* USER CODE END TIM10_Init 0 */
 651:Core/Src/main.cpp **** 
 652:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM10_Init 1 */
 653:Core/Src/main.cpp **** 
 654:Core/Src/main.cpp ****   /* USER CODE END TIM10_Init 1 */
 655:Core/Src/main.cpp ****   htim10.Instance = TIM10;
 656:Core/Src/main.cpp ****   htim10.Init.Prescaler = 35;
 657:Core/Src/main.cpp ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccCbjvan.s 			page 13


 658:Core/Src/main.cpp ****   htim10.Init.Period = 65535;
 659:Core/Src/main.cpp ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 660:Core/Src/main.cpp ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 661:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 662:Core/Src/main.cpp ****   {
 663:Core/Src/main.cpp ****     Error_Handler();
 664:Core/Src/main.cpp ****   }
 665:Core/Src/main.cpp ****   /* USER CODE BEGIN TIM10_Init 2 */
 666:Core/Src/main.cpp **** 
 667:Core/Src/main.cpp ****   /* USER CODE END TIM10_Init 2 */
 668:Core/Src/main.cpp **** 
 669:Core/Src/main.cpp **** }
 670:Core/Src/main.cpp **** 
 671:Core/Src/main.cpp **** /**
 672:Core/Src/main.cpp ****   * @brief USB_OTG_FS Initialization Function
 673:Core/Src/main.cpp ****   * @param None
 674:Core/Src/main.cpp ****   * @retval None
 675:Core/Src/main.cpp ****   */
 676:Core/Src/main.cpp **** static void MX_USB_OTG_FS_PCD_Init(void)
 677:Core/Src/main.cpp **** {
 678:Core/Src/main.cpp **** 
 679:Core/Src/main.cpp ****   /* USER CODE BEGIN USB_OTG_FS_Init 0 */
 680:Core/Src/main.cpp **** 
 681:Core/Src/main.cpp ****   /* USER CODE END USB_OTG_FS_Init 0 */
 682:Core/Src/main.cpp **** 
 683:Core/Src/main.cpp ****   /* USER CODE BEGIN USB_OTG_FS_Init 1 */
 684:Core/Src/main.cpp **** 
 685:Core/Src/main.cpp ****   /* USER CODE END USB_OTG_FS_Init 1 */
 686:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 687:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 688:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 689:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 690:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 691:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 692:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 693:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 694:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 695:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 696:Core/Src/main.cpp ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 697:Core/Src/main.cpp ****   {
 698:Core/Src/main.cpp ****     Error_Handler();
 699:Core/Src/main.cpp ****   }
 700:Core/Src/main.cpp ****   /* USER CODE BEGIN USB_OTG_FS_Init 2 */
 701:Core/Src/main.cpp **** 
 702:Core/Src/main.cpp ****   /* USER CODE END USB_OTG_FS_Init 2 */
 703:Core/Src/main.cpp **** 
 704:Core/Src/main.cpp **** }
 705:Core/Src/main.cpp **** 
 706:Core/Src/main.cpp **** /**
 707:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 708:Core/Src/main.cpp ****   * @param None
 709:Core/Src/main.cpp ****   * @retval None
 710:Core/Src/main.cpp ****   */
 711:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 712:Core/Src/main.cpp **** {
  29              		.loc 1 712 1 view -0
  30              		.cfi_startproc
ARM GAS  /tmp/ccCbjvan.s 			page 14


  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.save {r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42              		.pad #52
  43 0002 8DB0     		sub	sp, sp, #52
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 72
 713:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 713 3 view .LVU1
  47              		.loc 1 713 20 is_stmt 0 view .LVU2
  48 0004 0024     		movs	r4, #0
  49 0006 0794     		str	r4, [sp, #28]
  50 0008 0894     		str	r4, [sp, #32]
  51 000a 0994     		str	r4, [sp, #36]
  52 000c 0A94     		str	r4, [sp, #40]
  53 000e 0B94     		str	r4, [sp, #44]
 714:Core/Src/main.cpp **** 
 715:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 716:Core/Src/main.cpp ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  54              		.loc 1 716 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 716 3 view .LVU4
  57 0010 0194     		str	r4, [sp, #4]
  58              		.loc 1 716 3 view .LVU5
  59 0012 3A4B     		ldr	r3, .L3
  60 0014 1A6B     		ldr	r2, [r3, #48]
  61 0016 42F01002 		orr	r2, r2, #16
  62 001a 1A63     		str	r2, [r3, #48]
  63              		.loc 1 716 3 view .LVU6
  64 001c 1A6B     		ldr	r2, [r3, #48]
  65 001e 02F01002 		and	r2, r2, #16
  66 0022 0192     		str	r2, [sp, #4]
  67              		.loc 1 716 3 view .LVU7
  68 0024 019A     		ldr	r2, [sp, #4]
  69              	.LBE4:
 717:Core/Src/main.cpp ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 717 3 view .LVU8
  71              	.LBB5:
  72              		.loc 1 717 3 view .LVU9
  73 0026 0294     		str	r4, [sp, #8]
  74              		.loc 1 717 3 view .LVU10
  75 0028 1A6B     		ldr	r2, [r3, #48]
  76 002a 42F00402 		orr	r2, r2, #4
  77 002e 1A63     		str	r2, [r3, #48]
  78              		.loc 1 717 3 view .LVU11
  79 0030 1A6B     		ldr	r2, [r3, #48]
  80 0032 02F00402 		and	r2, r2, #4
  81 0036 0292     		str	r2, [sp, #8]
  82              		.loc 1 717 3 view .LVU12
ARM GAS  /tmp/ccCbjvan.s 			page 15


  83 0038 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
 718:Core/Src/main.cpp ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  85              		.loc 1 718 3 view .LVU13
  86              	.LBB6:
  87              		.loc 1 718 3 view .LVU14
  88 003a 0394     		str	r4, [sp, #12]
  89              		.loc 1 718 3 view .LVU15
  90 003c 1A6B     		ldr	r2, [r3, #48]
  91 003e 42F08002 		orr	r2, r2, #128
  92 0042 1A63     		str	r2, [r3, #48]
  93              		.loc 1 718 3 view .LVU16
  94 0044 1A6B     		ldr	r2, [r3, #48]
  95 0046 02F08002 		and	r2, r2, #128
  96 004a 0392     		str	r2, [sp, #12]
  97              		.loc 1 718 3 view .LVU17
  98 004c 039A     		ldr	r2, [sp, #12]
  99              	.LBE6:
 719:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 100              		.loc 1 719 3 view .LVU18
 101              	.LBB7:
 102              		.loc 1 719 3 view .LVU19
 103 004e 0494     		str	r4, [sp, #16]
 104              		.loc 1 719 3 view .LVU20
 105 0050 1A6B     		ldr	r2, [r3, #48]
 106 0052 42F00102 		orr	r2, r2, #1
 107 0056 1A63     		str	r2, [r3, #48]
 108              		.loc 1 719 3 view .LVU21
 109 0058 1A6B     		ldr	r2, [r3, #48]
 110 005a 02F00102 		and	r2, r2, #1
 111 005e 0492     		str	r2, [sp, #16]
 112              		.loc 1 719 3 view .LVU22
 113 0060 049A     		ldr	r2, [sp, #16]
 114              	.LBE7:
 720:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 115              		.loc 1 720 3 view .LVU23
 116              	.LBB8:
 117              		.loc 1 720 3 view .LVU24
 118 0062 0594     		str	r4, [sp, #20]
 119              		.loc 1 720 3 view .LVU25
 120 0064 1A6B     		ldr	r2, [r3, #48]
 121 0066 42F00202 		orr	r2, r2, #2
 122 006a 1A63     		str	r2, [r3, #48]
 123              		.loc 1 720 3 view .LVU26
 124 006c 1A6B     		ldr	r2, [r3, #48]
 125 006e 02F00202 		and	r2, r2, #2
 126 0072 0592     		str	r2, [sp, #20]
 127              		.loc 1 720 3 view .LVU27
 128 0074 059A     		ldr	r2, [sp, #20]
 129              	.LBE8:
 721:Core/Src/main.cpp ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 130              		.loc 1 721 3 view .LVU28
 131              	.LBB9:
 132              		.loc 1 721 3 view .LVU29
 133 0076 0694     		str	r4, [sp, #24]
 134              		.loc 1 721 3 view .LVU30
 135 0078 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccCbjvan.s 			page 16


 136 007a 42F00802 		orr	r2, r2, #8
 137 007e 1A63     		str	r2, [r3, #48]
 138              		.loc 1 721 3 view .LVU31
 139 0080 1B6B     		ldr	r3, [r3, #48]
 140 0082 03F00803 		and	r3, r3, #8
 141 0086 0693     		str	r3, [sp, #24]
 142              		.loc 1 721 3 view .LVU32
 143 0088 069B     		ldr	r3, [sp, #24]
 144              	.LBE9:
 722:Core/Src/main.cpp **** 
 723:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 724:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3|GPIO_PIN_5|GPIO_PIN_7|GPIO_PIN_8
 145              		.loc 1 724 3 view .LVU33
 146              		.loc 1 724 20 is_stmt 0 view .LVU34
 147 008a 1D4F     		ldr	r7, .L3+4
 148 008c 2246     		mov	r2, r4
 149 008e 4FF4F561 		mov	r1, #1960
 150 0092 3846     		mov	r0, r7
 151 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL0:
 725:Core/Src/main.cpp ****                           |GPIO_PIN_9|GPIO_PIN_10, GPIO_PIN_RESET);
 726:Core/Src/main.cpp **** 
 727:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 728:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOD, key_1_Pin|key_2_Pin|key_3_Pin|key_4_Pin
 153              		.loc 1 728 3 is_stmt 1 view .LVU35
 154              		.loc 1 728 20 is_stmt 0 view .LVU36
 155 0098 1A4D     		ldr	r5, .L3+8
 156 009a 2246     		mov	r2, r4
 157 009c 47F61101 		movw	r1, #30737
 158 00a0 2846     		mov	r0, r5
 159 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL1:
 729:Core/Src/main.cpp ****                           |GPIO_PIN_0|GPIO_PIN_4, GPIO_PIN_RESET);
 730:Core/Src/main.cpp **** 
 731:Core/Src/main.cpp ****   /*Configure GPIO pins : PE3 PE5 PE7 PE8
 732:Core/Src/main.cpp ****                            PE9 PE10 */
 733:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_5|GPIO_PIN_7|GPIO_PIN_8
 161              		.loc 1 733 3 is_stmt 1 view .LVU37
 162              		.loc 1 733 23 is_stmt 0 view .LVU38
 163 00a6 4FF4F563 		mov	r3, #1960
 164 00aa 0793     		str	r3, [sp, #28]
 734:Core/Src/main.cpp ****                           |GPIO_PIN_9|GPIO_PIN_10;
 735:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 165              		.loc 1 735 3 is_stmt 1 view .LVU39
 166              		.loc 1 735 24 is_stmt 0 view .LVU40
 167 00ac 0126     		movs	r6, #1
 168 00ae 0896     		str	r6, [sp, #32]
 736:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 169              		.loc 1 736 3 is_stmt 1 view .LVU41
 170              		.loc 1 736 24 is_stmt 0 view .LVU42
 171 00b0 0994     		str	r4, [sp, #36]
 737:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 172              		.loc 1 737 3 is_stmt 1 view .LVU43
 173              		.loc 1 737 25 is_stmt 0 view .LVU44
 174 00b2 0A94     		str	r4, [sp, #40]
 738:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 175              		.loc 1 738 3 is_stmt 1 view .LVU45
ARM GAS  /tmp/ccCbjvan.s 			page 17


 176              		.loc 1 738 16 is_stmt 0 view .LVU46
 177 00b4 07A9     		add	r1, sp, #28
 178 00b6 3846     		mov	r0, r7
 179 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL2:
 739:Core/Src/main.cpp **** 
 740:Core/Src/main.cpp ****   /*Configure GPIO pin : key_ok_Pin */
 741:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = key_ok_Pin;
 181              		.loc 1 741 3 is_stmt 1 view .LVU47
 182              		.loc 1 741 23 is_stmt 0 view .LVU48
 183 00bc 4FF40043 		mov	r3, #32768
 184 00c0 0793     		str	r3, [sp, #28]
 742:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 185              		.loc 1 742 3 is_stmt 1 view .LVU49
 186              		.loc 1 742 24 is_stmt 0 view .LVU50
 187 00c2 0894     		str	r4, [sp, #32]
 743:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 188              		.loc 1 743 3 is_stmt 1 view .LVU51
 189              		.loc 1 743 24 is_stmt 0 view .LVU52
 190 00c4 0223     		movs	r3, #2
 191 00c6 0993     		str	r3, [sp, #36]
 744:Core/Src/main.cpp ****   HAL_GPIO_Init(key_ok_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 744 3 is_stmt 1 view .LVU53
 193              		.loc 1 744 16 is_stmt 0 view .LVU54
 194 00c8 07A9     		add	r1, sp, #28
 195 00ca 0F48     		ldr	r0, .L3+12
 196 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL3:
 745:Core/Src/main.cpp **** 
 746:Core/Src/main.cpp ****   /*Configure GPIO pins : keyin_4_Pin keyin_3_Pin keyin_2_Pin keyin_1_Pin
 747:Core/Src/main.cpp ****                            PD1 PD3 */
 748:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = keyin_4_Pin|keyin_3_Pin|keyin_2_Pin|keyin_1_Pin
 198              		.loc 1 748 3 is_stmt 1 view .LVU55
 199              		.loc 1 748 23 is_stmt 0 view .LVU56
 200 00d0 48F20A73 		movw	r3, #34570
 201 00d4 0793     		str	r3, [sp, #28]
 749:Core/Src/main.cpp ****                           |GPIO_PIN_1|GPIO_PIN_3;
 750:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 202              		.loc 1 750 3 is_stmt 1 view .LVU57
 203              		.loc 1 750 24 is_stmt 0 view .LVU58
 204 00d6 0894     		str	r4, [sp, #32]
 751:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 205              		.loc 1 751 3 is_stmt 1 view .LVU59
 206              		.loc 1 751 24 is_stmt 0 view .LVU60
 207 00d8 0996     		str	r6, [sp, #36]
 752:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 208              		.loc 1 752 3 is_stmt 1 view .LVU61
 209              		.loc 1 752 16 is_stmt 0 view .LVU62
 210 00da 07A9     		add	r1, sp, #28
 211 00dc 2846     		mov	r0, r5
 212 00de FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL4:
 753:Core/Src/main.cpp **** 
 754:Core/Src/main.cpp ****   /*Configure GPIO pins : key_1_Pin key_2_Pin key_3_Pin key_4_Pin
 755:Core/Src/main.cpp ****                            PD0 PD4 */
 756:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = key_1_Pin|key_2_Pin|key_3_Pin|key_4_Pin
 214              		.loc 1 756 3 is_stmt 1 view .LVU63
ARM GAS  /tmp/ccCbjvan.s 			page 18


 215              		.loc 1 756 23 is_stmt 0 view .LVU64
 216 00e2 47F61103 		movw	r3, #30737
 217 00e6 0793     		str	r3, [sp, #28]
 757:Core/Src/main.cpp ****                           |GPIO_PIN_0|GPIO_PIN_4;
 758:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 218              		.loc 1 758 3 is_stmt 1 view .LVU65
 219              		.loc 1 758 24 is_stmt 0 view .LVU66
 220 00e8 0896     		str	r6, [sp, #32]
 759:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 221              		.loc 1 759 3 is_stmt 1 view .LVU67
 222              		.loc 1 759 24 is_stmt 0 view .LVU68
 223 00ea 0994     		str	r4, [sp, #36]
 760:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 224              		.loc 1 760 3 is_stmt 1 view .LVU69
 225              		.loc 1 760 25 is_stmt 0 view .LVU70
 226 00ec 0A94     		str	r4, [sp, #40]
 761:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 227              		.loc 1 761 3 is_stmt 1 view .LVU71
 228              		.loc 1 761 16 is_stmt 0 view .LVU72
 229 00ee 07A9     		add	r1, sp, #28
 230 00f0 2846     		mov	r0, r5
 231 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 232              	.LVL5:
 762:Core/Src/main.cpp **** 
 763:Core/Src/main.cpp **** }
 233              		.loc 1 763 1 view .LVU73
 234 00f6 0DB0     		add	sp, sp, #52
 235              	.LCFI2:
 236              		.cfi_def_cfa_offset 20
 237              		@ sp needed
 238 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 239              	.L4:
 240 00fa 00BF     		.align	2
 241              	.L3:
 242 00fc 00380240 		.word	1073887232
 243 0100 00100240 		.word	1073876992
 244 0104 000C0240 		.word	1073875968
 245 0108 00040240 		.word	1073873920
 246              		.cfi_endproc
 247              	.LFE1999:
 248              		.fnend
 250              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	_Z41__static_initialization_and_destruction_0ii:
 258              		.fnstart
 259              	.LVL6:
 260              	.LFB2483:
 764:Core/Src/main.cpp **** 
 765:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 766:Core/Src/main.cpp **** uint8_t ok_debounce=0;
 767:Core/Src/main.cpp **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 768:Core/Src/main.cpp **** {
 769:Core/Src/main.cpp ****   //TODO Check on the htime10 setup 
ARM GAS  /tmp/ccCbjvan.s 			page 19


 770:Core/Src/main.cpp ****   if(htim->Instance==htim10.Instance) //htim10 is now setup to refresh 15 times a second 
 771:Core/Src/main.cpp ****   {
 772:Core/Src/main.cpp ****     //Debounce OK
 773:Core/Src/main.cpp ****     if(HAL_GPIO_ReadPin(key_ok_GPIO_Port,key_ok_Pin))
 774:Core/Src/main.cpp ****     {
 775:Core/Src/main.cpp ****       if(ok_debounce==0||ok_debounce==1){
 776:Core/Src/main.cpp ****         ok_debounce++;
 777:Core/Src/main.cpp ****       }
 778:Core/Src/main.cpp ****       else
 779:Core/Src/main.cpp ****       {
 780:Core/Src/main.cpp ****         if(ok_debounce==2){
 781:Core/Src/main.cpp ****           menu1.menu_ok();
 782:Core/Src/main.cpp ****           ok_debounce=0;
 783:Core/Src/main.cpp ****         }
 784:Core/Src/main.cpp ****       }
 785:Core/Src/main.cpp ****     }
 786:Core/Src/main.cpp ****     else
 787:Core/Src/main.cpp ****     {
 788:Core/Src/main.cpp ****       ok_debounce=0;
 789:Core/Src/main.cpp ****     }
 790:Core/Src/main.cpp ****     
 791:Core/Src/main.cpp **** 
 792:Core/Src/main.cpp ****     if(oled1.oled_isOledOn())
 793:Core/Src/main.cpp ****     {
 794:Core/Src/main.cpp ****       menu1.keyboard_poll();
 795:Core/Src/main.cpp ****       oled1.oled_update_battery(adc_bat.adc_getValue()); //Get the battery voltage and print it
 796:Core/Src/main.cpp ****       menu1.menu_print();//update the menu portion of the display
 797:Core/Src/main.cpp ****       oled1.oled_refresh();//Send the data to the display
 798:Core/Src/main.cpp ****     }
 799:Core/Src/main.cpp ****     {
 800:Core/Src/main.cpp ****       
 801:Core/Src/main.cpp ****     }
 802:Core/Src/main.cpp **** 
 803:Core/Src/main.cpp ****   }
 804:Core/Src/main.cpp **** }
 805:Core/Src/main.cpp **** 
 806:Core/Src/main.cpp **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 807:Core/Src/main.cpp **** {
 808:Core/Src/main.cpp ****   //call the function in the class
 809:Core/Src/main.cpp ****   if(huart->Instance == USART1)
 810:Core/Src/main.cpp ****   {
 811:Core/Src/main.cpp ****     uart_pc.rx_cplt_callback();
 812:Core/Src/main.cpp **** 
 813:Core/Src/main.cpp ****   }
 814:Core/Src/main.cpp ****   else if(huart->Instance==USART2){
 815:Core/Src/main.cpp ****     uart_pc.rx_cplt_callback();
 816:Core/Src/main.cpp **** 
 817:Core/Src/main.cpp ****   }
 818:Core/Src/main.cpp **** 
 819:Core/Src/main.cpp **** }
 820:Core/Src/main.cpp **** 
 821:Core/Src/main.cpp **** /**
 822:Core/Src/main.cpp ****  * @brief This function turns off the trigger
 823:Core/Src/main.cpp ****  * 
 824:Core/Src/main.cpp ****  * @param GPIO_Pin 
 825:Core/Src/main.cpp ****  */
 826:Core/Src/main.cpp **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
ARM GAS  /tmp/ccCbjvan.s 			page 20


 827:Core/Src/main.cpp **** {
 828:Core/Src/main.cpp ****   //Swithc for the pin that you are expecting the interrupt form
 829:Core/Src/main.cpp ****  __NOP();
 830:Core/Src/main.cpp **** }
 831:Core/Src/main.cpp **** 
 832:Core/Src/main.cpp **** /* USER CODE END 4 */
 833:Core/Src/main.cpp **** 
 834:Core/Src/main.cpp **** /**
 835:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 836:Core/Src/main.cpp ****   * @retval None
 837:Core/Src/main.cpp ****   */
 838:Core/Src/main.cpp **** void Error_Handler(void)
 839:Core/Src/main.cpp **** {
 840:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 841:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 842:Core/Src/main.cpp ****   __disable_irq();
 843:Core/Src/main.cpp ****   while (1)
 844:Core/Src/main.cpp ****   {
 845:Core/Src/main.cpp ****   }
 846:Core/Src/main.cpp ****   /* USER CODE END Error_Handler_Debug */
 847:Core/Src/main.cpp **** }
 261              		.loc 1 847 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 847 1 is_stmt 0 view .LVU75
 266 0000 0128     		cmp	r0, #1
 267 0002 00D0     		beq	.L11
 268              	.L8:
 269 0004 7047     		bx	lr
 270              	.L11:
 271              		.loc 1 847 1 discriminator 1 view .LVU76
 272 0006 4FF6FF73 		movw	r3, #65535
 273 000a 9942     		cmp	r1, r3
 274 000c FAD1     		bne	.L8
 275              		.loc 1 847 1 view .LVU77
 276 000e 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 277              	.LCFI3:
 278              		.cfi_def_cfa_offset 32
 279              		.cfi_offset 4, -32
 280              		.cfi_offset 5, -28
 281              		.cfi_offset 6, -24
 282              		.cfi_offset 7, -20
 283              		.cfi_offset 8, -16
 284              		.cfi_offset 9, -12
 285              		.cfi_offset 10, -8
 286              		.cfi_offset 14, -4
 287 0012 82B0     		sub	sp, sp, #8
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 40
 290              		.file 2 "/usr/include/newlib/c++/9.2.1/iostream"
   1:/usr/include/newlib/c++/9.2.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/iostream **** 
   3:/usr/include/newlib/c++/9.2.1/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/iostream **** //
   5:/usr/include/newlib/c++/9.2.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/iostream **** // software; you can redistribute it and/or modify it under the
ARM GAS  /tmp/ccCbjvan.s 			page 21


   7:/usr/include/newlib/c++/9.2.1/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/iostream **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/iostream **** 
  11:/usr/include/newlib/c++/9.2.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/iostream **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/iostream **** 
  16:/usr/include/newlib/c++/9.2.1/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/iostream **** 
  20:/usr/include/newlib/c++/9.2.1/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/iostream **** 
  25:/usr/include/newlib/c++/9.2.1/iostream **** /** @file include/iostream
  26:/usr/include/newlib/c++/9.2.1/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/newlib/c++/9.2.1/iostream ****  */
  28:/usr/include/newlib/c++/9.2.1/iostream **** 
  29:/usr/include/newlib/c++/9.2.1/iostream **** //
  30:/usr/include/newlib/c++/9.2.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/newlib/c++/9.2.1/iostream **** //
  32:/usr/include/newlib/c++/9.2.1/iostream **** 
  33:/usr/include/newlib/c++/9.2.1/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/newlib/c++/9.2.1/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/newlib/c++/9.2.1/iostream **** 
  36:/usr/include/newlib/c++/9.2.1/iostream **** #pragma GCC system_header
  37:/usr/include/newlib/c++/9.2.1/iostream **** 
  38:/usr/include/newlib/c++/9.2.1/iostream **** #include <bits/c++config.h>
  39:/usr/include/newlib/c++/9.2.1/iostream **** #include <ostream>
  40:/usr/include/newlib/c++/9.2.1/iostream **** #include <istream>
  41:/usr/include/newlib/c++/9.2.1/iostream **** 
  42:/usr/include/newlib/c++/9.2.1/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/newlib/c++/9.2.1/iostream **** {
  44:/usr/include/newlib/c++/9.2.1/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/newlib/c++/9.2.1/iostream **** 
  46:/usr/include/newlib/c++/9.2.1/iostream ****   /**
  47:/usr/include/newlib/c++/9.2.1/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/newlib/c++/9.2.1/iostream ****    *
  49:/usr/include/newlib/c++/9.2.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/newlib/c++/9.2.1/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/newlib/c++/9.2.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/newlib/c++/9.2.1/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/newlib/c++/9.2.1/iostream ****    *
  54:/usr/include/newlib/c++/9.2.1/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/newlib/c++/9.2.1/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/newlib/c++/9.2.1/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/newlib/c++/9.2.1/iostream ****    *  manual linked to above.
  58:/usr/include/newlib/c++/9.2.1/iostream ****   */
  59:/usr/include/newlib/c++/9.2.1/iostream ****   //@{
  60:/usr/include/newlib/c++/9.2.1/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
ARM GAS  /tmp/ccCbjvan.s 			page 22


  64:/usr/include/newlib/c++/9.2.1/iostream **** 
  65:/usr/include/newlib/c++/9.2.1/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/newlib/c++/9.2.1/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/newlib/c++/9.2.1/iostream **** #endif
  71:/usr/include/newlib/c++/9.2.1/iostream ****   //@}
  72:/usr/include/newlib/c++/9.2.1/iostream **** 
  73:/usr/include/newlib/c++/9.2.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/newlib/c++/9.2.1/iostream ****   static ios_base::Init __ioinit;
 291              		.loc 2 74 25 view .LVU78
 292 0014 2C4C     		ldr	r4, .L12
 293 0016 2046     		mov	r0, r4
 294              	.LVL7:
 295              		.loc 2 74 25 view .LVU79
 296 0018 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
 297              	.LVL8:
 298              		.loc 2 74 25 view .LVU80
 299 001c DFF8DC90 		ldr	r9, .L12+52
 300 0020 4A46     		mov	r2, r9
 301 0022 2A49     		ldr	r1, .L12+4
 302 0024 2046     		mov	r0, r4
 303 0026 FFF7FEFF 		bl	__aeabi_atexit
 304              	.LVL9:
  97:Core/Src/main.cpp **** menu menu1(&oled1);
 305              		.loc 1 97 31 view .LVU81
 306 002a 294C     		ldr	r4, .L12+8
 307 002c 294B     		ldr	r3, .L12+12
 308 002e 7822     		movs	r2, #120
 309 0030 2949     		ldr	r1, .L12+16
 310 0032 2046     		mov	r0, r4
 311 0034 FFF7FEFF 		bl	_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
 312              	.LVL10:
  98:Core/Src/main.cpp **** adc adc_bat(&hadc1);
 313              		.loc 1 98 18 view .LVU82
 314 0038 2146     		mov	r1, r4
 315 003a 2848     		ldr	r0, .L12+20
 316 003c FFF7FEFF 		bl	_ZN4menuC1EP4oled
 317              	.LVL11:
  99:Core/Src/main.cpp **** pin radio_ptt(GPIOE,pin::PIN1,pin::out, pin::PullDown, pin::SPEED_LOW);
 318              		.loc 1 99 19 view .LVU83
 319 0040 2749     		ldr	r1, .L12+24
 320 0042 2848     		ldr	r0, .L12+28
 321 0044 FFF7FEFF 		bl	_ZN3adcC1EP17ADC_HandleTypeDef
 322              	.LVL12:
 100:Core/Src/main.cpp **** pin radio_pd(GPIOE,pin::PIN3,pin::out, pin::PullDown, pin::SPEED_LOW);
 323              		.loc 1 100 70 view .LVU84
 324 0048 274D     		ldr	r5, .L12+32
 325 004a DFF8B480 		ldr	r8, .L12+56
 326 004e 0026     		movs	r6, #0
 327 0050 0196     		str	r6, [sp, #4]
 328 0052 0224     		movs	r4, #2
 329 0054 0094     		str	r4, [sp]
 330 0056 0123     		movs	r3, #1
 331 0058 2246     		mov	r2, r4
 332 005a 2946     		mov	r1, r5
ARM GAS  /tmp/ccCbjvan.s 			page 23


 333 005c 4046     		mov	r0, r8
 334 005e FFF7FEFF 		bl	_ZN3pinC1EP12GPIO_TypeDefNS_9PinNumberENS_5InOutENS_4PullENS_5SpeedE
 335              	.LVL13:
 100:Core/Src/main.cpp **** pin radio_pd(GPIOE,pin::PIN3,pin::out, pin::PullDown, pin::SPEED_LOW);
 336              		.loc 1 100 5 view .LVU85
 337 0062 DFF8A0A0 		ldr	r10, .L12+60
 338 0066 4A46     		mov	r2, r9
 339 0068 5146     		mov	r1, r10
 340 006a 4046     		mov	r0, r8
 341 006c FFF7FEFF 		bl	__aeabi_atexit
 342              	.LVL14:
 101:Core/Src/main.cpp **** uart uart_sa818(uart::uart2,9600);
 343              		.loc 1 101 69 view .LVU86
 344 0070 1E4F     		ldr	r7, .L12+36
 345 0072 0196     		str	r6, [sp, #4]
 346 0074 0094     		str	r4, [sp]
 347 0076 0123     		movs	r3, #1
 348 0078 0822     		movs	r2, #8
 349 007a 2946     		mov	r1, r5
 350 007c 3846     		mov	r0, r7
 351 007e FFF7FEFF 		bl	_ZN3pinC1EP12GPIO_TypeDefNS_9PinNumberENS_5InOutENS_4PullENS_5SpeedE
 352              	.LVL15:
 101:Core/Src/main.cpp **** uart uart_sa818(uart::uart2,9600);
 353              		.loc 1 101 5 view .LVU87
 354 0082 4A46     		mov	r2, r9
 355 0084 5146     		mov	r1, r10
 356 0086 3846     		mov	r0, r7
 357 0088 FFF7FEFF 		bl	__aeabi_atexit
 358              	.LVL16:
 102:Core/Src/main.cpp **** uart uart_pc(uart::uart1,115200);
 359              		.loc 1 102 33 view .LVU88
 360 008c DFF87890 		ldr	r9, .L12+64
 361 0090 4FF41652 		mov	r2, #9600
 362 0094 2146     		mov	r1, r4
 363 0096 4846     		mov	r0, r9
 364 0098 FFF7FEFF 		bl	_ZN4uartC1ENS_8uart_numEm
 365              	.LVL17:
 103:Core/Src/main.cpp **** sa818 sa8181(&uart_sa818, &radio_pd, &radio_ptt);
 366              		.loc 1 103 32 view .LVU89
 367 009c 4FF4E132 		mov	r2, #115200
 368 00a0 0121     		movs	r1, #1
 369 00a2 1348     		ldr	r0, .L12+40
 370 00a4 FFF7FEFF 		bl	_ZN4uartC1ENS_8uart_numEm
 371              	.LVL18:
 104:Core/Src/main.cpp **** trigger triggerPB2(GPIOE,trigger::PIN2,trigger::NoPull);
 372              		.loc 1 104 48 view .LVU90
 373 00a8 4346     		mov	r3, r8
 374 00aa 3A46     		mov	r2, r7
 375 00ac 4946     		mov	r1, r9
 376 00ae 1148     		ldr	r0, .L12+44
 377 00b0 FFF7FEFF 		bl	_ZN5sa818C1EP4uartP3pinS3_
 378              	.LVL19:
 105:Core/Src/main.cpp **** 
 379              		.loc 1 105 55 view .LVU91
 380 00b4 3346     		mov	r3, r6
 381 00b6 0422     		movs	r2, #4
 382 00b8 2946     		mov	r1, r5
ARM GAS  /tmp/ccCbjvan.s 			page 24


 383 00ba 0F48     		ldr	r0, .L12+48
 384 00bc FFF7FEFF 		bl	_ZN7triggerC1EP12GPIO_TypeDefNS_9PinNumberENS_4PullE
 385              	.LVL20:
 386              		.loc 1 847 1 view .LVU92
 387 00c0 02B0     		add	sp, sp, #8
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 32
 390              		@ sp needed
 391 00c2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 392              	.L13:
 393 00c6 00BF     		.align	2
 394              	.L12:
 395 00c8 00000000 		.word	.LANCHOR0
 396 00cc 00000000 		.word	_ZNSt8ios_base4InitD1Ev
 397 00d0 00000000 		.word	.LANCHOR3
 398 00d4 00000000 		.word	.LANCHOR1
 399 00d8 00000000 		.word	.LANCHOR2
 400 00dc 00000000 		.word	.LANCHOR4
 401 00e0 00000000 		.word	.LANCHOR5
 402 00e4 00000000 		.word	.LANCHOR6
 403 00e8 00100240 		.word	1073876992
 404 00ec 00000000 		.word	.LANCHOR8
 405 00f0 00000000 		.word	.LANCHOR10
 406 00f4 00000000 		.word	.LANCHOR11
 407 00f8 00000000 		.word	.LANCHOR12
 408 00fc 00000000 		.word	__dso_handle
 409 0100 00000000 		.word	.LANCHOR7
 410 0104 00000000 		.word	_ZN3pinD1Ev
 411 0108 00000000 		.word	.LANCHOR9
 412              		.cfi_endproc
 413              	.LFE2483:
 414              		.cantunwind
 415              		.fnend
 417              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 418              		.align	1
 419              		.global	HAL_TIM_PeriodElapsedCallback
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv4-sp-d16
 425              	HAL_TIM_PeriodElapsedCallback:
 426              		.fnstart
 427              	.LVL21:
 428              	.LFB2000:
 768:Core/Src/main.cpp ****   //TODO Check on the htime10 setup 
 429              		.loc 1 768 1 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 768:Core/Src/main.cpp ****   //TODO Check on the htime10 setup 
 433              		.loc 1 768 1 is_stmt 0 view .LVU94
 434 0000 38B5     		push	{r3, r4, r5, lr}
 435              		.save {r3, r4, r5, lr}
 436              	.LCFI6:
 437              		.cfi_def_cfa_offset 16
 438              		.cfi_offset 3, -16
 439              		.cfi_offset 4, -12
ARM GAS  /tmp/ccCbjvan.s 			page 25


 440              		.cfi_offset 5, -8
 441              		.cfi_offset 14, -4
 770:Core/Src/main.cpp ****   {
 442              		.loc 1 770 3 is_stmt 1 view .LVU95
 770:Core/Src/main.cpp ****   {
 443              		.loc 1 770 12 is_stmt 0 view .LVU96
 444 0002 0268     		ldr	r2, [r0]
 770:Core/Src/main.cpp ****   {
 445              		.loc 1 770 29 view .LVU97
 446 0004 1A4B     		ldr	r3, .L22
 447 0006 1B68     		ldr	r3, [r3]
 770:Core/Src/main.cpp ****   {
 448              		.loc 1 770 3 view .LVU98
 449 0008 9A42     		cmp	r2, r3
 450 000a 00D0     		beq	.L20
 451              	.LVL22:
 452              	.L14:
 804:Core/Src/main.cpp **** 
 453              		.loc 1 804 1 view .LVU99
 454 000c 38BD     		pop	{r3, r4, r5, pc}
 455              	.LVL23:
 456              	.L20:
 773:Core/Src/main.cpp ****     {
 457              		.loc 1 773 5 is_stmt 1 view .LVU100
 773:Core/Src/main.cpp ****     {
 458              		.loc 1 773 24 is_stmt 0 view .LVU101
 459 000e 4FF40041 		mov	r1, #32768
 460 0012 1848     		ldr	r0, .L22+4
 461              	.LVL24:
 773:Core/Src/main.cpp ****     {
 462              		.loc 1 773 24 view .LVU102
 463 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 464              	.LVL25:
 773:Core/Src/main.cpp ****     {
 465              		.loc 1 773 5 view .LVU103
 466 0018 80B1     		cbz	r0, .L16
 775:Core/Src/main.cpp ****         ok_debounce++;
 467              		.loc 1 775 7 is_stmt 1 view .LVU104
 775:Core/Src/main.cpp ****         ok_debounce++;
 468              		.loc 1 775 24 is_stmt 0 view .LVU105
 469 001a 174B     		ldr	r3, .L22+8
 470 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775:Core/Src/main.cpp ****         ok_debounce++;
 471              		.loc 1 775 7 view .LVU106
 472 001e 012B     		cmp	r3, #1
 473 0020 08D9     		bls	.L21
 780:Core/Src/main.cpp ****           menu1.menu_ok();
 474              		.loc 1 780 9 is_stmt 1 view .LVU107
 475 0022 022B     		cmp	r3, #2
 476 0024 0DD1     		bne	.L18
 781:Core/Src/main.cpp ****           ok_debounce=0;
 477              		.loc 1 781 11 view .LVU108
 781:Core/Src/main.cpp ****           ok_debounce=0;
 478              		.loc 1 781 24 is_stmt 0 view .LVU109
 479 0026 1548     		ldr	r0, .L22+12
 480 0028 FFF7FEFF 		bl	_ZN4menu7menu_okEv
 481              	.LVL26:
ARM GAS  /tmp/ccCbjvan.s 			page 26


 782:Core/Src/main.cpp ****         }
 482              		.loc 1 782 11 is_stmt 1 view .LVU110
 782:Core/Src/main.cpp ****         }
 483              		.loc 1 782 22 is_stmt 0 view .LVU111
 484 002c 124B     		ldr	r3, .L22+8
 485 002e 0022     		movs	r2, #0
 486 0030 1A70     		strb	r2, [r3]
 487 0032 06E0     		b	.L18
 488              	.L21:
 776:Core/Src/main.cpp ****       }
 489              		.loc 1 776 9 is_stmt 1 view .LVU112
 776:Core/Src/main.cpp ****       }
 490              		.loc 1 776 20 is_stmt 0 view .LVU113
 491 0034 0133     		adds	r3, r3, #1
 492 0036 104A     		ldr	r2, .L22+8
 493 0038 1370     		strb	r3, [r2]
 494 003a 02E0     		b	.L18
 495              	.L16:
 788:Core/Src/main.cpp ****     }
 496              		.loc 1 788 7 is_stmt 1 view .LVU114
 788:Core/Src/main.cpp ****     }
 497              		.loc 1 788 18 is_stmt 0 view .LVU115
 498 003c 0E4B     		ldr	r3, .L22+8
 499 003e 0022     		movs	r2, #0
 500 0040 1A70     		strb	r2, [r3]
 501              	.L18:
 792:Core/Src/main.cpp ****     {
 502              		.loc 1 792 5 is_stmt 1 view .LVU116
 792:Core/Src/main.cpp ****     {
 503              		.loc 1 792 27 is_stmt 0 view .LVU117
 504 0042 0F48     		ldr	r0, .L22+16
 505 0044 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 506              	.LVL27:
 792:Core/Src/main.cpp ****     {
 507              		.loc 1 792 5 view .LVU118
 508 0048 0028     		cmp	r0, #0
 509 004a DFD0     		beq	.L14
 794:Core/Src/main.cpp ****       oled1.oled_update_battery(adc_bat.adc_getValue()); //Get the battery voltage and print it
 510              		.loc 1 794 7 is_stmt 1 view .LVU119
 794:Core/Src/main.cpp ****       oled1.oled_update_battery(adc_bat.adc_getValue()); //Get the battery voltage and print it
 511              		.loc 1 794 26 is_stmt 0 view .LVU120
 512 004c 0B4D     		ldr	r5, .L22+12
 513 004e 2846     		mov	r0, r5
 514 0050 FFF7FEFF 		bl	_ZN4menu13keyboard_pollEv
 515              	.LVL28:
 795:Core/Src/main.cpp ****       menu1.menu_print();//update the menu portion of the display
 516              		.loc 1 795 7 is_stmt 1 view .LVU121
 795:Core/Src/main.cpp ****       menu1.menu_print();//update the menu portion of the display
 517              		.loc 1 795 32 is_stmt 0 view .LVU122
 518 0054 0B48     		ldr	r0, .L22+20
 519 0056 FFF7FEFF 		bl	_ZN3adc12adc_getValueEv
 520              	.LVL29:
 521 005a 094C     		ldr	r4, .L22+16
 522 005c 2046     		mov	r0, r4
 523 005e FFF7FEFF 		bl	_ZN4oled19oled_update_batteryEf
 524              	.LVL30:
 796:Core/Src/main.cpp ****       oled1.oled_refresh();//Send the data to the display
ARM GAS  /tmp/ccCbjvan.s 			page 27


 525              		.loc 1 796 7 is_stmt 1 view .LVU123
 796:Core/Src/main.cpp ****       oled1.oled_refresh();//Send the data to the display
 526              		.loc 1 796 23 is_stmt 0 view .LVU124
 527 0062 2846     		mov	r0, r5
 528 0064 FFF7FEFF 		bl	_ZN4menu10menu_printEv
 529              	.LVL31:
 797:Core/Src/main.cpp ****     }
 530              		.loc 1 797 7 is_stmt 1 view .LVU125
 797:Core/Src/main.cpp ****     }
 531              		.loc 1 797 25 is_stmt 0 view .LVU126
 532 0068 2046     		mov	r0, r4
 533 006a FFF7FEFF 		bl	_ZN4oled12oled_refreshEv
 534              	.LVL32:
 804:Core/Src/main.cpp **** 
 535              		.loc 1 804 1 view .LVU127
 536 006e CDE7     		b	.L14
 537              	.L23:
 538              		.align	2
 539              	.L22:
 540 0070 00000000 		.word	.LANCHOR1
 541 0074 00040240 		.word	1073873920
 542 0078 00000000 		.word	.LANCHOR13
 543 007c 00000000 		.word	.LANCHOR4
 544 0080 00000000 		.word	.LANCHOR3
 545 0084 00000000 		.word	.LANCHOR6
 546              		.cfi_endproc
 547              	.LFE2000:
 548              		.fnend
 550              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 551              		.align	1
 552              		.global	HAL_UART_RxCpltCallback
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu fpv4-sp-d16
 558              	HAL_UART_RxCpltCallback:
 559              		.fnstart
 560              	.LVL33:
 561              	.LFB2001:
 807:Core/Src/main.cpp ****   //call the function in the class
 562              		.loc 1 807 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 807:Core/Src/main.cpp ****   //call the function in the class
 566              		.loc 1 807 1 is_stmt 0 view .LVU129
 567 0000 08B5     		push	{r3, lr}
 568              		.save {r3, lr}
 569              	.LCFI7:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 3, -8
 572              		.cfi_offset 14, -4
 809:Core/Src/main.cpp ****   {
 573              		.loc 1 809 3 is_stmt 1 view .LVU130
 809:Core/Src/main.cpp ****   {
 574              		.loc 1 809 13 is_stmt 0 view .LVU131
 575 0002 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccCbjvan.s 			page 28


 809:Core/Src/main.cpp ****   {
 576              		.loc 1 809 3 view .LVU132
 577 0004 074A     		ldr	r2, .L30
 578 0006 9342     		cmp	r3, r2
 579 0008 03D0     		beq	.L28
 814:Core/Src/main.cpp ****     uart_pc.rx_cplt_callback();
 580              		.loc 1 814 8 is_stmt 1 view .LVU133
 581 000a 074A     		ldr	r2, .L30+4
 582 000c 9342     		cmp	r3, r2
 583 000e 04D0     		beq	.L29
 584              	.LVL34:
 585              	.L24:
 819:Core/Src/main.cpp **** 
 586              		.loc 1 819 1 is_stmt 0 view .LVU134
 587 0010 08BD     		pop	{r3, pc}
 588              	.LVL35:
 589              	.L28:
 811:Core/Src/main.cpp **** 
 590              		.loc 1 811 5 is_stmt 1 view .LVU135
 811:Core/Src/main.cpp **** 
 591              		.loc 1 811 29 is_stmt 0 view .LVU136
 592 0012 0648     		ldr	r0, .L30+8
 593              	.LVL36:
 811:Core/Src/main.cpp **** 
 594              		.loc 1 811 29 view .LVU137
 595 0014 FFF7FEFF 		bl	_ZN4uart16rx_cplt_callbackEv
 596              	.LVL37:
 597 0018 FAE7     		b	.L24
 598              	.LVL38:
 599              	.L29:
 815:Core/Src/main.cpp **** 
 600              		.loc 1 815 5 is_stmt 1 view .LVU138
 815:Core/Src/main.cpp **** 
 601              		.loc 1 815 29 is_stmt 0 view .LVU139
 602 001a 0448     		ldr	r0, .L30+8
 603              	.LVL39:
 815:Core/Src/main.cpp **** 
 604              		.loc 1 815 29 view .LVU140
 605 001c FFF7FEFF 		bl	_ZN4uart16rx_cplt_callbackEv
 606              	.LVL40:
 819:Core/Src/main.cpp **** 
 607              		.loc 1 819 1 view .LVU141
 608 0020 F6E7     		b	.L24
 609              	.L31:
 610 0022 00BF     		.align	2
 611              	.L30:
 612 0024 00100140 		.word	1073811456
 613 0028 00440040 		.word	1073759232
 614 002c 00000000 		.word	.LANCHOR10
 615              		.cfi_endproc
 616              	.LFE2001:
 617              		.fnend
 619              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 620              		.align	1
 621              		.global	HAL_GPIO_EXTI_Callback
 622              		.syntax unified
 623              		.thumb
ARM GAS  /tmp/ccCbjvan.s 			page 29


 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	HAL_GPIO_EXTI_Callback:
 628              		.fnstart
 629              	.LVL41:
 630              	.LFB2002:
 827:Core/Src/main.cpp ****   //Swithc for the pin that you are expecting the interrupt form
 631              		.loc 1 827 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 829:Core/Src/main.cpp **** }
 636              		.loc 1 829 2 view .LVU143
 829:Core/Src/main.cpp **** }
 637              		.loc 1 829 9 is_stmt 0 view .LVU144
 638              		.syntax unified
 639              	@ 829 "Core/Src/main.cpp" 1
 640 0000 00BF     		nop
 641              	@ 0 "" 2
 830:Core/Src/main.cpp **** 
 642              		.loc 1 830 1 view .LVU145
 643              		.thumb
 644              		.syntax unified
 645 0002 7047     		bx	lr
 646              		.cfi_endproc
 647              	.LFE2002:
 648              		.cantunwind
 649              		.fnend
 651              		.section	.text.Error_Handler,"ax",%progbits
 652              		.align	1
 653              		.global	Error_Handler
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	Error_Handler:
 660              		.fnstart
 661              	.LFB2003:
 839:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 662              		.loc 1 839 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ Volatile: function does not return.
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 842:Core/Src/main.cpp ****   while (1)
 668              		.loc 1 842 3 view .LVU147
 669              	.LBB10:
 670              	.LBI10:
 671              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/ccCbjvan.s 			page 30


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccCbjvan.s 			page 31


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  /tmp/ccCbjvan.s 			page 32


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 672              		.loc 3 140 27 view .LVU148
 673              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 674              		.loc 3 142 3 view .LVU149
 675              		.loc 3 142 44 is_stmt 0 view .LVU150
 676              		.syntax unified
 677              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 678 0000 72B6     		cpsid i
 679              	@ 0 "" 2
 680              		.thumb
 681              		.syntax unified
 682              	.L34:
 683              	.LBE11:
 684              	.LBE10:
 843:Core/Src/main.cpp ****   {
 685              		.loc 1 843 3 is_stmt 1 discriminator 1 view .LVU151
 843:Core/Src/main.cpp ****   {
 686              		.loc 1 843 3 discriminator 1 view .LVU152
 687 0002 FEE7     		b	.L34
 688              		.cfi_endproc
 689              	.LFE2003:
 690              		.cantunwind
 691              		.fnend
 693              		.section	.text._ZL12MX_I2C1_Initv,"ax",%progbits
 694              		.align	1
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu fpv4-sp-d16
 700              	_ZL12MX_I2C1_Initv:
 701              		.fnstart
 702              	.LFB1987:
 279:Core/Src/main.cpp **** 
 703              		.loc 1 279 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccCbjvan.s 			page 33


 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707 0000 08B5     		push	{r3, lr}
 708              		.save {r3, lr}
 709              	.LCFI8:
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 3, -8
 712              		.cfi_offset 14, -4
 288:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 713              		.loc 1 288 3 view .LVU154
 288:Core/Src/main.cpp ****   hi2c1.Init.ClockSpeed = 100000;
 714              		.loc 1 288 18 is_stmt 0 view .LVU155
 715 0002 0A48     		ldr	r0, .L39
 716 0004 0A4B     		ldr	r3, .L39+4
 717 0006 0360     		str	r3, [r0]
 289:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 718              		.loc 1 289 3 is_stmt 1 view .LVU156
 289:Core/Src/main.cpp ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 719              		.loc 1 289 25 is_stmt 0 view .LVU157
 720 0008 0A4B     		ldr	r3, .L39+8
 721 000a 4360     		str	r3, [r0, #4]
 290:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 722              		.loc 1 290 3 is_stmt 1 view .LVU158
 290:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 723              		.loc 1 290 24 is_stmt 0 view .LVU159
 724 000c 0023     		movs	r3, #0
 725 000e 8360     		str	r3, [r0, #8]
 291:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 726              		.loc 1 291 3 is_stmt 1 view .LVU160
 291:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 727              		.loc 1 291 26 is_stmt 0 view .LVU161
 728 0010 C360     		str	r3, [r0, #12]
 292:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 729              		.loc 1 292 3 is_stmt 1 view .LVU162
 292:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 730              		.loc 1 292 29 is_stmt 0 view .LVU163
 731 0012 4FF48042 		mov	r2, #16384
 732 0016 0261     		str	r2, [r0, #16]
 293:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 733              		.loc 1 293 3 is_stmt 1 view .LVU164
 293:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 734              		.loc 1 293 30 is_stmt 0 view .LVU165
 735 0018 4361     		str	r3, [r0, #20]
 294:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 736              		.loc 1 294 3 is_stmt 1 view .LVU166
 294:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 737              		.loc 1 294 26 is_stmt 0 view .LVU167
 738 001a 8361     		str	r3, [r0, #24]
 295:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 739              		.loc 1 295 3 is_stmt 1 view .LVU168
 295:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 740              		.loc 1 295 30 is_stmt 0 view .LVU169
 741 001c C361     		str	r3, [r0, #28]
 296:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 742              		.loc 1 296 3 is_stmt 1 view .LVU170
 296:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 743              		.loc 1 296 28 is_stmt 0 view .LVU171
 744 001e 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/ccCbjvan.s 			page 34


 297:Core/Src/main.cpp ****   {
 745              		.loc 1 297 3 is_stmt 1 view .LVU172
 297:Core/Src/main.cpp ****   {
 746              		.loc 1 297 19 is_stmt 0 view .LVU173
 747 0020 FFF7FEFF 		bl	HAL_I2C_Init
 748              	.LVL42:
 297:Core/Src/main.cpp ****   {
 749              		.loc 1 297 3 view .LVU174
 750 0024 00B9     		cbnz	r0, .L38
 305:Core/Src/main.cpp **** 
 751              		.loc 1 305 1 view .LVU175
 752 0026 08BD     		pop	{r3, pc}
 753              	.L38:
 299:Core/Src/main.cpp ****   }
 754              		.loc 1 299 5 is_stmt 1 view .LVU176
 299:Core/Src/main.cpp ****   }
 755              		.loc 1 299 18 is_stmt 0 view .LVU177
 756 0028 FFF7FEFF 		bl	Error_Handler
 757              	.LVL43:
 758              	.L40:
 759              		.align	2
 760              	.L39:
 761 002c 00000000 		.word	.LANCHOR14
 762 0030 00540040 		.word	1073763328
 763 0034 A0860100 		.word	100000
 764              		.cfi_endproc
 765              	.LFE1987:
 766              		.fnend
 768              		.section	.text._ZL12MX_I2C3_Initv,"ax",%progbits
 769              		.align	1
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	_ZL12MX_I2C3_Initv:
 776              		.fnstart
 777              	.LFB1988:
 313:Core/Src/main.cpp **** 
 778              		.loc 1 313 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782 0000 08B5     		push	{r3, lr}
 783              		.save {r3, lr}
 784              	.LCFI9:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 3, -8
 787              		.cfi_offset 14, -4
 322:Core/Src/main.cpp ****   hi2c3.Init.ClockSpeed = 100000;
 788              		.loc 1 322 3 view .LVU179
 322:Core/Src/main.cpp ****   hi2c3.Init.ClockSpeed = 100000;
 789              		.loc 1 322 18 is_stmt 0 view .LVU180
 790 0002 0A48     		ldr	r0, .L45
 791 0004 0A4B     		ldr	r3, .L45+4
 792 0006 0360     		str	r3, [r0]
 323:Core/Src/main.cpp ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 793              		.loc 1 323 3 is_stmt 1 view .LVU181
ARM GAS  /tmp/ccCbjvan.s 			page 35


 323:Core/Src/main.cpp ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 794              		.loc 1 323 25 is_stmt 0 view .LVU182
 795 0008 0A4B     		ldr	r3, .L45+8
 796 000a 4360     		str	r3, [r0, #4]
 324:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress1 = 0;
 797              		.loc 1 324 3 is_stmt 1 view .LVU183
 324:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress1 = 0;
 798              		.loc 1 324 24 is_stmt 0 view .LVU184
 799 000c 0023     		movs	r3, #0
 800 000e 8360     		str	r3, [r0, #8]
 325:Core/Src/main.cpp ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 801              		.loc 1 325 3 is_stmt 1 view .LVU185
 325:Core/Src/main.cpp ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 802              		.loc 1 325 26 is_stmt 0 view .LVU186
 803 0010 C360     		str	r3, [r0, #12]
 326:Core/Src/main.cpp ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 804              		.loc 1 326 3 is_stmt 1 view .LVU187
 326:Core/Src/main.cpp ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 805              		.loc 1 326 29 is_stmt 0 view .LVU188
 806 0012 4FF48042 		mov	r2, #16384
 807 0016 0261     		str	r2, [r0, #16]
 327:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress2 = 0;
 808              		.loc 1 327 3 is_stmt 1 view .LVU189
 327:Core/Src/main.cpp ****   hi2c3.Init.OwnAddress2 = 0;
 809              		.loc 1 327 30 is_stmt 0 view .LVU190
 810 0018 4361     		str	r3, [r0, #20]
 328:Core/Src/main.cpp ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 811              		.loc 1 328 3 is_stmt 1 view .LVU191
 328:Core/Src/main.cpp ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 812              		.loc 1 328 26 is_stmt 0 view .LVU192
 813 001a 8361     		str	r3, [r0, #24]
 329:Core/Src/main.cpp ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 814              		.loc 1 329 3 is_stmt 1 view .LVU193
 329:Core/Src/main.cpp ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 815              		.loc 1 329 30 is_stmt 0 view .LVU194
 816 001c C361     		str	r3, [r0, #28]
 330:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 817              		.loc 1 330 3 is_stmt 1 view .LVU195
 330:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 818              		.loc 1 330 28 is_stmt 0 view .LVU196
 819 001e 0362     		str	r3, [r0, #32]
 331:Core/Src/main.cpp ****   {
 820              		.loc 1 331 3 is_stmt 1 view .LVU197
 331:Core/Src/main.cpp ****   {
 821              		.loc 1 331 19 is_stmt 0 view .LVU198
 822 0020 FFF7FEFF 		bl	HAL_I2C_Init
 823              	.LVL44:
 331:Core/Src/main.cpp ****   {
 824              		.loc 1 331 3 view .LVU199
 825 0024 00B9     		cbnz	r0, .L44
 339:Core/Src/main.cpp **** 
 826              		.loc 1 339 1 view .LVU200
 827 0026 08BD     		pop	{r3, pc}
 828              	.L44:
 333:Core/Src/main.cpp ****   }
 829              		.loc 1 333 5 is_stmt 1 view .LVU201
 333:Core/Src/main.cpp ****   }
ARM GAS  /tmp/ccCbjvan.s 			page 36


 830              		.loc 1 333 18 is_stmt 0 view .LVU202
 831 0028 FFF7FEFF 		bl	Error_Handler
 832              	.LVL45:
 833              	.L46:
 834              		.align	2
 835              	.L45:
 836 002c 00000000 		.word	.LANCHOR2
 837 0030 005C0040 		.word	1073765376
 838 0034 A0860100 		.word	100000
 839              		.cfi_endproc
 840              	.LFE1988:
 841              		.fnend
 843              		.section	.text._ZL12MX_I2S2_Initv,"ax",%progbits
 844              		.align	1
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	_ZL12MX_I2S2_Initv:
 851              		.fnstart
 852              	.LFB1989:
 347:Core/Src/main.cpp **** 
 853              		.loc 1 347 1 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857 0000 08B5     		push	{r3, lr}
 858              		.save {r3, lr}
 859              	.LCFI10:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 3, -8
 862              		.cfi_offset 14, -4
 356:Core/Src/main.cpp ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 863              		.loc 1 356 3 view .LVU204
 356:Core/Src/main.cpp ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 864              		.loc 1 356 18 is_stmt 0 view .LVU205
 865 0002 0B48     		ldr	r0, .L51
 866 0004 0B4B     		ldr	r3, .L51+4
 867 0006 0360     		str	r3, [r0]
 357:Core/Src/main.cpp ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 868              		.loc 1 357 3 is_stmt 1 view .LVU206
 357:Core/Src/main.cpp ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 869              		.loc 1 357 19 is_stmt 0 view .LVU207
 870 0008 4FF40072 		mov	r2, #512
 871 000c 4260     		str	r2, [r0, #4]
 358:Core/Src/main.cpp ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 872              		.loc 1 358 3 is_stmt 1 view .LVU208
 358:Core/Src/main.cpp ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 873              		.loc 1 358 23 is_stmt 0 view .LVU209
 874 000e 0023     		movs	r3, #0
 875 0010 8360     		str	r3, [r0, #8]
 359:Core/Src/main.cpp ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 876              		.loc 1 359 3 is_stmt 1 view .LVU210
 359:Core/Src/main.cpp ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 877              		.loc 1 359 25 is_stmt 0 view .LVU211
 878 0012 C360     		str	r3, [r0, #12]
 360:Core/Src/main.cpp ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
ARM GAS  /tmp/ccCbjvan.s 			page 37


 879              		.loc 1 360 3 is_stmt 1 view .LVU212
 360:Core/Src/main.cpp ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 880              		.loc 1 360 25 is_stmt 0 view .LVU213
 881 0014 0261     		str	r2, [r0, #16]
 361:Core/Src/main.cpp ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 882              		.loc 1 361 3 is_stmt 1 view .LVU214
 361:Core/Src/main.cpp ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 883              		.loc 1 361 24 is_stmt 0 view .LVU215
 884 0016 4FF4FA52 		mov	r2, #8000
 885 001a 4261     		str	r2, [r0, #20]
 362:Core/Src/main.cpp ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 886              		.loc 1 362 3 is_stmt 1 view .LVU216
 362:Core/Src/main.cpp ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 887              		.loc 1 362 19 is_stmt 0 view .LVU217
 888 001c 8361     		str	r3, [r0, #24]
 363:Core/Src/main.cpp ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 889              		.loc 1 363 3 is_stmt 1 view .LVU218
 363:Core/Src/main.cpp ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 890              		.loc 1 363 26 is_stmt 0 view .LVU219
 891 001e C361     		str	r3, [r0, #28]
 364:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 892              		.loc 1 364 3 is_stmt 1 view .LVU220
 364:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 893              		.loc 1 364 29 is_stmt 0 view .LVU221
 894 0020 0362     		str	r3, [r0, #32]
 365:Core/Src/main.cpp ****   {
 895              		.loc 1 365 3 is_stmt 1 view .LVU222
 365:Core/Src/main.cpp ****   {
 896              		.loc 1 365 19 is_stmt 0 view .LVU223
 897 0022 FFF7FEFF 		bl	HAL_I2S_Init
 898              	.LVL46:
 365:Core/Src/main.cpp ****   {
 899              		.loc 1 365 3 view .LVU224
 900 0026 00B9     		cbnz	r0, .L50
 373:Core/Src/main.cpp **** 
 901              		.loc 1 373 1 view .LVU225
 902 0028 08BD     		pop	{r3, pc}
 903              	.L50:
 367:Core/Src/main.cpp ****   }
 904              		.loc 1 367 5 is_stmt 1 view .LVU226
 367:Core/Src/main.cpp ****   }
 905              		.loc 1 367 18 is_stmt 0 view .LVU227
 906 002a FFF7FEFF 		bl	Error_Handler
 907              	.LVL47:
 908              	.L52:
 909 002e 00BF     		.align	2
 910              	.L51:
 911 0030 00000000 		.word	.LANCHOR15
 912 0034 00380040 		.word	1073756160
 913              		.cfi_endproc
 914              	.LFE1989:
 915              		.fnend
 917              		.section	.text._ZL12MX_I2S3_Initv,"ax",%progbits
 918              		.align	1
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
ARM GAS  /tmp/ccCbjvan.s 			page 38


 922              		.fpu fpv4-sp-d16
 924              	_ZL12MX_I2S3_Initv:
 925              		.fnstart
 926              	.LFB1990:
 381:Core/Src/main.cpp **** 
 927              		.loc 1 381 1 is_stmt 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931 0000 08B5     		push	{r3, lr}
 932              		.save {r3, lr}
 933              	.LCFI11:
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 3, -8
 936              		.cfi_offset 14, -4
 390:Core/Src/main.cpp ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 937              		.loc 1 390 3 view .LVU229
 390:Core/Src/main.cpp ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 938              		.loc 1 390 18 is_stmt 0 view .LVU230
 939 0002 0B48     		ldr	r0, .L57
 940 0004 0B4B     		ldr	r3, .L57+4
 941 0006 0360     		str	r3, [r0]
 391:Core/Src/main.cpp ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 942              		.loc 1 391 3 is_stmt 1 view .LVU231
 391:Core/Src/main.cpp ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 943              		.loc 1 391 19 is_stmt 0 view .LVU232
 944 0008 4FF40072 		mov	r2, #512
 945 000c 4260     		str	r2, [r0, #4]
 392:Core/Src/main.cpp ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 946              		.loc 1 392 3 is_stmt 1 view .LVU233
 392:Core/Src/main.cpp ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 947              		.loc 1 392 23 is_stmt 0 view .LVU234
 948 000e 0023     		movs	r3, #0
 949 0010 8360     		str	r3, [r0, #8]
 393:Core/Src/main.cpp ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 950              		.loc 1 393 3 is_stmt 1 view .LVU235
 393:Core/Src/main.cpp ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 951              		.loc 1 393 25 is_stmt 0 view .LVU236
 952 0012 C360     		str	r3, [r0, #12]
 394:Core/Src/main.cpp ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 953              		.loc 1 394 3 is_stmt 1 view .LVU237
 394:Core/Src/main.cpp ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 954              		.loc 1 394 25 is_stmt 0 view .LVU238
 955 0014 0261     		str	r2, [r0, #16]
 395:Core/Src/main.cpp ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 956              		.loc 1 395 3 is_stmt 1 view .LVU239
 395:Core/Src/main.cpp ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 957              		.loc 1 395 24 is_stmt 0 view .LVU240
 958 0016 4AF64442 		movw	r2, #44100
 959 001a 4261     		str	r2, [r0, #20]
 396:Core/Src/main.cpp ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 960              		.loc 1 396 3 is_stmt 1 view .LVU241
 396:Core/Src/main.cpp ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 961              		.loc 1 396 19 is_stmt 0 view .LVU242
 962 001c 8361     		str	r3, [r0, #24]
 397:Core/Src/main.cpp ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_ENABLE;
 963              		.loc 1 397 3 is_stmt 1 view .LVU243
ARM GAS  /tmp/ccCbjvan.s 			page 39


 397:Core/Src/main.cpp ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_ENABLE;
 964              		.loc 1 397 26 is_stmt 0 view .LVU244
 965 001e C361     		str	r3, [r0, #28]
 398:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 966              		.loc 1 398 3 is_stmt 1 view .LVU245
 398:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 967              		.loc 1 398 29 is_stmt 0 view .LVU246
 968 0020 0123     		movs	r3, #1
 969 0022 0362     		str	r3, [r0, #32]
 399:Core/Src/main.cpp ****   {
 970              		.loc 1 399 3 is_stmt 1 view .LVU247
 399:Core/Src/main.cpp ****   {
 971              		.loc 1 399 19 is_stmt 0 view .LVU248
 972 0024 FFF7FEFF 		bl	HAL_I2S_Init
 973              	.LVL48:
 399:Core/Src/main.cpp ****   {
 974              		.loc 1 399 3 view .LVU249
 975 0028 00B9     		cbnz	r0, .L56
 407:Core/Src/main.cpp **** 
 976              		.loc 1 407 1 view .LVU250
 977 002a 08BD     		pop	{r3, pc}
 978              	.L56:
 401:Core/Src/main.cpp ****   }
 979              		.loc 1 401 5 is_stmt 1 view .LVU251
 401:Core/Src/main.cpp ****   }
 980              		.loc 1 401 18 is_stmt 0 view .LVU252
 981 002c FFF7FEFF 		bl	Error_Handler
 982              	.LVL49:
 983              	.L58:
 984              		.align	2
 985              	.L57:
 986 0030 00000000 		.word	.LANCHOR16
 987 0034 003C0040 		.word	1073757184
 988              		.cfi_endproc
 989              	.LFE1990:
 990              		.fnend
 992              		.section	.text._ZL12MX_I2S4_Initv,"ax",%progbits
 993              		.align	1
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv4-sp-d16
 999              	_ZL12MX_I2S4_Initv:
 1000              		.fnstart
 1001              	.LFB1991:
 415:Core/Src/main.cpp **** 
 1002              		.loc 1 415 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006 0000 08B5     		push	{r3, lr}
 1007              		.save {r3, lr}
 1008              	.LCFI12:
 1009              		.cfi_def_cfa_offset 8
 1010              		.cfi_offset 3, -8
 1011              		.cfi_offset 14, -4
 424:Core/Src/main.cpp ****   hi2s4.Init.Mode = I2S_MODE_MASTER_TX;
ARM GAS  /tmp/ccCbjvan.s 			page 40


 1012              		.loc 1 424 3 view .LVU254
 424:Core/Src/main.cpp ****   hi2s4.Init.Mode = I2S_MODE_MASTER_TX;
 1013              		.loc 1 424 18 is_stmt 0 view .LVU255
 1014 0002 0B48     		ldr	r0, .L63
 1015 0004 0B4B     		ldr	r3, .L63+4
 1016 0006 0360     		str	r3, [r0]
 425:Core/Src/main.cpp ****   hi2s4.Init.Standard = I2S_STANDARD_PHILIPS;
 1017              		.loc 1 425 3 is_stmt 1 view .LVU256
 425:Core/Src/main.cpp ****   hi2s4.Init.Standard = I2S_STANDARD_PHILIPS;
 1018              		.loc 1 425 19 is_stmt 0 view .LVU257
 1019 0008 4FF40073 		mov	r3, #512
 1020 000c 4360     		str	r3, [r0, #4]
 426:Core/Src/main.cpp ****   hi2s4.Init.DataFormat = I2S_DATAFORMAT_16B;
 1021              		.loc 1 426 3 is_stmt 1 view .LVU258
 426:Core/Src/main.cpp ****   hi2s4.Init.DataFormat = I2S_DATAFORMAT_16B;
 1022              		.loc 1 426 23 is_stmt 0 view .LVU259
 1023 000e 0023     		movs	r3, #0
 1024 0010 8360     		str	r3, [r0, #8]
 427:Core/Src/main.cpp ****   hi2s4.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 1025              		.loc 1 427 3 is_stmt 1 view .LVU260
 427:Core/Src/main.cpp ****   hi2s4.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 1026              		.loc 1 427 25 is_stmt 0 view .LVU261
 1027 0012 C360     		str	r3, [r0, #12]
 428:Core/Src/main.cpp ****   hi2s4.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 1028              		.loc 1 428 3 is_stmt 1 view .LVU262
 428:Core/Src/main.cpp ****   hi2s4.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 1029              		.loc 1 428 25 is_stmt 0 view .LVU263
 1030 0014 0361     		str	r3, [r0, #16]
 429:Core/Src/main.cpp ****   hi2s4.Init.CPOL = I2S_CPOL_LOW;
 1031              		.loc 1 429 3 is_stmt 1 view .LVU264
 429:Core/Src/main.cpp ****   hi2s4.Init.CPOL = I2S_CPOL_LOW;
 1032              		.loc 1 429 24 is_stmt 0 view .LVU265
 1033 0016 4AF64442 		movw	r2, #44100
 1034 001a 4261     		str	r2, [r0, #20]
 430:Core/Src/main.cpp ****   hi2s4.Init.ClockSource = I2S_CLOCK_PLL;
 1035              		.loc 1 430 3 is_stmt 1 view .LVU266
 430:Core/Src/main.cpp ****   hi2s4.Init.ClockSource = I2S_CLOCK_PLL;
 1036              		.loc 1 430 19 is_stmt 0 view .LVU267
 1037 001c 8361     		str	r3, [r0, #24]
 431:Core/Src/main.cpp ****   hi2s4.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 1038              		.loc 1 431 3 is_stmt 1 view .LVU268
 431:Core/Src/main.cpp ****   hi2s4.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 1039              		.loc 1 431 26 is_stmt 0 view .LVU269
 1040 001e C361     		str	r3, [r0, #28]
 432:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s4) != HAL_OK)
 1041              		.loc 1 432 3 is_stmt 1 view .LVU270
 432:Core/Src/main.cpp ****   if (HAL_I2S_Init(&hi2s4) != HAL_OK)
 1042              		.loc 1 432 29 is_stmt 0 view .LVU271
 1043 0020 0362     		str	r3, [r0, #32]
 433:Core/Src/main.cpp ****   {
 1044              		.loc 1 433 3 is_stmt 1 view .LVU272
 433:Core/Src/main.cpp ****   {
 1045              		.loc 1 433 19 is_stmt 0 view .LVU273
 1046 0022 FFF7FEFF 		bl	HAL_I2S_Init
 1047              	.LVL50:
 433:Core/Src/main.cpp ****   {
 1048              		.loc 1 433 3 view .LVU274
ARM GAS  /tmp/ccCbjvan.s 			page 41


 1049 0026 00B9     		cbnz	r0, .L62
 441:Core/Src/main.cpp **** 
 1050              		.loc 1 441 1 view .LVU275
 1051 0028 08BD     		pop	{r3, pc}
 1052              	.L62:
 435:Core/Src/main.cpp ****   }
 1053              		.loc 1 435 5 is_stmt 1 view .LVU276
 435:Core/Src/main.cpp ****   }
 1054              		.loc 1 435 18 is_stmt 0 view .LVU277
 1055 002a FFF7FEFF 		bl	Error_Handler
 1056              	.LVL51:
 1057              	.L64:
 1058 002e 00BF     		.align	2
 1059              	.L63:
 1060 0030 00000000 		.word	.LANCHOR17
 1061 0034 00340140 		.word	1073820672
 1062              		.cfi_endproc
 1063              	.LFE1991:
 1064              		.fnend
 1066              		.section	.text._ZL15MX_SDIO_SD_Initv,"ax",%progbits
 1067              		.align	1
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv4-sp-d16
 1073              	_ZL15MX_SDIO_SD_Initv:
 1074              		.fnstart
 1075              	.LFB1992:
 449:Core/Src/main.cpp **** 
 1076              		.loc 1 449 1 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080 0000 08B5     		push	{r3, lr}
 1081              		.save {r3, lr}
 1082              	.LCFI13:
 1083              		.cfi_def_cfa_offset 8
 1084              		.cfi_offset 3, -8
 1085              		.cfi_offset 14, -4
 458:Core/Src/main.cpp ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 1086              		.loc 1 458 3 view .LVU279
 458:Core/Src/main.cpp ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 1087              		.loc 1 458 16 is_stmt 0 view .LVU280
 1088 0002 0C48     		ldr	r0, .L71
 1089 0004 0C4B     		ldr	r3, .L71+4
 1090 0006 0360     		str	r3, [r0]
 459:Core/Src/main.cpp ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 1091              		.loc 1 459 3 is_stmt 1 view .LVU281
 459:Core/Src/main.cpp ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 1092              		.loc 1 459 22 is_stmt 0 view .LVU282
 1093 0008 0023     		movs	r3, #0
 1094 000a 4360     		str	r3, [r0, #4]
 460:Core/Src/main.cpp ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 1095              		.loc 1 460 3 is_stmt 1 view .LVU283
 460:Core/Src/main.cpp ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 1096              		.loc 1 460 24 is_stmt 0 view .LVU284
 1097 000c 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccCbjvan.s 			page 42


 461:Core/Src/main.cpp ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 1098              		.loc 1 461 3 is_stmt 1 view .LVU285
 461:Core/Src/main.cpp ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 1099              		.loc 1 461 27 is_stmt 0 view .LVU286
 1100 000e C360     		str	r3, [r0, #12]
 462:Core/Src/main.cpp ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 1101              		.loc 1 462 3 is_stmt 1 view .LVU287
 462:Core/Src/main.cpp ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 1102              		.loc 1 462 20 is_stmt 0 view .LVU288
 1103 0010 0361     		str	r3, [r0, #16]
 463:Core/Src/main.cpp ****   hsd.Init.ClockDiv = 0;
 1104              		.loc 1 463 3 is_stmt 1 view .LVU289
 463:Core/Src/main.cpp ****   hsd.Init.ClockDiv = 0;
 1105              		.loc 1 463 32 is_stmt 0 view .LVU290
 1106 0012 4361     		str	r3, [r0, #20]
 464:Core/Src/main.cpp ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 1107              		.loc 1 464 3 is_stmt 1 view .LVU291
 464:Core/Src/main.cpp ****   if (HAL_SD_Init(&hsd) != HAL_OK)
 1108              		.loc 1 464 21 is_stmt 0 view .LVU292
 1109 0014 8361     		str	r3, [r0, #24]
 465:Core/Src/main.cpp ****   {
 1110              		.loc 1 465 3 is_stmt 1 view .LVU293
 465:Core/Src/main.cpp ****   {
 1111              		.loc 1 465 18 is_stmt 0 view .LVU294
 1112 0016 FFF7FEFF 		bl	HAL_SD_Init
 1113              	.LVL52:
 465:Core/Src/main.cpp ****   {
 1114              		.loc 1 465 3 view .LVU295
 1115 001a 30B9     		cbnz	r0, .L69
 469:Core/Src/main.cpp ****   {
 1116              		.loc 1 469 3 is_stmt 1 view .LVU296
 469:Core/Src/main.cpp ****   {
 1117              		.loc 1 469 36 is_stmt 0 view .LVU297
 1118 001c 4FF40061 		mov	r1, #2048
 1119 0020 0448     		ldr	r0, .L71
 1120 0022 FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 1121              	.LVL53:
 469:Core/Src/main.cpp ****   {
 1122              		.loc 1 469 3 view .LVU298
 1123 0026 10B9     		cbnz	r0, .L70
 477:Core/Src/main.cpp **** 
 1124              		.loc 1 477 1 view .LVU299
 1125 0028 08BD     		pop	{r3, pc}
 1126              	.L69:
 467:Core/Src/main.cpp ****   }
 1127              		.loc 1 467 5 is_stmt 1 view .LVU300
 467:Core/Src/main.cpp ****   }
 1128              		.loc 1 467 18 is_stmt 0 view .LVU301
 1129 002a FFF7FEFF 		bl	Error_Handler
 1130              	.LVL54:
 1131              	.L70:
 471:Core/Src/main.cpp ****   }
 1132              		.loc 1 471 5 is_stmt 1 view .LVU302
 471:Core/Src/main.cpp ****   }
 1133              		.loc 1 471 18 is_stmt 0 view .LVU303
 1134 002e FFF7FEFF 		bl	Error_Handler
 1135              	.LVL55:
ARM GAS  /tmp/ccCbjvan.s 			page 43


 1136              	.L72:
 1137 0032 00BF     		.align	2
 1138              	.L71:
 1139 0034 00000000 		.word	.LANCHOR18
 1140 0038 002C0140 		.word	1073818624
 1141              		.cfi_endproc
 1142              	.LFE1992:
 1143              		.fnend
 1145              		.section	.text._ZL12MX_SPI1_Initv,"ax",%progbits
 1146              		.align	1
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	_ZL12MX_SPI1_Initv:
 1153              		.fnstart
 1154              	.LFB1993:
 485:Core/Src/main.cpp **** 
 1155              		.loc 1 485 1 is_stmt 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159 0000 08B5     		push	{r3, lr}
 1160              		.save {r3, lr}
 1161              	.LCFI14:
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 3, -8
 1164              		.cfi_offset 14, -4
 495:Core/Src/main.cpp ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1165              		.loc 1 495 3 view .LVU305
 495:Core/Src/main.cpp ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1166              		.loc 1 495 18 is_stmt 0 view .LVU306
 1167 0002 0C48     		ldr	r0, .L77
 1168 0004 0C4B     		ldr	r3, .L77+4
 1169 0006 0360     		str	r3, [r0]
 496:Core/Src/main.cpp ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1170              		.loc 1 496 3 is_stmt 1 view .LVU307
 496:Core/Src/main.cpp ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1171              		.loc 1 496 19 is_stmt 0 view .LVU308
 1172 0008 4FF48273 		mov	r3, #260
 1173 000c 4360     		str	r3, [r0, #4]
 497:Core/Src/main.cpp ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1174              		.loc 1 497 3 is_stmt 1 view .LVU309
 497:Core/Src/main.cpp ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1175              		.loc 1 497 24 is_stmt 0 view .LVU310
 1176 000e 0023     		movs	r3, #0
 1177 0010 8360     		str	r3, [r0, #8]
 498:Core/Src/main.cpp ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1178              		.loc 1 498 3 is_stmt 1 view .LVU311
 498:Core/Src/main.cpp ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1179              		.loc 1 498 23 is_stmt 0 view .LVU312
 1180 0012 C360     		str	r3, [r0, #12]
 499:Core/Src/main.cpp ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1181              		.loc 1 499 3 is_stmt 1 view .LVU313
 499:Core/Src/main.cpp ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1182              		.loc 1 499 26 is_stmt 0 view .LVU314
 1183 0014 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccCbjvan.s 			page 44


 500:Core/Src/main.cpp ****   hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 1184              		.loc 1 500 3 is_stmt 1 view .LVU315
 500:Core/Src/main.cpp ****   hspi1.Init.NSS = SPI_NSS_HARD_INPUT;
 1185              		.loc 1 500 23 is_stmt 0 view .LVU316
 1186 0016 4361     		str	r3, [r0, #20]
 501:Core/Src/main.cpp ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1187              		.loc 1 501 3 is_stmt 1 view .LVU317
 501:Core/Src/main.cpp ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1188              		.loc 1 501 18 is_stmt 0 view .LVU318
 1189 0018 8361     		str	r3, [r0, #24]
 502:Core/Src/main.cpp ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1190              		.loc 1 502 3 is_stmt 1 view .LVU319
 502:Core/Src/main.cpp ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1191              		.loc 1 502 32 is_stmt 0 view .LVU320
 1192 001a C361     		str	r3, [r0, #28]
 503:Core/Src/main.cpp ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1193              		.loc 1 503 3 is_stmt 1 view .LVU321
 503:Core/Src/main.cpp ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1194              		.loc 1 503 23 is_stmt 0 view .LVU322
 1195 001c 0362     		str	r3, [r0, #32]
 504:Core/Src/main.cpp ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1196              		.loc 1 504 3 is_stmt 1 view .LVU323
 504:Core/Src/main.cpp ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1197              		.loc 1 504 21 is_stmt 0 view .LVU324
 1198 001e 4362     		str	r3, [r0, #36]
 505:Core/Src/main.cpp ****   hspi1.Init.CRCPolynomial = 10;
 1199              		.loc 1 505 3 is_stmt 1 view .LVU325
 505:Core/Src/main.cpp ****   hspi1.Init.CRCPolynomial = 10;
 1200              		.loc 1 505 29 is_stmt 0 view .LVU326
 1201 0020 8362     		str	r3, [r0, #40]
 506:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1202              		.loc 1 506 3 is_stmt 1 view .LVU327
 506:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1203              		.loc 1 506 28 is_stmt 0 view .LVU328
 1204 0022 0A23     		movs	r3, #10
 1205 0024 C362     		str	r3, [r0, #44]
 507:Core/Src/main.cpp ****   {
 1206              		.loc 1 507 3 is_stmt 1 view .LVU329
 507:Core/Src/main.cpp ****   {
 1207              		.loc 1 507 19 is_stmt 0 view .LVU330
 1208 0026 FFF7FEFF 		bl	HAL_SPI_Init
 1209              	.LVL56:
 507:Core/Src/main.cpp ****   {
 1210              		.loc 1 507 3 view .LVU331
 1211 002a 00B9     		cbnz	r0, .L76
 515:Core/Src/main.cpp **** 
 1212              		.loc 1 515 1 view .LVU332
 1213 002c 08BD     		pop	{r3, pc}
 1214              	.L76:
 509:Core/Src/main.cpp ****   }
 1215              		.loc 1 509 5 is_stmt 1 view .LVU333
 509:Core/Src/main.cpp ****   }
 1216              		.loc 1 509 18 is_stmt 0 view .LVU334
 1217 002e FFF7FEFF 		bl	Error_Handler
 1218              	.LVL57:
 1219              	.L78:
 1220 0032 00BF     		.align	2
ARM GAS  /tmp/ccCbjvan.s 			page 45


 1221              	.L77:
 1222 0034 00000000 		.word	.LANCHOR19
 1223 0038 00300140 		.word	1073819648
 1224              		.cfi_endproc
 1225              	.LFE1993:
 1226              		.fnend
 1228              		.section	.text._ZL12MX_SPI5_Initv,"ax",%progbits
 1229              		.align	1
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	_ZL12MX_SPI5_Initv:
 1236              		.fnstart
 1237              	.LFB1994:
 523:Core/Src/main.cpp **** 
 1238              		.loc 1 523 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242 0000 08B5     		push	{r3, lr}
 1243              		.save {r3, lr}
 1244              	.LCFI15:
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 3, -8
 1247              		.cfi_offset 14, -4
 533:Core/Src/main.cpp ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 1248              		.loc 1 533 3 view .LVU336
 533:Core/Src/main.cpp ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 1249              		.loc 1 533 18 is_stmt 0 view .LVU337
 1250 0002 0C48     		ldr	r0, .L83
 1251 0004 0C4B     		ldr	r3, .L83+4
 1252 0006 0360     		str	r3, [r0]
 534:Core/Src/main.cpp ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 1253              		.loc 1 534 3 is_stmt 1 view .LVU338
 534:Core/Src/main.cpp ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 1254              		.loc 1 534 19 is_stmt 0 view .LVU339
 1255 0008 4FF48273 		mov	r3, #260
 1256 000c 4360     		str	r3, [r0, #4]
 535:Core/Src/main.cpp ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 1257              		.loc 1 535 3 is_stmt 1 view .LVU340
 535:Core/Src/main.cpp ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 1258              		.loc 1 535 24 is_stmt 0 view .LVU341
 1259 000e 0023     		movs	r3, #0
 1260 0010 8360     		str	r3, [r0, #8]
 536:Core/Src/main.cpp ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 1261              		.loc 1 536 3 is_stmt 1 view .LVU342
 536:Core/Src/main.cpp ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 1262              		.loc 1 536 23 is_stmt 0 view .LVU343
 1263 0012 C360     		str	r3, [r0, #12]
 537:Core/Src/main.cpp ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 1264              		.loc 1 537 3 is_stmt 1 view .LVU344
 537:Core/Src/main.cpp ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 1265              		.loc 1 537 26 is_stmt 0 view .LVU345
 1266 0014 0361     		str	r3, [r0, #16]
 538:Core/Src/main.cpp ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 1267              		.loc 1 538 3 is_stmt 1 view .LVU346
ARM GAS  /tmp/ccCbjvan.s 			page 46


 538:Core/Src/main.cpp ****   hspi5.Init.NSS = SPI_NSS_HARD_INPUT;
 1268              		.loc 1 538 23 is_stmt 0 view .LVU347
 1269 0016 4361     		str	r3, [r0, #20]
 539:Core/Src/main.cpp ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1270              		.loc 1 539 3 is_stmt 1 view .LVU348
 539:Core/Src/main.cpp ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1271              		.loc 1 539 18 is_stmt 0 view .LVU349
 1272 0018 8361     		str	r3, [r0, #24]
 540:Core/Src/main.cpp ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1273              		.loc 1 540 3 is_stmt 1 view .LVU350
 540:Core/Src/main.cpp ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1274              		.loc 1 540 32 is_stmt 0 view .LVU351
 1275 001a C361     		str	r3, [r0, #28]
 541:Core/Src/main.cpp ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 1276              		.loc 1 541 3 is_stmt 1 view .LVU352
 541:Core/Src/main.cpp ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 1277              		.loc 1 541 23 is_stmt 0 view .LVU353
 1278 001c 0362     		str	r3, [r0, #32]
 542:Core/Src/main.cpp ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1279              		.loc 1 542 3 is_stmt 1 view .LVU354
 542:Core/Src/main.cpp ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1280              		.loc 1 542 21 is_stmt 0 view .LVU355
 1281 001e 4362     		str	r3, [r0, #36]
 543:Core/Src/main.cpp ****   hspi5.Init.CRCPolynomial = 10;
 1282              		.loc 1 543 3 is_stmt 1 view .LVU356
 543:Core/Src/main.cpp ****   hspi5.Init.CRCPolynomial = 10;
 1283              		.loc 1 543 29 is_stmt 0 view .LVU357
 1284 0020 8362     		str	r3, [r0, #40]
 544:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 1285              		.loc 1 544 3 is_stmt 1 view .LVU358
 544:Core/Src/main.cpp ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 1286              		.loc 1 544 28 is_stmt 0 view .LVU359
 1287 0022 0A23     		movs	r3, #10
 1288 0024 C362     		str	r3, [r0, #44]
 545:Core/Src/main.cpp ****   {
 1289              		.loc 1 545 3 is_stmt 1 view .LVU360
 545:Core/Src/main.cpp ****   {
 1290              		.loc 1 545 19 is_stmt 0 view .LVU361
 1291 0026 FFF7FEFF 		bl	HAL_SPI_Init
 1292              	.LVL58:
 545:Core/Src/main.cpp ****   {
 1293              		.loc 1 545 3 view .LVU362
 1294 002a 00B9     		cbnz	r0, .L82
 553:Core/Src/main.cpp **** 
 1295              		.loc 1 553 1 view .LVU363
 1296 002c 08BD     		pop	{r3, pc}
 1297              	.L82:
 547:Core/Src/main.cpp ****   }
 1298              		.loc 1 547 5 is_stmt 1 view .LVU364
 547:Core/Src/main.cpp ****   }
 1299              		.loc 1 547 18 is_stmt 0 view .LVU365
 1300 002e FFF7FEFF 		bl	Error_Handler
 1301              	.LVL59:
 1302              	.L84:
 1303 0032 00BF     		.align	2
 1304              	.L83:
 1305 0034 00000000 		.word	.LANCHOR20
ARM GAS  /tmp/ccCbjvan.s 			page 47


 1306 0038 00500140 		.word	1073827840
 1307              		.cfi_endproc
 1308              	.LFE1994:
 1309              		.fnend
 1311              		.section	.text._ZL22MX_USB_OTG_FS_PCD_Initv,"ax",%progbits
 1312              		.align	1
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv4-sp-d16
 1318              	_ZL22MX_USB_OTG_FS_PCD_Initv:
 1319              		.fnstart
 1320              	.LFB1998:
 677:Core/Src/main.cpp **** 
 1321              		.loc 1 677 1 is_stmt 1 view -0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 0
 1324              		@ frame_needed = 0, uses_anonymous_args = 0
 1325 0000 08B5     		push	{r3, lr}
 1326              		.save {r3, lr}
 1327              	.LCFI16:
 1328              		.cfi_def_cfa_offset 8
 1329              		.cfi_offset 3, -8
 1330              		.cfi_offset 14, -4
 686:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 1331              		.loc 1 686 3 view .LVU367
 686:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 1332              		.loc 1 686 28 is_stmt 0 view .LVU368
 1333 0002 0B48     		ldr	r0, .L89
 1334 0004 4FF0A043 		mov	r3, #1342177280
 1335 0008 0360     		str	r3, [r0]
 687:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 1336              		.loc 1 687 3 is_stmt 1 view .LVU369
 687:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 1337              		.loc 1 687 38 is_stmt 0 view .LVU370
 1338 000a 0423     		movs	r3, #4
 1339 000c 4360     		str	r3, [r0, #4]
 688:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 1340              		.loc 1 688 3 is_stmt 1 view .LVU371
 688:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 1341              		.loc 1 688 30 is_stmt 0 view .LVU372
 1342 000e 0222     		movs	r2, #2
 1343 0010 C260     		str	r2, [r0, #12]
 689:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1344              		.loc 1 689 3 is_stmt 1 view .LVU373
 689:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 1345              		.loc 1 689 35 is_stmt 0 view .LVU374
 1346 0012 0023     		movs	r3, #0
 1347 0014 0361     		str	r3, [r0, #16]
 690:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 1348              		.loc 1 690 3 is_stmt 1 view .LVU375
 690:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 1349              		.loc 1 690 35 is_stmt 0 view .LVU376
 1350 0016 8261     		str	r2, [r0, #24]
 691:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 1351              		.loc 1 691 3 is_stmt 1 view .LVU377
 691:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
ARM GAS  /tmp/ccCbjvan.s 			page 48


 1352              		.loc 1 691 35 is_stmt 0 view .LVU378
 1353 0018 C361     		str	r3, [r0, #28]
 692:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1354              		.loc 1 692 3 is_stmt 1 view .LVU379
 692:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 1355              		.loc 1 692 41 is_stmt 0 view .LVU380
 1356 001a 0362     		str	r3, [r0, #32]
 693:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 1357              		.loc 1 693 3 is_stmt 1 view .LVU381
 693:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 1358              		.loc 1 693 35 is_stmt 0 view .LVU382
 1359 001c 4362     		str	r3, [r0, #36]
 694:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1360              		.loc 1 694 3 is_stmt 1 view .LVU383
 694:Core/Src/main.cpp ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 1361              		.loc 1 694 44 is_stmt 0 view .LVU384
 1362 001e C362     		str	r3, [r0, #44]
 695:Core/Src/main.cpp ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1363              		.loc 1 695 3 is_stmt 1 view .LVU385
 695:Core/Src/main.cpp ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 1364              		.loc 1 695 42 is_stmt 0 view .LVU386
 1365 0020 0363     		str	r3, [r0, #48]
 696:Core/Src/main.cpp ****   {
 1366              		.loc 1 696 3 is_stmt 1 view .LVU387
 696:Core/Src/main.cpp ****   {
 1367              		.loc 1 696 19 is_stmt 0 view .LVU388
 1368 0022 FFF7FEFF 		bl	HAL_PCD_Init
 1369              	.LVL60:
 696:Core/Src/main.cpp ****   {
 1370              		.loc 1 696 3 view .LVU389
 1371 0026 00B9     		cbnz	r0, .L88
 704:Core/Src/main.cpp **** 
 1372              		.loc 1 704 1 view .LVU390
 1373 0028 08BD     		pop	{r3, pc}
 1374              	.L88:
 698:Core/Src/main.cpp ****   }
 1375              		.loc 1 698 5 is_stmt 1 view .LVU391
 698:Core/Src/main.cpp ****   }
 1376              		.loc 1 698 18 is_stmt 0 view .LVU392
 1377 002a FFF7FEFF 		bl	Error_Handler
 1378              	.LVL61:
 1379              	.L90:
 1380 002e 00BF     		.align	2
 1381              	.L89:
 1382 0030 00000000 		.word	.LANCHOR21
 1383              		.cfi_endproc
 1384              	.LFE1998:
 1385              		.fnend
 1387              		.section	.text._ZL12MX_ADC1_Initv,"ax",%progbits
 1388              		.align	1
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv4-sp-d16
 1394              	_ZL12MX_ADC1_Initv:
 1395              		.fnstart
 1396              	.LFB1986:
ARM GAS  /tmp/ccCbjvan.s 			page 49


 229:Core/Src/main.cpp **** 
 1397              		.loc 1 229 1 is_stmt 1 view -0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 16
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401 0000 00B5     		push	{lr}
 1402              		.save {lr}
 1403              	.LCFI17:
 1404              		.cfi_def_cfa_offset 4
 1405              		.cfi_offset 14, -4
 1406              		.pad #20
 1407 0002 85B0     		sub	sp, sp, #20
 1408              	.LCFI18:
 1409              		.cfi_def_cfa_offset 24
 235:Core/Src/main.cpp **** 
 1410              		.loc 1 235 3 view .LVU394
 235:Core/Src/main.cpp **** 
 1411              		.loc 1 235 26 is_stmt 0 view .LVU395
 1412 0004 0023     		movs	r3, #0
 1413 0006 0093     		str	r3, [sp]
 1414 0008 0193     		str	r3, [sp, #4]
 1415 000a 0293     		str	r3, [sp, #8]
 1416 000c 0393     		str	r3, [sp, #12]
 242:Core/Src/main.cpp ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1417              		.loc 1 242 3 is_stmt 1 view .LVU396
 242:Core/Src/main.cpp ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1418              		.loc 1 242 18 is_stmt 0 view .LVU397
 1419 000e 1348     		ldr	r0, .L97
 1420 0010 134A     		ldr	r2, .L97+4
 1421 0012 0260     		str	r2, [r0]
 243:Core/Src/main.cpp ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1422              		.loc 1 243 3 is_stmt 1 view .LVU398
 243:Core/Src/main.cpp ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1423              		.loc 1 243 29 is_stmt 0 view .LVU399
 1424 0014 4360     		str	r3, [r0, #4]
 244:Core/Src/main.cpp ****   hadc1.Init.ScanConvMode = DISABLE;
 1425              		.loc 1 244 3 is_stmt 1 view .LVU400
 244:Core/Src/main.cpp ****   hadc1.Init.ScanConvMode = DISABLE;
 1426              		.loc 1 244 25 is_stmt 0 view .LVU401
 1427 0016 8360     		str	r3, [r0, #8]
 245:Core/Src/main.cpp ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1428              		.loc 1 245 3 is_stmt 1 view .LVU402
 245:Core/Src/main.cpp ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1429              		.loc 1 245 27 is_stmt 0 view .LVU403
 1430 0018 0361     		str	r3, [r0, #16]
 246:Core/Src/main.cpp ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1431              		.loc 1 246 3 is_stmt 1 view .LVU404
 246:Core/Src/main.cpp ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1432              		.loc 1 246 33 is_stmt 0 view .LVU405
 1433 001a 0376     		strb	r3, [r0, #24]
 247:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1434              		.loc 1 247 3 is_stmt 1 view .LVU406
 247:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1435              		.loc 1 247 36 is_stmt 0 view .LVU407
 1436 001c 80F82030 		strb	r3, [r0, #32]
 248:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1437              		.loc 1 248 3 is_stmt 1 view .LVU408
ARM GAS  /tmp/ccCbjvan.s 			page 50


 248:Core/Src/main.cpp ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1438              		.loc 1 248 35 is_stmt 0 view .LVU409
 1439 0020 C362     		str	r3, [r0, #44]
 249:Core/Src/main.cpp ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1440              		.loc 1 249 3 is_stmt 1 view .LVU410
 249:Core/Src/main.cpp ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1441              		.loc 1 249 31 is_stmt 0 view .LVU411
 1442 0022 104A     		ldr	r2, .L97+8
 1443 0024 8262     		str	r2, [r0, #40]
 250:Core/Src/main.cpp ****   hadc1.Init.NbrOfConversion = 1;
 1444              		.loc 1 250 3 is_stmt 1 view .LVU412
 250:Core/Src/main.cpp ****   hadc1.Init.NbrOfConversion = 1;
 1445              		.loc 1 250 24 is_stmt 0 view .LVU413
 1446 0026 C360     		str	r3, [r0, #12]
 251:Core/Src/main.cpp ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1447              		.loc 1 251 3 is_stmt 1 view .LVU414
 251:Core/Src/main.cpp ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1448              		.loc 1 251 30 is_stmt 0 view .LVU415
 1449 0028 0122     		movs	r2, #1
 1450 002a C261     		str	r2, [r0, #28]
 252:Core/Src/main.cpp ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1451              		.loc 1 252 3 is_stmt 1 view .LVU416
 252:Core/Src/main.cpp ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1452              		.loc 1 252 36 is_stmt 0 view .LVU417
 1453 002c 80F83030 		strb	r3, [r0, #48]
 253:Core/Src/main.cpp ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1454              		.loc 1 253 3 is_stmt 1 view .LVU418
 253:Core/Src/main.cpp ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1455              		.loc 1 253 27 is_stmt 0 view .LVU419
 1456 0030 4261     		str	r2, [r0, #20]
 254:Core/Src/main.cpp ****   {
 1457              		.loc 1 254 3 is_stmt 1 view .LVU420
 254:Core/Src/main.cpp ****   {
 1458              		.loc 1 254 19 is_stmt 0 view .LVU421
 1459 0032 FFF7FEFF 		bl	HAL_ADC_Init
 1460              	.LVL62:
 254:Core/Src/main.cpp ****   {
 1461              		.loc 1 254 3 view .LVU422
 1462 0036 68B9     		cbnz	r0, .L95
 260:Core/Src/main.cpp ****   sConfig.Rank = 1;
 1463              		.loc 1 260 3 is_stmt 1 view .LVU423
 260:Core/Src/main.cpp ****   sConfig.Rank = 1;
 1464              		.loc 1 260 19 is_stmt 0 view .LVU424
 1465 0038 0A23     		movs	r3, #10
 1466 003a 0093     		str	r3, [sp]
 261:Core/Src/main.cpp ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1467              		.loc 1 261 3 is_stmt 1 view .LVU425
 261:Core/Src/main.cpp ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1468              		.loc 1 261 16 is_stmt 0 view .LVU426
 1469 003c 0123     		movs	r3, #1
 1470 003e 0193     		str	r3, [sp, #4]
 262:Core/Src/main.cpp ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1471              		.loc 1 262 3 is_stmt 1 view .LVU427
 262:Core/Src/main.cpp ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1472              		.loc 1 262 24 is_stmt 0 view .LVU428
 1473 0040 0023     		movs	r3, #0
 1474 0042 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccCbjvan.s 			page 51


 263:Core/Src/main.cpp ****   {
 1475              		.loc 1 263 3 is_stmt 1 view .LVU429
 263:Core/Src/main.cpp ****   {
 1476              		.loc 1 263 28 is_stmt 0 view .LVU430
 1477 0044 6946     		mov	r1, sp
 1478 0046 0548     		ldr	r0, .L97
 1479 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1480              	.LVL63:
 263:Core/Src/main.cpp ****   {
 1481              		.loc 1 263 3 view .LVU431
 1482 004c 20B9     		cbnz	r0, .L96
 271:Core/Src/main.cpp **** 
 1483              		.loc 1 271 1 view .LVU432
 1484 004e 05B0     		add	sp, sp, #20
 1485              	.LCFI19:
 1486              		.cfi_remember_state
 1487              		.cfi_def_cfa_offset 4
 1488              		@ sp needed
 1489 0050 5DF804FB 		ldr	pc, [sp], #4
 1490              	.L95:
 1491              	.LCFI20:
 1492              		.cfi_restore_state
 256:Core/Src/main.cpp ****   }
 1493              		.loc 1 256 5 is_stmt 1 view .LVU433
 256:Core/Src/main.cpp ****   }
 1494              		.loc 1 256 18 is_stmt 0 view .LVU434
 1495 0054 FFF7FEFF 		bl	Error_Handler
 1496              	.LVL64:
 1497              	.L96:
 265:Core/Src/main.cpp ****   }
 1498              		.loc 1 265 5 is_stmt 1 view .LVU435
 265:Core/Src/main.cpp ****   }
 1499              		.loc 1 265 18 is_stmt 0 view .LVU436
 1500 0058 FFF7FEFF 		bl	Error_Handler
 1501              	.LVL65:
 1502              	.L98:
 1503              		.align	2
 1504              	.L97:
 1505 005c 00000000 		.word	.LANCHOR5
 1506 0060 00200140 		.word	1073815552
 1507 0064 0100000F 		.word	251658241
 1508              		.cfi_endproc
 1509              	.LFE1986:
 1510              		.fnend
 1512              		.section	.text._ZL13MX_TIM10_Initv,"ax",%progbits
 1513              		.align	1
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	_ZL13MX_TIM10_Initv:
 1520              		.fnstart
 1521              	.LFB1997:
 646:Core/Src/main.cpp **** 
 1522              		.loc 1 646 1 is_stmt 1 view -0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccCbjvan.s 			page 52


 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526 0000 08B5     		push	{r3, lr}
 1527              		.save {r3, lr}
 1528              	.LCFI21:
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 3, -8
 1531              		.cfi_offset 14, -4
 655:Core/Src/main.cpp ****   htim10.Init.Prescaler = 35;
 1532              		.loc 1 655 3 view .LVU438
 655:Core/Src/main.cpp ****   htim10.Init.Prescaler = 35;
 1533              		.loc 1 655 19 is_stmt 0 view .LVU439
 1534 0002 0948     		ldr	r0, .L103
 1535 0004 094B     		ldr	r3, .L103+4
 1536 0006 0360     		str	r3, [r0]
 656:Core/Src/main.cpp ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 1537              		.loc 1 656 3 is_stmt 1 view .LVU440
 656:Core/Src/main.cpp ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 1538              		.loc 1 656 25 is_stmt 0 view .LVU441
 1539 0008 2323     		movs	r3, #35
 1540 000a 4360     		str	r3, [r0, #4]
 657:Core/Src/main.cpp ****   htim10.Init.Period = 65535;
 1541              		.loc 1 657 3 is_stmt 1 view .LVU442
 657:Core/Src/main.cpp ****   htim10.Init.Period = 65535;
 1542              		.loc 1 657 27 is_stmt 0 view .LVU443
 1543 000c 0023     		movs	r3, #0
 1544 000e 8360     		str	r3, [r0, #8]
 658:Core/Src/main.cpp ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1545              		.loc 1 658 3 is_stmt 1 view .LVU444
 658:Core/Src/main.cpp ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1546              		.loc 1 658 22 is_stmt 0 view .LVU445
 1547 0010 4FF6FF72 		movw	r2, #65535
 1548 0014 C260     		str	r2, [r0, #12]
 659:Core/Src/main.cpp ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1549              		.loc 1 659 3 is_stmt 1 view .LVU446
 659:Core/Src/main.cpp ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1550              		.loc 1 659 29 is_stmt 0 view .LVU447
 1551 0016 0361     		str	r3, [r0, #16]
 660:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 1552              		.loc 1 660 3 is_stmt 1 view .LVU448
 660:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 1553              		.loc 1 660 33 is_stmt 0 view .LVU449
 1554 0018 8361     		str	r3, [r0, #24]
 661:Core/Src/main.cpp ****   {
 1555              		.loc 1 661 3 is_stmt 1 view .LVU450
 661:Core/Src/main.cpp ****   {
 1556              		.loc 1 661 24 is_stmt 0 view .LVU451
 1557 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1558              	.LVL66:
 661:Core/Src/main.cpp ****   {
 1559              		.loc 1 661 3 view .LVU452
 1560 001e 00B9     		cbnz	r0, .L102
 669:Core/Src/main.cpp **** 
 1561              		.loc 1 669 1 view .LVU453
 1562 0020 08BD     		pop	{r3, pc}
 1563              	.L102:
 663:Core/Src/main.cpp ****   }
 1564              		.loc 1 663 5 is_stmt 1 view .LVU454
ARM GAS  /tmp/ccCbjvan.s 			page 53


 663:Core/Src/main.cpp ****   }
 1565              		.loc 1 663 18 is_stmt 0 view .LVU455
 1566 0022 FFF7FEFF 		bl	Error_Handler
 1567              	.LVL67:
 1568              	.L104:
 1569 0026 00BF     		.align	2
 1570              	.L103:
 1571 0028 00000000 		.word	.LANCHOR1
 1572 002c 00440140 		.word	1073824768
 1573              		.cfi_endproc
 1574              	.LFE1997:
 1575              		.fnend
 1577              		.section	.text._ZL12MX_TIM5_Initv,"ax",%progbits
 1578              		.align	1
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv4-sp-d16
 1584              	_ZL12MX_TIM5_Initv:
 1585              		.fnstart
 1586              	.LFB1995:
 561:Core/Src/main.cpp **** 
 1587              		.loc 1 561 1 is_stmt 1 view -0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 32
 1590              		@ frame_needed = 0, uses_anonymous_args = 0
 1591 0000 00B5     		push	{lr}
 1592              		.save {lr}
 1593              	.LCFI22:
 1594              		.cfi_def_cfa_offset 4
 1595              		.cfi_offset 14, -4
 1596              		.pad #36
 1597 0002 89B0     		sub	sp, sp, #36
 1598              	.LCFI23:
 1599              		.cfi_def_cfa_offset 40
 567:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1600              		.loc 1 567 3 view .LVU457
 567:Core/Src/main.cpp ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1601              		.loc 1 567 26 is_stmt 0 view .LVU458
 1602 0004 0023     		movs	r3, #0
 1603 0006 0393     		str	r3, [sp, #12]
 1604 0008 0493     		str	r3, [sp, #16]
 1605 000a 0593     		str	r3, [sp, #20]
 1606 000c 0693     		str	r3, [sp, #24]
 1607 000e 0793     		str	r3, [sp, #28]
 568:Core/Src/main.cpp **** 
 1608              		.loc 1 568 3 is_stmt 1 view .LVU459
 568:Core/Src/main.cpp **** 
 1609              		.loc 1 568 27 is_stmt 0 view .LVU460
 1610 0010 0193     		str	r3, [sp, #4]
 1611 0012 0293     		str	r3, [sp, #8]
 573:Core/Src/main.cpp ****   htim5.Init.Prescaler = 0;
 1612              		.loc 1 573 3 is_stmt 1 view .LVU461
 573:Core/Src/main.cpp ****   htim5.Init.Prescaler = 0;
 1613              		.loc 1 573 18 is_stmt 0 view .LVU462
 1614 0014 1248     		ldr	r0, .L113
 1615 0016 134A     		ldr	r2, .L113+4
ARM GAS  /tmp/ccCbjvan.s 			page 54


 1616 0018 0260     		str	r2, [r0]
 574:Core/Src/main.cpp ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1617              		.loc 1 574 3 is_stmt 1 view .LVU463
 574:Core/Src/main.cpp ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1618              		.loc 1 574 24 is_stmt 0 view .LVU464
 1619 001a 4360     		str	r3, [r0, #4]
 575:Core/Src/main.cpp ****   htim5.Init.Period = 4294967295;
 1620              		.loc 1 575 3 is_stmt 1 view .LVU465
 575:Core/Src/main.cpp ****   htim5.Init.Period = 4294967295;
 1621              		.loc 1 575 26 is_stmt 0 view .LVU466
 1622 001c 8360     		str	r3, [r0, #8]
 576:Core/Src/main.cpp ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1623              		.loc 1 576 3 is_stmt 1 view .LVU467
 576:Core/Src/main.cpp ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1624              		.loc 1 576 21 is_stmt 0 view .LVU468
 1625 001e 4FF0FF32 		mov	r2, #-1
 1626 0022 C260     		str	r2, [r0, #12]
 577:Core/Src/main.cpp ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1627              		.loc 1 577 3 is_stmt 1 view .LVU469
 577:Core/Src/main.cpp ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1628              		.loc 1 577 28 is_stmt 0 view .LVU470
 1629 0024 0361     		str	r3, [r0, #16]
 578:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1630              		.loc 1 578 3 is_stmt 1 view .LVU471
 578:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1631              		.loc 1 578 32 is_stmt 0 view .LVU472
 1632 0026 8361     		str	r3, [r0, #24]
 579:Core/Src/main.cpp ****   {
 1633              		.loc 1 579 3 is_stmt 1 view .LVU473
 579:Core/Src/main.cpp ****   {
 1634              		.loc 1 579 24 is_stmt 0 view .LVU474
 1635 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1636              	.LVL68:
 579:Core/Src/main.cpp ****   {
 1637              		.loc 1 579 3 view .LVU475
 1638 002c 90B9     		cbnz	r0, .L110
 583:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 1639              		.loc 1 583 3 is_stmt 1 view .LVU476
 583:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 1640              		.loc 1 583 26 is_stmt 0 view .LVU477
 1641 002e 0023     		movs	r3, #0
 1642 0030 0393     		str	r3, [sp, #12]
 584:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim5, &sSlaveConfig) != HAL_OK)
 1643              		.loc 1 584 3 is_stmt 1 view .LVU478
 584:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim5, &sSlaveConfig) != HAL_OK)
 1644              		.loc 1 584 29 is_stmt 0 view .LVU479
 1645 0032 0493     		str	r3, [sp, #16]
 585:Core/Src/main.cpp ****   {
 1646              		.loc 1 585 3 is_stmt 1 view .LVU480
 585:Core/Src/main.cpp ****   {
 1647              		.loc 1 585 33 is_stmt 0 view .LVU481
 1648 0034 03A9     		add	r1, sp, #12
 1649 0036 0A48     		ldr	r0, .L113
 1650 0038 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 1651              	.LVL69:
 585:Core/Src/main.cpp ****   {
 1652              		.loc 1 585 3 view .LVU482
ARM GAS  /tmp/ccCbjvan.s 			page 55


 1653 003c 60B9     		cbnz	r0, .L111
 589:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1654              		.loc 1 589 3 is_stmt 1 view .LVU483
 589:Core/Src/main.cpp ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1655              		.loc 1 589 37 is_stmt 0 view .LVU484
 1656 003e 0023     		movs	r3, #0
 1657 0040 0193     		str	r3, [sp, #4]
 590:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1658              		.loc 1 590 3 is_stmt 1 view .LVU485
 590:Core/Src/main.cpp ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1659              		.loc 1 590 33 is_stmt 0 view .LVU486
 1660 0042 0293     		str	r3, [sp, #8]
 591:Core/Src/main.cpp ****   {
 1661              		.loc 1 591 3 is_stmt 1 view .LVU487
 591:Core/Src/main.cpp ****   {
 1662              		.loc 1 591 44 is_stmt 0 view .LVU488
 1663 0044 01A9     		add	r1, sp, #4
 1664 0046 0648     		ldr	r0, .L113
 1665 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1666              	.LVL70:
 591:Core/Src/main.cpp ****   {
 1667              		.loc 1 591 3 view .LVU489
 1668 004c 30B9     		cbnz	r0, .L112
 599:Core/Src/main.cpp **** 
 1669              		.loc 1 599 1 view .LVU490
 1670 004e 09B0     		add	sp, sp, #36
 1671              	.LCFI24:
 1672              		.cfi_remember_state
 1673              		.cfi_def_cfa_offset 4
 1674              		@ sp needed
 1675 0050 5DF804FB 		ldr	pc, [sp], #4
 1676              	.L110:
 1677              	.LCFI25:
 1678              		.cfi_restore_state
 581:Core/Src/main.cpp ****   }
 1679              		.loc 1 581 5 is_stmt 1 view .LVU491
 581:Core/Src/main.cpp ****   }
 1680              		.loc 1 581 18 is_stmt 0 view .LVU492
 1681 0054 FFF7FEFF 		bl	Error_Handler
 1682              	.LVL71:
 1683              	.L111:
 587:Core/Src/main.cpp ****   }
 1684              		.loc 1 587 5 is_stmt 1 view .LVU493
 587:Core/Src/main.cpp ****   }
 1685              		.loc 1 587 18 is_stmt 0 view .LVU494
 1686 0058 FFF7FEFF 		bl	Error_Handler
 1687              	.LVL72:
 1688              	.L112:
 593:Core/Src/main.cpp ****   }
 1689              		.loc 1 593 5 is_stmt 1 view .LVU495
 593:Core/Src/main.cpp ****   }
 1690              		.loc 1 593 18 is_stmt 0 view .LVU496
 1691 005c FFF7FEFF 		bl	Error_Handler
 1692              	.LVL73:
 1693              	.L114:
 1694              		.align	2
 1695              	.L113:
ARM GAS  /tmp/ccCbjvan.s 			page 56


 1696 0060 00000000 		.word	.LANCHOR22
 1697 0064 000C0040 		.word	1073744896
 1698              		.cfi_endproc
 1699              	.LFE1995:
 1700              		.fnend
 1702              		.section	.text._ZL12MX_TIM9_Initv,"ax",%progbits
 1703              		.align	1
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu fpv4-sp-d16
 1709              	_ZL12MX_TIM9_Initv:
 1710              		.fnstart
 1711              	.LFB1996:
 607:Core/Src/main.cpp **** 
 1712              		.loc 1 607 1 is_stmt 1 view -0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 24
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716 0000 00B5     		push	{lr}
 1717              		.save {lr}
 1718              	.LCFI26:
 1719              		.cfi_def_cfa_offset 4
 1720              		.cfi_offset 14, -4
 1721              		.pad #28
 1722 0002 87B0     		sub	sp, sp, #28
 1723              	.LCFI27:
 1724              		.cfi_def_cfa_offset 32
 613:Core/Src/main.cpp **** 
 1725              		.loc 1 613 3 view .LVU498
 613:Core/Src/main.cpp **** 
 1726              		.loc 1 613 26 is_stmt 0 view .LVU499
 1727 0004 0023     		movs	r3, #0
 1728 0006 0193     		str	r3, [sp, #4]
 1729 0008 0293     		str	r3, [sp, #8]
 1730 000a 0393     		str	r3, [sp, #12]
 1731 000c 0493     		str	r3, [sp, #16]
 1732 000e 0593     		str	r3, [sp, #20]
 618:Core/Src/main.cpp ****   htim9.Init.Prescaler = 0;
 1733              		.loc 1 618 3 is_stmt 1 view .LVU500
 618:Core/Src/main.cpp ****   htim9.Init.Prescaler = 0;
 1734              		.loc 1 618 18 is_stmt 0 view .LVU501
 1735 0010 0D48     		ldr	r0, .L121
 1736 0012 0E4A     		ldr	r2, .L121+4
 1737 0014 0260     		str	r2, [r0]
 619:Core/Src/main.cpp ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 1738              		.loc 1 619 3 is_stmt 1 view .LVU502
 619:Core/Src/main.cpp ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 1739              		.loc 1 619 24 is_stmt 0 view .LVU503
 1740 0016 4360     		str	r3, [r0, #4]
 620:Core/Src/main.cpp ****   htim9.Init.Period = 65535;
 1741              		.loc 1 620 3 is_stmt 1 view .LVU504
 620:Core/Src/main.cpp ****   htim9.Init.Period = 65535;
 1742              		.loc 1 620 26 is_stmt 0 view .LVU505
 1743 0018 8360     		str	r3, [r0, #8]
 621:Core/Src/main.cpp ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1744              		.loc 1 621 3 is_stmt 1 view .LVU506
ARM GAS  /tmp/ccCbjvan.s 			page 57


 621:Core/Src/main.cpp ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1745              		.loc 1 621 21 is_stmt 0 view .LVU507
 1746 001a 4FF6FF72 		movw	r2, #65535
 1747 001e C260     		str	r2, [r0, #12]
 622:Core/Src/main.cpp ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1748              		.loc 1 622 3 is_stmt 1 view .LVU508
 622:Core/Src/main.cpp ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1749              		.loc 1 622 28 is_stmt 0 view .LVU509
 1750 0020 0361     		str	r3, [r0, #16]
 623:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 1751              		.loc 1 623 3 is_stmt 1 view .LVU510
 623:Core/Src/main.cpp ****   if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 1752              		.loc 1 623 32 is_stmt 0 view .LVU511
 1753 0022 8361     		str	r3, [r0, #24]
 624:Core/Src/main.cpp ****   {
 1754              		.loc 1 624 3 is_stmt 1 view .LVU512
 624:Core/Src/main.cpp ****   {
 1755              		.loc 1 624 24 is_stmt 0 view .LVU513
 1756 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1757              	.LVL74:
 624:Core/Src/main.cpp ****   {
 1758              		.loc 1 624 3 view .LVU514
 1759 0028 50B9     		cbnz	r0, .L119
 628:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 1760              		.loc 1 628 3 is_stmt 1 view .LVU515
 628:Core/Src/main.cpp ****   sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 1761              		.loc 1 628 26 is_stmt 0 view .LVU516
 1762 002a 0023     		movs	r3, #0
 1763 002c 0193     		str	r3, [sp, #4]
 629:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim9, &sSlaveConfig) != HAL_OK)
 1764              		.loc 1 629 3 is_stmt 1 view .LVU517
 629:Core/Src/main.cpp ****   if (HAL_TIM_SlaveConfigSynchro(&htim9, &sSlaveConfig) != HAL_OK)
 1765              		.loc 1 629 29 is_stmt 0 view .LVU518
 1766 002e 0293     		str	r3, [sp, #8]
 630:Core/Src/main.cpp ****   {
 1767              		.loc 1 630 3 is_stmt 1 view .LVU519
 630:Core/Src/main.cpp ****   {
 1768              		.loc 1 630 33 is_stmt 0 view .LVU520
 1769 0030 01A9     		add	r1, sp, #4
 1770 0032 0548     		ldr	r0, .L121
 1771 0034 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 1772              	.LVL75:
 630:Core/Src/main.cpp ****   {
 1773              		.loc 1 630 3 view .LVU521
 1774 0038 20B9     		cbnz	r0, .L120
 638:Core/Src/main.cpp **** 
 1775              		.loc 1 638 1 view .LVU522
 1776 003a 07B0     		add	sp, sp, #28
 1777              	.LCFI28:
 1778              		.cfi_remember_state
 1779              		.cfi_def_cfa_offset 4
 1780              		@ sp needed
 1781 003c 5DF804FB 		ldr	pc, [sp], #4
 1782              	.L119:
 1783              	.LCFI29:
 1784              		.cfi_restore_state
 626:Core/Src/main.cpp ****   }
ARM GAS  /tmp/ccCbjvan.s 			page 58


 1785              		.loc 1 626 5 is_stmt 1 view .LVU523
 626:Core/Src/main.cpp ****   }
 1786              		.loc 1 626 18 is_stmt 0 view .LVU524
 1787 0040 FFF7FEFF 		bl	Error_Handler
 1788              	.LVL76:
 1789              	.L120:
 632:Core/Src/main.cpp ****   }
 1790              		.loc 1 632 5 is_stmt 1 view .LVU525
 632:Core/Src/main.cpp ****   }
 1791              		.loc 1 632 18 is_stmt 0 view .LVU526
 1792 0044 FFF7FEFF 		bl	Error_Handler
 1793              	.LVL77:
 1794              	.L122:
 1795              		.align	2
 1796              	.L121:
 1797 0048 00000000 		.word	.LANCHOR23
 1798 004c 00400140 		.word	1073823744
 1799              		.cfi_endproc
 1800              	.LFE1996:
 1801              		.fnend
 1803              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 1804              		.align	1
 1805              		.global	_Z18SystemClock_Configv
 1806              		.syntax unified
 1807              		.thumb
 1808              		.thumb_func
 1809              		.fpu fpv4-sp-d16
 1811              	_Z18SystemClock_Configv:
 1812              		.fnstart
 1813              	.LFB1985:
 176:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1814              		.loc 1 176 1 is_stmt 1 view -0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 104
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 00B5     		push	{lr}
 1819              		.save {lr}
 1820              	.LCFI30:
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 14, -4
 1823              		.pad #108
 1824 0002 9BB0     		sub	sp, sp, #108
 1825              	.LCFI31:
 1826              		.cfi_def_cfa_offset 112
 177:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1827              		.loc 1 177 3 view .LVU528
 177:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1828              		.loc 1 177 22 is_stmt 0 view .LVU529
 1829 0004 3022     		movs	r2, #48
 1830 0006 0021     		movs	r1, #0
 1831 0008 0EA8     		add	r0, sp, #56
 1832 000a FFF7FEFF 		bl	memset
 1833              	.LVL78:
 178:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1834              		.loc 1 178 3 is_stmt 1 view .LVU530
 178:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 1835              		.loc 1 178 22 is_stmt 0 view .LVU531
ARM GAS  /tmp/ccCbjvan.s 			page 59


 1836 000e 0023     		movs	r3, #0
 1837 0010 0993     		str	r3, [sp, #36]
 1838 0012 0A93     		str	r3, [sp, #40]
 1839 0014 0B93     		str	r3, [sp, #44]
 1840 0016 0C93     		str	r3, [sp, #48]
 1841 0018 0D93     		str	r3, [sp, #52]
 179:Core/Src/main.cpp **** 
 1842              		.loc 1 179 3 is_stmt 1 view .LVU532
 179:Core/Src/main.cpp **** 
 1843              		.loc 1 179 28 is_stmt 0 view .LVU533
 1844 001a 0393     		str	r3, [sp, #12]
 1845 001c 0493     		str	r3, [sp, #16]
 1846 001e 0593     		str	r3, [sp, #20]
 1847 0020 0693     		str	r3, [sp, #24]
 1848 0022 0793     		str	r3, [sp, #28]
 1849 0024 0893     		str	r3, [sp, #32]
 183:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1850              		.loc 1 183 3 is_stmt 1 view .LVU534
 1851              	.LBB12:
 183:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1852              		.loc 1 183 3 view .LVU535
 1853 0026 0193     		str	r3, [sp, #4]
 183:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1854              		.loc 1 183 3 view .LVU536
 1855 0028 264A     		ldr	r2, .L131
 1856 002a 116C     		ldr	r1, [r2, #64]
 1857 002c 41F08051 		orr	r1, r1, #268435456
 1858 0030 1164     		str	r1, [r2, #64]
 183:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1859              		.loc 1 183 3 view .LVU537
 1860 0032 126C     		ldr	r2, [r2, #64]
 1861 0034 02F08052 		and	r2, r2, #268435456
 1862 0038 0192     		str	r2, [sp, #4]
 183:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1863              		.loc 1 183 3 view .LVU538
 1864 003a 019A     		ldr	r2, [sp, #4]
 1865              	.LBE12:
 184:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 1866              		.loc 1 184 3 view .LVU539
 1867              	.LBB13:
 184:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 1868              		.loc 1 184 3 view .LVU540
 1869 003c 0293     		str	r3, [sp, #8]
 184:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 1870              		.loc 1 184 3 view .LVU541
 1871 003e 224B     		ldr	r3, .L131+4
 1872 0040 1A68     		ldr	r2, [r3]
 1873 0042 42F44042 		orr	r2, r2, #49152
 1874 0046 1A60     		str	r2, [r3]
 184:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 1875              		.loc 1 184 3 view .LVU542
 1876 0048 1B68     		ldr	r3, [r3]
 1877 004a 03F44043 		and	r3, r3, #49152
 1878 004e 0293     		str	r3, [sp, #8]
 184:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 1879              		.loc 1 184 3 view .LVU543
 1880 0050 029B     		ldr	r3, [sp, #8]
ARM GAS  /tmp/ccCbjvan.s 			page 60


 1881              	.LBE13:
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1882              		.loc 1 188 3 view .LVU544
 188:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1883              		.loc 1 188 36 is_stmt 0 view .LVU545
 1884 0052 0123     		movs	r3, #1
 1885 0054 0E93     		str	r3, [sp, #56]
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1886              		.loc 1 189 3 is_stmt 1 view .LVU546
 189:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1887              		.loc 1 189 30 is_stmt 0 view .LVU547
 1888 0056 4FF48033 		mov	r3, #65536
 1889 005a 0F93     		str	r3, [sp, #60]
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1890              		.loc 1 190 3 is_stmt 1 view .LVU548
 190:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1891              		.loc 1 190 34 is_stmt 0 view .LVU549
 1892 005c 0223     		movs	r3, #2
 1893 005e 1493     		str	r3, [sp, #80]
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1894              		.loc 1 191 3 is_stmt 1 view .LVU550
 191:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1895              		.loc 1 191 35 is_stmt 0 view .LVU551
 1896 0060 4FF48002 		mov	r2, #4194304
 1897 0064 1592     		str	r2, [sp, #84]
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1898              		.loc 1 192 3 is_stmt 1 view .LVU552
 192:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1899              		.loc 1 192 30 is_stmt 0 view .LVU553
 1900 0066 0422     		movs	r2, #4
 1901 0068 1692     		str	r2, [sp, #88]
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1902              		.loc 1 193 3 is_stmt 1 view .LVU554
 193:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1903              		.loc 1 193 30 is_stmt 0 view .LVU555
 1904 006a 4822     		movs	r2, #72
 1905 006c 1792     		str	r2, [sp, #92]
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1906              		.loc 1 194 3 is_stmt 1 view .LVU556
 194:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1907              		.loc 1 194 30 is_stmt 0 view .LVU557
 1908 006e 1893     		str	r3, [sp, #96]
 195:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1909              		.loc 1 195 3 is_stmt 1 view .LVU558
 195:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1910              		.loc 1 195 30 is_stmt 0 view .LVU559
 1911 0070 0323     		movs	r3, #3
 1912 0072 1993     		str	r3, [sp, #100]
 196:Core/Src/main.cpp ****   {
 1913              		.loc 1 196 3 is_stmt 1 view .LVU560
 196:Core/Src/main.cpp ****   {
 1914              		.loc 1 196 24 is_stmt 0 view .LVU561
 1915 0074 0EA8     		add	r0, sp, #56
 1916 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1917              	.LVL79:
 196:Core/Src/main.cpp ****   {
 1918              		.loc 1 196 3 view .LVU562
ARM GAS  /tmp/ccCbjvan.s 			page 61


 1919 007a E0B9     		cbnz	r0, .L128
 202:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1920              		.loc 1 202 3 is_stmt 1 view .LVU563
 202:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1921              		.loc 1 202 31 is_stmt 0 view .LVU564
 1922 007c 0F23     		movs	r3, #15
 1923 007e 0993     		str	r3, [sp, #36]
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1924              		.loc 1 204 3 is_stmt 1 view .LVU565
 204:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 1925              		.loc 1 204 34 is_stmt 0 view .LVU566
 1926 0080 0223     		movs	r3, #2
 1927 0082 0A93     		str	r3, [sp, #40]
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1928              		.loc 1 205 3 is_stmt 1 view .LVU567
 205:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1929              		.loc 1 205 35 is_stmt 0 view .LVU568
 1930 0084 8023     		movs	r3, #128
 1931 0086 0B93     		str	r3, [sp, #44]
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1932              		.loc 1 206 3 is_stmt 1 view .LVU569
 206:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1933              		.loc 1 206 36 is_stmt 0 view .LVU570
 1934 0088 0023     		movs	r3, #0
 1935 008a 0C93     		str	r3, [sp, #48]
 207:Core/Src/main.cpp **** 
 1936              		.loc 1 207 3 is_stmt 1 view .LVU571
 207:Core/Src/main.cpp **** 
 1937              		.loc 1 207 36 is_stmt 0 view .LVU572
 1938 008c 0D93     		str	r3, [sp, #52]
 209:Core/Src/main.cpp ****   {
 1939              		.loc 1 209 3 is_stmt 1 view .LVU573
 209:Core/Src/main.cpp ****   {
 1940              		.loc 1 209 26 is_stmt 0 view .LVU574
 1941 008e 0121     		movs	r1, #1
 1942 0090 09A8     		add	r0, sp, #36
 1943 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1944              	.LVL80:
 209:Core/Src/main.cpp ****   {
 1945              		.loc 1 209 3 view .LVU575
 1946 0096 80B9     		cbnz	r0, .L129
 213:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 1947              		.loc 1 213 3 is_stmt 1 view .LVU576
 213:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 50;
 1948              		.loc 1 213 44 is_stmt 0 view .LVU577
 1949 0098 0123     		movs	r3, #1
 1950 009a 0393     		str	r3, [sp, #12]
 214:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SM = 4;
 1951              		.loc 1 214 3 is_stmt 1 view .LVU578
 214:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SM = 4;
 1952              		.loc 1 214 38 is_stmt 0 view .LVU579
 1953 009c 3223     		movs	r3, #50
 1954 009e 0593     		str	r3, [sp, #20]
 215:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 1955              		.loc 1 215 3 is_stmt 1 view .LVU580
 215:Core/Src/main.cpp ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 1956              		.loc 1 215 38 is_stmt 0 view .LVU581
ARM GAS  /tmp/ccCbjvan.s 			page 62


 1957 00a0 0423     		movs	r3, #4
 1958 00a2 0493     		str	r3, [sp, #16]
 216:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1959              		.loc 1 216 3 is_stmt 1 view .LVU582
 216:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1960              		.loc 1 216 38 is_stmt 0 view .LVU583
 1961 00a4 0223     		movs	r3, #2
 1962 00a6 0693     		str	r3, [sp, #24]
 217:Core/Src/main.cpp ****   {
 1963              		.loc 1 217 3 is_stmt 1 view .LVU584
 217:Core/Src/main.cpp ****   {
 1964              		.loc 1 217 32 is_stmt 0 view .LVU585
 1965 00a8 03A8     		add	r0, sp, #12
 1966 00aa FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1967              	.LVL81:
 217:Core/Src/main.cpp ****   {
 1968              		.loc 1 217 3 view .LVU586
 1969 00ae 30B9     		cbnz	r0, .L130
 221:Core/Src/main.cpp **** 
 1970              		.loc 1 221 1 view .LVU587
 1971 00b0 1BB0     		add	sp, sp, #108
 1972              	.LCFI32:
 1973              		.cfi_remember_state
 1974              		.cfi_def_cfa_offset 4
 1975              		@ sp needed
 1976 00b2 5DF804FB 		ldr	pc, [sp], #4
 1977              	.L128:
 1978              	.LCFI33:
 1979              		.cfi_restore_state
 198:Core/Src/main.cpp ****   }
 1980              		.loc 1 198 5 is_stmt 1 view .LVU588
 198:Core/Src/main.cpp ****   }
 1981              		.loc 1 198 18 is_stmt 0 view .LVU589
 1982 00b6 FFF7FEFF 		bl	Error_Handler
 1983              	.LVL82:
 1984              	.L129:
 211:Core/Src/main.cpp ****   }
 1985              		.loc 1 211 5 is_stmt 1 view .LVU590
 211:Core/Src/main.cpp ****   }
 1986              		.loc 1 211 18 is_stmt 0 view .LVU591
 1987 00ba FFF7FEFF 		bl	Error_Handler
 1988              	.LVL83:
 1989              	.L130:
 219:Core/Src/main.cpp ****   }
 1990              		.loc 1 219 5 is_stmt 1 view .LVU592
 219:Core/Src/main.cpp ****   }
 1991              		.loc 1 219 18 is_stmt 0 view .LVU593
 1992 00be FFF7FEFF 		bl	Error_Handler
 1993              	.LVL84:
 1994              	.L132:
 1995 00c2 00BF     		.align	2
 1996              	.L131:
 1997 00c4 00380240 		.word	1073887232
 1998 00c8 00700040 		.word	1073770496
 1999              		.cfi_endproc
 2000              	.LFE1985:
 2001              		.fnend
ARM GAS  /tmp/ccCbjvan.s 			page 63


 2003              		.section	.text.main,"ax",%progbits
 2004              		.align	1
 2005              		.global	main
 2006              		.syntax unified
 2007              		.thumb
 2008              		.thumb_func
 2009              		.fpu fpv4-sp-d16
 2011              	main:
 2012              		.fnstart
 2013              	.LFB1984:
 114:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 2014              		.loc 1 114 1 is_stmt 1 view -0
 2015              		.cfi_startproc
 2016              		@ args = 0, pretend = 0, frame = 0
 2017              		@ frame_needed = 0, uses_anonymous_args = 0
 2018 0000 08B5     		push	{r3, lr}
 2019              		.save {r3, lr}
 2020              	.LCFI34:
 2021              		.cfi_def_cfa_offset 8
 2022              		.cfi_offset 3, -8
 2023              		.cfi_offset 14, -4
 122:Core/Src/main.cpp **** 
 2024              		.loc 1 122 3 view .LVU595
 122:Core/Src/main.cpp **** 
 2025              		.loc 1 122 11 is_stmt 0 view .LVU596
 2026 0002 FFF7FEFF 		bl	HAL_Init
 2027              	.LVL85:
 129:Core/Src/main.cpp **** 
 2028              		.loc 1 129 3 is_stmt 1 view .LVU597
 129:Core/Src/main.cpp **** 
 2029              		.loc 1 129 21 is_stmt 0 view .LVU598
 2030 0006 FFF7FEFF 		bl	_Z18SystemClock_Configv
 2031              	.LVL86:
 136:Core/Src/main.cpp ****   MX_I2C1_Init();
 2032              		.loc 1 136 3 is_stmt 1 view .LVU599
 136:Core/Src/main.cpp ****   MX_I2C1_Init();
 2033              		.loc 1 136 15 is_stmt 0 view .LVU600
 2034 000a FFF7FEFF 		bl	_ZL12MX_GPIO_Initv
 2035              	.LVL87:
 137:Core/Src/main.cpp ****   MX_I2C3_Init();
 2036              		.loc 1 137 3 is_stmt 1 view .LVU601
 137:Core/Src/main.cpp ****   MX_I2C3_Init();
 2037              		.loc 1 137 15 is_stmt 0 view .LVU602
 2038 000e FFF7FEFF 		bl	_ZL12MX_I2C1_Initv
 2039              	.LVL88:
 138:Core/Src/main.cpp ****   MX_I2S2_Init();
 2040              		.loc 1 138 3 is_stmt 1 view .LVU603
 138:Core/Src/main.cpp ****   MX_I2S2_Init();
 2041              		.loc 1 138 15 is_stmt 0 view .LVU604
 2042 0012 FFF7FEFF 		bl	_ZL12MX_I2C3_Initv
 2043              	.LVL89:
 139:Core/Src/main.cpp ****   MX_I2S3_Init();
 2044              		.loc 1 139 3 is_stmt 1 view .LVU605
 139:Core/Src/main.cpp ****   MX_I2S3_Init();
 2045              		.loc 1 139 15 is_stmt 0 view .LVU606
 2046 0016 FFF7FEFF 		bl	_ZL12MX_I2S2_Initv
 2047              	.LVL90:
ARM GAS  /tmp/ccCbjvan.s 			page 64


 140:Core/Src/main.cpp ****   MX_I2S4_Init();
 2048              		.loc 1 140 3 is_stmt 1 view .LVU607
 140:Core/Src/main.cpp ****   MX_I2S4_Init();
 2049              		.loc 1 140 15 is_stmt 0 view .LVU608
 2050 001a FFF7FEFF 		bl	_ZL12MX_I2S3_Initv
 2051              	.LVL91:
 141:Core/Src/main.cpp ****   MX_SDIO_SD_Init();
 2052              		.loc 1 141 3 is_stmt 1 view .LVU609
 141:Core/Src/main.cpp ****   MX_SDIO_SD_Init();
 2053              		.loc 1 141 15 is_stmt 0 view .LVU610
 2054 001e FFF7FEFF 		bl	_ZL12MX_I2S4_Initv
 2055              	.LVL92:
 142:Core/Src/main.cpp ****   MX_SPI1_Init();
 2056              		.loc 1 142 3 is_stmt 1 view .LVU611
 142:Core/Src/main.cpp ****   MX_SPI1_Init();
 2057              		.loc 1 142 18 is_stmt 0 view .LVU612
 2058 0022 FFF7FEFF 		bl	_ZL15MX_SDIO_SD_Initv
 2059              	.LVL93:
 143:Core/Src/main.cpp ****   MX_SPI5_Init();
 2060              		.loc 1 143 3 is_stmt 1 view .LVU613
 143:Core/Src/main.cpp ****   MX_SPI5_Init();
 2061              		.loc 1 143 15 is_stmt 0 view .LVU614
 2062 0026 FFF7FEFF 		bl	_ZL12MX_SPI1_Initv
 2063              	.LVL94:
 144:Core/Src/main.cpp ****   MX_USB_OTG_FS_PCD_Init();
 2064              		.loc 1 144 3 is_stmt 1 view .LVU615
 144:Core/Src/main.cpp ****   MX_USB_OTG_FS_PCD_Init();
 2065              		.loc 1 144 15 is_stmt 0 view .LVU616
 2066 002a FFF7FEFF 		bl	_ZL12MX_SPI5_Initv
 2067              	.LVL95:
 145:Core/Src/main.cpp ****   MX_ADC1_Init();
 2068              		.loc 1 145 3 is_stmt 1 view .LVU617
 145:Core/Src/main.cpp ****   MX_ADC1_Init();
 2069              		.loc 1 145 25 is_stmt 0 view .LVU618
 2070 002e FFF7FEFF 		bl	_ZL22MX_USB_OTG_FS_PCD_Initv
 2071              	.LVL96:
 146:Core/Src/main.cpp ****   MX_TIM10_Init();
 2072              		.loc 1 146 3 is_stmt 1 view .LVU619
 146:Core/Src/main.cpp ****   MX_TIM10_Init();
 2073              		.loc 1 146 15 is_stmt 0 view .LVU620
 2074 0032 FFF7FEFF 		bl	_ZL12MX_ADC1_Initv
 2075              	.LVL97:
 147:Core/Src/main.cpp ****   MX_TIM5_Init();
 2076              		.loc 1 147 3 is_stmt 1 view .LVU621
 147:Core/Src/main.cpp ****   MX_TIM5_Init();
 2077              		.loc 1 147 16 is_stmt 0 view .LVU622
 2078 0036 FFF7FEFF 		bl	_ZL13MX_TIM10_Initv
 2079              	.LVL98:
 148:Core/Src/main.cpp ****   MX_TIM9_Init();
 2080              		.loc 1 148 3 is_stmt 1 view .LVU623
 148:Core/Src/main.cpp ****   MX_TIM9_Init();
 2081              		.loc 1 148 15 is_stmt 0 view .LVU624
 2082 003a FFF7FEFF 		bl	_ZL12MX_TIM5_Initv
 2083              	.LVL99:
 149:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 2084              		.loc 1 149 3 is_stmt 1 view .LVU625
 149:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccCbjvan.s 			page 65


 2085              		.loc 1 149 15 is_stmt 0 view .LVU626
 2086 003e FFF7FEFF 		bl	_ZL12MX_TIM9_Initv
 2087              	.LVL100:
 151:Core/Src/main.cpp ****   oled1.init();
 2088              		.loc 1 151 3 is_stmt 1 view .LVU627
 151:Core/Src/main.cpp ****   oled1.init();
 2089              		.loc 1 151 26 is_stmt 0 view .LVU628
 2090 0042 DFED080A 		vldr.32	s1, .L136
 2091 0046 9FED080A 		vldr.32	s0, .L136+4
 2092 004a 0848     		ldr	r0, .L136+8
 2093 004c FFF7FEFF 		bl	_ZN3adc15adc_setEquationEff
 2094              	.LVL101:
 152:Core/Src/main.cpp ****   radio_pd.init();
 2095              		.loc 1 152 3 is_stmt 1 view .LVU629
 152:Core/Src/main.cpp ****   radio_pd.init();
 2096              		.loc 1 152 13 is_stmt 0 view .LVU630
 2097 0050 0748     		ldr	r0, .L136+12
 2098 0052 FFF7FEFF 		bl	_ZN4oled4initEv
 2099              	.LVL102:
 153:Core/Src/main.cpp ****   radio_ptt.init();
 2100              		.loc 1 153 3 is_stmt 1 view .LVU631
 153:Core/Src/main.cpp ****   radio_ptt.init();
 2101              		.loc 1 153 16 is_stmt 0 view .LVU632
 2102 0056 0748     		ldr	r0, .L136+16
 2103 0058 FFF7FEFF 		bl	_ZN3pin4initEv
 2104              	.LVL103:
 154:Core/Src/main.cpp ****   
 2105              		.loc 1 154 3 is_stmt 1 view .LVU633
 154:Core/Src/main.cpp ****   
 2106              		.loc 1 154 17 is_stmt 0 view .LVU634
 2107 005c 0648     		ldr	r0, .L136+20
 2108 005e FFF7FEFF 		bl	_ZN3pin4initEv
 2109              	.LVL104:
 2110              	.L134:
 160:Core/Src/main.cpp ****   {
 2111              		.loc 1 160 3 is_stmt 1 discriminator 1 view .LVU635
 160:Core/Src/main.cpp ****   {
 2112              		.loc 1 160 3 discriminator 1 view .LVU636
 2113 0062 FEE7     		b	.L134
 2114              	.L137:
 2115              		.align	2
 2116              	.L136:
 2117 0064 00000000 		.word	0
 2118 0068 3333D33A 		.word	986919731
 2119 006c 00000000 		.word	.LANCHOR6
 2120 0070 00000000 		.word	.LANCHOR3
 2121 0074 00000000 		.word	.LANCHOR8
 2122 0078 00000000 		.word	.LANCHOR7
 2123              		.cfi_endproc
 2124              	.LFE1984:
 2125              		.fnend
 2127              		.section	.text._GLOBAL__sub_I_hadc1,"ax",%progbits
 2128              		.align	1
 2129              		.syntax unified
 2130              		.thumb
 2131              		.thumb_func
 2132              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccCbjvan.s 			page 66


 2134              	_GLOBAL__sub_I_hadc1:
 2135              		.fnstart
 2136              	.LFB2484:
 2137              		.loc 1 847 1 view -0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141 0000 08B5     		push	{r3, lr}
 2142              	.LCFI35:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 3, -8
 2145              		.cfi_offset 14, -4
 2146              		.loc 1 847 1 is_stmt 0 view .LVU638
 2147 0002 4FF6FF71 		movw	r1, #65535
 2148 0006 0120     		movs	r0, #1
 2149 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2150              	.LVL105:
 2151 000c 08BD     		pop	{r3, pc}
 2152              		.cfi_endproc
 2153              	.LFE2484:
 2154              		.cantunwind
 2155              		.fnend
 2157              		.section	.init_array,"aw",%init_array
 2158              		.align	2
 2159 0000 00000000 		.word	_GLOBAL__sub_I_hadc1(target1)
 2160              		.global	ok_debounce
 2161              		.global	triggerPB2
 2162              		.global	sa8181
 2163              		.global	uart_pc
 2164              		.global	uart_sa818
 2165              		.global	radio_pd
 2166              		.global	radio_ptt
 2167              		.global	adc_bat
 2168              		.global	menu1
 2169              		.global	oled1
 2170              		.global	hdma_usart2_tx
 2171              		.global	hdma_usart2_rx
 2172              		.global	hpcd_USB_OTG_FS
 2173              		.global	htim10
 2174              		.global	htim9
 2175              		.global	htim5
 2176              		.global	hspi5
 2177              		.global	hspi1
 2178              		.global	hsd
 2179              		.global	hi2s4
 2180              		.global	hi2s3
 2181              		.global	hi2s2
 2182              		.global	hi2c3
 2183              		.global	hi2c1
 2184              		.global	hadc1
 2185              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 2186              		.align	2
 2187              		.set	.LANCHOR0,. + 0
 2190              	_ZStL8__ioinit:
 2191 0000 00       		.space	1
 2192              		.section	.bss.adc_bat,"aw",%nobits
 2193              		.align	2
ARM GAS  /tmp/ccCbjvan.s 			page 67


 2194              		.set	.LANCHOR6,. + 0
 2197              	adc_bat:
 2198 0000 00000000 		.space	12
 2198      00000000 
 2198      00000000 
 2199              		.section	.bss.hadc1,"aw",%nobits
 2200              		.align	2
 2201              		.set	.LANCHOR5,. + 0
 2204              	hadc1:
 2205 0000 00000000 		.space	72
 2205      00000000 
 2205      00000000 
 2205      00000000 
 2205      00000000 
 2206              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 2207              		.align	2
 2210              	hdma_usart2_rx:
 2211 0000 00000000 		.space	96
 2211      00000000 
 2211      00000000 
 2211      00000000 
 2211      00000000 
 2212              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 2213              		.align	2
 2216              	hdma_usart2_tx:
 2217 0000 00000000 		.space	96
 2217      00000000 
 2217      00000000 
 2217      00000000 
 2217      00000000 
 2218              		.section	.bss.hi2c1,"aw",%nobits
 2219              		.align	2
 2220              		.set	.LANCHOR14,. + 0
 2223              	hi2c1:
 2224 0000 00000000 		.space	84
 2224      00000000 
 2224      00000000 
 2224      00000000 
 2224      00000000 
 2225              		.section	.bss.hi2c3,"aw",%nobits
 2226              		.align	2
 2227              		.set	.LANCHOR2,. + 0
 2230              	hi2c3:
 2231 0000 00000000 		.space	84
 2231      00000000 
 2231      00000000 
 2231      00000000 
 2231      00000000 
 2232              		.section	.bss.hi2s2,"aw",%nobits
 2233              		.align	2
 2234              		.set	.LANCHOR15,. + 0
 2237              	hi2s2:
 2238 0000 00000000 		.space	72
 2238      00000000 
 2238      00000000 
 2238      00000000 
 2238      00000000 
ARM GAS  /tmp/ccCbjvan.s 			page 68


 2239              		.section	.bss.hi2s3,"aw",%nobits
 2240              		.align	2
 2241              		.set	.LANCHOR16,. + 0
 2244              	hi2s3:
 2245 0000 00000000 		.space	72
 2245      00000000 
 2245      00000000 
 2245      00000000 
 2245      00000000 
 2246              		.section	.bss.hi2s4,"aw",%nobits
 2247              		.align	2
 2248              		.set	.LANCHOR17,. + 0
 2251              	hi2s4:
 2252 0000 00000000 		.space	72
 2252      00000000 
 2252      00000000 
 2252      00000000 
 2252      00000000 
 2253              		.section	.bss.hpcd_USB_OTG_FS,"aw",%nobits
 2254              		.align	2
 2255              		.set	.LANCHOR21,. + 0
 2258              	hpcd_USB_OTG_FS:
 2259 0000 00000000 		.space	1032
 2259      00000000 
 2259      00000000 
 2259      00000000 
 2259      00000000 
 2260              		.section	.bss.hsd,"aw",%nobits
 2261              		.align	2
 2262              		.set	.LANCHOR18,. + 0
 2265              	hsd:
 2266 0000 00000000 		.space	132
 2266      00000000 
 2266      00000000 
 2266      00000000 
 2266      00000000 
 2267              		.section	.bss.hspi1,"aw",%nobits
 2268              		.align	2
 2269              		.set	.LANCHOR19,. + 0
 2272              	hspi1:
 2273 0000 00000000 		.space	88
 2273      00000000 
 2273      00000000 
 2273      00000000 
 2273      00000000 
 2274              		.section	.bss.hspi5,"aw",%nobits
 2275              		.align	2
 2276              		.set	.LANCHOR20,. + 0
 2279              	hspi5:
 2280 0000 00000000 		.space	88
 2280      00000000 
 2280      00000000 
 2280      00000000 
 2280      00000000 
 2281              		.section	.bss.htim10,"aw",%nobits
 2282              		.align	2
 2283              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccCbjvan.s 			page 69


 2286              	htim10:
 2287 0000 00000000 		.space	64
 2287      00000000 
 2287      00000000 
 2287      00000000 
 2287      00000000 
 2288              		.section	.bss.htim5,"aw",%nobits
 2289              		.align	2
 2290              		.set	.LANCHOR22,. + 0
 2293              	htim5:
 2294 0000 00000000 		.space	64
 2294      00000000 
 2294      00000000 
 2294      00000000 
 2294      00000000 
 2295              		.section	.bss.htim9,"aw",%nobits
 2296              		.align	2
 2297              		.set	.LANCHOR23,. + 0
 2300              	htim9:
 2301 0000 00000000 		.space	64
 2301      00000000 
 2301      00000000 
 2301      00000000 
 2301      00000000 
 2302              		.section	.bss.menu1,"aw",%nobits
 2303              		.align	2
 2304              		.set	.LANCHOR4,. + 0
 2307              	menu1:
 2308 0000 00000000 		.space	20
 2308      00000000 
 2308      00000000 
 2308      00000000 
 2308      00000000 
 2309              		.section	.bss.ok_debounce,"aw",%nobits
 2310              		.set	.LANCHOR13,. + 0
 2313              	ok_debounce:
 2314 0000 00       		.space	1
 2315              		.section	.bss.oled1,"aw",%nobits
 2316              		.align	2
 2317              		.set	.LANCHOR3,. + 0
 2320              	oled1:
 2321 0000 00000000 		.space	1056
 2321      00000000 
 2321      00000000 
 2321      00000000 
 2321      00000000 
 2322              		.section	.bss.radio_pd,"aw",%nobits
 2323              		.align	2
 2324              		.set	.LANCHOR8,. + 0
 2327              	radio_pd:
 2328 0000 00000000 		.space	24
 2328      00000000 
 2328      00000000 
 2328      00000000 
 2328      00000000 
 2329              		.section	.bss.radio_ptt,"aw",%nobits
 2330              		.align	2
ARM GAS  /tmp/ccCbjvan.s 			page 70


 2331              		.set	.LANCHOR7,. + 0
 2334              	radio_ptt:
 2335 0000 00000000 		.space	24
 2335      00000000 
 2335      00000000 
 2335      00000000 
 2335      00000000 
 2336              		.section	.bss.sa8181,"aw",%nobits
 2337              		.align	2
 2338              		.set	.LANCHOR11,. + 0
 2341              	sa8181:
 2342 0000 00000000 		.space	96
 2342      00000000 
 2342      00000000 
 2342      00000000 
 2342      00000000 
 2343              		.section	.bss.triggerPB2,"aw",%nobits
 2344              		.align	2
 2345              		.set	.LANCHOR12,. + 0
 2348              	triggerPB2:
 2349 0000 00000000 		.space	24
 2349      00000000 
 2349      00000000 
 2349      00000000 
 2349      00000000 
 2350              		.section	.bss.uart_pc,"aw",%nobits
 2351              		.align	2
 2352              		.set	.LANCHOR10,. + 0
 2355              	uart_pc:
 2356 0000 00000000 		.space	464
 2356      00000000 
 2356      00000000 
 2356      00000000 
 2356      00000000 
 2357              		.section	.bss.uart_sa818,"aw",%nobits
 2358              		.align	2
 2359              		.set	.LANCHOR9,. + 0
 2362              	uart_sa818:
 2363 0000 00000000 		.space	464
 2363      00000000 
 2363      00000000 
 2363      00000000 
 2363      00000000 
 2364              		.text
 2365              	.Letext0:
 2366              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2367              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2368              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2369              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2370              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2371              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2372              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2373              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2374              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2375              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2376              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2377              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
ARM GAS  /tmp/ccCbjvan.s 			page 71


 2378              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2379              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 2380              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 2381              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 2382              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2383              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2384              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2385              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 2386              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 2387              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2388              		.file 26 "/usr/include/newlib/sys/_types.h"
 2389              		.file 27 "/usr/include/newlib/sys/reent.h"
 2390              		.file 28 "/usr/include/newlib/sys/lock.h"
 2391              		.file 29 "Core/Inc/fonts.h"
 2392              		.file 30 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2393              		.file 31 "/usr/include/newlib/stdio.h"
 2394              		.file 32 "Core/Inc/oled.h"
 2395              		.file 33 "/usr/include/newlib/c++/9.2.1/cstdlib"
 2396              		.file 34 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 2397              		.file 35 "/usr/include/newlib/c++/9.2.1/cwchar"
 2398              		.file 36 "/usr/include/newlib/c++/9.2.1/new"
 2399              		.file 37 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 2400              		.file 38 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 2401              		.file 39 "/usr/include/newlib/c++/9.2.1/type_traits"
 2402              		.file 40 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 2403              		.file 41 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 2404              		.file 42 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 2405              		.file 43 "/usr/include/newlib/c++/9.2.1/cstdint"
 2406              		.file 44 "/usr/include/newlib/c++/9.2.1/clocale"
 2407              		.file 45 "/usr/include/newlib/c++/9.2.1/cstdio"
 2408              		.file 46 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 2409              		.file 47 "/usr/include/newlib/c++/9.2.1/system_error"
 2410              		.file 48 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 2411              		.file 49 "/usr/include/newlib/c++/9.2.1/cwctype"
 2412              		.file 50 "/usr/include/newlib/c++/9.2.1/iosfwd"
 2413              		.file 51 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 2414              		.file 52 "/usr/include/newlib/c++/9.2.1/tuple"
 2415              		.file 53 "/usr/include/newlib/c++/9.2.1/functional"
 2416              		.file 54 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2417              		.file 55 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2418              		.file 56 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2419              		.file 57 "<built-in>"
 2420              		.file 58 "/usr/include/newlib/stdlib.h"
 2421              		.file 59 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2422              		.file 60 "Core/Inc/menu.hpp"
 2423              		.file 61 "Core/Inc/adc.hpp"
 2424              		.file 62 "Core/Inc/pin.hpp"
 2425              		.file 63 "/usr/include/newlib/wchar.h"
 2426              		.file 64 "/usr/include/newlib/locale.h"
 2427              		.file 65 "/usr/include/newlib/ctype.h"
 2428              		.file 66 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
 2429              		.file 67 "/usr/include/newlib/sys/errno.h"
 2430              		.file 68 "/usr/include/newlib/wctype.h"
 2431              		.file 69 "Core/Inc/uart.hpp"
 2432              		.file 70 "Core/Inc/sa818.h"
 2433              		.file 71 "Core/Inc/trigger.hpp"
 2434              		.file 72 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
ARM GAS  /tmp/ccCbjvan.s 			page 72


ARM GAS  /tmp/ccCbjvan.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccCbjvan.s:18     .text._ZL12MX_GPIO_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:25     .text._ZL12MX_GPIO_Initv:0000000000000000 _ZL12MX_GPIO_Initv
     /tmp/ccCbjvan.s:242    .text._ZL12MX_GPIO_Initv:00000000000000fc $d
.ARM.exidx.text._ZL12MX_GPIO_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:251    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/ccCbjvan.s:257    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccCbjvan.s:395    .text._Z41__static_initialization_and_destruction_0ii:00000000000000c8 $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/ccCbjvan.s:418    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccCbjvan.s:425    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccCbjvan.s:540    .text.HAL_TIM_PeriodElapsedCallback:0000000000000070 $d
.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $d
     /tmp/ccCbjvan.s:551    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccCbjvan.s:558    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccCbjvan.s:612    .text.HAL_UART_RxCpltCallback:0000000000000024 $d
.ARM.extab.text.HAL_UART_RxCpltCallback:0000000000000000 $d
.ARM.exidx.text.HAL_UART_RxCpltCallback:0000000000000000 $d
     /tmp/ccCbjvan.s:620    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccCbjvan.s:627    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
.ARM.exidx.text.HAL_GPIO_EXTI_Callback:0000000000000000 $d
     /tmp/ccCbjvan.s:652    .text.Error_Handler:0000000000000000 $t
     /tmp/ccCbjvan.s:659    .text.Error_Handler:0000000000000000 Error_Handler
    .ARM.exidx.text.Error_Handler:0000000000000000 $d
     /tmp/ccCbjvan.s:694    .text._ZL12MX_I2C1_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:700    .text._ZL12MX_I2C1_Initv:0000000000000000 _ZL12MX_I2C1_Initv
     /tmp/ccCbjvan.s:761    .text._ZL12MX_I2C1_Initv:000000000000002c $d
.ARM.extab.text._ZL12MX_I2C1_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_I2C1_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:769    .text._ZL12MX_I2C3_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:775    .text._ZL12MX_I2C3_Initv:0000000000000000 _ZL12MX_I2C3_Initv
     /tmp/ccCbjvan.s:836    .text._ZL12MX_I2C3_Initv:000000000000002c $d
.ARM.extab.text._ZL12MX_I2C3_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_I2C3_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:844    .text._ZL12MX_I2S2_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:850    .text._ZL12MX_I2S2_Initv:0000000000000000 _ZL12MX_I2S2_Initv
     /tmp/ccCbjvan.s:911    .text._ZL12MX_I2S2_Initv:0000000000000030 $d
.ARM.extab.text._ZL12MX_I2S2_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_I2S2_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:918    .text._ZL12MX_I2S3_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:924    .text._ZL12MX_I2S3_Initv:0000000000000000 _ZL12MX_I2S3_Initv
     /tmp/ccCbjvan.s:986    .text._ZL12MX_I2S3_Initv:0000000000000030 $d
.ARM.extab.text._ZL12MX_I2S3_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_I2S3_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:993    .text._ZL12MX_I2S4_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:999    .text._ZL12MX_I2S4_Initv:0000000000000000 _ZL12MX_I2S4_Initv
     /tmp/ccCbjvan.s:1060   .text._ZL12MX_I2S4_Initv:0000000000000030 $d
.ARM.extab.text._ZL12MX_I2S4_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_I2S4_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1067   .text._ZL15MX_SDIO_SD_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1073   .text._ZL15MX_SDIO_SD_Initv:0000000000000000 _ZL15MX_SDIO_SD_Initv
     /tmp/ccCbjvan.s:1139   .text._ZL15MX_SDIO_SD_Initv:0000000000000034 $d
.ARM.extab.text._ZL15MX_SDIO_SD_Initv:0000000000000000 $d
.ARM.exidx.text._ZL15MX_SDIO_SD_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1146   .text._ZL12MX_SPI1_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1152   .text._ZL12MX_SPI1_Initv:0000000000000000 _ZL12MX_SPI1_Initv
ARM GAS  /tmp/ccCbjvan.s 			page 74


     /tmp/ccCbjvan.s:1222   .text._ZL12MX_SPI1_Initv:0000000000000034 $d
.ARM.extab.text._ZL12MX_SPI1_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_SPI1_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1229   .text._ZL12MX_SPI5_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1235   .text._ZL12MX_SPI5_Initv:0000000000000000 _ZL12MX_SPI5_Initv
     /tmp/ccCbjvan.s:1305   .text._ZL12MX_SPI5_Initv:0000000000000034 $d
.ARM.extab.text._ZL12MX_SPI5_Initv:0000000000000000 $d
.ARM.exidx.text._ZL12MX_SPI5_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1312   .text._ZL22MX_USB_OTG_FS_PCD_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1318   .text._ZL22MX_USB_OTG_FS_PCD_Initv:0000000000000000 _ZL22MX_USB_OTG_FS_PCD_Initv
     /tmp/ccCbjvan.s:1382   .text._ZL22MX_USB_OTG_FS_PCD_Initv:0000000000000030 $d
.ARM.extab.text._ZL22MX_USB_OTG_FS_PCD_Initv:0000000000000000 $d
.ARM.exidx.text._ZL22MX_USB_OTG_FS_PCD_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1388   .text._ZL12MX_ADC1_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1394   .text._ZL12MX_ADC1_Initv:0000000000000000 _ZL12MX_ADC1_Initv
     /tmp/ccCbjvan.s:1505   .text._ZL12MX_ADC1_Initv:000000000000005c $d
.ARM.exidx.text._ZL12MX_ADC1_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1513   .text._ZL13MX_TIM10_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1519   .text._ZL13MX_TIM10_Initv:0000000000000000 _ZL13MX_TIM10_Initv
     /tmp/ccCbjvan.s:1571   .text._ZL13MX_TIM10_Initv:0000000000000028 $d
.ARM.extab.text._ZL13MX_TIM10_Initv:0000000000000000 $d
.ARM.exidx.text._ZL13MX_TIM10_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1578   .text._ZL12MX_TIM5_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1584   .text._ZL12MX_TIM5_Initv:0000000000000000 _ZL12MX_TIM5_Initv
     /tmp/ccCbjvan.s:1696   .text._ZL12MX_TIM5_Initv:0000000000000060 $d
.ARM.exidx.text._ZL12MX_TIM5_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1703   .text._ZL12MX_TIM9_Initv:0000000000000000 $t
     /tmp/ccCbjvan.s:1709   .text._ZL12MX_TIM9_Initv:0000000000000000 _ZL12MX_TIM9_Initv
     /tmp/ccCbjvan.s:1797   .text._ZL12MX_TIM9_Initv:0000000000000048 $d
.ARM.exidx.text._ZL12MX_TIM9_Initv:0000000000000000 $d
     /tmp/ccCbjvan.s:1804   .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/ccCbjvan.s:1811   .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
     /tmp/ccCbjvan.s:1997   .text._Z18SystemClock_Configv:00000000000000c4 $d
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
     /tmp/ccCbjvan.s:2004   .text.main:0000000000000000 $t
     /tmp/ccCbjvan.s:2011   .text.main:0000000000000000 main
     /tmp/ccCbjvan.s:2117   .text.main:0000000000000064 $d
             .ARM.extab.text.main:0000000000000000 $d
             .ARM.exidx.text.main:0000000000000000 $d
     /tmp/ccCbjvan.s:2128   .text._GLOBAL__sub_I_hadc1:0000000000000000 $t
     /tmp/ccCbjvan.s:2134   .text._GLOBAL__sub_I_hadc1:0000000000000000 _GLOBAL__sub_I_hadc1
.ARM.exidx.text._GLOBAL__sub_I_hadc1:0000000000000000 $d
     /tmp/ccCbjvan.s:2158   .init_array:0000000000000000 $d
     /tmp/ccCbjvan.s:2313   .bss.ok_debounce:0000000000000000 ok_debounce
     /tmp/ccCbjvan.s:2348   .bss.triggerPB2:0000000000000000 triggerPB2
     /tmp/ccCbjvan.s:2341   .bss.sa8181:0000000000000000 sa8181
     /tmp/ccCbjvan.s:2355   .bss.uart_pc:0000000000000000 uart_pc
     /tmp/ccCbjvan.s:2362   .bss.uart_sa818:0000000000000000 uart_sa818
     /tmp/ccCbjvan.s:2327   .bss.radio_pd:0000000000000000 radio_pd
     /tmp/ccCbjvan.s:2334   .bss.radio_ptt:0000000000000000 radio_ptt
     /tmp/ccCbjvan.s:2197   .bss.adc_bat:0000000000000000 adc_bat
     /tmp/ccCbjvan.s:2307   .bss.menu1:0000000000000000 menu1
     /tmp/ccCbjvan.s:2320   .bss.oled1:0000000000000000 oled1
     /tmp/ccCbjvan.s:2216   .bss.hdma_usart2_tx:0000000000000000 hdma_usart2_tx
     /tmp/ccCbjvan.s:2210   .bss.hdma_usart2_rx:0000000000000000 hdma_usart2_rx
     /tmp/ccCbjvan.s:2258   .bss.hpcd_USB_OTG_FS:0000000000000000 hpcd_USB_OTG_FS
     /tmp/ccCbjvan.s:2286   .bss.htim10:0000000000000000 htim10
ARM GAS  /tmp/ccCbjvan.s 			page 75


     /tmp/ccCbjvan.s:2300   .bss.htim9:0000000000000000 htim9
     /tmp/ccCbjvan.s:2293   .bss.htim5:0000000000000000 htim5
     /tmp/ccCbjvan.s:2279   .bss.hspi5:0000000000000000 hspi5
     /tmp/ccCbjvan.s:2272   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccCbjvan.s:2265   .bss.hsd:0000000000000000 hsd
     /tmp/ccCbjvan.s:2251   .bss.hi2s4:0000000000000000 hi2s4
     /tmp/ccCbjvan.s:2244   .bss.hi2s3:0000000000000000 hi2s3
     /tmp/ccCbjvan.s:2237   .bss.hi2s2:0000000000000000 hi2s2
     /tmp/ccCbjvan.s:2230   .bss.hi2c3:0000000000000000 hi2c3
     /tmp/ccCbjvan.s:2223   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccCbjvan.s:2204   .bss.hadc1:0000000000000000 hadc1
     /tmp/ccCbjvan.s:2186   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/ccCbjvan.s:2190   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/ccCbjvan.s:2193   .bss.adc_bat:0000000000000000 $d
     /tmp/ccCbjvan.s:2200   .bss.hadc1:0000000000000000 $d
     /tmp/ccCbjvan.s:2207   .bss.hdma_usart2_rx:0000000000000000 $d
     /tmp/ccCbjvan.s:2213   .bss.hdma_usart2_tx:0000000000000000 $d
     /tmp/ccCbjvan.s:2219   .bss.hi2c1:0000000000000000 $d
     /tmp/ccCbjvan.s:2226   .bss.hi2c3:0000000000000000 $d
     /tmp/ccCbjvan.s:2233   .bss.hi2s2:0000000000000000 $d
     /tmp/ccCbjvan.s:2240   .bss.hi2s3:0000000000000000 $d
     /tmp/ccCbjvan.s:2247   .bss.hi2s4:0000000000000000 $d
     /tmp/ccCbjvan.s:2254   .bss.hpcd_USB_OTG_FS:0000000000000000 $d
     /tmp/ccCbjvan.s:2261   .bss.hsd:0000000000000000 $d
     /tmp/ccCbjvan.s:2268   .bss.hspi1:0000000000000000 $d
     /tmp/ccCbjvan.s:2275   .bss.hspi5:0000000000000000 $d
     /tmp/ccCbjvan.s:2282   .bss.htim10:0000000000000000 $d
     /tmp/ccCbjvan.s:2289   .bss.htim5:0000000000000000 $d
     /tmp/ccCbjvan.s:2296   .bss.htim9:0000000000000000 $d
     /tmp/ccCbjvan.s:2303   .bss.menu1:0000000000000000 $d
     /tmp/ccCbjvan.s:2314   .bss.ok_debounce:0000000000000000 $d
     /tmp/ccCbjvan.s:2316   .bss.oled1:0000000000000000 $d
     /tmp/ccCbjvan.s:2323   .bss.radio_pd:0000000000000000 $d
     /tmp/ccCbjvan.s:2330   .bss.radio_ptt:0000000000000000 $d
     /tmp/ccCbjvan.s:2337   .bss.sa8181:0000000000000000 $d
     /tmp/ccCbjvan.s:2344   .bss.triggerPB2:0000000000000000 $d
     /tmp/ccCbjvan.s:2351   .bss.uart_pc:0000000000000000 $d
     /tmp/ccCbjvan.s:2358   .bss.uart_sa818:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_unwind_cpp_pr0
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
_ZN4oledC1EP17I2C_HandleTypeDefhP17TIM_HandleTypeDef
_ZN4menuC1EP4oled
_ZN3adcC1EP17ADC_HandleTypeDef
_ZN3pinC1EP12GPIO_TypeDefNS_9PinNumberENS_5InOutENS_4PullENS_5SpeedE
_ZN4uartC1ENS_8uart_numEm
_ZN5sa818C1EP4uartP3pinS3_
_ZN7triggerC1EP12GPIO_TypeDefNS_9PinNumberENS_4PullE
_ZNSt8ios_base4InitD1Ev
__dso_handle
_ZN3pinD1Ev
HAL_GPIO_ReadPin
_ZN4menu7menu_okEv
ARM GAS  /tmp/ccCbjvan.s 			page 76


_ZN4oled13oled_isOledOnEv
_ZN4menu13keyboard_pollEv
_ZN3adc12adc_getValueEv
_ZN4oled19oled_update_batteryEf
_ZN4menu10menu_printEv
_ZN4oled12oled_refreshEv
_ZN4uart16rx_cplt_callbackEv
__aeabi_unwind_cpp_pr1
HAL_I2C_Init
HAL_I2S_Init
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
HAL_SPI_Init
HAL_PCD_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_SlaveConfigSynchro
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
_ZN3adc15adc_setEquationEff
_ZN4oled4initEv
_ZN3pin4initEv
