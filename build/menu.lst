<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 1
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 1
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
ARM GAS  /tmp/ccXnheei.s 			page 1
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
ARM GAS  /tmp/ccXHb2EA.s 			page 1
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z41__static_initialization_and_destruction_0ii:
  26              		.fnstart
  27              	.LVL0:
  28              	.LFB2476:
  29              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_, uart* uart_)
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
<<<<<<< HEAD
  49              		.loc 1 5 5 is_stmt 1 view .LVU3
  50              		.loc 1 5 10 is_stmt 0 view .LVU4
  51 000e 0161     		str	r1, [r0, #16]
  52              	.LBE2:
   6:Core/Src/menu.cpp **** }
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 2
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 2
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


  53              		.loc 1 6 1 view .LVU5
  54 0010 5DF8044B 		ldr	r4, [sp], #4
  55              	.LCFI1:
  56              		.cfi_restore 4
  57              		.cfi_def_cfa_offset 0
  58 0014 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE139:
  61              		.cantunwind
  62              		.fnend
  64              		.global	_ZN4menuC1EP4oled
  65              		.thumb_set _ZN4menuC1EP4oled,_ZN4menuC2EP4oled
  66              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 433A252E 		.ascii	"C:%.2s SQ:%.2s\000"
  69      32732053 
  69      513A252E 
  69      327300
  70 000f 00       		.align	2
  71              	.LC1:
  72 0010 20202020 		.ascii	"    CHAN    \000"
  72      4348414E 
  72      20202020 
  72      00
  73 001d 000000   		.align	2
  74              	.LC2:
  75 0020 20202053 		.ascii	"   SQUASH   \000"
  75      51554153 
  75      48202020 
  75      00
  76 002d 000000   		.align	2
  77              	.LC3:
  78 0030 20446973 		.ascii	" Disp TMO \000"
  78      7020544D 
  78      4F2000
  79 003b 00       		.align	2
  80              	.LC4:
  81 003c 20202043 		.ascii	"   CH:%.2s   \000"
  81      483A252E 
  81      32732020 
  81      2000
  82 004a 0000     		.align	2
  83              	.LC5:
  84 004c 20202053 		.ascii	"   SQ:%.2s   \000"
  84      513A252E 
  84      32732020 
  84      2000
  85 005a 0000     		.align	2
  86              	.LC6:
  87 005c 20202044 		.ascii	"   DS:%.2s   \000"
  87      533A252E 
  87      32732020 
  87      2000
  88 006a 0000     		.align	2
  89              	.LC7:
  90 006c 6D656E75 		.ascii	"menu  back\000"
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 3
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 3
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


  90      20206261 
  90      636B00
  91              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
  92              		.align	1
  93              		.global	_ZN4menu10menu_printEv
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	_ZN4menu10menu_printEv:
 100              		.fnstart
 101              	.LVL1:
 102              	.LFB141:
=======
   6:Core/Src/menu.cpp ****     uart1=uart_;
   7:Core/Src/menu.cpp **** }
   8:Core/Src/menu.cpp **** 
   9:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
  10:Core/Src/menu.cpp **** {
  11:Core/Src/menu.cpp ****     char temp [22];
  12:Core/Src/menu.cpp **** 
  13:Core/Src/menu.cpp ****     switch (menu_value)
  14:Core/Src/menu.cpp ****     {
  15:Core/Src/menu.cpp ****         case MENU_HOME:
  16:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
  17:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  18:Core/Src/menu.cpp ****             break; 
  19:Core/Src/menu.cpp ****         case MENU_CH:
  20:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
  21:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  22:Core/Src/menu.cpp ****             break;
  23:Core/Src/menu.cpp ****         case MENU_SQ:
  24:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
  25:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  26:Core/Src/menu.cpp ****             break;
  27:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  28:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
  29:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
ARM GAS  /tmp/ccXHb2EA.s 			page 2


  30:Core/Src/menu.cpp ****             break;
  31:Core/Src/menu.cpp ****         case MENU_CH_IN:
  32:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
  33:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  34:Core/Src/menu.cpp ****             break;
  35:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  36:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
  37:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  38:Core/Src/menu.cpp ****             break;
  39:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  40:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
  41:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  42:Core/Src/menu.cpp ****             break;
  43:Core/Src/menu.cpp ****         default:
  44:Core/Src/menu.cpp ****             break;
  45:Core/Src/menu.cpp ****     }
  46:Core/Src/menu.cpp ****     oled1->oled_print("menu backk   ", Font_11x18,0,46);   
  47:Core/Src/menu.cpp **** 
  48:Core/Src/menu.cpp **** }
  49:Core/Src/menu.cpp **** 
  50:Core/Src/menu.cpp **** void menu::menu_ok()
  51:Core/Src/menu.cpp **** {
  52:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
  53:Core/Src/menu.cpp ****     {
  54:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  55:Core/Src/menu.cpp ****     }
  56:Core/Src/menu.cpp ****     else
  57:Core/Src/menu.cpp ****     {
  58:Core/Src/menu.cpp ****         oled1->oled_on();
  59:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  60:Core/Src/menu.cpp ****     }
  61:Core/Src/menu.cpp **** 
  62:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
  63:Core/Src/menu.cpp ****     {
  64:Core/Src/menu.cpp ****     case MENU_HOME:
  65:Core/Src/menu.cpp ****         break;
  66:Core/Src/menu.cpp ****     case MENU_CH:
  67:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
  68:Core/Src/menu.cpp ****         break;
  69:Core/Src/menu.cpp ****     case MENU_SQ:
  70:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  71:Core/Src/menu.cpp ****         break;
  72:Core/Src/menu.cpp ****     case MENU_TMO:
  73:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
  74:Core/Src/menu.cpp ****         break;
  75:Core/Src/menu.cpp ****     case MENU_CH_IN:
  76:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  77:Core/Src/menu.cpp ****         if(!cursorOn)
  78:Core/Src/menu.cpp ****         {
  79:Core/Src/menu.cpp ****             chVal=atoi(ch);
  80:Core/Src/menu.cpp ****             cursorPos=0;
  81:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  82:Core/Src/menu.cpp ****         }
  83:Core/Src/menu.cpp ****         break;
  84:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  85:Core/Src/menu.cpp ****         cursorOn^=1;
  86:Core/Src/menu.cpp ****         if(!cursorOn)
ARM GAS  /tmp/ccXHb2EA.s 			page 3


  87:Core/Src/menu.cpp ****         {
  88:Core/Src/menu.cpp ****             chVal=atoi(sq);
  89:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  90:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  91:Core/Src/menu.cpp ****         }
  92:Core/Src/menu.cpp ****         break;
  93:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  94:Core/Src/menu.cpp ****         cursorOn^=1;
  95:Core/Src/menu.cpp ****         if(!cursorOn)
  96:Core/Src/menu.cpp ****         {
  97:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  98:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
  99:Core/Src/menu.cpp ****             cursorPos=0;
 100:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 101:Core/Src/menu.cpp ****         }
 102:Core/Src/menu.cpp ****         break;
 103:Core/Src/menu.cpp **** 
 104:Core/Src/menu.cpp ****     default:
 105:Core/Src/menu.cpp ****         break;
 106:Core/Src/menu.cpp ****     }
 107:Core/Src/menu.cpp **** 
 108:Core/Src/menu.cpp ****     
 109:Core/Src/menu.cpp **** }
 110:Core/Src/menu.cpp **** 
 111:Core/Src/menu.cpp **** void menu::menu_next()
 112:Core/Src/menu.cpp **** {
 113:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 114:Core/Src/menu.cpp ****     {
 115:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 116:Core/Src/menu.cpp ****     }
 117:Core/Src/menu.cpp ****     switch (menu_value)
 118:Core/Src/menu.cpp ****     {
 119:Core/Src/menu.cpp ****     case MENU_HOME:
 120:Core/Src/menu.cpp ****         break;
 121:Core/Src/menu.cpp ****     case MENU_CH:
 122:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 123:Core/Src/menu.cpp ****         break;
 124:Core/Src/menu.cpp ****     case MENU_SQ:
 125:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 126:Core/Src/menu.cpp ****     case MENU_TMO:
 127:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 128:Core/Src/menu.cpp ****     case MENU_CH_IN:
 129:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 130:Core/Src/menu.cpp ****         break;
 131:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 132:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 133:Core/Src/menu.cpp ****         break;
 134:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 135:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 136:Core/Src/menu.cpp ****         break;
 137:Core/Src/menu.cpp **** 
 138:Core/Src/menu.cpp ****     default:
 139:Core/Src/menu.cpp ****         break;
 140:Core/Src/menu.cpp ****     }
 141:Core/Src/menu.cpp **** }
 142:Core/Src/menu.cpp **** 
 143:Core/Src/menu.cpp **** void menu::menu_menu()
ARM GAS  /tmp/ccXHb2EA.s 			page 4


 144:Core/Src/menu.cpp **** {
 145:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 146:Core/Src/menu.cpp ****     {
 147:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 148:Core/Src/menu.cpp ****     }
 149:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 150:Core/Src/menu.cpp **** }
 151:Core/Src/menu.cpp **** 
 152:Core/Src/menu.cpp **** void menu::menu_back()
 153:Core/Src/menu.cpp **** {
 154:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 155:Core/Src/menu.cpp ****     {
 156:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 157:Core/Src/menu.cpp ****     }
 158:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 159:Core/Src/menu.cpp **** }
 160:Core/Src/menu.cpp **** 
 161:Core/Src/menu.cpp **** void menu::menu_prev()
 162:Core/Src/menu.cpp **** {
 163:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 164:Core/Src/menu.cpp ****     {
 165:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 166:Core/Src/menu.cpp ****     }
 167:Core/Src/menu.cpp ****     switch (menu_value)
 168:Core/Src/menu.cpp ****     {
 169:Core/Src/menu.cpp ****     case MENU_HOME:
 170:Core/Src/menu.cpp ****         break;
 171:Core/Src/menu.cpp ****     case MENU_CH:
 172:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 173:Core/Src/menu.cpp ****         break;
 174:Core/Src/menu.cpp ****     case MENU_SQ:
 175:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 176:Core/Src/menu.cpp ****         break;
 177:Core/Src/menu.cpp ****     case MENU_TMO:
 178:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 179:Core/Src/menu.cpp ****         break;
 180:Core/Src/menu.cpp ****     case MENU_CH_IN:
 181:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 182:Core/Src/menu.cpp ****         break;
 183:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 184:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 185:Core/Src/menu.cpp ****         break;
 186:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 187:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 188:Core/Src/menu.cpp ****         break;
 189:Core/Src/menu.cpp **** 
 190:Core/Src/menu.cpp ****     default:
 191:Core/Src/menu.cpp ****         break;
 192:Core/Src/menu.cpp ****     }
 193:Core/Src/menu.cpp **** }
 194:Core/Src/menu.cpp **** void menu::menu_number(char num)
 195:Core/Src/menu.cpp **** {
 196:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 197:Core/Src/menu.cpp ****     {
 198:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 199:Core/Src/menu.cpp ****     }
 200:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
ARM GAS  /tmp/ccXHb2EA.s 			page 5


 201:Core/Src/menu.cpp ****     {
 202:Core/Src/menu.cpp ****         switch (menu_value)
 203:Core/Src/menu.cpp ****         {
 204:Core/Src/menu.cpp ****         case MENU_CH_IN:
 205:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 206:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 207:Core/Src/menu.cpp ****             break;
 208:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 209:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 210:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 211:Core/Src/menu.cpp ****             break;
 212:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 213:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 214:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 215:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 216:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 217:Core/Src/menu.cpp ****             break;
 218:Core/Src/menu.cpp **** 
 219:Core/Src/menu.cpp ****         default:
 220:Core/Src/menu.cpp ****             break;
 221:Core/Src/menu.cpp ****         }
 222:Core/Src/menu.cpp ****     }
 223:Core/Src/menu.cpp **** }
 224:Core/Src/menu.cpp **** void menu::menu_up()
 225:Core/Src/menu.cpp **** {
 226:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 227:Core/Src/menu.cpp ****     {
 228:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 229:Core/Src/menu.cpp ****     }
 230:Core/Src/menu.cpp ****     switch (menu_value)
 231:Core/Src/menu.cpp ****     {
 232:Core/Src/menu.cpp ****     case MENU_CH_IN:
 233:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 234:Core/Src/menu.cpp ****         {
 235:Core/Src/menu.cpp ****             chVal++;
 236:Core/Src/menu.cpp ****         }
 237:Core/Src/menu.cpp ****         break;
 238:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 239:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 240:Core/Src/menu.cpp ****         {
 241:Core/Src/menu.cpp ****             sqVal++;
 242:Core/Src/menu.cpp ****         }
 243:Core/Src/menu.cpp ****         break;   
 244:Core/Src/menu.cpp ****     default:
 245:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 246:Core/Src/menu.cpp ****         {
 247:Core/Src/menu.cpp ****             volVal++;
 248:Core/Src/menu.cpp ****         }
 249:Core/Src/menu.cpp ****         break;
 250:Core/Src/menu.cpp ****     }
 251:Core/Src/menu.cpp **** }
 252:Core/Src/menu.cpp **** 
 253:Core/Src/menu.cpp **** void menu::menu_down()
 254:Core/Src/menu.cpp **** {
 255:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 256:Core/Src/menu.cpp ****     {
 257:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
ARM GAS  /tmp/ccXHb2EA.s 			page 6


 258:Core/Src/menu.cpp ****     }
 259:Core/Src/menu.cpp ****     switch (menu_value)
 260:Core/Src/menu.cpp ****     {
 261:Core/Src/menu.cpp ****     case MENU_CH_IN:
 262:Core/Src/menu.cpp ****         if(chVal > 0)
 263:Core/Src/menu.cpp ****         {
 264:Core/Src/menu.cpp ****         chVal--;
 265:Core/Src/menu.cpp ****         }
 266:Core/Src/menu.cpp ****         break;
 267:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 268:Core/Src/menu.cpp ****         if(sqVal > 0)
 269:Core/Src/menu.cpp ****         {
 270:Core/Src/menu.cpp ****         sqVal--;
 271:Core/Src/menu.cpp ****         }
 272:Core/Src/menu.cpp ****         break;   
 273:Core/Src/menu.cpp ****     default:
 274:Core/Src/menu.cpp ****         if(volVal > 0)
 275:Core/Src/menu.cpp ****         {
 276:Core/Src/menu.cpp ****             volVal--;
 277:Core/Src/menu.cpp ****         }
 278:Core/Src/menu.cpp ****         break;
 279:Core/Src/menu.cpp ****     }
 280:Core/Src/menu.cpp **** 
 281:Core/Src/menu.cpp **** }
 282:Core/Src/menu.cpp **** 
 283:Core/Src/menu.cpp **** 
 284:Core/Src/menu.cpp **** 
 285:Core/Src/menu.cpp **** void menu::keyboard_poll()
 286:Core/Src/menu.cpp **** {
 287:Core/Src/menu.cpp ****     int sds=0;
 288:Core/Src/menu.cpp ****     char x[20];
 289:Core/Src/menu.cpp **** 
 290:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 291:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 292:Core/Src/menu.cpp **** 
 293:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 294:Core/Src/menu.cpp ****     while(sds<10)
 295:Core/Src/menu.cpp ****     {
 296:Core/Src/menu.cpp ****         sds++;
 297:Core/Src/menu.cpp ****     }
 298:Core/Src/menu.cpp ****     sds=0;
 299:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 300:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 301:Core/Src/menu.cpp ****     {
 302:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 303:Core/Src/menu.cpp ****             menu_next();//R
 304:Core/Src/menu.cpp ****             sprintf(x,"next");
 305:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 306:Core/Src/menu.cpp ****             break;
 307:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 308:Core/Src/menu.cpp ****             menu_number('6');
 309:Core/Src/menu.cpp ****             sprintf(x,"6");
 310:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 311:Core/Src/menu.cpp ****             break;
 312:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 313:Core/Src/menu.cpp ****             menu_number('5');
 314:Core/Src/menu.cpp ****             sprintf(x,"5");
ARM GAS  /tmp/ccXHb2EA.s 			page 7


 315:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 316:Core/Src/menu.cpp ****             break;
 317:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 318:Core/Src/menu.cpp ****             menu_number('4');
 319:Core/Src/menu.cpp ****             sprintf(x,"4");
 320:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 321:Core/Src/menu.cpp ****             break;
 322:Core/Src/menu.cpp ****         default:
 323:Core/Src/menu.cpp ****             break;
 324:Core/Src/menu.cpp ****     }
 325:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 326:Core/Src/menu.cpp **** 
 327:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 328:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 329:Core/Src/menu.cpp ****     
 330:Core/Src/menu.cpp ****     while(sds<10)
 331:Core/Src/menu.cpp ****     {
 332:Core/Src/menu.cpp ****         sds++;
 333:Core/Src/menu.cpp ****     }
 334:Core/Src/menu.cpp ****     sds=0;
 335:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 336:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 337:Core/Src/menu.cpp ****     {
 338:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 339:Core/Src/menu.cpp ****             menu_prev();//L
 340:Core/Src/menu.cpp ****             sprintf(x,"prev");
 341:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 342:Core/Src/menu.cpp ****             break;
 343:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 344:Core/Src/menu.cpp ****             menu_number('8');
 345:Core/Src/menu.cpp ****             sprintf(x,"8");
 346:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 347:Core/Src/menu.cpp ****             break;
 348:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 349:Core/Src/menu.cpp ****             menu_number('7');
 350:Core/Src/menu.cpp ****             sprintf(x,"7");
 351:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 352:Core/Src/menu.cpp ****             break;
 353:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 354:Core/Src/menu.cpp ****             menu_number('9');
 355:Core/Src/menu.cpp ****             sprintf(x,"9");
 356:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 357:Core/Src/menu.cpp ****             break;
 358:Core/Src/menu.cpp ****         default:
 359:Core/Src/menu.cpp ****             break;
 360:Core/Src/menu.cpp **** 
 361:Core/Src/menu.cpp ****     }
 362:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 363:Core/Src/menu.cpp **** 
 364:Core/Src/menu.cpp **** 
 365:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 366:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 367:Core/Src/menu.cpp ****     while(sds<10)
 368:Core/Src/menu.cpp ****     {
 369:Core/Src/menu.cpp ****         sds++;
 370:Core/Src/menu.cpp ****     }
 371:Core/Src/menu.cpp ****     //uart1->send_recive("PD13","PD13");
ARM GAS  /tmp/ccXHb2EA.s 			page 8


 372:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 373:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 374:Core/Src/menu.cpp ****     {
 375:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 376:Core/Src/menu.cpp ****             menu_down();//D
 377:Core/Src/menu.cpp ****             sprintf(x,"down");
 378:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 379:Core/Src/menu.cpp ****             break;
 380:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 381:Core/Src/menu.cpp ****             menu_menu();//M
 382:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 383:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 384:Core/Src/menu.cpp ****             break;
 385:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 386:Core/Src/menu.cpp ****             menu_number('0');
 387:Core/Src/menu.cpp ****             sprintf(x,"0");
 388:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 389:Core/Src/menu.cpp ****             break;
 390:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 391:Core/Src/menu.cpp ****             menu_back();//B
 392:Core/Src/menu.cpp ****             sprintf(x,"Back");
 393:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 394:Core/Src/menu.cpp ****             break;
 395:Core/Src/menu.cpp ****         default:
 396:Core/Src/menu.cpp ****             break;
 397:Core/Src/menu.cpp **** 
 398:Core/Src/menu.cpp ****     }
 399:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 400:Core/Src/menu.cpp **** 
 401:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 402:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 403:Core/Src/menu.cpp ****     while(sds<10)
 404:Core/Src/menu.cpp ****     {
 405:Core/Src/menu.cpp ****         sds++;
 406:Core/Src/menu.cpp ****     }
 407:Core/Src/menu.cpp ****     sds=0;
 408:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 409:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 410:Core/Src/menu.cpp ****     {
 411:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 412:Core/Src/menu.cpp ****             menu_up();//U
 413:Core/Src/menu.cpp ****             sprintf(x,"up");
 414:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 415:Core/Src/menu.cpp ****             break;
 416:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 417:Core/Src/menu.cpp ****             menu_number('3');
 418:Core/Src/menu.cpp ****             sprintf(x,"3");
 419:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 420:Core/Src/menu.cpp ****             break;
 421:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 422:Core/Src/menu.cpp ****             menu_number('2');
 423:Core/Src/menu.cpp ****             sprintf(x,"2");
 424:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 425:Core/Src/menu.cpp ****             break;
 426:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 427:Core/Src/menu.cpp ****             menu_number('1');
 428:Core/Src/menu.cpp ****             sprintf(x,"1");
ARM GAS  /tmp/ccXHb2EA.s 			page 9


 429:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 430:Core/Src/menu.cpp ****             break;
 431:Core/Src/menu.cpp ****         default:
 432:Core/Src/menu.cpp ****             break;
 433:Core/Src/menu.cpp **** 
 434:Core/Src/menu.cpp ****     }
 435:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 436:Core/Src/menu.cpp **** 
 437:Core/Src/menu.cpp **** }
  30              		.loc 1 437 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 437 1 is_stmt 0 view .LVU1
  35 0000 0128     		cmp	r0, #1
  36 0002 00D0     		beq	.L7
  37              	.L4:
  38 0004 7047     		bx	lr
  39              	.L7:
  40              		.loc 1 437 1 discriminator 1 view .LVU2
  41 0006 4FF6FF73 		movw	r3, #65535
  42 000a 9942     		cmp	r1, r3
  43 000c FAD1     		bne	.L4
  44              		.loc 1 437 1 view .LVU3
  45 000e 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  50              		.file 2 "/usr/include/newlib/c++/9.2.1/iostream"
   1:/usr/include/newlib/c++/9.2.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/iostream **** 
   3:/usr/include/newlib/c++/9.2.1/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/iostream **** //
   5:/usr/include/newlib/c++/9.2.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/iostream **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/iostream **** 
  11:/usr/include/newlib/c++/9.2.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/iostream **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/iostream **** 
  16:/usr/include/newlib/c++/9.2.1/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/iostream **** 
  20:/usr/include/newlib/c++/9.2.1/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/iostream **** 
  25:/usr/include/newlib/c++/9.2.1/iostream **** /** @file include/iostream
  26:/usr/include/newlib/c++/9.2.1/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/newlib/c++/9.2.1/iostream ****  */
ARM GAS  /tmp/ccXHb2EA.s 			page 10


  28:/usr/include/newlib/c++/9.2.1/iostream **** 
  29:/usr/include/newlib/c++/9.2.1/iostream **** //
  30:/usr/include/newlib/c++/9.2.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/newlib/c++/9.2.1/iostream **** //
  32:/usr/include/newlib/c++/9.2.1/iostream **** 
  33:/usr/include/newlib/c++/9.2.1/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/newlib/c++/9.2.1/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/newlib/c++/9.2.1/iostream **** 
  36:/usr/include/newlib/c++/9.2.1/iostream **** #pragma GCC system_header
  37:/usr/include/newlib/c++/9.2.1/iostream **** 
  38:/usr/include/newlib/c++/9.2.1/iostream **** #include <bits/c++config.h>
  39:/usr/include/newlib/c++/9.2.1/iostream **** #include <ostream>
  40:/usr/include/newlib/c++/9.2.1/iostream **** #include <istream>
  41:/usr/include/newlib/c++/9.2.1/iostream **** 
  42:/usr/include/newlib/c++/9.2.1/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/newlib/c++/9.2.1/iostream **** {
  44:/usr/include/newlib/c++/9.2.1/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/newlib/c++/9.2.1/iostream **** 
  46:/usr/include/newlib/c++/9.2.1/iostream ****   /**
  47:/usr/include/newlib/c++/9.2.1/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/newlib/c++/9.2.1/iostream ****    *
  49:/usr/include/newlib/c++/9.2.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/newlib/c++/9.2.1/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/newlib/c++/9.2.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/newlib/c++/9.2.1/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/newlib/c++/9.2.1/iostream ****    *
  54:/usr/include/newlib/c++/9.2.1/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/newlib/c++/9.2.1/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/newlib/c++/9.2.1/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/newlib/c++/9.2.1/iostream ****    *  manual linked to above.
  58:/usr/include/newlib/c++/9.2.1/iostream ****   */
  59:/usr/include/newlib/c++/9.2.1/iostream ****   //@{
  60:/usr/include/newlib/c++/9.2.1/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/newlib/c++/9.2.1/iostream **** 
  65:/usr/include/newlib/c++/9.2.1/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/newlib/c++/9.2.1/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/newlib/c++/9.2.1/iostream **** #endif
  71:/usr/include/newlib/c++/9.2.1/iostream ****   //@}
  72:/usr/include/newlib/c++/9.2.1/iostream **** 
  73:/usr/include/newlib/c++/9.2.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/newlib/c++/9.2.1/iostream ****   static ios_base::Init __ioinit;
  51              		.loc 2 74 25 view .LVU4
  52 0010 044C     		ldr	r4, .L8
  53 0012 2046     		mov	r0, r4
  54              	.LVL1:
  55              		.loc 2 74 25 view .LVU5
  56 0014 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
  57              	.LVL2:
  58              		.loc 2 74 25 view .LVU6
  59 0018 034A     		ldr	r2, .L8+4
  60 001a 0449     		ldr	r1, .L8+8
ARM GAS  /tmp/ccXHb2EA.s 			page 11


  61 001c 2046     		mov	r0, r4
  62 001e FFF7FEFF 		bl	__aeabi_atexit
  63              	.LVL3:
  64              		.loc 1 437 1 view .LVU7
  65 0022 10BD     		pop	{r4, pc}
  66              	.L9:
  67              		.align	2
  68              	.L8:
  69 0024 00000000 		.word	.LANCHOR0
  70 0028 00000000 		.word	__dso_handle
  71 002c 00000000 		.word	_ZNSt8ios_base4InitD1Ev
  72              		.cfi_endproc
  73              	.LFE2476:
  74              		.cantunwind
  75              		.fnend
  77              		.section	.rodata._ZN4menuC2EP4oledP4uart.str1.4,"aMS",%progbits,1
  78              		.align	2
  79              	.LC0:
  80 0000 303000   		.ascii	"00\000"
  81              		.section	.text._ZN4menuC2EP4oledP4uart,"ax",%progbits
  82              		.align	1
  83              		.global	_ZN4menuC2EP4oledP4uart
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	_ZN4menuC2EP4oledP4uart:
  90              		.fnstart
  91              	.LVL4:
  92              	.LFB1985:
   3:Core/Src/menu.cpp **** {
  93              		.loc 1 3 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
   3:Core/Src/menu.cpp **** {
  98              		.loc 1 3 1 is_stmt 0 view .LVU9
  99 0000 70B4     		push	{r4, r5, r6}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 5, -8
 104              		.cfi_offset 6, -4
 105              	.LBB2:
   3:Core/Src/menu.cpp **** {
 106              		.loc 1 3 36 view .LVU10
 107 0002 0A4C     		ldr	r4, .L12
 108 0004 2588     		ldrh	r5, [r4]	@ unaligned
 109 0006 A478     		ldrb	r4, [r4, #2]	@ zero_extendqisi2
 110 0008 4580     		strh	r5, [r0, #2]	@ unaligned
 111 000a 0471     		strb	r4, [r0, #4]
 112 000c C580     		strh	r5, [r0, #6]	@ unaligned
 113 000e 0472     		strb	r4, [r0, #8]
 114 0010 4581     		strh	r5, [r0, #10]	@ unaligned
 115 0012 0473     		strb	r4, [r0, #12]
 116 0014 0026     		movs	r6, #0
ARM GAS  /tmp/ccXHb2EA.s 			page 12


 117 0016 4673     		strb	r6, [r0, #13]
 118 0018 C581     		strh	r5, [r0, #14]	@ unaligned
 119 001a 0474     		strb	r4, [r0, #16]
 120 001c 1E24     		movs	r4, #30
 121 001e 4474     		strb	r4, [r0, #17]
 122 0020 8674     		strb	r6, [r0, #18]
 123 0022 C674     		strb	r6, [r0, #19]
   5:Core/Src/menu.cpp ****     uart1=uart_;
 124              		.loc 1 5 5 is_stmt 1 view .LVU11
   5:Core/Src/menu.cpp ****     uart1=uart_;
 125              		.loc 1 5 10 is_stmt 0 view .LVU12
 126 0024 4161     		str	r1, [r0, #20]
   6:Core/Src/menu.cpp **** }
 127              		.loc 1 6 5 is_stmt 1 view .LVU13
   6:Core/Src/menu.cpp **** }
 128              		.loc 1 6 10 is_stmt 0 view .LVU14
 129 0026 8261     		str	r2, [r0, #24]
 130              	.LBE2:
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
   7:Core/Src/menu.cpp **** 
 131              		.loc 1 7 1 view .LVU15
 132 0028 70BC     		pop	{r4, r5, r6}
 133              	.LCFI2:
 134              		.cfi_restore 6
 135              		.cfi_restore 5
 136              		.cfi_restore 4
 137              		.cfi_def_cfa_offset 0
 138 002a 7047     		bx	lr
 139              	.L13:
 140              		.align	2
 141              	.L12:
 142 002c 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE1985:
 145              		.cantunwind
 146              		.fnend
 148              		.global	_ZN4menuC1EP4oledP4uart
 149              		.thumb_set _ZN4menuC1EP4oledP4uart,_ZN4menuC2EP4oledP4uart
 150              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC1:
 153 0000 43252E32 		.ascii	"C%.2s S%.2s  \000"
 153      73205325 
 153      2E327320 
 153      2000
 154 000e 0000     		.align	2
 155              	.LC2:
 156 0010 4348414E 		.ascii	"CHAN     \000"
 156      20202020 
 156      2000
 157 001a 0000     		.align	2
 158              	.LC3:
 159 001c 53515541 		.ascii	"SQUASH    \000"
 159      53482020 
 159      202000
 160 0027 00       		.align	2
 161              	.LC4:
 162 0028 44697370 		.ascii	"Disp TMO\000"
ARM GAS  /tmp/ccXHb2EA.s 			page 13


 162      20544D4F 
 162      00
 163 0031 000000   		.align	2
 164              	.LC5:
 165 0034 43483A25 		.ascii	"CH:%.2s    \000"
 165      2E327320 
 165      20202000 
 166              		.align	2
 167              	.LC6:
 168 0040 53513A25 		.ascii	"SQ:%.2s    \000"
 168      2E327320 
 168      20202000 
 169              		.align	2
 170              	.LC7:
 171 004c 44533A25 		.ascii	"DS:%.2s    \000"
 171      2E327320 
 171      20202000 
 172              		.align	2
 173              	.LC8:
 174 0058 6D656E75 		.ascii	"menu backk   \000"
 174      20626163 
 174      6B6B2020 
 174      2000
 175              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
 176              		.align	1
 177              		.global	_ZN4menu10menu_printEv
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	_ZN4menu10menu_printEv:
 184              		.fnstart
 185              	.LVL5:
 186              	.LFB1987:
  10:Core/Src/menu.cpp ****     char temp [22];
 187              		.loc 1 10 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 0, uses_anonymous_args = 0
  10:Core/Src/menu.cpp ****     char temp [22];
 191              		.loc 1 10 1 is_stmt 0 view .LVU17
 192 0000 10B5     		push	{r4, lr}
 193              		.save {r4, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198              		.pad #32
 199 0002 88B0     		sub	sp, sp, #32
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 40
 202 0004 0446     		mov	r4, r0
  11:Core/Src/menu.cpp **** 
<<<<<<< HEAD
  12:Core/Src/menu.cpp ****     switch (menu_value)
 121              		.loc 1 12 5 view .LVU9
 122              		.loc 1 12 13 is_stmt 0 view .LVU10
 123 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 124 0008 182B     		cmp	r3, #24
 125 000a 1ED8     		bhi	.L4
 126 000c DFE803F0 		tbb	[pc, r3]
 127              	.L6:
 128 0010 0D       		.byte	(.L12-.L6)/2
 129 0011 29       		.byte	(.L11-.L6)/2
 130 0012 39       		.byte	(.L10-.L6)/2
 131 0013 49       		.byte	(.L9-.L6)/2
 132 0014 1D       		.byte	(.L4-.L6)/2
 133 0015 1D       		.byte	(.L4-.L6)/2
 134 0016 1D       		.byte	(.L4-.L6)/2
 135 0017 1D       		.byte	(.L4-.L6)/2
 136 0018 5C       		.byte	(.L8-.L6)/2
 137 0019 1D       		.byte	(.L4-.L6)/2
 138 001a 1D       		.byte	(.L4-.L6)/2
 139 001b 1D       		.byte	(.L4-.L6)/2
 140 001c 1D       		.byte	(.L4-.L6)/2
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 4
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 4
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 141 001d 1D       		.byte	(.L4-.L6)/2
 142 001e 1D       		.byte	(.L4-.L6)/2
 143 001f 1D       		.byte	(.L4-.L6)/2
 144 0020 6C       		.byte	(.L7-.L6)/2
 145 0021 1D       		.byte	(.L4-.L6)/2
 146 0022 1D       		.byte	(.L4-.L6)/2
 147 0023 1D       		.byte	(.L4-.L6)/2
 148 0024 1D       		.byte	(.L4-.L6)/2
 149 0025 1D       		.byte	(.L4-.L6)/2
 150 0026 1D       		.byte	(.L4-.L6)/2
 151 0027 1D       		.byte	(.L4-.L6)/2
 152 0028 7C       		.byte	(.L5-.L6)/2
 153 0029 00       		.p2align 1
 154              	.L12:
=======
 203              		.loc 1 11 5 is_stmt 1 view .LVU18
  13:Core/Src/menu.cpp ****     {
 204              		.loc 1 13 5 view .LVU19
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
  13:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/ccXHb2EA.s 			page 14


 205              		.loc 1 13 13 is_stmt 0 view .LVU20
 206 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 207 0008 182B     		cmp	r3, #24
 208 000a 1ED8     		bhi	.L15
 209 000c DFE803F0 		tbb	[pc, r3]
 210              	.L17:
 211 0010 0D       		.byte	(.L23-.L17)/2
 212 0011 29       		.byte	(.L22-.L17)/2
 213 0012 39       		.byte	(.L21-.L17)/2
 214 0013 4C       		.byte	(.L20-.L17)/2
 215 0014 1D       		.byte	(.L15-.L17)/2
 216 0015 1D       		.byte	(.L15-.L17)/2
 217 0016 1D       		.byte	(.L15-.L17)/2
 218 0017 1D       		.byte	(.L15-.L17)/2
 219 0018 5C       		.byte	(.L19-.L17)/2
 220 0019 1D       		.byte	(.L15-.L17)/2
 221 001a 1D       		.byte	(.L15-.L17)/2
 222 001b 1D       		.byte	(.L15-.L17)/2
 223 001c 1D       		.byte	(.L15-.L17)/2
 224 001d 1D       		.byte	(.L15-.L17)/2
 225 001e 1D       		.byte	(.L15-.L17)/2
 226 001f 1D       		.byte	(.L15-.L17)/2
 227 0020 6C       		.byte	(.L18-.L17)/2
 228 0021 1D       		.byte	(.L15-.L17)/2
 229 0022 1D       		.byte	(.L15-.L17)/2
 230 0023 1D       		.byte	(.L15-.L17)/2
 231 0024 1D       		.byte	(.L15-.L17)/2
 232 0025 1D       		.byte	(.L15-.L17)/2
 233 0026 1D       		.byte	(.L15-.L17)/2
 234 0027 1D       		.byte	(.L15-.L17)/2
 235 0028 7C       		.byte	(.L16-.L17)/2
 236 0029 00       		.p2align 1
 237              	.L23:
  15:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
 238              		.loc 1 15 9 is_stmt 1 view .LVU21
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 239              		.loc 1 16 13 view .LVU22
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 240              		.loc 1 16 20 is_stmt 0 view .LVU23
 241 002a 831C     		adds	r3, r0, #2
 242 002c 821D     		adds	r2, r0, #6
 243 002e 3F49     		ldr	r1, .L25
 244 0030 02A8     		add	r0, sp, #8
 245              	.LVL6:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 246              		.loc 1 16 20 view .LVU24
 247 0032 FFF7FEFF 		bl	sprintf
 248              	.LVL7:
  17:Core/Src/menu.cpp ****             break; 
 249              		.loc 1 17 13 is_stmt 1 view .LVU25
  17:Core/Src/menu.cpp ****             break; 
 250              		.loc 1 17 30 is_stmt 0 view .LVU26
 251 0036 3E4B     		ldr	r3, .L25+4
 252 0038 1322     		movs	r2, #19
 253 003a 0192     		str	r2, [sp, #4]
 254 003c 0022     		movs	r2, #0
 255 003e 0092     		str	r2, [sp]
ARM GAS  /tmp/ccXHb2EA.s 			page 15


 256 0040 0CCB     		ldm	r3, {r2, r3}
 257 0042 02A9     		add	r1, sp, #8
 258 0044 6069     		ldr	r0, [r4, #20]
 259 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 260              	.LVL8:
 261              	.L15:
  46:Core/Src/menu.cpp **** 
 262              		.loc 1 46 5 is_stmt 1 view .LVU27
  46:Core/Src/menu.cpp **** 
 263              		.loc 1 46 22 is_stmt 0 view .LVU28
 264 004a 3A4B     		ldr	r3, .L25+8
 265 004c 2E22     		movs	r2, #46
 266 004e 0192     		str	r2, [sp, #4]
 267 0050 0022     		movs	r2, #0
 268 0052 0092     		str	r2, [sp]
 269 0054 0CCB     		ldm	r3, {r2, r3}
 270 0056 3849     		ldr	r1, .L25+12
 271 0058 6069     		ldr	r0, [r4, #20]
 272 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 273              	.LVL9:
  48:Core/Src/menu.cpp **** 
 274              		.loc 1 48 1 view .LVU29
 275 005e 08B0     		add	sp, sp, #32
 276              	.LCFI5:
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 8
 279              		@ sp needed
 280 0060 10BD     		pop	{r4, pc}
 281              	.LVL10:
 282              	.L22:
 283              	.LCFI6:
 284              		.cfi_restore_state
  19:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
 285              		.loc 1 19 9 is_stmt 1 view .LVU30
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 286              		.loc 1 20 13 view .LVU31
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 287              		.loc 1 20 20 is_stmt 0 view .LVU32
 288 0062 364A     		ldr	r2, .L25+16
 289 0064 02AB     		add	r3, sp, #8
 290 0066 07CA     		ldm	r2, {r0, r1, r2}
 291              	.LVL11:
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 292              		.loc 1 20 20 view .LVU33
 293 0068 03C3     		stmia	r3!, {r0, r1}
 294 006a 1A80     		strh	r2, [r3]	@ movhi
  21:Core/Src/menu.cpp ****             break;
 295              		.loc 1 21 13 is_stmt 1 view .LVU34
  21:Core/Src/menu.cpp ****             break;
 296              		.loc 1 21 30 is_stmt 0 view .LVU35
 297 006c 304B     		ldr	r3, .L25+4
 298 006e 1322     		movs	r2, #19
 299 0070 0192     		str	r2, [sp, #4]
 300 0072 0022     		movs	r2, #0
 301 0074 0092     		str	r2, [sp]
 302 0076 0CCB     		ldm	r3, {r2, r3}
 303 0078 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccXHb2EA.s 			page 16


 304 007a 6069     		ldr	r0, [r4, #20]
 305 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 306              	.LVL12:
 307 0080 E3E7     		b	.L15
 308              	.LVL13:
 309              	.L21:
  23:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
 310              		.loc 1 23 9 is_stmt 1 view .LVU36
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 24 13 view .LVU37
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 312              		.loc 1 24 20 is_stmt 0 view .LVU38
 313 0082 2F4A     		ldr	r2, .L25+20
 314 0084 02AB     		add	r3, sp, #8
 315 0086 07CA     		ldm	r2, {r0, r1, r2}
 316              	.LVL14:
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 317              		.loc 1 24 20 view .LVU39
 318 0088 03C3     		stmia	r3!, {r0, r1}
 319 008a 23F8022B 		strh	r2, [r3], #2	@ movhi
 320 008e 120C     		lsrs	r2, r2, #16
 321 0090 1A70     		strb	r2, [r3]
  25:Core/Src/menu.cpp ****             break;
 322              		.loc 1 25 13 is_stmt 1 view .LVU40
  25:Core/Src/menu.cpp ****             break;
 323              		.loc 1 25 30 is_stmt 0 view .LVU41
 324 0092 274B     		ldr	r3, .L25+4
 325 0094 1322     		movs	r2, #19
 326 0096 0192     		str	r2, [sp, #4]
 327 0098 0022     		movs	r2, #0
 328 009a 0092     		str	r2, [sp]
 329 009c 0CCB     		ldm	r3, {r2, r3}
 330 009e 02A9     		add	r1, sp, #8
 331 00a0 6069     		ldr	r0, [r4, #20]
 332 00a2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 333              	.LVL15:
 334 00a6 D0E7     		b	.L15
 335              	.LVL16:
 336              	.L20:
  27:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
 337              		.loc 1 27 9 is_stmt 1 view .LVU42
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 338              		.loc 1 28 13 view .LVU43
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 339              		.loc 1 28 20 is_stmt 0 view .LVU44
 340 00a8 264A     		ldr	r2, .L25+24
 341 00aa 02AB     		add	r3, sp, #8
 342 00ac 07CA     		ldm	r2, {r0, r1, r2}
 343              	.LVL17:
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 344              		.loc 1 28 20 view .LVU45
 345 00ae 03C3     		stmia	r3!, {r0, r1}
 346 00b0 1A70     		strb	r2, [r3]
  29:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
  30:Core/Src/menu.cpp ****         case MENU_CH_IN:
  31:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 5
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 5
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


=======
 347              		.loc 1 29 13 is_stmt 1 view .LVU46
  29:Core/Src/menu.cpp ****             break;
 348              		.loc 1 29 30 is_stmt 0 view .LVU47
ARM GAS  /tmp/ccXHb2EA.s 			page 17


 349 00b2 1F4B     		ldr	r3, .L25+4
 350 00b4 1322     		movs	r2, #19
 351 00b6 0192     		str	r2, [sp, #4]
 352 00b8 0022     		movs	r2, #0
 353 00ba 0092     		str	r2, [sp]
 354 00bc 0CCB     		ldm	r3, {r2, r3}
 355 00be 02A9     		add	r1, sp, #8
 356 00c0 6069     		ldr	r0, [r4, #20]
 357 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 358              	.LVL18:
 359 00c6 C0E7     		b	.L15
 360              	.LVL19:
 361              	.L19:
  31:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
 362              		.loc 1 31 9 is_stmt 1 view .LVU48
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 363              		.loc 1 32 13 view .LVU49
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 364              		.loc 1 32 20 is_stmt 0 view .LVU50
 365 00c8 821D     		adds	r2, r0, #6
 366 00ca 1F49     		ldr	r1, .L25+28
 367 00cc 02A8     		add	r0, sp, #8
 368              	.LVL20:
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 369              		.loc 1 32 20 view .LVU51
 370 00ce FFF7FEFF 		bl	sprintf
 371              	.LVL21:
  33:Core/Src/menu.cpp ****             break;
 372              		.loc 1 33 13 is_stmt 1 view .LVU52
  33:Core/Src/menu.cpp ****             break;
 373              		.loc 1 33 30 is_stmt 0 view .LVU53
 374 00d2 174B     		ldr	r3, .L25+4
 375 00d4 1322     		movs	r2, #19
 376 00d6 0192     		str	r2, [sp, #4]
 377 00d8 0022     		movs	r2, #0
 378 00da 0092     		str	r2, [sp]
 379 00dc 0CCB     		ldm	r3, {r2, r3}
 380 00de 02A9     		add	r1, sp, #8
 381 00e0 6069     		ldr	r0, [r4, #20]
 382 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 383              	.LVL22:
 384 00e6 B0E7     		b	.L15
 385              	.LVL23:
 386              	.L18:
  35:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
 387              		.loc 1 35 9 is_stmt 1 view .LVU54
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 388              		.loc 1 36 13 view .LVU55
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 389              		.loc 1 36 20 is_stmt 0 view .LVU56
 390 00e8 821C     		adds	r2, r0, #2
 391 00ea 1849     		ldr	r1, .L25+32
 392 00ec 02A8     		add	r0, sp, #8
 393              	.LVL24:
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 394              		.loc 1 36 20 view .LVU57
 395 00ee FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccXHb2EA.s 			page 18


 396              	.LVL25:
  37:Core/Src/menu.cpp ****             break;
 397              		.loc 1 37 13 is_stmt 1 view .LVU58
  37:Core/Src/menu.cpp ****             break;
 398              		.loc 1 37 30 is_stmt 0 view .LVU59
 399 00f2 0F4B     		ldr	r3, .L25+4
 400 00f4 1322     		movs	r2, #19
 401 00f6 0192     		str	r2, [sp, #4]
 402 00f8 0022     		movs	r2, #0
 403 00fa 0092     		str	r2, [sp]
 404 00fc 0CCB     		ldm	r3, {r2, r3}
 405 00fe 02A9     		add	r1, sp, #8
 406 0100 6069     		ldr	r0, [r4, #20]
 407 0102 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 408              	.LVL26:
 409 0106 A0E7     		b	.L15
 410              	.LVL27:
 411              	.L16:
  39:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
 412              		.loc 1 39 9 is_stmt 1 view .LVU60
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 413              		.loc 1 40 13 view .LVU61
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 414              		.loc 1 40 20 is_stmt 0 view .LVU62
 415 0108 00F10E02 		add	r2, r0, #14
 416 010c 1049     		ldr	r1, .L25+36
 417 010e 02A8     		add	r0, sp, #8
 418              	.LVL28:
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 419              		.loc 1 40 20 view .LVU63
 420 0110 FFF7FEFF 		bl	sprintf
 421              	.LVL29:
  41:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
  42:Core/Src/menu.cpp ****         default:
  43:Core/Src/menu.cpp ****             break;
  44:Core/Src/menu.cpp ****     }
  45:Core/Src/menu.cpp ****     oled1->oled_print("menu  back", Font_11x18,0,46);   
 179              		.loc 1 45 5 is_stmt 1 view .LVU17
 180              		.loc 1 45 22 is_stmt 0 view .LVU18
 181 004a 3A4B     		ldr	r3, .L14+8
 182 004c 2E22     		movs	r2, #46
 183 004e 0192     		str	r2, [sp, #4]
 184 0050 0022     		movs	r2, #0
 185 0052 0092     		str	r2, [sp]
 186 0054 0CCB     		ldm	r3, {r2, r3}
 187 0056 3849     		ldr	r1, .L14+12
 188 0058 2069     		ldr	r0, [r4, #16]
 189 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 190              	.LVL5:
  46:Core/Src/menu.cpp **** 
  47:Core/Src/menu.cpp **** }
 191              		.loc 1 47 1 view .LVU19
 192 005e 07B0     		add	sp, sp, #28
 193              	.LCFI4:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 12
 196              		@ sp needed
 197 0060 30BD     		pop	{r4, r5, pc}
 198              	.LVL6:
 199              	.L11:
 200              	.LCFI5:
 201              		.cfi_restore_state
  18:Core/Src/menu.cpp ****             sprintf(temp, "    CHAN    ");
 202              		.loc 1 18 9 is_stmt 1 view .LVU20
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 203              		.loc 1 19 13 view .LVU21
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 204              		.loc 1 19 20 is_stmt 0 view .LVU22
 205 0062 364B     		ldr	r3, .L14+16
 206 0064 02AD     		add	r5, sp, #8
 207 0066 0FCB     		ldm	r3, {r0, r1, r2, r3}
 208              	.LVL7:
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 209              		.loc 1 19 20 view .LVU23
 210 0068 07C5     		stmia	r5!, {r0, r1, r2}
 211 006a 2B70     		strb	r3, [r5]
  20:Core/Src/menu.cpp ****             break;
 212              		.loc 1 20 13 is_stmt 1 view .LVU24
  20:Core/Src/menu.cpp ****             break;
 213              		.loc 1 20 30 is_stmt 0 view .LVU25
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 6
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 6
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 214 006c 304B     		ldr	r3, .L14+4
 215 006e 1322     		movs	r2, #19
 216 0070 0192     		str	r2, [sp, #4]
 217 0072 0022     		movs	r2, #0
 218 0074 0092     		str	r2, [sp]
 219 0076 0CCB     		ldm	r3, {r2, r3}
 220 0078 02A9     		add	r1, sp, #8
 221 007a 2069     		ldr	r0, [r4, #16]
 222 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 223              	.LVL8:
 224 0080 E3E7     		b	.L4
 225              	.LVL9:
 226              	.L10:
  22:Core/Src/menu.cpp ****             sprintf(temp, "   SQUASH   ");
 227              		.loc 1 22 9 is_stmt 1 view .LVU26
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 228              		.loc 1 23 13 view .LVU27
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 229              		.loc 1 23 20 is_stmt 0 view .LVU28
 230 0082 2F4B     		ldr	r3, .L14+20
 231 0084 02AD     		add	r5, sp, #8
 232 0086 0FCB     		ldm	r3, {r0, r1, r2, r3}
 233              	.LVL10:
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 234              		.loc 1 23 20 view .LVU29
 235 0088 07C5     		stmia	r5!, {r0, r1, r2}
 236 008a 2B70     		strb	r3, [r5]
  24:Core/Src/menu.cpp ****             break;
 237              		.loc 1 24 13 is_stmt 1 view .LVU30
  24:Core/Src/menu.cpp ****             break;
 238              		.loc 1 24 30 is_stmt 0 view .LVU31
 239 008c 284B     		ldr	r3, .L14+4
 240 008e 1322     		movs	r2, #19
 241 0090 0192     		str	r2, [sp, #4]
 242 0092 0022     		movs	r2, #0
 243 0094 0092     		str	r2, [sp]
 244 0096 0CCB     		ldm	r3, {r2, r3}
 245 0098 02A9     		add	r1, sp, #8
 246 009a 2069     		ldr	r0, [r4, #16]
 247 009c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 248              	.LVL11:
 249 00a0 D3E7     		b	.L4
 250              	.LVL12:
 251              	.L9:
  26:Core/Src/menu.cpp ****             sprintf(temp, " Disp TMO "); 
 252              		.loc 1 26 9 is_stmt 1 view .LVU32
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 253              		.loc 1 27 13 view .LVU33
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 254              		.loc 1 27 20 is_stmt 0 view .LVU34
 255 00a2 284A     		ldr	r2, .L14+24
 256 00a4 02AB     		add	r3, sp, #8
 257 00a6 07CA     		ldm	r2, {r0, r1, r2}
 258              	.LVL13:
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 259              		.loc 1 27 20 view .LVU35
 260 00a8 03C3     		stmia	r3!, {r0, r1}
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 7
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 7
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 261 00aa 23F8022B 		strh	r2, [r3], #2	@ movhi
 262 00ae 120C     		lsrs	r2, r2, #16
 263 00b0 1A70     		strb	r2, [r3]
  28:Core/Src/menu.cpp ****             break;
 264              		.loc 1 28 13 is_stmt 1 view .LVU36
  28:Core/Src/menu.cpp ****             break;
 265              		.loc 1 28 30 is_stmt 0 view .LVU37
 266 00b2 1F4B     		ldr	r3, .L14+4
 267 00b4 1322     		movs	r2, #19
 268 00b6 0192     		str	r2, [sp, #4]
 269 00b8 0022     		movs	r2, #0
 270 00ba 0092     		str	r2, [sp]
 271 00bc 0CCB     		ldm	r3, {r2, r3}
 272 00be 02A9     		add	r1, sp, #8
 273 00c0 2069     		ldr	r0, [r4, #16]
 274 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 275              	.LVL14:
 276 00c6 C0E7     		b	.L4
 277              	.LVL15:
 278              	.L8:
  30:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
 279              		.loc 1 30 9 is_stmt 1 view .LVU38
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 280              		.loc 1 31 13 view .LVU39
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 281              		.loc 1 31 20 is_stmt 0 view .LVU40
 282 00c8 421D     		adds	r2, r0, #5
 283 00ca 1F49     		ldr	r1, .L14+28
 284 00cc 02A8     		add	r0, sp, #8
 285              	.LVL16:
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 286              		.loc 1 31 20 view .LVU41
 287 00ce FFF7FEFF 		bl	sprintf
 288              	.LVL17:
  32:Core/Src/menu.cpp ****             break;
 289              		.loc 1 32 13 is_stmt 1 view .LVU42
  32:Core/Src/menu.cpp ****             break;
 290              		.loc 1 32 30 is_stmt 0 view .LVU43
 291 00d2 174B     		ldr	r3, .L14+4
 292 00d4 1322     		movs	r2, #19
 293 00d6 0192     		str	r2, [sp, #4]
 294 00d8 0022     		movs	r2, #0
 295 00da 0092     		str	r2, [sp]
 296 00dc 0CCB     		ldm	r3, {r2, r3}
 297 00de 02A9     		add	r1, sp, #8
 298 00e0 2069     		ldr	r0, [r4, #16]
 299 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 300              	.LVL18:
 301 00e6 B0E7     		b	.L4
 302              	.LVL19:
 303              	.L7:
  34:Core/Src/menu.cpp ****             sprintf(temp, "   SQ:%.2s   ",sq);
 304              		.loc 1 34 9 is_stmt 1 view .LVU44
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 305              		.loc 1 35 13 view .LVU45
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 306              		.loc 1 35 20 is_stmt 0 view .LVU46
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 8
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 8
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 307 00e8 821C     		adds	r2, r0, #2
 308 00ea 1849     		ldr	r1, .L14+32
 309 00ec 02A8     		add	r0, sp, #8
 310              	.LVL20:
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 35 20 view .LVU47
 312 00ee FFF7FEFF 		bl	sprintf
 313              	.LVL21:
  36:Core/Src/menu.cpp ****             break;
 314              		.loc 1 36 13 is_stmt 1 view .LVU48
  36:Core/Src/menu.cpp ****             break;
 315              		.loc 1 36 30 is_stmt 0 view .LVU49
 316 00f2 0F4B     		ldr	r3, .L14+4
 317 00f4 1322     		movs	r2, #19
 318 00f6 0192     		str	r2, [sp, #4]
 319 00f8 0022     		movs	r2, #0
 320 00fa 0092     		str	r2, [sp]
 321 00fc 0CCB     		ldm	r3, {r2, r3}
 322 00fe 02A9     		add	r1, sp, #8
 323 0100 2069     		ldr	r0, [r4, #16]
 324 0102 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 325              	.LVL22:
 326 0106 A0E7     		b	.L4
 327              	.LVL23:
 328              	.L5:
  38:Core/Src/menu.cpp ****             sprintf(temp, "   DS:%.2s   ",tmo);
 329              		.loc 1 38 9 is_stmt 1 view .LVU50
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 330              		.loc 1 39 13 view .LVU51
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 331              		.loc 1 39 20 is_stmt 0 view .LVU52
 332 0108 00F10B02 		add	r2, r0, #11
 333 010c 1049     		ldr	r1, .L14+36
 334 010e 02A8     		add	r0, sp, #8
 335              	.LVL24:
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 336              		.loc 1 39 20 view .LVU53
 337 0110 FFF7FEFF 		bl	sprintf
 338              	.LVL25:
  40:Core/Src/menu.cpp ****             break;
 339              		.loc 1 40 13 is_stmt 1 view .LVU54
  40:Core/Src/menu.cpp ****             break;
 340              		.loc 1 40 30 is_stmt 0 view .LVU55
 341 0114 064B     		ldr	r3, .L14+4
 342 0116 1322     		movs	r2, #19
 343 0118 0192     		str	r2, [sp, #4]
 344 011a 0022     		movs	r2, #0
 345 011c 0092     		str	r2, [sp]
 346 011e 0CCB     		ldm	r3, {r2, r3}
 347 0120 02A9     		add	r1, sp, #8
 348 0122 2069     		ldr	r0, [r4, #16]
 349 0124 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 350              	.LVL26:
 351 0128 8FE7     		b	.L4
 352              	.L15:
 353 012a 00BF     		.align	2
 354              	.L14:
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 9
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 9
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 355 012c 00000000 		.word	.LC0
 356 0130 00000000 		.word	Font_16x26
 357 0134 00000000 		.word	Font_11x18
 358 0138 6C000000 		.word	.LC7
 359 013c 10000000 		.word	.LC1
 360 0140 20000000 		.word	.LC2
 361 0144 30000000 		.word	.LC3
 362 0148 3C000000 		.word	.LC4
 363 014c 4C000000 		.word	.LC5
 364 0150 5C000000 		.word	.LC6
 365              		.cfi_endproc
 366              	.LFE141:
 367              		.fnend
 369              		.section	.rodata._ZN4menu7menu_okEv.str1.4,"aMS",%progbits,1
 370              		.align	2
 371              	.LC8:
 372 0000 50726573 		.ascii	"Press Okay to start recording\012\011Click again to"
 372      73204F6B 
 372      61792074 
 372      6F207374 
 372      61727420 
 373 002d 2073746F 		.ascii	" stop\000"
 373      7000
 374 0033 00       		.align	2
 375              	.LC9:
 376 0034 436C6963 		.ascii	"Click okay to play The track:\000"
 376      6B206F6B 
 376      61792074 
 376      6F20706C 
 376      61792054 
 377              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 378              		.align	1
 379              		.global	_ZN4menu7menu_okEv
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	_ZN4menu7menu_okEv:
 386              		.fnstart
 387              	.LVL27:
 388              	.LFB142:
  48:Core/Src/menu.cpp **** 
  49:Core/Src/menu.cpp **** void menu::menu_ok()
  50:Core/Src/menu.cpp **** {
 389              		.loc 1 50 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		.loc 1 50 1 is_stmt 0 view .LVU57
 394 0000 30B5     		push	{r4, r5, lr}
 395              		.save {r4, r5, lr}
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 12
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
 401              		.pad #12
ARM GAS  /tmp/cceDqxOT.s 			page 10


 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 24
 405 0004 0446     		mov	r4, r0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 406              		.loc 1 51 5 is_stmt 1 view .LVU58
 407              		.loc 1 51 28 is_stmt 0 view .LVU59
 408 0006 0069     		ldr	r0, [r0, #16]
 409              	.LVL28:
 410              		.loc 1 51 28 view .LVU60
 411 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 412              	.LVL29:
 413              		.loc 1 51 5 view .LVU61
 414 000c E0B1     		cbz	r0, .L17
  52:Core/Src/menu.cpp ****     {
  53:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
<<<<<<< HEAD
 415              		.loc 1 53 9 is_stmt 1 view .LVU62
 416              		.loc 1 53 31 is_stmt 0 view .LVU63
 417 000e 2069     		ldr	r0, [r4, #16]
 418 0010 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 419              	.LVL30:
 420              	.L18:
=======
 404              		.loc 1 53 9 is_stmt 1 view .LVU62
 405              		.loc 1 53 31 is_stmt 0 view .LVU63
 406 000c 2069     		ldr	r0, [r4, #16]
 407 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccMEB0iu.s 			page 10


 408              	.LVL30:
 409              	.L18:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 422              		.loc 1 41 13 is_stmt 1 view .LVU64
  41:Core/Src/menu.cpp ****             break;
 423              		.loc 1 41 30 is_stmt 0 view .LVU65
 424 0114 064B     		ldr	r3, .L25+4
 425 0116 1322     		movs	r2, #19
 426 0118 0192     		str	r2, [sp, #4]
 427 011a 0022     		movs	r2, #0
 428 011c 0092     		str	r2, [sp]
 429 011e 0CCB     		ldm	r3, {r2, r3}
 430 0120 02A9     		add	r1, sp, #8
 431 0122 6069     		ldr	r0, [r4, #20]
 432 0124 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 433              	.LVL30:
 434 0128 8FE7     		b	.L15
 435              	.L26:
 436 012a 00BF     		.align	2
 437              	.L25:
 438 012c 00000000 		.word	.LC1
 439 0130 00000000 		.word	Font_16x26
 440 0134 00000000 		.word	Font_11x18
 441 0138 58000000 		.word	.LC8
 442 013c 10000000 		.word	.LC2
 443 0140 1C000000 		.word	.LC3
 444 0144 28000000 		.word	.LC4
ARM GAS  /tmp/ccXHb2EA.s 			page 19


 445 0148 34000000 		.word	.LC5
 446 014c 40000000 		.word	.LC6
 447 0150 4C000000 		.word	.LC7
 448              		.cfi_endproc
 449              	.LFE1987:
 450              		.fnend
 452              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 453              		.align	1
 454              		.global	_ZN4menu7menu_okEv
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	_ZN4menu7menu_okEv:
 461              		.fnstart
 462              	.LVL31:
 463              	.LFB1988:
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 464              		.loc 1 51 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 468              		.loc 1 51 1 is_stmt 0 view .LVU67
 469 0000 10B5     		push	{r4, lr}
 470              		.save {r4, lr}
 471              	.LCFI7:
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 475 0002 0446     		mov	r4, r0
  52:Core/Src/menu.cpp ****     {
 476              		.loc 1 52 5 is_stmt 1 view .LVU68
  52:Core/Src/menu.cpp ****     {
 477              		.loc 1 52 28 is_stmt 0 view .LVU69
 478 0004 4069     		ldr	r0, [r0, #20]
 479              	.LVL32:
  52:Core/Src/menu.cpp ****     {
 480              		.loc 1 52 28 view .LVU70
 481 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 482              	.LVL33:
  52:Core/Src/menu.cpp ****     {
<<<<<<< HEAD
 485              		.loc 1 52 5 view .LVU71
 486 000a A0B1     		cbz	r0, .L28
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
 483              		.loc 1 52 5 view .LVU71
 484 000a A0B1     		cbz	r0, .L28
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
  54:Core/Src/menu.cpp ****     }
 485              		.loc 1 54 9 is_stmt 1 view .LVU72
  54:Core/Src/menu.cpp ****     }
 486              		.loc 1 54 31 is_stmt 0 view .LVU73
 487 000c 6069     		ldr	r0, [r4, #20]
 488 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 489              	.LVL34:
 490              	.L29:
  62:Core/Src/menu.cpp ****     {
 491              		.loc 1 62 5 is_stmt 1 view .LVU74
  62:Core/Src/menu.cpp ****     {
 492              		.loc 1 62 13 is_stmt 0 view .LVU75
 493 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccXHb2EA.s 			page 20


 494 0014 013B     		subs	r3, r3, #1
 495 0016 172B     		cmp	r3, #23
 496 0018 16D8     		bhi	.L27
 497 001a DFE803F0 		tbb	[pc, r3]
 498              	.L32:
 499 001e 13       		.byte	(.L37-.L32)/2
 500 001f 16       		.byte	(.L36-.L32)/2
 501 0020 19       		.byte	(.L35-.L32)/2
 502 0021 15       		.byte	(.L27-.L32)/2
 503 0022 15       		.byte	(.L27-.L32)/2
 504 0023 15       		.byte	(.L27-.L32)/2
 505 0024 15       		.byte	(.L27-.L32)/2
 506 0025 1C       		.byte	(.L34-.L32)/2
 507 0026 15       		.byte	(.L27-.L32)/2
 508 0027 15       		.byte	(.L27-.L32)/2
 509 0028 15       		.byte	(.L27-.L32)/2
 510 0029 15       		.byte	(.L27-.L32)/2
 511 002a 15       		.byte	(.L27-.L32)/2
 512 002b 15       		.byte	(.L27-.L32)/2
 513 002c 15       		.byte	(.L27-.L32)/2
 514 002d 29       		.byte	(.L33-.L32)/2
 515 002e 15       		.byte	(.L27-.L32)/2
 516 002f 15       		.byte	(.L27-.L32)/2
 517 0030 15       		.byte	(.L27-.L32)/2
 518 0031 15       		.byte	(.L27-.L32)/2
 519 0032 15       		.byte	(.L27-.L32)/2
 520 0033 15       		.byte	(.L27-.L32)/2
 521 0034 15       		.byte	(.L27-.L32)/2
 522 0035 36       		.byte	(.L31-.L32)/2
 523              		.p2align 1
 524              	.L28:
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 525              		.loc 1 58 9 is_stmt 1 view .LVU76
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 526              		.loc 1 58 23 is_stmt 0 view .LVU77
 527 0036 6069     		ldr	r0, [r4, #20]
 528 0038 FFF7FEFF 		bl	_ZN4oled7oled_onEv
 529              	.LVL35:
  59:Core/Src/menu.cpp ****     }
<<<<<<< HEAD
<<<<<<< HEAD
  60:Core/Src/menu.cpp **** 
  61:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
 421              		.loc 1 61 5 is_stmt 1 view .LVU64
 422              		.loc 1 61 13 is_stmt 0 view .LVU65
 423 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 424 0016 013B     		subs	r3, r3, #1
 425 0018 272B     		cmp	r3, #39
 426 001a 1ED8     		bhi	.L16
 427 001c DFE803F0 		tbb	[pc, r3]
 428              	.L21:
 429 0020 1B       		.byte	(.L30-.L21)/2
 430 0021 1F       		.byte	(.L29-.L21)/2
 431 0022 22       		.byte	(.L28-.L21)/2
 432 0023 32       		.byte	(.L27-.L21)/2
 433 0024 35       		.byte	(.L26-.L21)/2
 434 0025 1D       		.byte	(.L16-.L21)/2
 435 0026 1D       		.byte	(.L16-.L21)/2
 436 0027 25       		.byte	(.L25-.L21)/2
 437 0028 1D       		.byte	(.L16-.L21)/2
 438 0029 1D       		.byte	(.L16-.L21)/2
 439 002a 1D       		.byte	(.L16-.L21)/2
 440 002b 1D       		.byte	(.L16-.L21)/2
 441 002c 1D       		.byte	(.L16-.L21)/2
 442 002d 1D       		.byte	(.L16-.L21)/2
 443 002e 1D       		.byte	(.L16-.L21)/2
 444 002f 38       		.byte	(.L24-.L21)/2
 445 0030 1D       		.byte	(.L16-.L21)/2
 446 0031 1D       		.byte	(.L16-.L21)/2
 447 0032 1D       		.byte	(.L16-.L21)/2
ARM GAS  /tmp/cceDqxOT.s 			page 11


 448 0033 1D       		.byte	(.L16-.L21)/2
 449 0034 1D       		.byte	(.L16-.L21)/2
 450 0035 1D       		.byte	(.L16-.L21)/2
 451 0036 1D       		.byte	(.L16-.L21)/2
 452 0037 45       		.byte	(.L23-.L21)/2
 453 0038 1D       		.byte	(.L16-.L21)/2
 454 0039 1D       		.byte	(.L16-.L21)/2
 455 003a 1D       		.byte	(.L16-.L21)/2
 456 003b 1D       		.byte	(.L16-.L21)/2
 457 003c 1D       		.byte	(.L16-.L21)/2
 458 003d 1D       		.byte	(.L16-.L21)/2
 459 003e 1D       		.byte	(.L16-.L21)/2
 460 003f 4E       		.byte	(.L22-.L21)/2
 461 0040 1D       		.byte	(.L16-.L21)/2
 462 0041 1D       		.byte	(.L16-.L21)/2
 463 0042 1D       		.byte	(.L16-.L21)/2
 464 0043 1D       		.byte	(.L16-.L21)/2
 465 0044 1D       		.byte	(.L16-.L21)/2
 466 0045 1D       		.byte	(.L16-.L21)/2
 467 0046 1D       		.byte	(.L16-.L21)/2
 468 0047 59       		.byte	(.L20-.L21)/2
 469              		.p2align 1
 470              	.L17:
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 471              		.loc 1 57 9 is_stmt 1 view .LVU66
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 472              		.loc 1 57 23 is_stmt 0 view .LVU67
 473 0048 2069     		ldr	r0, [r4, #16]
 474 004a FFF7FEFF 		bl	_ZN4oled7oled_onEv
 475              	.LVL31:
  58:Core/Src/menu.cpp ****     }
 476              		.loc 1 58 9 is_stmt 1 view .LVU68
  58:Core/Src/menu.cpp ****     }
<<<<<<< HEAD
 477              		.loc 1 58 31 is_stmt 0 view .LVU69
 478 004e 2069     		ldr	r0, [r4, #16]
 479 0050 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 480              	.LVL32:
 481 0054 DEE7     		b	.L18
 482              	.L30:
=======
 450              		.loc 1 58 31 is_stmt 0 view .LVU69
 451 003c 2069     		ldr	r0, [r4, #16]
 452 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccMEB0iu.s 			page 11


 453              	.LVL32:
 454 0042 E6E7     		b	.L18
 455              	.L26:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
  62:Core/Src/menu.cpp ****     {
  63:Core/Src/menu.cpp ****     case MENU_HOME:
  64:Core/Src/menu.cpp ****         break;
  65:Core/Src/menu.cpp ****     case MENU_CH:
 483              		.loc 1 65 5 is_stmt 1 view .LVU70
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 484              		.loc 1 66 9 view .LVU71
 485              		.loc 1 66 19 is_stmt 0 view .LVU72
 486 0056 0823     		movs	r3, #8
 487 0058 2370     		strb	r3, [r4]
  67:Core/Src/menu.cpp ****         break;
 488              		.loc 1 67 9 is_stmt 1 view .LVU73
 489              	.L16:
=======
 532              		.loc 1 59 9 is_stmt 1 view .LVU78
=======
 530              		.loc 1 59 9 is_stmt 1 view .LVU78
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
  59:Core/Src/menu.cpp ****     }
 531              		.loc 1 59 31 is_stmt 0 view .LVU79
 532 003c 6069     		ldr	r0, [r4, #20]
 533 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 534              	.LVL36:
 535 0042 E6E7     		b	.L29
 536              	.L37:
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 537              		.loc 1 66 5 is_stmt 1 view .LVU80
  67:Core/Src/menu.cpp ****         break;
 538              		.loc 1 67 9 view .LVU81
  67:Core/Src/menu.cpp ****         break;
 539              		.loc 1 67 19 is_stmt 0 view .LVU82
 540 0044 0823     		movs	r3, #8
 541 0046 2370     		strb	r3, [r4]
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 542              		.loc 1 68 9 is_stmt 1 view .LVU83
ARM GAS  /tmp/ccXHb2EA.s 			page 21


<<<<<<< HEAD
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 544              		.loc 1 68 9 is_stmt 1 view .LVU83
 545              	.L27:
=======
 543              	.L27:
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
 109:Core/Src/menu.cpp **** 
 544              		.loc 1 109 1 is_stmt 0 view .LVU84
 545 0048 10BD     		pop	{r4, pc}
 546              	.LVL37:
 547              	.L36:
  69:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
 548              		.loc 1 69 5 is_stmt 1 view .LVU85
  70:Core/Src/menu.cpp ****         break;
 549              		.loc 1 70 9 view .LVU86
  70:Core/Src/menu.cpp ****         break;
 550              		.loc 1 70 19 is_stmt 0 view .LVU87
 551 004a 1023     		movs	r3, #16
 552 004c 2370     		strb	r3, [r4]
  71:Core/Src/menu.cpp ****     case MENU_TMO:
 553              		.loc 1 71 9 is_stmt 1 view .LVU88
 554 004e FBE7     		b	.L27
 555              	.L35:
  72:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
<<<<<<< HEAD
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 12


=======
 558              		.loc 1 72 5 view .LVU89
  73:Core/Src/menu.cpp ****         break;
 559              		.loc 1 73 9 view .LVU90
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
 556              		.loc 1 72 5 view .LVU89
  73:Core/Src/menu.cpp ****         break;
 557              		.loc 1 73 9 view .LVU90
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
  73:Core/Src/menu.cpp ****         break;
 558              		.loc 1 73 19 is_stmt 0 view .LVU91
 559 0050 1823     		movs	r3, #24
 560 0052 2370     		strb	r3, [r4]
  74:Core/Src/menu.cpp ****     case MENU_CH_IN:
 561              		.loc 1 74 9 is_stmt 1 view .LVU92
 562 0054 F8E7     		b	.L27
 563              	.L34:
  75:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 564              		.loc 1 75 5 view .LVU93
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 565              		.loc 1 76 9 view .LVU94
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 566              		.loc 1 76 17 is_stmt 0 view .LVU95
 567 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 568 0058 83F00103 		eor	r3, r3, #1
 569 005c E374     		strb	r3, [r4, #19]
  77:Core/Src/menu.cpp ****         {
 570              		.loc 1 77 9 is_stmt 1 view .LVU96
 571 005e 002B     		cmp	r3, #0
 572 0060 F2D1     		bne	.L27
  79:Core/Src/menu.cpp ****             cursorPos=0;
 573              		.loc 1 79 13 view .LVU97
  79:Core/Src/menu.cpp ****             cursorPos=0;
 574              		.loc 1 79 23 is_stmt 0 view .LVU98
 575 0062 A01D     		adds	r0, r4, #6
 576 0064 FFF7FEFF 		bl	atoi
 577              	.LVL38:
  79:Core/Src/menu.cpp ****             cursorPos=0;
 578              		.loc 1 79 18 view .LVU99
 579 0068 6072     		strb	r0, [r4, #9]
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 580              		.loc 1 80 13 is_stmt 1 view .LVU100
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 581              		.loc 1 80 22 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccXHb2EA.s 			page 22


<<<<<<< HEAD
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
<<<<<<< HEAD
  81:Core/Src/menu.cpp ****         }
  82:Core/Src/menu.cpp ****         break;
<<<<<<< HEAD
  83:Core/Src/menu.cpp ****     case MENU_MIC_REC:
  84:Core/Src/menu.cpp ****         menu_value = MENU_MIC_REC_IN;
  85:Core/Src/menu.cpp ****         break;
  86:Core/Src/menu.cpp ****     case MENU_MIC_PLAY:
  87:Core/Src/menu.cpp ****         menu_value = MENU_MIC_PLAY_IN;
  88:Core/Src/menu.cpp ****         break;
  89:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  90:Core/Src/menu.cpp ****         cursorOn^=1;
  91:Core/Src/menu.cpp ****         if(!cursorOn)
  92:Core/Src/menu.cpp ****         {
  93:Core/Src/menu.cpp ****             chVal=atoi(sq);
  94:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  95:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  96:Core/Src/menu.cpp ****         }
  97:Core/Src/menu.cpp ****         break;
  98:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  99:Core/Src/menu.cpp ****         cursorOn%=1;
 100:Core/Src/menu.cpp ****         if(!cursorOn)
 101:Core/Src/menu.cpp ****         {
 102:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 103:Core/Src/menu.cpp ****             cursorPos=0;
 104:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 105:Core/Src/menu.cpp ****         }
 106:Core/Src/menu.cpp ****         break;
 107:Core/Src/menu.cpp ****     case MENU_MIC_REC_IN:
 108:Core/Src/menu.cpp ****         oled1->oled_print("Press Okay to start recording\n\tClick again to stop",Font_16x26,0,19);
 109:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 110:Core/Src/menu.cpp ****         break;
 111:Core/Src/menu.cpp ****     case MENU_MIC_PLAY_IN:
 112:Core/Src/menu.cpp ****          oled1->oled_print("Click okay to play The track:", Font_16x26, 0,19);
 113:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 114:Core/Src/menu.cpp ****          break;
 115:Core/Src/menu.cpp ****         
 116:Core/Src/menu.cpp ****     default:
 117:Core/Src/menu.cpp ****         break;
 118:Core/Src/menu.cpp ****     }
 119:Core/Src/menu.cpp **** 
 120:Core/Src/menu.cpp ****     
 121:Core/Src/menu.cpp **** }
 490              		.loc 1 121 1 is_stmt 0 view .LVU74
 491 005a 03B0     		add	sp, sp, #12
 492              	.LCFI8:
 493              		.cfi_remember_state
 494              		.cfi_def_cfa_offset 12
 495              		@ sp needed
 496 005c 30BD     		pop	{r4, r5, pc}
 497              	.LVL33:
ARM GAS  /tmp/cceDqxOT.s 			page 13


 498              	.L29:
 499              	.LCFI9:
 500              		.cfi_restore_state
=======
  83:Core/Src/menu.cpp ****     case MENU_SQ_IN:
=======
 583              		.loc 1 80 22 is_stmt 0 view .LVU101
 584 006a 0023     		movs	r3, #0
 585 006c A374     		strb	r3, [r4, #18]
 586 006e EBE7     		b	.L27
 587              	.L33:
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
 582 006a 0023     		movs	r3, #0
 583 006c A374     		strb	r3, [r4, #18]
 584 006e EBE7     		b	.L27
 585              	.L33:
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
  84:Core/Src/menu.cpp ****         cursorOn^=1;
 586              		.loc 1 84 5 is_stmt 1 view .LVU102
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 587              		.loc 1 85 9 view .LVU103
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 588              		.loc 1 85 17 is_stmt 0 view .LVU104
 589 0070 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 590 0072 83F00103 		eor	r3, r3, #1
 591 0076 E374     		strb	r3, [r4, #19]
  86:Core/Src/menu.cpp ****         {
 592              		.loc 1 86 9 is_stmt 1 view .LVU105
 593 0078 002B     		cmp	r3, #0
 594 007a E5D1     		bne	.L27
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 595              		.loc 1 88 13 view .LVU106
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 596              		.loc 1 88 23 is_stmt 0 view .LVU107
 597 007c A01C     		adds	r0, r4, #2
 598 007e FFF7FEFF 		bl	atoi
 599              	.LVL39:
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 600              		.loc 1 88 18 view .LVU108
 601 0082 6072     		strb	r0, [r4, #9]
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 602              		.loc 1 89 13 is_stmt 1 view .LVU109
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 603              		.loc 1 89 22 is_stmt 0 view .LVU110
 604 0084 0023     		movs	r3, #0
 605 0086 A374     		strb	r3, [r4, #18]
 606 0088 DEE7     		b	.L27
 607              	.L31:
  93:Core/Src/menu.cpp ****         cursorOn^=1;
 608              		.loc 1 93 5 is_stmt 1 view .LVU111
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 609              		.loc 1 94 9 view .LVU112
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 610              		.loc 1 94 17 is_stmt 0 view .LVU113
 611 008a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 612 008c 83F00103 		eor	r3, r3, #1
 613 0090 E374     		strb	r3, [r4, #19]
  95:Core/Src/menu.cpp ****         {
<<<<<<< HEAD
<<<<<<< HEAD
  96:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  97:Core/Src/menu.cpp ****             cursorPos=0;
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
  99:Core/Src/menu.cpp ****         }
 100:Core/Src/menu.cpp ****         break;
 101:Core/Src/menu.cpp **** 
 102:Core/Src/menu.cpp ****     default:
 103:Core/Src/menu.cpp ****         break;
 104:Core/Src/menu.cpp ****     }
 105:Core/Src/menu.cpp **** 
 106:Core/Src/menu.cpp ****     
 107:Core/Src/menu.cpp **** }
 463              		.loc 1 107 1 is_stmt 0 view .LVU74
ARM GAS  /tmp/ccMEB0iu.s 			page 12


 464 0048 38BD     		pop	{r3, r4, r5, pc}
 465              	.LVL33:
 466              	.L25:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 501              		.loc 1 68 5 is_stmt 1 view .LVU75
  69:Core/Src/menu.cpp ****         break;
 502              		.loc 1 69 9 view .LVU76
  69:Core/Src/menu.cpp ****         break;
 503              		.loc 1 69 19 is_stmt 0 view .LVU77
 504 005e 1023     		movs	r3, #16
 505 0060 2370     		strb	r3, [r4]
  70:Core/Src/menu.cpp ****     case MENU_TMO:
 506              		.loc 1 70 9 is_stmt 1 view .LVU78
 507 0062 FAE7     		b	.L16
 508              	.L28:
  71:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 509              		.loc 1 71 5 view .LVU79
  72:Core/Src/menu.cpp ****         break;
 510              		.loc 1 72 9 view .LVU80
  72:Core/Src/menu.cpp ****         break;
 511              		.loc 1 72 19 is_stmt 0 view .LVU81
 512 0064 1823     		movs	r3, #24
 513 0066 2370     		strb	r3, [r4]
  73:Core/Src/menu.cpp ****     case MENU_CH_IN:
 514              		.loc 1 73 9 is_stmt 1 view .LVU82
 515 0068 F7E7     		b	.L16
 516              	.L25:
  74:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 517              		.loc 1 74 5 view .LVU83
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 518              		.loc 1 75 9 view .LVU84
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 519              		.loc 1 75 17 is_stmt 0 view .LVU85
 520 006a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 521 006c 83F00103 		eor	r3, r3, #1
 522 0070 E373     		strb	r3, [r4, #15]
  76:Core/Src/menu.cpp ****         {
 523              		.loc 1 76 9 is_stmt 1 view .LVU86
 524 0072 002B     		cmp	r3, #0
 525 0074 F1D1     		bne	.L16
  78:Core/Src/menu.cpp ****             cursorPos=0;
 526              		.loc 1 78 13 view .LVU87
  78:Core/Src/menu.cpp ****             cursorPos=0;
 527              		.loc 1 78 23 is_stmt 0 view .LVU88
 528 0076 601D     		adds	r0, r4, #5
 529 0078 FFF7FEFF 		bl	atoi
 530              	.LVL34:
  78:Core/Src/menu.cpp ****             cursorPos=0;
 531              		.loc 1 78 18 view .LVU89
 532 007c E071     		strb	r0, [r4, #7]
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 533              		.loc 1 79 13 is_stmt 1 view .LVU90
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
<<<<<<< HEAD
 534              		.loc 1 79 22 is_stmt 0 view .LVU91
 535 007e 0023     		movs	r3, #0
 536 0080 A373     		strb	r3, [r4, #14]
 537 0082 EAE7     		b	.L16
ARM GAS  /tmp/cceDqxOT.s 			page 14


 538              	.L27:
  83:Core/Src/menu.cpp ****         menu_value = MENU_MIC_REC_IN;
 539              		.loc 1 83 5 is_stmt 1 view .LVU92
  84:Core/Src/menu.cpp ****         break;
 540              		.loc 1 84 9 view .LVU93
  84:Core/Src/menu.cpp ****         break;
 541              		.loc 1 84 20 is_stmt 0 view .LVU94
 542 0084 2023     		movs	r3, #32
 543 0086 2370     		strb	r3, [r4]
  85:Core/Src/menu.cpp ****     case MENU_MIC_PLAY:
 544              		.loc 1 85 9 is_stmt 1 view .LVU95
 545 0088 E7E7     		b	.L16
 546              	.L26:
  86:Core/Src/menu.cpp ****         menu_value = MENU_MIC_PLAY_IN;
 547              		.loc 1 86 5 view .LVU96
  87:Core/Src/menu.cpp ****         break;
 548              		.loc 1 87 9 view .LVU97
  87:Core/Src/menu.cpp ****         break;
 549              		.loc 1 87 20 is_stmt 0 view .LVU98
 550 008a 2823     		movs	r3, #40
 551 008c 2370     		strb	r3, [r4]
  88:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 552              		.loc 1 88 9 is_stmt 1 view .LVU99
 553 008e E4E7     		b	.L16
 554              	.L24:
  89:Core/Src/menu.cpp ****         cursorOn^=1;
 555              		.loc 1 89 5 view .LVU100
  90:Core/Src/menu.cpp ****         if(!cursorOn)
 556              		.loc 1 90 9 view .LVU101
  90:Core/Src/menu.cpp ****         if(!cursorOn)
 557              		.loc 1 90 17 is_stmt 0 view .LVU102
 558 0090 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 559 0092 83F00103 		eor	r3, r3, #1
 560 0096 E373     		strb	r3, [r4, #15]
  91:Core/Src/menu.cpp ****         {
 561              		.loc 1 91 9 is_stmt 1 view .LVU103
 562 0098 002B     		cmp	r3, #0
 563 009a DED1     		bne	.L16
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 564              		.loc 1 93 13 view .LVU104
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 565              		.loc 1 93 23 is_stmt 0 view .LVU105
 566 009c A01C     		adds	r0, r4, #2
 567 009e FFF7FEFF 		bl	atoi
 568              	.LVL35:
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 569              		.loc 1 93 18 view .LVU106
 570 00a2 E071     		strb	r0, [r4, #7]
  94:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 571              		.loc 1 94 13 is_stmt 1 view .LVU107
  94:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 572              		.loc 1 94 22 is_stmt 0 view .LVU108
 573 00a4 0023     		movs	r3, #0
 574 00a6 A373     		strb	r3, [r4, #14]
 575 00a8 D7E7     		b	.L16
 576              	.L23:
  98:Core/Src/menu.cpp ****         cursorOn%=1;
ARM GAS  /tmp/cceDqxOT.s 			page 15


 577              		.loc 1 98 5 is_stmt 1 view .LVU109
  99:Core/Src/menu.cpp ****         if(!cursorOn)
 578              		.loc 1 99 9 view .LVU110
  99:Core/Src/menu.cpp ****         if(!cursorOn)
 579              		.loc 1 99 17 is_stmt 0 view .LVU111
 580 00aa 0025     		movs	r5, #0
 581 00ac E573     		strb	r5, [r4, #15]
 100:Core/Src/menu.cpp ****         {
 582              		.loc 1 100 9 is_stmt 1 view .LVU112
 102:Core/Src/menu.cpp ****             cursorPos=0;
 583              		.loc 1 102 13 view .LVU113
 102:Core/Src/menu.cpp ****             cursorPos=0;
 584              		.loc 1 102 24 is_stmt 0 view .LVU114
 585 00ae 04F10B00 		add	r0, r4, #11
 586 00b2 FFF7FEFF 		bl	atoi
 587              	.LVL36:
 102:Core/Src/menu.cpp ****             cursorPos=0;
 588              		.loc 1 102 19 view .LVU115
 589 00b6 6073     		strb	r0, [r4, #13]
 103:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 590              		.loc 1 103 13 is_stmt 1 view .LVU116
 103:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 591              		.loc 1 103 22 is_stmt 0 view .LVU117
 592 00b8 A573     		strb	r5, [r4, #14]
 593 00ba CEE7     		b	.L16
 594              	.L22:
 107:Core/Src/menu.cpp ****         oled1->oled_print("Press Okay to start recording\n\tClick again to stop",Font_16x26,0,19);
 595              		.loc 1 107 5 is_stmt 1 view .LVU118
 108:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 596              		.loc 1 108 9 view .LVU119
 108:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 597              		.loc 1 108 26 is_stmt 0 view .LVU120
 598 00bc 0A4B     		ldr	r3, .L32
 599 00be 1322     		movs	r2, #19
 600 00c0 0192     		str	r2, [sp, #4]
 601 00c2 0022     		movs	r2, #0
 602 00c4 0092     		str	r2, [sp]
 603 00c6 0CCB     		ldm	r3, {r2, r3}
 604 00c8 0849     		ldr	r1, .L32+4
 605 00ca 2069     		ldr	r0, [r4, #16]
 606 00cc FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 607              	.LVL37:
 110:Core/Src/menu.cpp ****     case MENU_MIC_PLAY_IN:
 608              		.loc 1 110 9 is_stmt 1 view .LVU121
 609 00d0 C3E7     		b	.L16
 610              	.L20:
 111:Core/Src/menu.cpp ****          oled1->oled_print("Click okay to play The track:", Font_16x26, 0,19);
 611              		.loc 1 111 5 view .LVU122
 112:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 612              		.loc 1 112 10 view .LVU123
 112:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 613              		.loc 1 112 27 is_stmt 0 view .LVU124
 614 00d2 054B     		ldr	r3, .L32
 615 00d4 1322     		movs	r2, #19
 616 00d6 0192     		str	r2, [sp, #4]
 617 00d8 0022     		movs	r2, #0
 618 00da 0092     		str	r2, [sp]
ARM GAS  /tmp/cceDqxOT.s 			page 16


 619 00dc 0CCB     		ldm	r3, {r2, r3}
 620 00de 0449     		ldr	r1, .L32+8
 621 00e0 2069     		ldr	r0, [r4, #16]
 622 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 623              	.LVL38:
 114:Core/Src/menu.cpp ****         
 624              		.loc 1 114 10 is_stmt 1 view .LVU125
 625              		.loc 1 121 1 is_stmt 0 view .LVU126
 626 00e6 B8E7     		b	.L16
 627              	.L33:
 628              		.align	2
 629              	.L32:
 630 00e8 00000000 		.word	Font_16x26
 631 00ec 00000000 		.word	.LC8
 632 00f0 34000000 		.word	.LC9
 633              		.cfi_endproc
 634              	.LFE142:
 635              		.fnend
 637              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 638              		.align	1
 639              		.global	_ZN4menu9menu_nextEv
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 643              		.fpu fpv4-sp-d16
 645              	_ZN4menu9menu_nextEv:
 646              		.fnstart
 647              	.LVL39:
 648              	.LFB143:
 122:Core/Src/menu.cpp **** 
 123:Core/Src/menu.cpp **** void menu::menu_next()
 124:Core/Src/menu.cpp **** {
 649              		.loc 1 124 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 124 1 is_stmt 0 view .LVU128
 654 0000 10B5     		push	{r4, lr}
 655              		.save {r4, lr}
 656              	.LCFI10:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660 0002 0446     		mov	r4, r0
 125:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 661              		.loc 1 125 5 is_stmt 1 view .LVU129
 662              		.loc 1 125 28 is_stmt 0 view .LVU130
 663 0004 0069     		ldr	r0, [r0, #16]
 664              	.LVL40:
 665              		.loc 1 125 28 view .LVU131
 666 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 667              	.LVL41:
 668              		.loc 1 125 5 view .LVU132
 669 000a 88B9     		cbnz	r0, .L44
 670              	.L35:
 126:Core/Src/menu.cpp ****     {
 127:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
ARM GAS  /tmp/cceDqxOT.s 			page 17


 128:Core/Src/menu.cpp ****     }
 129:Core/Src/menu.cpp ****     switch (menu_value)
 671              		.loc 1 129 5 is_stmt 1 view .LVU133
 672              		.loc 1 129 13 is_stmt 0 view .LVU134
 673 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 674 000e 013B     		subs	r3, r3, #1
 675 0010 172B     		cmp	r3, #23
 676 0012 1AD8     		bhi	.L34
 677 0014 DFE803F0 		tbb	[pc, r3]
 678              	.L38:
 679 0018 10       		.byte	(.L42-.L38)/2
 680 0019 13       		.byte	(.L41-.L38)/2
 681 001a 13       		.byte	(.L41-.L38)/2
 682 001b 19       		.byte	(.L34-.L38)/2
 683 001c 19       		.byte	(.L34-.L38)/2
 684 001d 19       		.byte	(.L34-.L38)/2
 685 001e 19       		.byte	(.L34-.L38)/2
 686 001f 15       		.byte	(.L40-.L38)/2
 687 0020 19       		.byte	(.L34-.L38)/2
 688 0021 19       		.byte	(.L34-.L38)/2
 689 0022 19       		.byte	(.L34-.L38)/2
 690 0023 19       		.byte	(.L34-.L38)/2
 691 0024 19       		.byte	(.L34-.L38)/2
 692 0025 19       		.byte	(.L34-.L38)/2
 693 0026 19       		.byte	(.L34-.L38)/2
 694 0027 1A       		.byte	(.L39-.L38)/2
 695 0028 19       		.byte	(.L34-.L38)/2
 696 0029 19       		.byte	(.L34-.L38)/2
 697 002a 19       		.byte	(.L34-.L38)/2
 698 002b 19       		.byte	(.L34-.L38)/2
 699 002c 19       		.byte	(.L34-.L38)/2
 700 002d 19       		.byte	(.L34-.L38)/2
 701 002e 19       		.byte	(.L34-.L38)/2
 702 002f 1F       		.byte	(.L37-.L38)/2
 703              		.p2align 1
 704              	.L44:
 127:Core/Src/menu.cpp ****     }
 705              		.loc 1 127 9 is_stmt 1 view .LVU135
 127:Core/Src/menu.cpp ****     }
 706              		.loc 1 127 31 is_stmt 0 view .LVU136
 707 0030 2069     		ldr	r0, [r4, #16]
 708 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 709              	.LVL42:
 710 0036 E9E7     		b	.L35
 711              	.L42:
 130:Core/Src/menu.cpp ****     {
 131:Core/Src/menu.cpp ****     case MENU_HOME:
 132:Core/Src/menu.cpp ****         break;
 133:Core/Src/menu.cpp ****     case MENU_CH:
 712              		.loc 1 133 5 is_stmt 1 view .LVU137
 134:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 713              		.loc 1 134 9 view .LVU138
 714              		.loc 1 134 19 is_stmt 0 view .LVU139
 715 0038 0223     		movs	r3, #2
 716 003a 2370     		strb	r3, [r4]
 135:Core/Src/menu.cpp ****         break;
 717              		.loc 1 135 9 is_stmt 1 view .LVU140
ARM GAS  /tmp/cceDqxOT.s 			page 18


 718 003c 05E0     		b	.L34
 719              	.L41:
 136:Core/Src/menu.cpp ****     case MENU_SQ:
 137:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 138:Core/Src/menu.cpp ****     case MENU_TMO:
 720              		.loc 1 138 5 view .LVU141
 139:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 721              		.loc 1 139 9 view .LVU142
 722              		.loc 1 139 19 is_stmt 0 view .LVU143
 723 003e 0123     		movs	r3, #1
 724 0040 2370     		strb	r3, [r4]
 725              	.L40:
 140:Core/Src/menu.cpp ****     case MENU_CH_IN:
 726              		.loc 1 140 5 is_stmt 1 view .LVU144
 141:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 727              		.loc 1 141 9 view .LVU145
 728              		.loc 1 141 20 is_stmt 0 view .LVU146
 729 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 730              		.loc 1 141 18 view .LVU147
 731 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 732 0046 5340     		eors	r3, r3, r2
 733 0048 A373     		strb	r3, [r4, #14]
 142:Core/Src/menu.cpp ****         break;
 734              		.loc 1 142 9 is_stmt 1 view .LVU148
 735              	.L34:
 143:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 144:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 145:Core/Src/menu.cpp ****         break;
 146:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 147:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 148:Core/Src/menu.cpp ****         break;
 149:Core/Src/menu.cpp **** 
 150:Core/Src/menu.cpp ****     default:
 151:Core/Src/menu.cpp ****         break;
 152:Core/Src/menu.cpp ****     }
 153:Core/Src/menu.cpp **** }
 736              		.loc 1 153 1 is_stmt 0 view .LVU149
 737 004a 10BD     		pop	{r4, pc}
 738              	.LVL43:
 739              	.L39:
 143:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 740              		.loc 1 143 5 is_stmt 1 view .LVU150
 144:Core/Src/menu.cpp ****         break;
 741              		.loc 1 144 9 view .LVU151
 144:Core/Src/menu.cpp ****         break;
 742              		.loc 1 144 20 is_stmt 0 view .LVU152
 743 004c E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 144:Core/Src/menu.cpp ****         break;
 744              		.loc 1 144 18 view .LVU153
 745 004e A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 746 0050 5340     		eors	r3, r3, r2
 747 0052 A373     		strb	r3, [r4, #14]
 145:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 748              		.loc 1 145 9 is_stmt 1 view .LVU154
 749 0054 F9E7     		b	.L34
 750              	.L37:
 146:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
ARM GAS  /tmp/cceDqxOT.s 			page 19


 751              		.loc 1 146 5 view .LVU155
 147:Core/Src/menu.cpp ****         break;
 752              		.loc 1 147 9 view .LVU156
 147:Core/Src/menu.cpp ****         break;
 753              		.loc 1 147 20 is_stmt 0 view .LVU157
 754 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 147:Core/Src/menu.cpp ****         break;
 755              		.loc 1 147 18 view .LVU158
 756 0058 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 757 005a 5340     		eors	r3, r3, r2
 758 005c A373     		strb	r3, [r4, #14]
 148:Core/Src/menu.cpp **** 
 759              		.loc 1 148 9 is_stmt 1 view .LVU159
 760              		.loc 1 153 1 is_stmt 0 view .LVU160
 761 005e F4E7     		b	.L34
 762              		.cfi_endproc
 763              	.LFE143:
 764              		.fnend
 766              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 767              		.align	1
 768              		.global	_ZN4menu9menu_menuEv
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	_ZN4menu9menu_menuEv:
 775              		.fnstart
 776              	.LVL44:
 777              	.LFB144:
 154:Core/Src/menu.cpp **** 
 155:Core/Src/menu.cpp **** void menu::menu_menu()
 156:Core/Src/menu.cpp **** {
 778              		.loc 1 156 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		.loc 1 156 1 is_stmt 0 view .LVU162
 783 0000 10B5     		push	{r4, lr}
 784              		.save {r4, lr}
 785              	.LCFI11:
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 4, -8
 788              		.cfi_offset 14, -4
 789 0002 0446     		mov	r4, r0
 157:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 790              		.loc 1 157 5 is_stmt 1 view .LVU163
 791              		.loc 1 157 28 is_stmt 0 view .LVU164
 792 0004 0069     		ldr	r0, [r0, #16]
 793              	.LVL45:
 794              		.loc 1 157 28 view .LVU165
 795 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 796              	.LVL46:
 797              		.loc 1 157 5 view .LVU166
 798 000a 10B9     		cbnz	r0, .L48
 799              	.L46:
 158:Core/Src/menu.cpp ****     {
 159:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
ARM GAS  /tmp/cceDqxOT.s 			page 20


 160:Core/Src/menu.cpp ****     }
 161:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 800              		.loc 1 161 5 is_stmt 1 view .LVU167
 801              		.loc 1 161 16 is_stmt 0 view .LVU168
 802 000c 0123     		movs	r3, #1
 803 000e 2370     		strb	r3, [r4]
 162:Core/Src/menu.cpp **** }
 804              		.loc 1 162 1 view .LVU169
 805 0010 10BD     		pop	{r4, pc}
 806              	.LVL47:
 807              	.L48:
 159:Core/Src/menu.cpp ****     }
 808              		.loc 1 159 9 is_stmt 1 view .LVU170
 159:Core/Src/menu.cpp ****     }
 809              		.loc 1 159 31 is_stmt 0 view .LVU171
 810 0012 2069     		ldr	r0, [r4, #16]
 811 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 812              	.LVL48:
 813 0018 F8E7     		b	.L46
 814              		.cfi_endproc
 815              	.LFE144:
 816              		.fnend
 818              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 819              		.align	1
 820              		.global	_ZN4menu9menu_backEv
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	_ZN4menu9menu_backEv:
 827              		.fnstart
 828              	.LVL49:
 829              	.LFB145:
 163:Core/Src/menu.cpp **** 
 164:Core/Src/menu.cpp **** void menu::menu_back()
 165:Core/Src/menu.cpp **** {
 830              		.loc 1 165 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 165 1 is_stmt 0 view .LVU173
 835 0000 10B5     		push	{r4, lr}
 836              		.save {r4, lr}
 837              	.LCFI12:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 841 0002 0446     		mov	r4, r0
 166:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 842              		.loc 1 166 5 is_stmt 1 view .LVU174
 843              		.loc 1 166 28 is_stmt 0 view .LVU175
 844 0004 0069     		ldr	r0, [r0, #16]
 845              	.LVL50:
 846              		.loc 1 166 28 view .LVU176
 847 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 848              	.LVL51:
 849              		.loc 1 166 5 view .LVU177
ARM GAS  /tmp/cceDqxOT.s 			page 21


 850 000a 18B9     		cbnz	r0, .L52
 851              	.L50:
 167:Core/Src/menu.cpp ****     {
 168:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 169:Core/Src/menu.cpp ****     }
 170:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 852              		.loc 1 170 5 is_stmt 1 view .LVU178
 853              		.loc 1 170 36 is_stmt 0 view .LVU179
 854 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 855              		.loc 1 170 18 view .LVU180
 856 000e DB08     		lsrs	r3, r3, #3
 857              		.loc 1 170 16 view .LVU181
 858 0010 2370     		strb	r3, [r4]
 171:Core/Src/menu.cpp **** }
 859              		.loc 1 171 1 view .LVU182
 860 0012 10BD     		pop	{r4, pc}
 861              	.LVL52:
 862              	.L52:
 168:Core/Src/menu.cpp ****     }
 863              		.loc 1 168 9 is_stmt 1 view .LVU183
 168:Core/Src/menu.cpp ****     }
 864              		.loc 1 168 31 is_stmt 0 view .LVU184
 865 0014 2069     		ldr	r0, [r4, #16]
 866 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 867              	.LVL53:
 868 001a F7E7     		b	.L50
 869              		.cfi_endproc
 870              	.LFE145:
 871              		.fnend
 873              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 874              		.align	1
 875              		.global	_ZN4menu9menu_prevEv
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu fpv4-sp-d16
 881              	_ZN4menu9menu_prevEv:
 882              		.fnstart
 883              	.LVL54:
 884              	.LFB146:
 172:Core/Src/menu.cpp **** 
 173:Core/Src/menu.cpp **** void menu::menu_prev()
 174:Core/Src/menu.cpp **** {
 885              		.loc 1 174 1 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		.loc 1 174 1 is_stmt 0 view .LVU186
 890 0000 10B5     		push	{r4, lr}
 891              		.save {r4, lr}
 892              	.LCFI13:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 0446     		mov	r4, r0
 175:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 897              		.loc 1 175 5 is_stmt 1 view .LVU187
ARM GAS  /tmp/cceDqxOT.s 			page 22


 898              		.loc 1 175 28 is_stmt 0 view .LVU188
 899 0004 0069     		ldr	r0, [r0, #16]
 900              	.LVL55:
 901              		.loc 1 175 28 view .LVU189
 902 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 903              	.LVL56:
 904              		.loc 1 175 5 view .LVU190
 905 000a 88B9     		cbnz	r0, .L64
 906              	.L54:
 176:Core/Src/menu.cpp ****     {
 177:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 178:Core/Src/menu.cpp ****     }
 179:Core/Src/menu.cpp ****     switch (menu_value)
 907              		.loc 1 179 5 is_stmt 1 view .LVU191
 908              		.loc 1 179 13 is_stmt 0 view .LVU192
 909 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 910 000e 013B     		subs	r3, r3, #1
 911 0010 172B     		cmp	r3, #23
 912 0012 13D8     		bhi	.L53
 913 0014 DFE803F0 		tbb	[pc, r3]
 914              	.L57:
 915 0018 10       		.byte	(.L62-.L57)/2
 916 0019 13       		.byte	(.L61-.L57)/2
 917 001a 16       		.byte	(.L60-.L57)/2
 918 001b 12       		.byte	(.L53-.L57)/2
 919 001c 12       		.byte	(.L53-.L57)/2
 920 001d 12       		.byte	(.L53-.L57)/2
 921 001e 12       		.byte	(.L53-.L57)/2
 922 001f 19       		.byte	(.L59-.L57)/2
 923 0020 12       		.byte	(.L53-.L57)/2
 924 0021 12       		.byte	(.L53-.L57)/2
 925 0022 12       		.byte	(.L53-.L57)/2
 926 0023 12       		.byte	(.L53-.L57)/2
 927 0024 12       		.byte	(.L53-.L57)/2
 928 0025 12       		.byte	(.L53-.L57)/2
 929 0026 12       		.byte	(.L53-.L57)/2
 930 0027 1E       		.byte	(.L58-.L57)/2
 931 0028 12       		.byte	(.L53-.L57)/2
 932 0029 12       		.byte	(.L53-.L57)/2
 933 002a 12       		.byte	(.L53-.L57)/2
 934 002b 12       		.byte	(.L53-.L57)/2
 935 002c 12       		.byte	(.L53-.L57)/2
 936 002d 12       		.byte	(.L53-.L57)/2
 937 002e 12       		.byte	(.L53-.L57)/2
 938 002f 23       		.byte	(.L56-.L57)/2
 939              		.p2align 1
 940              	.L64:
 177:Core/Src/menu.cpp ****     }
 941              		.loc 1 177 9 is_stmt 1 view .LVU193
 177:Core/Src/menu.cpp ****     }
 942              		.loc 1 177 31 is_stmt 0 view .LVU194
 943 0030 2069     		ldr	r0, [r4, #16]
 944 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 945              	.LVL57:
 946 0036 E9E7     		b	.L54
 947              	.L62:
 180:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cceDqxOT.s 			page 23


 181:Core/Src/menu.cpp ****     case MENU_HOME:
=======
 500              		.loc 1 79 22 is_stmt 0 view .LVU91
 501 006a 0023     		movs	r3, #0
 502 006c A373     		strb	r3, [r4, #14]
 503 006e EBE7     		b	.L16
ARM GAS  /tmp/ccMEB0iu.s 			page 13


 504              	.L22:
  83:Core/Src/menu.cpp ****         cursorOn^=1;
 505              		.loc 1 83 5 is_stmt 1 view .LVU92
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 506              		.loc 1 84 9 view .LVU93
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 507              		.loc 1 84 17 is_stmt 0 view .LVU94
 508 0070 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 509 0072 83F00103 		eor	r3, r3, #1
 510 0076 E373     		strb	r3, [r4, #15]
  85:Core/Src/menu.cpp ****         {
 511              		.loc 1 85 9 is_stmt 1 view .LVU95
 512 0078 002B     		cmp	r3, #0
 513 007a E5D1     		bne	.L16
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 514              		.loc 1 87 13 view .LVU96
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 515              		.loc 1 87 23 is_stmt 0 view .LVU97
 516 007c A01C     		adds	r0, r4, #2
 517 007e FFF7FEFF 		bl	atoi
 518              	.LVL35:
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 519              		.loc 1 87 18 view .LVU98
 520 0082 E071     		strb	r0, [r4, #7]
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 521              		.loc 1 88 13 is_stmt 1 view .LVU99
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 522              		.loc 1 88 22 is_stmt 0 view .LVU100
 523 0084 0023     		movs	r3, #0
 524 0086 A373     		strb	r3, [r4, #14]
 525 0088 DEE7     		b	.L16
 526              	.L20:
  92:Core/Src/menu.cpp ****         cursorOn%=1;
 527              		.loc 1 92 5 is_stmt 1 view .LVU101
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 528              		.loc 1 93 9 view .LVU102
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 529              		.loc 1 93 17 is_stmt 0 view .LVU103
 530 008a 0025     		movs	r5, #0
 531 008c E573     		strb	r5, [r4, #15]
  94:Core/Src/menu.cpp ****         {
 532              		.loc 1 94 9 is_stmt 1 view .LVU104
  96:Core/Src/menu.cpp ****             cursorPos=0;
 533              		.loc 1 96 13 view .LVU105
  96:Core/Src/menu.cpp ****             cursorPos=0;
 534              		.loc 1 96 24 is_stmt 0 view .LVU106
 535 008e 04F10B00 		add	r0, r4, #11
 536 0092 FFF7FEFF 		bl	atoi
 537              	.LVL36:
  96:Core/Src/menu.cpp ****             cursorPos=0;
 538              		.loc 1 96 19 view .LVU107
 539 0096 6073     		strb	r0, [r4, #13]
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 540              		.loc 1 97 13 is_stmt 1 view .LVU108
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 541              		.loc 1 97 22 is_stmt 0 view .LVU109
 542 0098 A573     		strb	r5, [r4, #14]
ARM GAS  /tmp/ccMEB0iu.s 			page 14


 543              		.loc 1 107 1 view .LVU110
 544 009a D5E7     		b	.L16
 545              		.cfi_endproc
 546              	.LFE142:
 547              		.fnend
 549              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 550              		.align	1
 551              		.global	_ZN4menu9menu_nextEv
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	_ZN4menu9menu_nextEv:
 558              		.fnstart
 559              	.LVL37:
 560              	.LFB143:
 108:Core/Src/menu.cpp **** 
 109:Core/Src/menu.cpp **** void menu::menu_next()
 110:Core/Src/menu.cpp **** {
 561              		.loc 1 110 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		.loc 1 110 1 is_stmt 0 view .LVU112
 566 0000 10B5     		push	{r4, lr}
 567              		.save {r4, lr}
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 14, -4
 572 0002 0446     		mov	r4, r0
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 573              		.loc 1 111 5 is_stmt 1 view .LVU113
 574              		.loc 1 111 28 is_stmt 0 view .LVU114
 575 0004 0069     		ldr	r0, [r0, #16]
 576              	.LVL38:
 577              		.loc 1 111 28 view .LVU115
 578 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 579              	.LVL39:
 580              		.loc 1 111 5 view .LVU116
 581 000a 88B9     		cbnz	r0, .L38
 582              	.L29:
 112:Core/Src/menu.cpp ****     {
 113:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 114:Core/Src/menu.cpp ****     }
 115:Core/Src/menu.cpp ****     switch (menu_value)
 583              		.loc 1 115 5 is_stmt 1 view .LVU117
 584              		.loc 1 115 13 is_stmt 0 view .LVU118
 585 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 586 000e 013B     		subs	r3, r3, #1
 587 0010 172B     		cmp	r3, #23
 588 0012 1AD8     		bhi	.L28
 589 0014 DFE803F0 		tbb	[pc, r3]
 590              	.L32:
 591 0018 10       		.byte	(.L36-.L32)/2
 592 0019 13       		.byte	(.L35-.L32)/2
 593 001a 13       		.byte	(.L35-.L32)/2
ARM GAS  /tmp/ccMEB0iu.s 			page 15


 594 001b 19       		.byte	(.L28-.L32)/2
 595 001c 19       		.byte	(.L28-.L32)/2
 596 001d 19       		.byte	(.L28-.L32)/2
 597 001e 19       		.byte	(.L28-.L32)/2
 598 001f 15       		.byte	(.L34-.L32)/2
 599 0020 19       		.byte	(.L28-.L32)/2
 600 0021 19       		.byte	(.L28-.L32)/2
 601 0022 19       		.byte	(.L28-.L32)/2
 602 0023 19       		.byte	(.L28-.L32)/2
 603 0024 19       		.byte	(.L28-.L32)/2
 604 0025 19       		.byte	(.L28-.L32)/2
 605 0026 19       		.byte	(.L28-.L32)/2
 606 0027 1A       		.byte	(.L33-.L32)/2
 607 0028 19       		.byte	(.L28-.L32)/2
 608 0029 19       		.byte	(.L28-.L32)/2
 609 002a 19       		.byte	(.L28-.L32)/2
 610 002b 19       		.byte	(.L28-.L32)/2
 611 002c 19       		.byte	(.L28-.L32)/2
 612 002d 19       		.byte	(.L28-.L32)/2
 613 002e 19       		.byte	(.L28-.L32)/2
 614 002f 1F       		.byte	(.L31-.L32)/2
 615              		.p2align 1
 616              	.L38:
 113:Core/Src/menu.cpp ****     }
 617              		.loc 1 113 9 is_stmt 1 view .LVU119
 113:Core/Src/menu.cpp ****     }
 618              		.loc 1 113 31 is_stmt 0 view .LVU120
 619 0030 2069     		ldr	r0, [r4, #16]
 620 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 621              	.LVL40:
 622 0036 E9E7     		b	.L29
 623              	.L36:
 116:Core/Src/menu.cpp ****     {
 117:Core/Src/menu.cpp ****     case MENU_HOME:
 118:Core/Src/menu.cpp ****         break;
 119:Core/Src/menu.cpp ****     case MENU_CH:
 624              		.loc 1 119 5 is_stmt 1 view .LVU121
 120:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 625              		.loc 1 120 9 view .LVU122
 626              		.loc 1 120 19 is_stmt 0 view .LVU123
 627 0038 0223     		movs	r3, #2
 628 003a 2370     		strb	r3, [r4]
 121:Core/Src/menu.cpp ****         break;
 629              		.loc 1 121 9 is_stmt 1 view .LVU124
 630 003c 05E0     		b	.L28
 631              	.L35:
 122:Core/Src/menu.cpp ****     case MENU_SQ:
 123:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 124:Core/Src/menu.cpp ****     case MENU_TMO:
 632              		.loc 1 124 5 view .LVU125
 125:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 633              		.loc 1 125 9 view .LVU126
 634              		.loc 1 125 19 is_stmt 0 view .LVU127
 635 003e 0123     		movs	r3, #1
 636 0040 2370     		strb	r3, [r4]
 637              	.L34:
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/ccMEB0iu.s 			page 16


 638              		.loc 1 126 5 is_stmt 1 view .LVU128
 127:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 639              		.loc 1 127 9 view .LVU129
 640              		.loc 1 127 20 is_stmt 0 view .LVU130
 641 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 642              		.loc 1 127 18 view .LVU131
 643 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 644 0046 5340     		eors	r3, r3, r2
 645 0048 A373     		strb	r3, [r4, #14]
 128:Core/Src/menu.cpp ****         break;
 646              		.loc 1 128 9 is_stmt 1 view .LVU132
 647              	.L28:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 130:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 131:Core/Src/menu.cpp ****         break;
 132:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 133:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 134:Core/Src/menu.cpp ****         break;
 135:Core/Src/menu.cpp **** 
 136:Core/Src/menu.cpp ****     default:
 137:Core/Src/menu.cpp ****         break;
 138:Core/Src/menu.cpp ****     }
 139:Core/Src/menu.cpp **** }
 648              		.loc 1 139 1 is_stmt 0 view .LVU133
 649 004a 10BD     		pop	{r4, pc}
 650              	.LVL41:
 651              	.L33:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 652              		.loc 1 129 5 is_stmt 1 view .LVU134
 130:Core/Src/menu.cpp ****         break;
 653              		.loc 1 130 9 view .LVU135
 130:Core/Src/menu.cpp ****         break;
 654              		.loc 1 130 20 is_stmt 0 view .LVU136
 655 004c E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 130:Core/Src/menu.cpp ****         break;
 656              		.loc 1 130 18 view .LVU137
 657 004e A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 658 0050 5340     		eors	r3, r3, r2
 659 0052 A373     		strb	r3, [r4, #14]
 131:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 660              		.loc 1 131 9 is_stmt 1 view .LVU138
 661 0054 F9E7     		b	.L28
 662              	.L31:
 132:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 663              		.loc 1 132 5 view .LVU139
 133:Core/Src/menu.cpp ****         break;
 664              		.loc 1 133 9 view .LVU140
 133:Core/Src/menu.cpp ****         break;
 665              		.loc 1 133 20 is_stmt 0 view .LVU141
 666 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 133:Core/Src/menu.cpp ****         break;
 667              		.loc 1 133 18 view .LVU142
 668 0058 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 669 005a 5340     		eors	r3, r3, r2
 670 005c A373     		strb	r3, [r4, #14]
 134:Core/Src/menu.cpp **** 
 671              		.loc 1 134 9 is_stmt 1 view .LVU143
ARM GAS  /tmp/ccMEB0iu.s 			page 17


 672              		.loc 1 139 1 is_stmt 0 view .LVU144
 673 005e F4E7     		b	.L28
 674              		.cfi_endproc
 675              	.LFE143:
 676              		.fnend
 678              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 679              		.align	1
 680              		.global	_ZN4menu9menu_menuEv
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	_ZN4menu9menu_menuEv:
 687              		.fnstart
 688              	.LVL42:
 689              	.LFB144:
 140:Core/Src/menu.cpp **** 
 141:Core/Src/menu.cpp **** void menu::menu_menu()
 142:Core/Src/menu.cpp **** {
 690              		.loc 1 142 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		.loc 1 142 1 is_stmt 0 view .LVU146
 695 0000 10B5     		push	{r4, lr}
 696              		.save {r4, lr}
 697              	.LCFI8:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 0446     		mov	r4, r0
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 702              		.loc 1 143 5 is_stmt 1 view .LVU147
 703              		.loc 1 143 28 is_stmt 0 view .LVU148
 704 0004 0069     		ldr	r0, [r0, #16]
 705              	.LVL43:
 706              		.loc 1 143 28 view .LVU149
 707 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 708              	.LVL44:
 709              		.loc 1 143 5 view .LVU150
 710 000a 10B9     		cbnz	r0, .L42
 711              	.L40:
 144:Core/Src/menu.cpp ****     {
 145:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 146:Core/Src/menu.cpp ****     }
 147:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 712              		.loc 1 147 5 is_stmt 1 view .LVU151
 713              		.loc 1 147 16 is_stmt 0 view .LVU152
 714 000c 0123     		movs	r3, #1
 715 000e 2370     		strb	r3, [r4]
 148:Core/Src/menu.cpp **** }
 716              		.loc 1 148 1 view .LVU153
 717 0010 10BD     		pop	{r4, pc}
 718              	.LVL45:
 719              	.L42:
 145:Core/Src/menu.cpp ****     }
 720              		.loc 1 145 9 is_stmt 1 view .LVU154
ARM GAS  /tmp/ccMEB0iu.s 			page 18


 145:Core/Src/menu.cpp ****     }
 721              		.loc 1 145 31 is_stmt 0 view .LVU155
 722 0012 2069     		ldr	r0, [r4, #16]
 723 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 724              	.LVL46:
 725 0018 F8E7     		b	.L40
 726              		.cfi_endproc
 727              	.LFE144:
 728              		.fnend
 730              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 731              		.align	1
 732              		.global	_ZN4menu9menu_backEv
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv4-sp-d16
 738              	_ZN4menu9menu_backEv:
 739              		.fnstart
 740              	.LVL47:
 741              	.LFB145:
 149:Core/Src/menu.cpp **** 
 150:Core/Src/menu.cpp **** void menu::menu_back()
 151:Core/Src/menu.cpp **** {
 742              		.loc 1 151 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		.loc 1 151 1 is_stmt 0 view .LVU157
 747 0000 10B5     		push	{r4, lr}
 748              		.save {r4, lr}
 749              	.LCFI9:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 4, -8
 752              		.cfi_offset 14, -4
 753 0002 0446     		mov	r4, r0
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 754              		.loc 1 152 5 is_stmt 1 view .LVU158
 755              		.loc 1 152 28 is_stmt 0 view .LVU159
 756 0004 0069     		ldr	r0, [r0, #16]
 757              	.LVL48:
 758              		.loc 1 152 28 view .LVU160
 759 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 760              	.LVL49:
 761              		.loc 1 152 5 view .LVU161
 762 000a 18B9     		cbnz	r0, .L46
 763              	.L44:
 153:Core/Src/menu.cpp ****     {
 154:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 155:Core/Src/menu.cpp ****     }
 156:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 764              		.loc 1 156 5 is_stmt 1 view .LVU162
 765              		.loc 1 156 36 is_stmt 0 view .LVU163
 766 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 767              		.loc 1 156 18 view .LVU164
 768 000e DB08     		lsrs	r3, r3, #3
 769              		.loc 1 156 16 view .LVU165
 770 0010 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccMEB0iu.s 			page 19


 157:Core/Src/menu.cpp **** }
 771              		.loc 1 157 1 view .LVU166
 772 0012 10BD     		pop	{r4, pc}
 773              	.LVL50:
 774              	.L46:
 154:Core/Src/menu.cpp ****     }
 775              		.loc 1 154 9 is_stmt 1 view .LVU167
 154:Core/Src/menu.cpp ****     }
 776              		.loc 1 154 31 is_stmt 0 view .LVU168
 777 0014 2069     		ldr	r0, [r4, #16]
 778 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 779              	.LVL51:
 780 001a F7E7     		b	.L44
 781              		.cfi_endproc
 782              	.LFE145:
 783              		.fnend
 785              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 786              		.align	1
 787              		.global	_ZN4menu9menu_prevEv
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 793              	_ZN4menu9menu_prevEv:
 794              		.fnstart
 795              	.LVL52:
 796              	.LFB146:
 158:Core/Src/menu.cpp **** 
 159:Core/Src/menu.cpp **** void menu::menu_prev()
 160:Core/Src/menu.cpp **** {
 797              		.loc 1 160 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		.loc 1 160 1 is_stmt 0 view .LVU170
 802 0000 10B5     		push	{r4, lr}
 803              		.save {r4, lr}
 804              	.LCFI10:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 808 0002 0446     		mov	r4, r0
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 809              		.loc 1 161 5 is_stmt 1 view .LVU171
 810              		.loc 1 161 28 is_stmt 0 view .LVU172
 811 0004 0069     		ldr	r0, [r0, #16]
 812              	.LVL53:
 813              		.loc 1 161 28 view .LVU173
 814 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 815              	.LVL54:
 816              		.loc 1 161 5 view .LVU174
 817 000a 88B9     		cbnz	r0, .L58
 818              	.L48:
 162:Core/Src/menu.cpp ****     {
 163:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 164:Core/Src/menu.cpp ****     }
 165:Core/Src/menu.cpp ****     switch (menu_value)
ARM GAS  /tmp/ccMEB0iu.s 			page 20


 819              		.loc 1 165 5 is_stmt 1 view .LVU175
 820              		.loc 1 165 13 is_stmt 0 view .LVU176
 821 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 822 000e 013B     		subs	r3, r3, #1
 823 0010 172B     		cmp	r3, #23
 824 0012 13D8     		bhi	.L47
 825 0014 DFE803F0 		tbb	[pc, r3]
 826              	.L51:
 827 0018 10       		.byte	(.L56-.L51)/2
 828 0019 13       		.byte	(.L55-.L51)/2
 829 001a 16       		.byte	(.L54-.L51)/2
 830 001b 12       		.byte	(.L47-.L51)/2
 831 001c 12       		.byte	(.L47-.L51)/2
 832 001d 12       		.byte	(.L47-.L51)/2
 833 001e 12       		.byte	(.L47-.L51)/2
 834 001f 19       		.byte	(.L53-.L51)/2
 835 0020 12       		.byte	(.L47-.L51)/2
 836 0021 12       		.byte	(.L47-.L51)/2
 837 0022 12       		.byte	(.L47-.L51)/2
 838 0023 12       		.byte	(.L47-.L51)/2
 839 0024 12       		.byte	(.L47-.L51)/2
 840 0025 12       		.byte	(.L47-.L51)/2
 841 0026 12       		.byte	(.L47-.L51)/2
 842 0027 1E       		.byte	(.L52-.L51)/2
 843 0028 12       		.byte	(.L47-.L51)/2
 844 0029 12       		.byte	(.L47-.L51)/2
 845 002a 12       		.byte	(.L47-.L51)/2
 846 002b 12       		.byte	(.L47-.L51)/2
 847 002c 12       		.byte	(.L47-.L51)/2
 848 002d 12       		.byte	(.L47-.L51)/2
 849 002e 12       		.byte	(.L47-.L51)/2
 850 002f 23       		.byte	(.L50-.L51)/2
 851              		.p2align 1
 852              	.L58:
 163:Core/Src/menu.cpp ****     }
 853              		.loc 1 163 9 is_stmt 1 view .LVU177
 163:Core/Src/menu.cpp ****     }
 854              		.loc 1 163 31 is_stmt 0 view .LVU178
 855 0030 2069     		ldr	r0, [r4, #16]
 856 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 857              	.LVL55:
 858 0036 E9E7     		b	.L48
 859              	.L56:
 166:Core/Src/menu.cpp ****     {
 167:Core/Src/menu.cpp ****     case MENU_HOME:
 168:Core/Src/menu.cpp ****         break;
 169:Core/Src/menu.cpp ****     case MENU_CH:
 860              		.loc 1 169 5 is_stmt 1 view .LVU179
 170:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 861              		.loc 1 170 9 view .LVU180
 862              		.loc 1 170 19 is_stmt 0 view .LVU181
 863 0038 0323     		movs	r3, #3
 864 003a 2370     		strb	r3, [r4]
 171:Core/Src/menu.cpp ****         break;
 865              		.loc 1 171 9 is_stmt 1 view .LVU182
 866              	.L47:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
ARM GAS  /tmp/ccMEB0iu.s 			page 21


 173:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 174:Core/Src/menu.cpp ****         break;
 175:Core/Src/menu.cpp ****     case MENU_TMO:
 176:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 177:Core/Src/menu.cpp ****         break;
 178:Core/Src/menu.cpp ****     case MENU_CH_IN:
 179:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 180:Core/Src/menu.cpp ****         break;
 181:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 182:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 183:Core/Src/menu.cpp ****         break;
 184:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 185:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 186:Core/Src/menu.cpp ****         break;
 187:Core/Src/menu.cpp **** 
 188:Core/Src/menu.cpp ****     default:
 189:Core/Src/menu.cpp ****         break;
 190:Core/Src/menu.cpp ****     }
 191:Core/Src/menu.cpp **** }
 867              		.loc 1 191 1 is_stmt 0 view .LVU183
 868 003c 10BD     		pop	{r4, pc}
 869              	.LVL56:
 870              	.L55:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
 871              		.loc 1 172 5 is_stmt 1 view .LVU184
 173:Core/Src/menu.cpp ****         break;
 872              		.loc 1 173 9 view .LVU185
 173:Core/Src/menu.cpp ****         break;
 873              		.loc 1 173 19 is_stmt 0 view .LVU186
 874 003e 0123     		movs	r3, #1
 875 0040 2370     		strb	r3, [r4]
 174:Core/Src/menu.cpp ****     case MENU_TMO:
 876              		.loc 1 174 9 is_stmt 1 view .LVU187
 877 0042 FBE7     		b	.L47
 878              	.L54:
 175:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 879              		.loc 1 175 5 view .LVU188
 176:Core/Src/menu.cpp ****         break;
 880              		.loc 1 176 9 view .LVU189
 176:Core/Src/menu.cpp ****         break;
 881              		.loc 1 176 19 is_stmt 0 view .LVU190
 882 0044 0223     		movs	r3, #2
 883 0046 2370     		strb	r3, [r4]
 177:Core/Src/menu.cpp ****     case MENU_CH_IN:
 884              		.loc 1 177 9 is_stmt 1 view .LVU191
 885 0048 F8E7     		b	.L47
 886              	.L53:
 178:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 887              		.loc 1 178 5 view .LVU192
 179:Core/Src/menu.cpp ****         break;
 888              		.loc 1 179 9 view .LVU193
 179:Core/Src/menu.cpp ****         break;
 889              		.loc 1 179 20 is_stmt 0 view .LVU194
 890 004a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 179:Core/Src/menu.cpp ****         break;
 891              		.loc 1 179 18 view .LVU195
 892 004c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccMEB0iu.s 			page 22


 893 004e 5340     		eors	r3, r3, r2
 894 0050 A373     		strb	r3, [r4, #14]
 180:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 895              		.loc 1 180 9 is_stmt 1 view .LVU196
 896 0052 F3E7     		b	.L47
 897              	.L52:
 181:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 898              		.loc 1 181 5 view .LVU197
 182:Core/Src/menu.cpp ****         break;
 899              		.loc 1 182 9 view .LVU198
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
 182:Core/Src/menu.cpp ****         break;
 183:Core/Src/menu.cpp ****     case MENU_CH:
 948              		.loc 1 183 5 is_stmt 1 view .LVU195
 184:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 949              		.loc 1 184 9 view .LVU196
 950              		.loc 1 184 19 is_stmt 0 view .LVU197
 951 0038 0323     		movs	r3, #3
 952 003a 2370     		strb	r3, [r4]
 185:Core/Src/menu.cpp ****         break;
<<<<<<< HEAD
 953              		.loc 1 185 9 is_stmt 1 view .LVU198
 954              	.L53:
 186:Core/Src/menu.cpp ****     case MENU_SQ:
 187:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 188:Core/Src/menu.cpp ****         break;
 189:Core/Src/menu.cpp ****     case MENU_TMO:
 190:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 191:Core/Src/menu.cpp ****         break;
 192:Core/Src/menu.cpp ****     case MENU_CH_IN:
 193:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 194:Core/Src/menu.cpp ****         break;
 195:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 196:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 197:Core/Src/menu.cpp ****         break;
 198:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 199:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 200:Core/Src/menu.cpp ****         break;
 201:Core/Src/menu.cpp **** 
 202:Core/Src/menu.cpp ****     default:
 203:Core/Src/menu.cpp ****         break;
 204:Core/Src/menu.cpp ****     }
 205:Core/Src/menu.cpp **** }
 955              		.loc 1 205 1 is_stmt 0 view .LVU199
 956 003c 10BD     		pop	{r4, pc}
 957              	.LVL58:
 958              	.L61:
 186:Core/Src/menu.cpp ****     case MENU_SQ:
 959              		.loc 1 186 5 is_stmt 1 view .LVU200
 187:Core/Src/menu.cpp ****         break;
 960              		.loc 1 187 9 view .LVU201
 187:Core/Src/menu.cpp ****         break;
 961              		.loc 1 187 19 is_stmt 0 view .LVU202
 962 003e 0123     		movs	r3, #1
 963 0040 2370     		strb	r3, [r4]
 188:Core/Src/menu.cpp ****     case MENU_TMO:
 964              		.loc 1 188 9 is_stmt 1 view .LVU203
 965 0042 FBE7     		b	.L53
 966              	.L60:
 189:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 967              		.loc 1 189 5 view .LVU204
 190:Core/Src/menu.cpp ****         break;
 968              		.loc 1 190 9 view .LVU205
 190:Core/Src/menu.cpp ****         break;
 969              		.loc 1 190 19 is_stmt 0 view .LVU206
 970 0044 0223     		movs	r3, #2
 971 0046 2370     		strb	r3, [r4]
 191:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/cceDqxOT.s 			page 24


 972              		.loc 1 191 9 is_stmt 1 view .LVU207
 973 0048 F8E7     		b	.L53
 974              	.L59:
 192:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 975              		.loc 1 192 5 view .LVU208
 193:Core/Src/menu.cpp ****         break;
 976              		.loc 1 193 9 view .LVU209
 193:Core/Src/menu.cpp ****         break;
 977              		.loc 1 193 20 is_stmt 0 view .LVU210
 978 004a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 193:Core/Src/menu.cpp ****         break;
 979              		.loc 1 193 18 view .LVU211
 980 004c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 981 004e 5340     		eors	r3, r3, r2
 982 0050 A373     		strb	r3, [r4, #14]
 194:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 983              		.loc 1 194 9 is_stmt 1 view .LVU212
 984 0052 F3E7     		b	.L53
 985              	.L58:
 195:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 986              		.loc 1 195 5 view .LVU213
 196:Core/Src/menu.cpp ****         break;
 987              		.loc 1 196 9 view .LVU214
 196:Core/Src/menu.cpp ****         break;
 988              		.loc 1 196 20 is_stmt 0 view .LVU215
 989 0054 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 196:Core/Src/menu.cpp ****         break;
 990              		.loc 1 196 18 view .LVU216
 991 0056 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 992 0058 5340     		eors	r3, r3, r2
 993 005a A373     		strb	r3, [r4, #14]
 197:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 994              		.loc 1 197 9 is_stmt 1 view .LVU217
 995 005c EEE7     		b	.L53
 996              	.L56:
 198:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 997              		.loc 1 198 5 view .LVU218
 199:Core/Src/menu.cpp ****         break;
 998              		.loc 1 199 9 view .LVU219
 199:Core/Src/menu.cpp ****         break;
 999              		.loc 1 199 20 is_stmt 0 view .LVU220
 1000 005e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 199:Core/Src/menu.cpp ****         break;
 1001              		.loc 1 199 18 view .LVU221
 1002 0060 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1003 0062 5340     		eors	r3, r3, r2
 1004 0064 A373     		strb	r3, [r4, #14]
 200:Core/Src/menu.cpp **** 
 1005              		.loc 1 200 9 is_stmt 1 view .LVU222
 1006              		.loc 1 205 1 is_stmt 0 view .LVU223
 1007 0066 E9E7     		b	.L53
 1008              		.cfi_endproc
 1009              	.LFE146:
 1010              		.fnend
 1012              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 1013              		.align	1
 1014              		.global	_ZN4menu11menu_numberEc
ARM GAS  /tmp/cceDqxOT.s 			page 25


 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv4-sp-d16
 1020              	_ZN4menu11menu_numberEc:
 1021              		.fnstart
 1022              	.LVL59:
 1023              	.LFB147:
 206:Core/Src/menu.cpp **** void menu::menu_number(char num)
 207:Core/Src/menu.cpp **** {
 1024              		.loc 1 207 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		.loc 1 207 1 is_stmt 0 view .LVU225
 1029 0000 38B5     		push	{r3, r4, r5, lr}
 1030              		.save {r3, r4, r5, lr}
 1031              	.LCFI14:
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 3, -16
 1034              		.cfi_offset 4, -12
 1035              		.cfi_offset 5, -8
 1036              		.cfi_offset 14, -4
 1037 0002 0446     		mov	r4, r0
 1038 0004 0D46     		mov	r5, r1
 208:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1039              		.loc 1 208 5 is_stmt 1 view .LVU226
 1040              		.loc 1 208 28 is_stmt 0 view .LVU227
 1041 0006 0069     		ldr	r0, [r0, #16]
 1042              	.LVL60:
 1043              		.loc 1 208 28 view .LVU228
 1044 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1045              	.LVL61:
 1046              		.loc 1 208 5 view .LVU229
 1047 000c 48B9     		cbnz	r0, .L71
 1048              	.L66:
 209:Core/Src/menu.cpp ****     {
 210:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 211:Core/Src/menu.cpp ****     }
 212:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 1049              		.loc 1 212 5 is_stmt 1 view .LVU230
 1050              		.loc 1 212 8 is_stmt 0 view .LVU231
 1051 000e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 1052              		.loc 1 212 5 view .LVU232
 1053 0010 33B1     		cbz	r3, .L65
 213:Core/Src/menu.cpp ****     {
 214:Core/Src/menu.cpp ****         switch (menu_value)
 1054              		.loc 1 214 9 is_stmt 1 view .LVU233
 1055              		.loc 1 214 17 is_stmt 0 view .LVU234
 1056 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1057              		.loc 1 214 9 view .LVU235
 1058 0014 102A     		cmp	r2, #16
 1059 0016 0ED0     		beq	.L68
 1060 0018 182A     		cmp	r2, #24
 1061 001a 12D0     		beq	.L69
 1062 001c 082A     		cmp	r2, #8
 1063 001e 04D0     		beq	.L72
ARM GAS  /tmp/cceDqxOT.s 			page 26


 1064              	.L65:
 215:Core/Src/menu.cpp ****         {
 216:Core/Src/menu.cpp ****         case MENU_CH_IN:
 217:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 218:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 219:Core/Src/menu.cpp ****             break;
 220:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 221:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 222:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 223:Core/Src/menu.cpp ****             break;
 224:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 225:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 226:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 227:Core/Src/menu.cpp ****             break;
 228:Core/Src/menu.cpp **** 
 229:Core/Src/menu.cpp ****         default:
 230:Core/Src/menu.cpp ****             break;
 231:Core/Src/menu.cpp ****         }
 232:Core/Src/menu.cpp ****     }
 233:Core/Src/menu.cpp **** }
 1065              		.loc 1 233 1 view .LVU236
 1066 0020 38BD     		pop	{r3, r4, r5, pc}
 1067              	.LVL62:
 1068              	.L71:
 210:Core/Src/menu.cpp ****     }
 1069              		.loc 1 210 9 is_stmt 1 view .LVU237
 210:Core/Src/menu.cpp ****     }
 1070              		.loc 1 210 31 is_stmt 0 view .LVU238
 1071 0022 2069     		ldr	r0, [r4, #16]
 1072 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1073              	.LVL63:
 1074 0028 F1E7     		b	.L66
 1075              	.L72:
 216:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1076              		.loc 1 216 9 is_stmt 1 view .LVU239
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1077              		.loc 1 217 13 view .LVU240
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1078              		.loc 1 217 16 is_stmt 0 view .LVU241
 1079 002a A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1080              		.loc 1 217 26 view .LVU242
 1081 002c A118     		adds	r1, r4, r2
 1082 002e 4D71     		strb	r5, [r1, #5]
 218:Core/Src/menu.cpp ****             break;
 1083              		.loc 1 218 13 is_stmt 1 view .LVU243
 218:Core/Src/menu.cpp ****             break;
 1084              		.loc 1 218 22 is_stmt 0 view .LVU244
 1085 0030 5340     		eors	r3, r3, r2
 1086 0032 A373     		strb	r3, [r4, #14]
 219:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1087              		.loc 1 219 13 is_stmt 1 view .LVU245
 1088 0034 F4E7     		b	.L65
 1089              	.L68:
 220:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1090              		.loc 1 220 9 view .LVU246
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
ARM GAS  /tmp/cceDqxOT.s 			page 27


 1091              		.loc 1 221 13 view .LVU247
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1092              		.loc 1 221 16 is_stmt 0 view .LVU248
 1093 0036 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1094              		.loc 1 221 26 view .LVU249
 1095 0038 A118     		adds	r1, r4, r2
 1096 003a 8D70     		strb	r5, [r1, #2]
 222:Core/Src/menu.cpp ****             break;
 1097              		.loc 1 222 13 is_stmt 1 view .LVU250
 222:Core/Src/menu.cpp ****             break;
 1098              		.loc 1 222 22 is_stmt 0 view .LVU251
 1099 003c 5340     		eors	r3, r3, r2
 1100 003e A373     		strb	r3, [r4, #14]
 223:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1101              		.loc 1 223 13 is_stmt 1 view .LVU252
 1102 0040 EEE7     		b	.L65
 1103              	.L69:
 224:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1104              		.loc 1 224 9 view .LVU253
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1105              		.loc 1 225 13 view .LVU254
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1106              		.loc 1 225 17 is_stmt 0 view .LVU255
 1107 0042 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1108              		.loc 1 225 27 view .LVU256
 1109 0044 A118     		adds	r1, r4, r2
 1110 0046 CD72     		strb	r5, [r1, #11]
 226:Core/Src/menu.cpp ****             break;
 1111              		.loc 1 226 13 is_stmt 1 view .LVU257
 226:Core/Src/menu.cpp ****             break;
 1112              		.loc 1 226 22 is_stmt 0 view .LVU258
 1113 0048 5340     		eors	r3, r3, r2
 1114 004a A373     		strb	r3, [r4, #14]
 227:Core/Src/menu.cpp **** 
 1115              		.loc 1 227 13 is_stmt 1 view .LVU259
 1116              		.loc 1 233 1 is_stmt 0 view .LVU260
 1117 004c E8E7     		b	.L65
 1118              		.cfi_endproc
 1119              	.LFE147:
 1120              		.fnend
 1122              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1123              		.align	1
 1124              		.global	_ZN4menu7menu_upEv
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	_ZN4menu7menu_upEv:
 1131              		.fnstart
 1132              	.LVL64:
 1133              	.LFB148:
 234:Core/Src/menu.cpp **** void menu::menu_up()
 235:Core/Src/menu.cpp **** {
 1134              		.loc 1 235 1 is_stmt 1 view -0
 1135              		.cfi_startproc
ARM GAS  /tmp/cceDqxOT.s 			page 28


 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		.loc 1 235 1 is_stmt 0 view .LVU262
 1139 0000 10B5     		push	{r4, lr}
 1140              		.save {r4, lr}
 1141              	.LCFI15:
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 4, -8
 1144              		.cfi_offset 14, -4
 1145 0002 0446     		mov	r4, r0
 236:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1146              		.loc 1 236 5 is_stmt 1 view .LVU263
 1147              		.loc 1 236 28 is_stmt 0 view .LVU264
 1148 0004 0069     		ldr	r0, [r0, #16]
 1149              	.LVL65:
 1150              		.loc 1 236 28 view .LVU265
 1151 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1152              	.LVL66:
 1153              		.loc 1 236 5 view .LVU266
 1154 000a 50B9     		cbnz	r0, .L81
 1155              	.L74:
 237:Core/Src/menu.cpp ****     {
 238:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 239:Core/Src/menu.cpp ****     }
 240:Core/Src/menu.cpp ****     switch (menu_value)
 1156              		.loc 1 240 5 is_stmt 1 view .LVU267
 1157              		.loc 1 240 13 is_stmt 0 view .LVU268
 1158 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1159              		.loc 1 240 5 view .LVU269
 1160 000e 082B     		cmp	r3, #8
 1161 0010 0BD0     		beq	.L75
 1162 0012 102B     		cmp	r3, #16
 1163 0014 0FD0     		beq	.L76
 241:Core/Src/menu.cpp ****     {
 242:Core/Src/menu.cpp ****     case MENU_CH_IN:
 243:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 244:Core/Src/menu.cpp ****         {
 245:Core/Src/menu.cpp ****             chVal++;
 246:Core/Src/menu.cpp ****         }
 247:Core/Src/menu.cpp ****         break;
 248:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 249:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 250:Core/Src/menu.cpp ****         {
 251:Core/Src/menu.cpp ****             sqVal++;
 252:Core/Src/menu.cpp ****         }
 253:Core/Src/menu.cpp ****         break;   
 254:Core/Src/menu.cpp ****     default:
 1164              		.loc 1 254 5 is_stmt 1 view .LVU270
 255:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1165              		.loc 1 255 9 view .LVU271
 1166              		.loc 1 255 12 is_stmt 0 view .LVU272
 1167 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1168              		.loc 1 255 9 view .LVU273
 1169 0018 072B     		cmp	r3, #7
 1170 001a 0BD8     		bhi	.L73
 256:Core/Src/menu.cpp ****         {
 257:Core/Src/menu.cpp ****             volVal++;
ARM GAS  /tmp/cceDqxOT.s 			page 29


 1171              		.loc 1 257 13 is_stmt 1 view .LVU274
 1172              		.loc 1 257 19 is_stmt 0 view .LVU275
 1173 001c 0133     		adds	r3, r3, #1
 1174 001e A372     		strb	r3, [r4, #10]
 258:Core/Src/menu.cpp ****         }
 259:Core/Src/menu.cpp ****         break;
 260:Core/Src/menu.cpp ****     }
 261:Core/Src/menu.cpp **** }
 1175              		.loc 1 261 1 view .LVU276
 1176 0020 08E0     		b	.L73
 1177              	.L81:
 238:Core/Src/menu.cpp ****     }
 1178              		.loc 1 238 9 is_stmt 1 view .LVU277
 238:Core/Src/menu.cpp ****     }
 1179              		.loc 1 238 31 is_stmt 0 view .LVU278
 1180 0022 2069     		ldr	r0, [r4, #16]
 1181 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1182              	.LVL67:
 1183 0028 F0E7     		b	.L74
 1184              	.L75:
 242:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1185              		.loc 1 242 5 is_stmt 1 view .LVU279
 243:Core/Src/menu.cpp ****         {
 1186              		.loc 1 243 9 view .LVU280
 243:Core/Src/menu.cpp ****         {
 1187              		.loc 1 243 12 is_stmt 0 view .LVU281
 1188 002a E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 243:Core/Src/menu.cpp ****         {
 1189              		.loc 1 243 9 view .LVU282
 1190 002c 152B     		cmp	r3, #21
 1191 002e 01D8     		bhi	.L73
 245:Core/Src/menu.cpp ****         }
 1192              		.loc 1 245 13 is_stmt 1 view .LVU283
 245:Core/Src/menu.cpp ****         }
 1193              		.loc 1 245 18 is_stmt 0 view .LVU284
 1194 0030 0133     		adds	r3, r3, #1
 1195 0032 E371     		strb	r3, [r4, #7]
 1196              	.L73:
 1197              		.loc 1 261 1 view .LVU285
 1198 0034 10BD     		pop	{r4, pc}
 1199              	.LVL68:
 1200              	.L76:
 248:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1201              		.loc 1 248 5 is_stmt 1 view .LVU286
 249:Core/Src/menu.cpp ****         {
 1202              		.loc 1 249 9 view .LVU287
 249:Core/Src/menu.cpp ****         {
 1203              		.loc 1 249 12 is_stmt 0 view .LVU288
 1204 0036 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 249:Core/Src/menu.cpp ****         {
 1205              		.loc 1 249 9 view .LVU289
 1206 0038 082B     		cmp	r3, #8
 1207 003a FBD8     		bhi	.L73
 251:Core/Src/menu.cpp ****         }
 1208              		.loc 1 251 13 is_stmt 1 view .LVU290
 251:Core/Src/menu.cpp ****         }
 1209              		.loc 1 251 18 is_stmt 0 view .LVU291
ARM GAS  /tmp/cceDqxOT.s 			page 30


 1210 003c 0133     		adds	r3, r3, #1
 1211 003e 2371     		strb	r3, [r4, #4]
 1212 0040 F8E7     		b	.L73
 1213              		.cfi_endproc
 1214              	.LFE148:
 1215              		.fnend
 1217              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1218              		.align	1
 1219              		.global	_ZN4menu9menu_downEv
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu fpv4-sp-d16
 1225              	_ZN4menu9menu_downEv:
 1226              		.fnstart
 1227              	.LVL69:
 1228              	.LFB149:
 262:Core/Src/menu.cpp **** 
 263:Core/Src/menu.cpp **** void menu::menu_down()
 264:Core/Src/menu.cpp **** {
 1229              		.loc 1 264 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		.loc 1 264 1 is_stmt 0 view .LVU293
 1234 0000 10B5     		push	{r4, lr}
 1235              		.save {r4, lr}
 1236              	.LCFI16:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 4, -8
 1239              		.cfi_offset 14, -4
 1240 0002 0446     		mov	r4, r0
 265:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1241              		.loc 1 265 5 is_stmt 1 view .LVU294
 1242              		.loc 1 265 28 is_stmt 0 view .LVU295
 1243 0004 0069     		ldr	r0, [r0, #16]
 1244              	.LVL70:
 1245              		.loc 1 265 28 view .LVU296
 1246 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1247              	.LVL71:
 1248              		.loc 1 265 5 view .LVU297
 1249 000a 48B9     		cbnz	r0, .L90
 1250              	.L83:
 266:Core/Src/menu.cpp ****     {
 267:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 268:Core/Src/menu.cpp ****     }
 269:Core/Src/menu.cpp ****     switch (menu_value)
 1251              		.loc 1 269 5 is_stmt 1 view .LVU298
 1252              		.loc 1 269 13 is_stmt 0 view .LVU299
 1253 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1254              		.loc 1 269 5 view .LVU300
 1255 000e 082B     		cmp	r3, #8
 1256 0010 0AD0     		beq	.L84
 1257 0012 102B     		cmp	r3, #16
 1258 0014 0DD0     		beq	.L85
 270:Core/Src/menu.cpp ****     {
 271:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/cceDqxOT.s 			page 31


 272:Core/Src/menu.cpp ****         if(chVal > 0)
 273:Core/Src/menu.cpp ****         {
 274:Core/Src/menu.cpp ****         chVal--;
 275:Core/Src/menu.cpp ****         }
 276:Core/Src/menu.cpp ****         break;
 277:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 278:Core/Src/menu.cpp ****         if(sqVal > 0)
 279:Core/Src/menu.cpp ****         {
 280:Core/Src/menu.cpp ****         sqVal--;
 281:Core/Src/menu.cpp ****         }
 282:Core/Src/menu.cpp ****         break;   
 283:Core/Src/menu.cpp ****     default:
 1259              		.loc 1 283 5 is_stmt 1 view .LVU301
 284:Core/Src/menu.cpp ****         if(volVal > 0)
 1260              		.loc 1 284 9 view .LVU302
 1261              		.loc 1 284 12 is_stmt 0 view .LVU303
 1262 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1263              		.loc 1 284 9 view .LVU304
 1264 0018 53B1     		cbz	r3, .L82
 285:Core/Src/menu.cpp ****         {
 286:Core/Src/menu.cpp ****             volVal--;
 1265              		.loc 1 286 13 is_stmt 1 view .LVU305
 1266              		.loc 1 286 19 is_stmt 0 view .LVU306
 1267 001a 013B     		subs	r3, r3, #1
 1268 001c A372     		strb	r3, [r4, #10]
 287:Core/Src/menu.cpp ****         }
 288:Core/Src/menu.cpp ****         break;
 289:Core/Src/menu.cpp ****     }
 290:Core/Src/menu.cpp **** 
 291:Core/Src/menu.cpp **** }
 1269              		.loc 1 291 1 view .LVU307
 1270 001e 07E0     		b	.L82
 1271              	.L90:
 267:Core/Src/menu.cpp ****     }
 1272              		.loc 1 267 9 is_stmt 1 view .LVU308
 267:Core/Src/menu.cpp ****     }
 1273              		.loc 1 267 31 is_stmt 0 view .LVU309
 1274 0020 2069     		ldr	r0, [r4, #16]
 1275 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1276              	.LVL72:
 1277 0026 F1E7     		b	.L83
 1278              	.L84:
 271:Core/Src/menu.cpp ****         if(chVal > 0)
 1279              		.loc 1 271 5 is_stmt 1 view .LVU310
 272:Core/Src/menu.cpp ****         {
 1280              		.loc 1 272 9 view .LVU311
 272:Core/Src/menu.cpp ****         {
 1281              		.loc 1 272 12 is_stmt 0 view .LVU312
 1282 0028 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 272:Core/Src/menu.cpp ****         {
 1283              		.loc 1 272 9 view .LVU313
 1284 002a 0BB1     		cbz	r3, .L82
 274:Core/Src/menu.cpp ****         }
 1285              		.loc 1 274 9 is_stmt 1 view .LVU314
 274:Core/Src/menu.cpp ****         }
 1286              		.loc 1 274 14 is_stmt 0 view .LVU315
 1287 002c 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cceDqxOT.s 			page 32


 1288 002e E371     		strb	r3, [r4, #7]
 1289              	.L82:
 1290              		.loc 1 291 1 view .LVU316
 1291 0030 10BD     		pop	{r4, pc}
 1292              	.LVL73:
 1293              	.L85:
 277:Core/Src/menu.cpp ****         if(sqVal > 0)
 1294              		.loc 1 277 5 is_stmt 1 view .LVU317
 278:Core/Src/menu.cpp ****         {
 1295              		.loc 1 278 9 view .LVU318
 278:Core/Src/menu.cpp ****         {
 1296              		.loc 1 278 12 is_stmt 0 view .LVU319
 1297 0032 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 278:Core/Src/menu.cpp ****         {
 1298              		.loc 1 278 9 view .LVU320
 1299 0034 002B     		cmp	r3, #0
 1300 0036 FBD0     		beq	.L82
 280:Core/Src/menu.cpp ****         }
 1301              		.loc 1 280 9 is_stmt 1 view .LVU321
 280:Core/Src/menu.cpp ****         }
 1302              		.loc 1 280 14 is_stmt 0 view .LVU322
 1303 0038 013B     		subs	r3, r3, #1
 1304 003a 2371     		strb	r3, [r4, #4]
 1305 003c F8E7     		b	.L82
 1306              		.cfi_endproc
 1307              	.LFE149:
 1308              		.fnend
 1310              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1311              		.align	1
 1312              		.global	_ZN4menu13keyboard_pollEv
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv4-sp-d16
 1318              	_ZN4menu13keyboard_pollEv:
 1319              		.fnstart
 1320              	.LVL74:
 1321              	.LFB150:
 292:Core/Src/menu.cpp **** 
 293:Core/Src/menu.cpp **** 
 294:Core/Src/menu.cpp **** void menu::keyboard_poll()
 295:Core/Src/menu.cpp **** {
 1322              		.loc 1 295 1 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		.loc 1 295 1 is_stmt 0 view .LVU324
 1327 0000 10B5     		push	{r4, lr}
 1328              		.save {r4, lr}
 1329              	.LCFI17:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 4, -8
 1332              		.cfi_offset 14, -4
 1333 0002 0446     		mov	r4, r0
 296:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 1334              		.loc 1 296 5 is_stmt 1 view .LVU325
 1335              	.LVL75:
ARM GAS  /tmp/cceDqxOT.s 			page 33


 297:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 298:Core/Src/menu.cpp **** 
 299:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1336              		.loc 1 299 5 view .LVU326
 1337              		.loc 1 299 15 is_stmt 0 view .LVU327
 1338 0004 534B     		ldr	r3, .L113
 1339 0006 5A69     		ldr	r2, [r3, #20]
 1340 0008 42F40062 		orr	r2, r2, #2048
 1341 000c 5A61     		str	r2, [r3, #20]
 300:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 301:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1342              		.loc 1 301 5 is_stmt 1 view .LVU328
 1343              		.loc 1 301 20 is_stmt 0 view .LVU329
 1344 000e 1B69     		ldr	r3, [r3, #16]
 1345              		.loc 1 301 23 view .LVU330
 1346 0010 03F40743 		and	r3, r3, #34560
 1347              		.loc 1 301 5 view .LVU331
 1348 0014 B3F5806F 		cmp	r3, #1024
 1349 0018 2AD0     		beq	.L92
 1350 001a 09D8     		bhi	.L93
 1351 001c B3F5807F 		cmp	r3, #256
 1352 0020 2AD0     		beq	.L94
 1353 0022 B3F5007F 		cmp	r3, #512
 1354 0026 08D1     		bne	.L96
 302:Core/Src/menu.cpp ****     {
 303:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 304:Core/Src/menu.cpp ****             menu_next();//R
 305:Core/Src/menu.cpp ****             break;
 306:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 307:Core/Src/menu.cpp ****             menu_number('6');
 308:Core/Src/menu.cpp ****             break;
 309:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1355              		.loc 1 309 9 is_stmt 1 view .LVU332
 310:Core/Src/menu.cpp ****             menu_number('5');
 1356              		.loc 1 310 13 view .LVU333
 1357              		.loc 1 310 24 is_stmt 0 view .LVU334
 1358 0028 3521     		movs	r1, #53
 1359 002a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1360              	.LVL76:
 311:Core/Src/menu.cpp ****             break;
 1361              		.loc 1 311 13 is_stmt 1 view .LVU335
 1362 002e 04E0     		b	.L96
 1363              	.LVL77:
 1364              	.L93:
 301:Core/Src/menu.cpp ****     {
 1365              		.loc 1 301 5 is_stmt 0 view .LVU336
 1366 0030 B3F5004F 		cmp	r3, #32768
 1367 0034 01D1     		bne	.L96
 303:Core/Src/menu.cpp ****             menu_next();//R
 1368              		.loc 1 303 9 is_stmt 1 view .LVU337
 304:Core/Src/menu.cpp ****             break;
 1369              		.loc 1 304 13 view .LVU338
 304:Core/Src/menu.cpp ****             break;
 1370              		.loc 1 304 22 is_stmt 0 view .LVU339
 1371 0036 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1372              	.LVL78:
 305:Core/Src/menu.cpp ****         case GPIO_PIN_10:
ARM GAS  /tmp/cceDqxOT.s 			page 34


 1373              		.loc 1 305 13 is_stmt 1 view .LVU340
 1374              	.L96:
 312:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 313:Core/Src/menu.cpp ****             menu_number('4');
 314:Core/Src/menu.cpp ****             break;
 315:Core/Src/menu.cpp ****         default:
 316:Core/Src/menu.cpp ****             break;
 317:Core/Src/menu.cpp ****     }
 318:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1375              		.loc 1 318 5 view .LVU341
 1376              		.loc 1 318 15 is_stmt 0 view .LVU342
 1377 003a 464B     		ldr	r3, .L113
 1378 003c 5A69     		ldr	r2, [r3, #20]
 1379 003e 22F40062 		bic	r2, r2, #2048
 1380 0042 5A61     		str	r2, [r3, #20]
 319:Core/Src/menu.cpp **** 
 320:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 1381              		.loc 1 320 5 is_stmt 1 view .LVU343
 1382              	.LVL79:
 321:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1383              		.loc 1 321 5 view .LVU344
 1384              		.loc 1 321 15 is_stmt 0 view .LVU345
 1385 0044 5A69     		ldr	r2, [r3, #20]
 1386 0046 42F48052 		orr	r2, r2, #4096
 1387 004a 5A61     		str	r2, [r3, #20]
 322:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 323:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1388              		.loc 1 323 5 is_stmt 1 view .LVU346
 1389              		.loc 1 323 20 is_stmt 0 view .LVU347
 1390 004c 1B69     		ldr	r3, [r3, #16]
 1391              		.loc 1 323 23 view .LVU348
 1392 004e 03F40743 		and	r3, r3, #34560
 1393              		.loc 1 323 5 view .LVU349
 1394 0052 B3F5806F 		cmp	r3, #1024
 1395 0056 34D0     		beq	.L97
 1396 0058 12D8     		bhi	.L98
 1397 005a B3F5807F 		cmp	r3, #256
 1398 005e 35D0     		beq	.L99
 1399 0060 B3F5007F 		cmp	r3, #512
 1400 0064 12D1     		bne	.L101
 324:Core/Src/menu.cpp ****     {
 325:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 326:Core/Src/menu.cpp ****             menu_prev();//L
 327:Core/Src/menu.cpp ****             break;
 328:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 329:Core/Src/menu.cpp ****             menu_number('8');
 330:Core/Src/menu.cpp ****             break;
 331:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1401              		.loc 1 331 9 is_stmt 1 view .LVU350
 332:Core/Src/menu.cpp ****             menu_number('7');
 1402              		.loc 1 332 13 view .LVU351
 1403              		.loc 1 332 24 is_stmt 0 view .LVU352
 1404 0066 3721     		movs	r1, #55
 1405 0068 2046     		mov	r0, r4
 1406 006a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1407              	.LVL80:
 333:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cceDqxOT.s 			page 35


 1408              		.loc 1 333 13 is_stmt 1 view .LVU353
 1409 006e 0DE0     		b	.L101
 1410              	.LVL81:
 1411              	.L92:
 306:Core/Src/menu.cpp ****             menu_number('6');
 1412              		.loc 1 306 9 view .LVU354
 307:Core/Src/menu.cpp ****             break;
 1413              		.loc 1 307 13 view .LVU355
 307:Core/Src/menu.cpp ****             break;
 1414              		.loc 1 307 24 is_stmt 0 view .LVU356
 1415 0070 3621     		movs	r1, #54
 1416 0072 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1417              	.LVL82:
 308:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1418              		.loc 1 308 13 is_stmt 1 view .LVU357
 1419 0076 E0E7     		b	.L96
 1420              	.LVL83:
 1421              	.L94:
 312:Core/Src/menu.cpp ****             menu_number('4');
 1422              		.loc 1 312 9 view .LVU358
 313:Core/Src/menu.cpp ****             break;
 1423              		.loc 1 313 13 view .LVU359
 313:Core/Src/menu.cpp ****             break;
 1424              		.loc 1 313 24 is_stmt 0 view .LVU360
 1425 0078 3421     		movs	r1, #52
 1426 007a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1427              	.LVL84:
 314:Core/Src/menu.cpp ****         default:
 1428              		.loc 1 314 13 is_stmt 1 view .LVU361
 1429 007e DCE7     		b	.L96
 1430              	.LVL85:
 1431              	.L98:
 323:Core/Src/menu.cpp ****     {
 1432              		.loc 1 323 5 is_stmt 0 view .LVU362
 1433 0080 B3F5004F 		cmp	r3, #32768
 1434 0084 02D1     		bne	.L101
 325:Core/Src/menu.cpp ****             menu_prev();//L
 1435              		.loc 1 325 9 is_stmt 1 view .LVU363
 326:Core/Src/menu.cpp ****             break;
 1436              		.loc 1 326 13 view .LVU364
 326:Core/Src/menu.cpp ****             break;
 1437              		.loc 1 326 22 is_stmt 0 view .LVU365
 1438 0086 2046     		mov	r0, r4
 1439 0088 FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1440              	.LVL86:
 327:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1441              		.loc 1 327 13 is_stmt 1 view .LVU366
 1442              	.L101:
 334:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 335:Core/Src/menu.cpp ****             menu_number('9');
 336:Core/Src/menu.cpp ****             break;
 337:Core/Src/menu.cpp ****         default:
 338:Core/Src/menu.cpp ****             break;
 339:Core/Src/menu.cpp **** 
 340:Core/Src/menu.cpp ****     }
 341:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1443              		.loc 1 341 5 view .LVU367
ARM GAS  /tmp/cceDqxOT.s 			page 36


 1444              		.loc 1 341 15 is_stmt 0 view .LVU368
 1445 008c 314B     		ldr	r3, .L113
 1446 008e 5A69     		ldr	r2, [r3, #20]
 1447 0090 22F48052 		bic	r2, r2, #4096
 1448 0094 5A61     		str	r2, [r3, #20]
 342:Core/Src/menu.cpp **** 
 343:Core/Src/menu.cpp **** 
 344:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 1449              		.loc 1 344 5 is_stmt 1 view .LVU369
 1450              	.LVL87:
 345:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1451              		.loc 1 345 5 view .LVU370
 1452              		.loc 1 345 15 is_stmt 0 view .LVU371
 1453 0096 5A69     		ldr	r2, [r3, #20]
 1454 0098 42F40052 		orr	r2, r2, #8192
 1455 009c 5A61     		str	r2, [r3, #20]
 346:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 347:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1456              		.loc 1 347 5 is_stmt 1 view .LVU372
 1457              		.loc 1 347 20 is_stmt 0 view .LVU373
 1458 009e 1B69     		ldr	r3, [r3, #16]
 1459              		.loc 1 347 23 view .LVU374
 1460 00a0 03F40743 		and	r3, r3, #34560
 1461              		.loc 1 347 5 view .LVU375
 1462 00a4 B3F5806F 		cmp	r3, #1024
 1463 00a8 36D0     		beq	.L102
 1464 00aa 14D8     		bhi	.L103
 1465 00ac B3F5807F 		cmp	r3, #256
 1466 00b0 36D0     		beq	.L104
 1467 00b2 B3F5007F 		cmp	r3, #512
 1468 00b6 14D1     		bne	.L106
 348:Core/Src/menu.cpp ****     {
 349:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 350:Core/Src/menu.cpp ****             menu_down();//D
 351:Core/Src/menu.cpp ****             break;
 352:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 353:Core/Src/menu.cpp ****             menu_menu();//M
 354:Core/Src/menu.cpp ****             break;
 355:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1469              		.loc 1 355 9 is_stmt 1 view .LVU376
 356:Core/Src/menu.cpp ****             menu_number('0');
 1470              		.loc 1 356 13 view .LVU377
 1471              		.loc 1 356 24 is_stmt 0 view .LVU378
 1472 00b8 3021     		movs	r1, #48
 1473 00ba 2046     		mov	r0, r4
 1474 00bc FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1475              	.LVL88:
 357:Core/Src/menu.cpp ****             break;
 1476              		.loc 1 357 13 is_stmt 1 view .LVU379
 1477 00c0 0FE0     		b	.L106
 1478              	.LVL89:
 1479              	.L97:
 328:Core/Src/menu.cpp ****             menu_number('8');
 1480              		.loc 1 328 9 view .LVU380
 329:Core/Src/menu.cpp ****             break;
 1481              		.loc 1 329 13 view .LVU381
 329:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cceDqxOT.s 			page 37


 1482              		.loc 1 329 24 is_stmt 0 view .LVU382
 1483 00c2 3821     		movs	r1, #56
 1484 00c4 2046     		mov	r0, r4
 1485 00c6 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1486              	.LVL90:
 330:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1487              		.loc 1 330 13 is_stmt 1 view .LVU383
 1488 00ca DFE7     		b	.L101
 1489              	.L99:
 334:Core/Src/menu.cpp ****             menu_number('9');
 1490              		.loc 1 334 9 view .LVU384
 335:Core/Src/menu.cpp ****             break;
 1491              		.loc 1 335 13 view .LVU385
 335:Core/Src/menu.cpp ****             break;
 1492              		.loc 1 335 24 is_stmt 0 view .LVU386
 1493 00cc 3921     		movs	r1, #57
 1494 00ce 2046     		mov	r0, r4
 1495 00d0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1496              	.LVL91:
 336:Core/Src/menu.cpp ****         default:
 1497              		.loc 1 336 13 is_stmt 1 view .LVU387
 1498 00d4 DAE7     		b	.L101
 1499              	.LVL92:
 1500              	.L103:
 347:Core/Src/menu.cpp ****     {
 1501              		.loc 1 347 5 is_stmt 0 view .LVU388
 1502 00d6 B3F5004F 		cmp	r3, #32768
 1503 00da 02D1     		bne	.L106
 349:Core/Src/menu.cpp ****             menu_down();//D
 1504              		.loc 1 349 9 is_stmt 1 view .LVU389
 350:Core/Src/menu.cpp ****             break;
 1505              		.loc 1 350 13 view .LVU390
 350:Core/Src/menu.cpp ****             break;
 1506              		.loc 1 350 22 is_stmt 0 view .LVU391
 1507 00dc 2046     		mov	r0, r4
 1508 00de FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1509              	.LVL93:
 351:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1510              		.loc 1 351 13 is_stmt 1 view .LVU392
 1511              	.L106:
 358:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 359:Core/Src/menu.cpp ****             menu_back();//B
 360:Core/Src/menu.cpp ****             break;
 361:Core/Src/menu.cpp ****         default:
 362:Core/Src/menu.cpp ****             break;
 363:Core/Src/menu.cpp **** 
 364:Core/Src/menu.cpp ****     }
 365:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1512              		.loc 1 365 5 view .LVU393
 1513              		.loc 1 365 15 is_stmt 0 view .LVU394
 1514 00e2 1C4B     		ldr	r3, .L113
 1515 00e4 5A69     		ldr	r2, [r3, #20]
 1516 00e6 22F40052 		bic	r2, r2, #8192
 1517 00ea 5A61     		str	r2, [r3, #20]
 366:Core/Src/menu.cpp **** 
 367:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 1518              		.loc 1 367 5 is_stmt 1 view .LVU395
ARM GAS  /tmp/cceDqxOT.s 			page 38


 1519              	.LVL94:
 368:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1520              		.loc 1 368 5 view .LVU396
 1521              		.loc 1 368 15 is_stmt 0 view .LVU397
 1522 00ec 5A69     		ldr	r2, [r3, #20]
 1523 00ee 42F48042 		orr	r2, r2, #16384
 1524 00f2 5A61     		str	r2, [r3, #20]
 369:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 370:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1525              		.loc 1 370 5 is_stmt 1 view .LVU398
 1526              		.loc 1 370 20 is_stmt 0 view .LVU399
 1527 00f4 1B69     		ldr	r3, [r3, #16]
 1528              		.loc 1 370 23 view .LVU400
 1529 00f6 03F40743 		and	r3, r3, #34560
 1530              		.loc 1 370 5 view .LVU401
 1531 00fa B3F5806F 		cmp	r3, #1024
 1532 00fe 1FD0     		beq	.L107
 1533 0100 12D8     		bhi	.L108
 1534 0102 B3F5807F 		cmp	r3, #256
 1535 0106 20D0     		beq	.L109
 1536 0108 B3F5007F 		cmp	r3, #512
 1537 010c 12D1     		bne	.L111
 371:Core/Src/menu.cpp ****     {
 372:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 373:Core/Src/menu.cpp ****             menu_up();//U
 374:Core/Src/menu.cpp ****             break;
 375:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 376:Core/Src/menu.cpp ****             menu_number('3');
 377:Core/Src/menu.cpp ****             break;
 378:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1538              		.loc 1 378 9 is_stmt 1 view .LVU402
 379:Core/Src/menu.cpp ****             menu_number('2');
 1539              		.loc 1 379 13 view .LVU403
 1540              		.loc 1 379 24 is_stmt 0 view .LVU404
 1541 010e 3221     		movs	r1, #50
 1542 0110 2046     		mov	r0, r4
 1543 0112 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1544              	.LVL95:
 380:Core/Src/menu.cpp ****             break;
 1545              		.loc 1 380 13 is_stmt 1 view .LVU405
 1546 0116 0DE0     		b	.L111
 1547              	.LVL96:
 1548              	.L102:
 352:Core/Src/menu.cpp ****             menu_menu();//M
 1549              		.loc 1 352 9 view .LVU406
 353:Core/Src/menu.cpp ****             break;
 1550              		.loc 1 353 13 view .LVU407
 353:Core/Src/menu.cpp ****             break;
 1551              		.loc 1 353 22 is_stmt 0 view .LVU408
 1552 0118 2046     		mov	r0, r4
 1553 011a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1554              	.LVL97:
 354:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1555              		.loc 1 354 13 is_stmt 1 view .LVU409
 1556 011e E0E7     		b	.L106
 1557              	.L104:
 358:Core/Src/menu.cpp ****             menu_back();//B
ARM GAS  /tmp/cceDqxOT.s 			page 39


 1558              		.loc 1 358 9 view .LVU410
=======
 911              		.loc 1 185 20 is_stmt 0 view .LVU204
 912 005e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 185:Core/Src/menu.cpp ****         break;
 913              		.loc 1 185 18 view .LVU205
 914 0060 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 915 0062 5340     		eors	r3, r3, r2
 916 0064 A373     		strb	r3, [r4, #14]
 186:Core/Src/menu.cpp **** 
 917              		.loc 1 186 9 is_stmt 1 view .LVU206
 918              		.loc 1 191 1 is_stmt 0 view .LVU207
 919 0066 E9E7     		b	.L47
 920              		.cfi_endproc
 921              	.LFE146:
 922              		.fnend
 924              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 925              		.align	1
 926              		.global	_ZN4menu11menu_numberEc
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN4menu11menu_numberEc:
 933              		.fnstart
 934              	.LVL57:
 935              	.LFB147:
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 193:Core/Src/menu.cpp **** {
 936              		.loc 1 193 1 is_stmt 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccMEB0iu.s 			page 23


 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		.loc 1 193 1 is_stmt 0 view .LVU209
 941 0000 38B5     		push	{r3, r4, r5, lr}
 942              		.save {r3, r4, r5, lr}
 943              	.LCFI11:
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 3, -16
 946              		.cfi_offset 4, -12
 947              		.cfi_offset 5, -8
 948              		.cfi_offset 14, -4
 949 0002 0446     		mov	r4, r0
 950 0004 0D46     		mov	r5, r1
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 951              		.loc 1 194 5 is_stmt 1 view .LVU210
 952              		.loc 1 194 28 is_stmt 0 view .LVU211
 953 0006 0069     		ldr	r0, [r0, #16]
 954              	.LVL58:
 955              		.loc 1 194 28 view .LVU212
 956 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 957              	.LVL59:
 958              		.loc 1 194 5 view .LVU213
 959 000c 48B9     		cbnz	r0, .L65
 960              	.L60:
 195:Core/Src/menu.cpp ****     {
 196:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 197:Core/Src/menu.cpp ****     }
 198:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 961              		.loc 1 198 5 is_stmt 1 view .LVU214
 962              		.loc 1 198 8 is_stmt 0 view .LVU215
 963 000e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 964              		.loc 1 198 5 view .LVU216
 965 0010 33B1     		cbz	r3, .L59
 199:Core/Src/menu.cpp ****     {
 200:Core/Src/menu.cpp ****         switch (menu_value)
 966              		.loc 1 200 9 is_stmt 1 view .LVU217
 967              		.loc 1 200 17 is_stmt 0 view .LVU218
 968 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 969              		.loc 1 200 9 view .LVU219
 970 0014 102A     		cmp	r2, #16
 971 0016 0ED0     		beq	.L62
 972 0018 182A     		cmp	r2, #24
 973 001a 12D0     		beq	.L63
 974 001c 082A     		cmp	r2, #8
 975 001e 04D0     		beq	.L66
 976              	.L59:
 201:Core/Src/menu.cpp ****         {
 202:Core/Src/menu.cpp ****         case MENU_CH_IN:
 203:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 205:Core/Src/menu.cpp ****             break;
 206:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 207:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 209:Core/Src/menu.cpp ****             break;
 210:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 211:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
ARM GAS  /tmp/ccMEB0iu.s 			page 24


 213:Core/Src/menu.cpp ****             break;
 214:Core/Src/menu.cpp **** 
 215:Core/Src/menu.cpp ****         default:
=======
 615              		.loc 1 95 9 is_stmt 1 view .LVU114
=======
 614              		.loc 1 95 9 is_stmt 1 view .LVU114
 615 0092 002B     		cmp	r3, #0
 616 0094 D8D1     		bne	.L27
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
  97:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 617              		.loc 1 97 13 view .LVU115
  97:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 618              		.loc 1 97 24 is_stmt 0 view .LVU116
 619 0096 04F10E00 		add	r0, r4, #14
 620 009a FFF7FEFF 		bl	atoi
 621              	.LVL40:
  97:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 622              		.loc 1 97 19 view .LVU117
ARM GAS  /tmp/ccXHb2EA.s 			page 23


 623 009e C1B2     		uxtb	r1, r0
 624 00a0 6174     		strb	r1, [r4, #17]
  98:Core/Src/menu.cpp ****             cursorPos=0;
 625              		.loc 1 98 13 is_stmt 1 view .LVU118
  98:Core/Src/menu.cpp ****             cursorPos=0;
 626              		.loc 1 98 33 is_stmt 0 view .LVU119
 627 00a2 6069     		ldr	r0, [r4, #20]
 628 00a4 FFF7FEFF 		bl	_ZN4oled13oled_setTimerEm
 629              	.LVL41:
  99:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 630              		.loc 1 99 13 is_stmt 1 view .LVU120
  99:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 631              		.loc 1 99 22 is_stmt 0 view .LVU121
 632 00a8 0023     		movs	r3, #0
 633 00aa A374     		strb	r3, [r4, #18]
 109:Core/Src/menu.cpp **** 
 634              		.loc 1 109 1 view .LVU122
 635 00ac CCE7     		b	.L27
 636              		.cfi_endproc
 637              	.LFE1988:
 638              		.fnend
 640              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 641              		.align	1
 642              		.global	_ZN4menu9menu_nextEv
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu fpv4-sp-d16
 648              	_ZN4menu9menu_nextEv:
 649              		.fnstart
 650              	.LVL42:
 651              	.LFB1989:
 112:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 652              		.loc 1 112 1 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 112:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 656              		.loc 1 112 1 is_stmt 0 view .LVU124
 657 0000 10B5     		push	{r4, lr}
 658              		.save {r4, lr}
 659              	.LCFI8:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 4, -8
 662              		.cfi_offset 14, -4
 663 0002 0446     		mov	r4, r0
 113:Core/Src/menu.cpp ****     {
 664              		.loc 1 113 5 is_stmt 1 view .LVU125
 113:Core/Src/menu.cpp ****     {
 665              		.loc 1 113 28 is_stmt 0 view .LVU126
 666 0004 4069     		ldr	r0, [r0, #20]
 667              	.LVL43:
 113:Core/Src/menu.cpp ****     {
 668              		.loc 1 113 28 view .LVU127
 669 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 670              	.LVL44:
 113:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/ccXHb2EA.s 			page 24


 671              		.loc 1 113 5 view .LVU128
 672 000a 88B9     		cbnz	r0, .L49
 673              	.L40:
 117:Core/Src/menu.cpp ****     {
 674              		.loc 1 117 5 is_stmt 1 view .LVU129
 117:Core/Src/menu.cpp ****     {
 675              		.loc 1 117 13 is_stmt 0 view .LVU130
 676 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 677 000e 013B     		subs	r3, r3, #1
 678 0010 172B     		cmp	r3, #23
 679 0012 1AD8     		bhi	.L39
 680 0014 DFE803F0 		tbb	[pc, r3]
 681              	.L43:
 682 0018 10       		.byte	(.L47-.L43)/2
 683 0019 13       		.byte	(.L46-.L43)/2
 684 001a 13       		.byte	(.L46-.L43)/2
 685 001b 19       		.byte	(.L39-.L43)/2
 686 001c 19       		.byte	(.L39-.L43)/2
 687 001d 19       		.byte	(.L39-.L43)/2
 688 001e 19       		.byte	(.L39-.L43)/2
 689 001f 15       		.byte	(.L45-.L43)/2
 690 0020 19       		.byte	(.L39-.L43)/2
 691 0021 19       		.byte	(.L39-.L43)/2
 692 0022 19       		.byte	(.L39-.L43)/2
 693 0023 19       		.byte	(.L39-.L43)/2
 694 0024 19       		.byte	(.L39-.L43)/2
 695 0025 19       		.byte	(.L39-.L43)/2
 696 0026 19       		.byte	(.L39-.L43)/2
 697 0027 1A       		.byte	(.L44-.L43)/2
 698 0028 19       		.byte	(.L39-.L43)/2
 699 0029 19       		.byte	(.L39-.L43)/2
 700 002a 19       		.byte	(.L39-.L43)/2
 701 002b 19       		.byte	(.L39-.L43)/2
 702 002c 19       		.byte	(.L39-.L43)/2
 703 002d 19       		.byte	(.L39-.L43)/2
 704 002e 19       		.byte	(.L39-.L43)/2
 705 002f 1F       		.byte	(.L42-.L43)/2
 706              		.p2align 1
 707              	.L49:
 115:Core/Src/menu.cpp ****     }
 708              		.loc 1 115 9 is_stmt 1 view .LVU131
 115:Core/Src/menu.cpp ****     }
 709              		.loc 1 115 31 is_stmt 0 view .LVU132
 710 0030 6069     		ldr	r0, [r4, #20]
 711 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 712              	.LVL45:
 713 0036 E9E7     		b	.L40
 714              	.L47:
 121:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 715              		.loc 1 121 5 is_stmt 1 view .LVU133
 122:Core/Src/menu.cpp ****         break;
 716              		.loc 1 122 9 view .LVU134
 122:Core/Src/menu.cpp ****         break;
 717              		.loc 1 122 19 is_stmt 0 view .LVU135
 718 0038 0223     		movs	r3, #2
 719 003a 2370     		strb	r3, [r4]
 123:Core/Src/menu.cpp ****     case MENU_SQ:
ARM GAS  /tmp/ccXHb2EA.s 			page 25


 720              		.loc 1 123 9 is_stmt 1 view .LVU136
 721 003c 05E0     		b	.L39
 722              	.L46:
 126:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 723              		.loc 1 126 5 view .LVU137
 127:Core/Src/menu.cpp ****     case MENU_CH_IN:
 724              		.loc 1 127 9 view .LVU138
 127:Core/Src/menu.cpp ****     case MENU_CH_IN:
 725              		.loc 1 127 19 is_stmt 0 view .LVU139
 726 003e 0123     		movs	r3, #1
 727 0040 2370     		strb	r3, [r4]
 728              	.L45:
 128:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 729              		.loc 1 128 5 is_stmt 1 view .LVU140
 129:Core/Src/menu.cpp ****         break;
 730              		.loc 1 129 9 view .LVU141
 129:Core/Src/menu.cpp ****         break;
 731              		.loc 1 129 20 is_stmt 0 view .LVU142
 732 0042 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 129:Core/Src/menu.cpp ****         break;
 733              		.loc 1 129 18 view .LVU143
 734 0044 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 735 0046 5340     		eors	r3, r3, r2
 736 0048 A374     		strb	r3, [r4, #18]
 130:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 737              		.loc 1 130 9 is_stmt 1 view .LVU144
 738              	.L39:
 141:Core/Src/menu.cpp **** 
 739              		.loc 1 141 1 is_stmt 0 view .LVU145
 740 004a 10BD     		pop	{r4, pc}
 741              	.LVL46:
 742              	.L44:
 131:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 743              		.loc 1 131 5 is_stmt 1 view .LVU146
 132:Core/Src/menu.cpp ****         break;
 744              		.loc 1 132 9 view .LVU147
 132:Core/Src/menu.cpp ****         break;
 745              		.loc 1 132 20 is_stmt 0 view .LVU148
 746 004c E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 132:Core/Src/menu.cpp ****         break;
 747              		.loc 1 132 18 view .LVU149
 748 004e A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 749 0050 5340     		eors	r3, r3, r2
 750 0052 A374     		strb	r3, [r4, #18]
 133:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 751              		.loc 1 133 9 is_stmt 1 view .LVU150
 752 0054 F9E7     		b	.L39
 753              	.L42:
 134:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 754              		.loc 1 134 5 view .LVU151
 135:Core/Src/menu.cpp ****         break;
 755              		.loc 1 135 9 view .LVU152
 135:Core/Src/menu.cpp ****         break;
 756              		.loc 1 135 20 is_stmt 0 view .LVU153
 757 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 135:Core/Src/menu.cpp ****         break;
 758              		.loc 1 135 18 view .LVU154
ARM GAS  /tmp/ccXHb2EA.s 			page 26


 759 0058 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 760 005a 5340     		eors	r3, r3, r2
 761 005c A374     		strb	r3, [r4, #18]
 136:Core/Src/menu.cpp **** 
 762              		.loc 1 136 9 is_stmt 1 view .LVU155
 141:Core/Src/menu.cpp **** 
 763              		.loc 1 141 1 is_stmt 0 view .LVU156
 764 005e F4E7     		b	.L39
 765              		.cfi_endproc
 766              	.LFE1989:
 767              		.fnend
 769              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 770              		.align	1
 771              		.global	_ZN4menu9menu_menuEv
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv4-sp-d16
 777              	_ZN4menu9menu_menuEv:
 778              		.fnstart
 779              	.LVL47:
 780              	.LFB1990:
 144:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 781              		.loc 1 144 1 is_stmt 1 view -0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 785              		.loc 1 144 1 is_stmt 0 view .LVU158
 786 0000 10B5     		push	{r4, lr}
 787              		.save {r4, lr}
 788              	.LCFI9:
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 4, -8
 791              		.cfi_offset 14, -4
 792 0002 0446     		mov	r4, r0
 145:Core/Src/menu.cpp ****     {
 793              		.loc 1 145 5 is_stmt 1 view .LVU159
 145:Core/Src/menu.cpp ****     {
 794              		.loc 1 145 28 is_stmt 0 view .LVU160
 795 0004 4069     		ldr	r0, [r0, #20]
 796              	.LVL48:
 145:Core/Src/menu.cpp ****     {
 797              		.loc 1 145 28 view .LVU161
 798 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 799              	.LVL49:
 145:Core/Src/menu.cpp ****     {
 800              		.loc 1 145 5 view .LVU162
 801 000a 10B9     		cbnz	r0, .L53
 802              	.L51:
 149:Core/Src/menu.cpp **** }
 803              		.loc 1 149 5 is_stmt 1 view .LVU163
 149:Core/Src/menu.cpp **** }
 804              		.loc 1 149 16 is_stmt 0 view .LVU164
 805 000c 0123     		movs	r3, #1
 806 000e 2370     		strb	r3, [r4]
 150:Core/Src/menu.cpp **** 
ARM GAS  /tmp/ccXHb2EA.s 			page 27


 807              		.loc 1 150 1 view .LVU165
 808 0010 10BD     		pop	{r4, pc}
 809              	.LVL50:
 810              	.L53:
 147:Core/Src/menu.cpp ****     }
 811              		.loc 1 147 9 is_stmt 1 view .LVU166
 147:Core/Src/menu.cpp ****     }
 812              		.loc 1 147 31 is_stmt 0 view .LVU167
 813 0012 6069     		ldr	r0, [r4, #20]
 814 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 815              	.LVL51:
 816 0018 F8E7     		b	.L51
 817              		.cfi_endproc
 818              	.LFE1990:
 819              		.fnend
 821              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 822              		.align	1
 823              		.global	_ZN4menu9menu_backEv
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 827              		.fpu fpv4-sp-d16
 829              	_ZN4menu9menu_backEv:
 830              		.fnstart
 831              	.LVL52:
 832              	.LFB1991:
 153:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 833              		.loc 1 153 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 153:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 837              		.loc 1 153 1 is_stmt 0 view .LVU169
 838 0000 10B5     		push	{r4, lr}
 839              		.save {r4, lr}
 840              	.LCFI10:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 4, -8
 843              		.cfi_offset 14, -4
 844 0002 0446     		mov	r4, r0
 154:Core/Src/menu.cpp ****     {
 845              		.loc 1 154 5 is_stmt 1 view .LVU170
 154:Core/Src/menu.cpp ****     {
 846              		.loc 1 154 28 is_stmt 0 view .LVU171
 847 0004 4069     		ldr	r0, [r0, #20]
 848              	.LVL53:
 154:Core/Src/menu.cpp ****     {
 849              		.loc 1 154 28 view .LVU172
 850 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 851              	.LVL54:
 154:Core/Src/menu.cpp ****     {
 852              		.loc 1 154 5 view .LVU173
 853 000a 18B9     		cbnz	r0, .L57
 854              	.L55:
 158:Core/Src/menu.cpp **** }
 855              		.loc 1 158 5 is_stmt 1 view .LVU174
 158:Core/Src/menu.cpp **** }
ARM GAS  /tmp/ccXHb2EA.s 			page 28


 856              		.loc 1 158 36 is_stmt 0 view .LVU175
 857 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 158:Core/Src/menu.cpp **** }
 858              		.loc 1 158 18 view .LVU176
 859 000e DB08     		lsrs	r3, r3, #3
 158:Core/Src/menu.cpp **** }
 860              		.loc 1 158 16 view .LVU177
 861 0010 2370     		strb	r3, [r4]
 159:Core/Src/menu.cpp **** 
 862              		.loc 1 159 1 view .LVU178
 863 0012 10BD     		pop	{r4, pc}
 864              	.LVL55:
 865              	.L57:
 156:Core/Src/menu.cpp ****     }
 866              		.loc 1 156 9 is_stmt 1 view .LVU179
 156:Core/Src/menu.cpp ****     }
 867              		.loc 1 156 31 is_stmt 0 view .LVU180
 868 0014 6069     		ldr	r0, [r4, #20]
 869 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 870              	.LVL56:
 871 001a F7E7     		b	.L55
 872              		.cfi_endproc
 873              	.LFE1991:
 874              		.fnend
 876              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 877              		.align	1
 878              		.global	_ZN4menu9menu_prevEv
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	_ZN4menu9menu_prevEv:
 885              		.fnstart
 886              	.LVL57:
 887              	.LFB1992:
 162:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 888              		.loc 1 162 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 162:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 892              		.loc 1 162 1 is_stmt 0 view .LVU182
 893 0000 10B5     		push	{r4, lr}
 894              		.save {r4, lr}
 895              	.LCFI11:
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 899 0002 0446     		mov	r4, r0
 163:Core/Src/menu.cpp ****     {
 900              		.loc 1 163 5 is_stmt 1 view .LVU183
 163:Core/Src/menu.cpp ****     {
 901              		.loc 1 163 28 is_stmt 0 view .LVU184
 902 0004 4069     		ldr	r0, [r0, #20]
 903              	.LVL58:
 163:Core/Src/menu.cpp ****     {
 904              		.loc 1 163 28 view .LVU185
ARM GAS  /tmp/ccXHb2EA.s 			page 29


 905 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 906              	.LVL59:
 163:Core/Src/menu.cpp ****     {
 907              		.loc 1 163 5 view .LVU186
 908 000a 88B9     		cbnz	r0, .L69
 909              	.L59:
 167:Core/Src/menu.cpp ****     {
 910              		.loc 1 167 5 is_stmt 1 view .LVU187
 167:Core/Src/menu.cpp ****     {
 911              		.loc 1 167 13 is_stmt 0 view .LVU188
 912 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 913 000e 013B     		subs	r3, r3, #1
 914 0010 172B     		cmp	r3, #23
 915 0012 13D8     		bhi	.L58
 916 0014 DFE803F0 		tbb	[pc, r3]
 917              	.L62:
 918 0018 10       		.byte	(.L67-.L62)/2
 919 0019 13       		.byte	(.L66-.L62)/2
 920 001a 16       		.byte	(.L65-.L62)/2
 921 001b 12       		.byte	(.L58-.L62)/2
 922 001c 12       		.byte	(.L58-.L62)/2
 923 001d 12       		.byte	(.L58-.L62)/2
 924 001e 12       		.byte	(.L58-.L62)/2
 925 001f 19       		.byte	(.L64-.L62)/2
 926 0020 12       		.byte	(.L58-.L62)/2
 927 0021 12       		.byte	(.L58-.L62)/2
 928 0022 12       		.byte	(.L58-.L62)/2
 929 0023 12       		.byte	(.L58-.L62)/2
 930 0024 12       		.byte	(.L58-.L62)/2
 931 0025 12       		.byte	(.L58-.L62)/2
 932 0026 12       		.byte	(.L58-.L62)/2
 933 0027 1E       		.byte	(.L63-.L62)/2
 934 0028 12       		.byte	(.L58-.L62)/2
 935 0029 12       		.byte	(.L58-.L62)/2
 936 002a 12       		.byte	(.L58-.L62)/2
 937 002b 12       		.byte	(.L58-.L62)/2
 938 002c 12       		.byte	(.L58-.L62)/2
 939 002d 12       		.byte	(.L58-.L62)/2
 940 002e 12       		.byte	(.L58-.L62)/2
 941 002f 23       		.byte	(.L61-.L62)/2
 942              		.p2align 1
 943              	.L69:
 165:Core/Src/menu.cpp ****     }
 944              		.loc 1 165 9 is_stmt 1 view .LVU189
 165:Core/Src/menu.cpp ****     }
 945              		.loc 1 165 31 is_stmt 0 view .LVU190
 946 0030 6069     		ldr	r0, [r4, #20]
 947 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 948              	.LVL60:
 949 0036 E9E7     		b	.L59
 950              	.L67:
 171:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 951              		.loc 1 171 5 is_stmt 1 view .LVU191
 172:Core/Src/menu.cpp ****         break;
 952              		.loc 1 172 9 view .LVU192
 172:Core/Src/menu.cpp ****         break;
 953              		.loc 1 172 19 is_stmt 0 view .LVU193
ARM GAS  /tmp/ccXHb2EA.s 			page 30


 954 0038 0323     		movs	r3, #3
 955 003a 2370     		strb	r3, [r4]
 173:Core/Src/menu.cpp ****     case MENU_SQ:
 956              		.loc 1 173 9 is_stmt 1 view .LVU194
 957              	.L58:
 193:Core/Src/menu.cpp **** void menu::menu_number(char num)
 958              		.loc 1 193 1 is_stmt 0 view .LVU195
 959 003c 10BD     		pop	{r4, pc}
 960              	.LVL61:
 961              	.L66:
 174:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 962              		.loc 1 174 5 is_stmt 1 view .LVU196
 175:Core/Src/menu.cpp ****         break;
 963              		.loc 1 175 9 view .LVU197
 175:Core/Src/menu.cpp ****         break;
 964              		.loc 1 175 19 is_stmt 0 view .LVU198
 965 003e 0123     		movs	r3, #1
 966 0040 2370     		strb	r3, [r4]
 176:Core/Src/menu.cpp ****     case MENU_TMO:
 967              		.loc 1 176 9 is_stmt 1 view .LVU199
 968 0042 FBE7     		b	.L58
 969              	.L65:
 177:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 970              		.loc 1 177 5 view .LVU200
 178:Core/Src/menu.cpp ****         break;
 971              		.loc 1 178 9 view .LVU201
 178:Core/Src/menu.cpp ****         break;
 972              		.loc 1 178 19 is_stmt 0 view .LVU202
 973 0044 0223     		movs	r3, #2
 974 0046 2370     		strb	r3, [r4]
 179:Core/Src/menu.cpp ****     case MENU_CH_IN:
 975              		.loc 1 179 9 is_stmt 1 view .LVU203
 976 0048 F8E7     		b	.L58
 977              	.L64:
 180:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 978              		.loc 1 180 5 view .LVU204
 181:Core/Src/menu.cpp ****         break;
 979              		.loc 1 181 9 view .LVU205
 181:Core/Src/menu.cpp ****         break;
 980              		.loc 1 181 20 is_stmt 0 view .LVU206
 981 004a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 181:Core/Src/menu.cpp ****         break;
 982              		.loc 1 181 18 view .LVU207
 983 004c A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 984 004e 5340     		eors	r3, r3, r2
 985 0050 A374     		strb	r3, [r4, #18]
 182:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 986              		.loc 1 182 9 is_stmt 1 view .LVU208
 987 0052 F3E7     		b	.L58
 988              	.L63:
 183:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 989              		.loc 1 183 5 view .LVU209
 184:Core/Src/menu.cpp ****         break;
 990              		.loc 1 184 9 view .LVU210
 184:Core/Src/menu.cpp ****         break;
 991              		.loc 1 184 20 is_stmt 0 view .LVU211
 992 0054 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
ARM GAS  /tmp/ccXHb2EA.s 			page 31


 184:Core/Src/menu.cpp ****         break;
 993              		.loc 1 184 18 view .LVU212
 994 0056 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 995 0058 5340     		eors	r3, r3, r2
 996 005a A374     		strb	r3, [r4, #18]
 185:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 997              		.loc 1 185 9 is_stmt 1 view .LVU213
 998 005c EEE7     		b	.L58
 999              	.L61:
 186:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 1000              		.loc 1 186 5 view .LVU214
 187:Core/Src/menu.cpp ****         break;
 1001              		.loc 1 187 9 view .LVU215
 187:Core/Src/menu.cpp ****         break;
 1002              		.loc 1 187 20 is_stmt 0 view .LVU216
 1003 005e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 187:Core/Src/menu.cpp ****         break;
 1004              		.loc 1 187 18 view .LVU217
 1005 0060 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1006 0062 5340     		eors	r3, r3, r2
 1007 0064 A374     		strb	r3, [r4, #18]
 188:Core/Src/menu.cpp **** 
 1008              		.loc 1 188 9 is_stmt 1 view .LVU218
 193:Core/Src/menu.cpp **** void menu::menu_number(char num)
 1009              		.loc 1 193 1 is_stmt 0 view .LVU219
 1010 0066 E9E7     		b	.L58
 1011              		.cfi_endproc
 1012              	.LFE1992:
 1013              		.fnend
 1015              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 1016              		.align	1
 1017              		.global	_ZN4menu11menu_numberEc
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu fpv4-sp-d16
 1023              	_ZN4menu11menu_numberEc:
 1024              		.fnstart
 1025              	.LVL62:
 1026              	.LFB1993:
 195:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1027              		.loc 1 195 1 is_stmt 1 view -0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 195:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1031              		.loc 1 195 1 is_stmt 0 view .LVU221
 1032 0000 38B5     		push	{r3, r4, r5, lr}
 1033              		.save {r3, r4, r5, lr}
 1034              	.LCFI12:
 1035              		.cfi_def_cfa_offset 16
 1036              		.cfi_offset 3, -16
 1037              		.cfi_offset 4, -12
 1038              		.cfi_offset 5, -8
 1039              		.cfi_offset 14, -4
 1040 0002 0446     		mov	r4, r0
 1041 0004 0D46     		mov	r5, r1
ARM GAS  /tmp/ccXHb2EA.s 			page 32


 196:Core/Src/menu.cpp ****     {
 1042              		.loc 1 196 5 is_stmt 1 view .LVU222
 196:Core/Src/menu.cpp ****     {
 1043              		.loc 1 196 28 is_stmt 0 view .LVU223
 1044 0006 4069     		ldr	r0, [r0, #20]
 1045              	.LVL63:
 196:Core/Src/menu.cpp ****     {
 1046              		.loc 1 196 28 view .LVU224
 1047 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1048              	.LVL64:
 196:Core/Src/menu.cpp ****     {
 1049              		.loc 1 196 5 view .LVU225
 1050 000c 48B9     		cbnz	r0, .L76
 1051              	.L71:
 200:Core/Src/menu.cpp ****     {
 1052              		.loc 1 200 5 is_stmt 1 view .LVU226
 200:Core/Src/menu.cpp ****     {
 1053              		.loc 1 200 8 is_stmt 0 view .LVU227
 1054 000e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 200:Core/Src/menu.cpp ****     {
 1055              		.loc 1 200 5 view .LVU228
 1056 0010 33B1     		cbz	r3, .L70
 202:Core/Src/menu.cpp ****         {
 1057              		.loc 1 202 9 is_stmt 1 view .LVU229
 202:Core/Src/menu.cpp ****         {
 1058              		.loc 1 202 17 is_stmt 0 view .LVU230
 1059 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 202:Core/Src/menu.cpp ****         {
 1060              		.loc 1 202 9 view .LVU231
 1061 0014 102A     		cmp	r2, #16
 1062 0016 0ED0     		beq	.L73
 1063 0018 182A     		cmp	r2, #24
 1064 001a 12D0     		beq	.L74
 1065 001c 082A     		cmp	r2, #8
 1066 001e 04D0     		beq	.L77
 1067              	.L70:
 223:Core/Src/menu.cpp **** void menu::menu_up()
 1068              		.loc 1 223 1 view .LVU232
 1069 0020 38BD     		pop	{r3, r4, r5, pc}
 1070              	.LVL65:
 1071              	.L76:
 198:Core/Src/menu.cpp ****     }
 1072              		.loc 1 198 9 is_stmt 1 view .LVU233
 198:Core/Src/menu.cpp ****     }
 1073              		.loc 1 198 31 is_stmt 0 view .LVU234
 1074 0022 6069     		ldr	r0, [r4, #20]
 1075 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1076              	.LVL66:
 1077 0028 F1E7     		b	.L71
 1078              	.L77:
 204:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1079              		.loc 1 204 9 is_stmt 1 view .LVU235
 205:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1080              		.loc 1 205 13 view .LVU236
 205:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1081              		.loc 1 205 16 is_stmt 0 view .LVU237
 1082 002a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
ARM GAS  /tmp/ccXHb2EA.s 			page 33


 205:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1083              		.loc 1 205 26 view .LVU238
 1084 002c A118     		adds	r1, r4, r2
 1085 002e 8D71     		strb	r5, [r1, #6]
 206:Core/Src/menu.cpp ****             break;
 1086              		.loc 1 206 13 is_stmt 1 view .LVU239
 206:Core/Src/menu.cpp ****             break;
 1087              		.loc 1 206 22 is_stmt 0 view .LVU240
 1088 0030 5340     		eors	r3, r3, r2
 1089 0032 A374     		strb	r3, [r4, #18]
 207:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1090              		.loc 1 207 13 is_stmt 1 view .LVU241
 1091 0034 F4E7     		b	.L70
 1092              	.L73:
 208:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1093              		.loc 1 208 9 view .LVU242
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1094              		.loc 1 209 13 view .LVU243
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1095              		.loc 1 209 16 is_stmt 0 view .LVU244
 1096 0036 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1097              		.loc 1 209 26 view .LVU245
 1098 0038 A118     		adds	r1, r4, r2
 1099 003a 8D70     		strb	r5, [r1, #2]
 210:Core/Src/menu.cpp ****             break;
 1100              		.loc 1 210 13 is_stmt 1 view .LVU246
 210:Core/Src/menu.cpp ****             break;
 1101              		.loc 1 210 22 is_stmt 0 view .LVU247
 1102 003c 5340     		eors	r3, r3, r2
 1103 003e A374     		strb	r3, [r4, #18]
 211:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1104              		.loc 1 211 13 is_stmt 1 view .LVU248
 1105 0040 EEE7     		b	.L70
 1106              	.L74:
 212:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1107              		.loc 1 212 9 view .LVU249
 213:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1108              		.loc 1 213 13 view .LVU250
 213:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1109              		.loc 1 213 17 is_stmt 0 view .LVU251
 1110 0042 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 213:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1111              		.loc 1 213 27 view .LVU252
 1112 0044 2344     		add	r3, r3, r4
 1113 0046 9D73     		strb	r5, [r3, #14]
 214:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1114              		.loc 1 214 13 is_stmt 1 view .LVU253
 214:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1115              		.loc 1 214 24 is_stmt 0 view .LVU254
 1116 0048 04F10E00 		add	r0, r4, #14
 1117 004c FFF7FEFF 		bl	atoi
 1118              	.LVL67:
 214:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1119              		.loc 1 214 19 view .LVU255
 1120 0050 C1B2     		uxtb	r1, r0
 1121 0052 6174     		strb	r1, [r4, #17]
ARM GAS  /tmp/ccXHb2EA.s 			page 34


 215:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
<<<<<<< HEAD
 1121              		.loc 1 215 33 is_stmt 0 view .LVU257
 1122 0054 6069     		ldr	r0, [r4, #20]
 1123 0056 FFF7FEFF 		bl	_ZN4oled13oled_setTimerEm
 1124              	.LVL68:
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
 1122              		.loc 1 215 13 is_stmt 1 view .LVU256
 215:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1123              		.loc 1 215 33 is_stmt 0 view .LVU257
 1124 0054 6069     		ldr	r0, [r4, #20]
 1125 0056 FFF7FEFF 		bl	_ZN4oled13oled_setTimerEm
 1126              	.LVL68:
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
 216:Core/Src/menu.cpp ****             break;
 1127              		.loc 1 216 13 is_stmt 1 view .LVU258
 216:Core/Src/menu.cpp ****             break;
 1128              		.loc 1 216 24 is_stmt 0 view .LVU259
 1129 005a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 216:Core/Src/menu.cpp ****             break;
 1130              		.loc 1 216 22 view .LVU260
 1131 005c A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1132 005e 5340     		eors	r3, r3, r2
 1133 0060 A374     		strb	r3, [r4, #18]
 217:Core/Src/menu.cpp **** 
 1134              		.loc 1 217 13 is_stmt 1 view .LVU261
 223:Core/Src/menu.cpp **** void menu::menu_up()
 1135              		.loc 1 223 1 is_stmt 0 view .LVU262
 1136 0062 DDE7     		b	.L70
 1137              		.cfi_endproc
 1138              	.LFE1993:
 1139              		.fnend
 1141              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1142              		.align	1
 1143              		.global	_ZN4menu7menu_upEv
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	_ZN4menu7menu_upEv:
 1150              		.fnstart
 1151              	.LVL69:
 1152              	.LFB1994:
 225:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1153              		.loc 1 225 1 is_stmt 1 view -0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 225:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1157              		.loc 1 225 1 is_stmt 0 view .LVU264
 1158 0000 10B5     		push	{r4, lr}
 1159              		.save {r4, lr}
 1160              	.LCFI13:
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 4, -8
 1163              		.cfi_offset 14, -4
 1164 0002 0446     		mov	r4, r0
 226:Core/Src/menu.cpp ****     {
 1165              		.loc 1 226 5 is_stmt 1 view .LVU265
 226:Core/Src/menu.cpp ****     {
 1166              		.loc 1 226 28 is_stmt 0 view .LVU266
 1167 0004 4069     		ldr	r0, [r0, #20]
 1168              	.LVL70:
 226:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/ccXHb2EA.s 			page 35


 1169              		.loc 1 226 28 view .LVU267
 1170 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1171              	.LVL71:
 226:Core/Src/menu.cpp ****     {
 1172              		.loc 1 226 5 view .LVU268
 1173 000a 50B9     		cbnz	r0, .L86
 1174              	.L79:
 230:Core/Src/menu.cpp ****     {
 1175              		.loc 1 230 5 is_stmt 1 view .LVU269
 230:Core/Src/menu.cpp ****     {
 1176              		.loc 1 230 13 is_stmt 0 view .LVU270
 1177 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 230:Core/Src/menu.cpp ****     {
 1178              		.loc 1 230 5 view .LVU271
 1179 000e 082B     		cmp	r3, #8
 1180 0010 0BD0     		beq	.L80
 1181 0012 102B     		cmp	r3, #16
 1182 0014 0FD0     		beq	.L81
 244:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1183              		.loc 1 244 5 is_stmt 1 view .LVU272
 245:Core/Src/menu.cpp ****         {
 1184              		.loc 1 245 9 view .LVU273
 245:Core/Src/menu.cpp ****         {
 1185              		.loc 1 245 12 is_stmt 0 view .LVU274
 1186 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 245:Core/Src/menu.cpp ****         {
 1187              		.loc 1 245 9 view .LVU275
 1188 0018 072B     		cmp	r3, #7
 1189 001a 0BD8     		bhi	.L78
 247:Core/Src/menu.cpp ****         }
 1190              		.loc 1 247 13 is_stmt 1 view .LVU276
 247:Core/Src/menu.cpp ****         }
 1191              		.loc 1 247 19 is_stmt 0 view .LVU277
 1192 001c 0133     		adds	r3, r3, #1
 1193 001e 6373     		strb	r3, [r4, #13]
 251:Core/Src/menu.cpp **** 
 1194              		.loc 1 251 1 view .LVU278
 1195 0020 08E0     		b	.L78
 1196              	.L86:
 228:Core/Src/menu.cpp ****     }
 1197              		.loc 1 228 9 is_stmt 1 view .LVU279
 228:Core/Src/menu.cpp ****     }
 1198              		.loc 1 228 31 is_stmt 0 view .LVU280
 1199 0022 6069     		ldr	r0, [r4, #20]
 1200 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1201              	.LVL72:
 1202 0028 F0E7     		b	.L79
 1203              	.L80:
 232:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1204              		.loc 1 232 5 is_stmt 1 view .LVU281
 233:Core/Src/menu.cpp ****         {
 1205              		.loc 1 233 9 view .LVU282
 233:Core/Src/menu.cpp ****         {
 1206              		.loc 1 233 12 is_stmt 0 view .LVU283
 1207 002a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 233:Core/Src/menu.cpp ****         {
 1208              		.loc 1 233 9 view .LVU284
ARM GAS  /tmp/ccXHb2EA.s 			page 36


 1209 002c 152B     		cmp	r3, #21
 1210 002e 01D8     		bhi	.L78
 235:Core/Src/menu.cpp ****         }
 1211              		.loc 1 235 13 is_stmt 1 view .LVU285
 235:Core/Src/menu.cpp ****         }
 1212              		.loc 1 235 18 is_stmt 0 view .LVU286
 1213 0030 0133     		adds	r3, r3, #1
 1214 0032 6372     		strb	r3, [r4, #9]
 1215              	.L78:
 251:Core/Src/menu.cpp **** 
 1216              		.loc 1 251 1 view .LVU287
 1217 0034 10BD     		pop	{r4, pc}
 1218              	.LVL73:
 1219              	.L81:
 238:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1220              		.loc 1 238 5 is_stmt 1 view .LVU288
 239:Core/Src/menu.cpp ****         {
 1221              		.loc 1 239 9 view .LVU289
 239:Core/Src/menu.cpp ****         {
 1222              		.loc 1 239 12 is_stmt 0 view .LVU290
 1223 0036 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 239:Core/Src/menu.cpp ****         {
 1224              		.loc 1 239 9 view .LVU291
 1225 0038 082B     		cmp	r3, #8
 1226 003a FBD8     		bhi	.L78
 241:Core/Src/menu.cpp ****         }
 1227              		.loc 1 241 13 is_stmt 1 view .LVU292
 241:Core/Src/menu.cpp ****         }
 1228              		.loc 1 241 18 is_stmt 0 view .LVU293
 1229 003c 0133     		adds	r3, r3, #1
 1230 003e 6371     		strb	r3, [r4, #5]
 1231 0040 F8E7     		b	.L78
 1232              		.cfi_endproc
 1233              	.LFE1994:
 1234              		.fnend
 1236              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1237              		.align	1
 1238              		.global	_ZN4menu9menu_downEv
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv4-sp-d16
 1244              	_ZN4menu9menu_downEv:
 1245              		.fnstart
 1246              	.LVL74:
 1247              	.LFB1995:
 254:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1248              		.loc 1 254 1 is_stmt 1 view -0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1252              		.loc 1 254 1 is_stmt 0 view .LVU295
 1253 0000 10B5     		push	{r4, lr}
 1254              		.save {r4, lr}
 1255              	.LCFI14:
 1256              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXHb2EA.s 			page 37


 1257              		.cfi_offset 4, -8
 1258              		.cfi_offset 14, -4
 1259 0002 0446     		mov	r4, r0
 255:Core/Src/menu.cpp ****     {
 1260              		.loc 1 255 5 is_stmt 1 view .LVU296
 255:Core/Src/menu.cpp ****     {
 1261              		.loc 1 255 28 is_stmt 0 view .LVU297
 1262 0004 4069     		ldr	r0, [r0, #20]
 1263              	.LVL75:
 255:Core/Src/menu.cpp ****     {
 1264              		.loc 1 255 28 view .LVU298
 1265 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1266              	.LVL76:
 255:Core/Src/menu.cpp ****     {
 1267              		.loc 1 255 5 view .LVU299
 1268 000a 48B9     		cbnz	r0, .L95
 1269              	.L88:
 259:Core/Src/menu.cpp ****     {
 1270              		.loc 1 259 5 is_stmt 1 view .LVU300
 259:Core/Src/menu.cpp ****     {
 1271              		.loc 1 259 13 is_stmt 0 view .LVU301
 1272 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 259:Core/Src/menu.cpp ****     {
 1273              		.loc 1 259 5 view .LVU302
 1274 000e 082B     		cmp	r3, #8
 1275 0010 0AD0     		beq	.L89
 1276 0012 102B     		cmp	r3, #16
 1277 0014 0DD0     		beq	.L90
 273:Core/Src/menu.cpp ****         if(volVal > 0)
 1278              		.loc 1 273 5 is_stmt 1 view .LVU303
 274:Core/Src/menu.cpp ****         {
 1279              		.loc 1 274 9 view .LVU304
 274:Core/Src/menu.cpp ****         {
 1280              		.loc 1 274 12 is_stmt 0 view .LVU305
 1281 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 274:Core/Src/menu.cpp ****         {
 1282              		.loc 1 274 9 view .LVU306
 1283 0018 53B1     		cbz	r3, .L87
 276:Core/Src/menu.cpp ****         }
 1284              		.loc 1 276 13 is_stmt 1 view .LVU307
 276:Core/Src/menu.cpp ****         }
 1285              		.loc 1 276 19 is_stmt 0 view .LVU308
 1286 001a 013B     		subs	r3, r3, #1
 1287 001c 6373     		strb	r3, [r4, #13]
 281:Core/Src/menu.cpp **** 
 1288              		.loc 1 281 1 view .LVU309
 1289 001e 07E0     		b	.L87
 1290              	.L95:
 257:Core/Src/menu.cpp ****     }
 1291              		.loc 1 257 9 is_stmt 1 view .LVU310
 257:Core/Src/menu.cpp ****     }
 1292              		.loc 1 257 31 is_stmt 0 view .LVU311
 1293 0020 6069     		ldr	r0, [r4, #20]
 1294 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1295              	.LVL77:
 1296 0026 F1E7     		b	.L88
 1297              	.L89:
ARM GAS  /tmp/ccXHb2EA.s 			page 38


 261:Core/Src/menu.cpp ****         if(chVal > 0)
 1298              		.loc 1 261 5 is_stmt 1 view .LVU312
 262:Core/Src/menu.cpp ****         {
 1299              		.loc 1 262 9 view .LVU313
 262:Core/Src/menu.cpp ****         {
 1300              		.loc 1 262 12 is_stmt 0 view .LVU314
 1301 0028 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 262:Core/Src/menu.cpp ****         {
 1302              		.loc 1 262 9 view .LVU315
 1303 002a 0BB1     		cbz	r3, .L87
 264:Core/Src/menu.cpp ****         }
 1304              		.loc 1 264 9 is_stmt 1 view .LVU316
 264:Core/Src/menu.cpp ****         }
 1305              		.loc 1 264 14 is_stmt 0 view .LVU317
 1306 002c 013B     		subs	r3, r3, #1
 1307 002e 6372     		strb	r3, [r4, #9]
 1308              	.L87:
 281:Core/Src/menu.cpp **** 
 1309              		.loc 1 281 1 view .LVU318
 1310 0030 10BD     		pop	{r4, pc}
 1311              	.LVL78:
 1312              	.L90:
 267:Core/Src/menu.cpp ****         if(sqVal > 0)
 1313              		.loc 1 267 5 is_stmt 1 view .LVU319
 268:Core/Src/menu.cpp ****         {
 1314              		.loc 1 268 9 view .LVU320
 268:Core/Src/menu.cpp ****         {
 1315              		.loc 1 268 12 is_stmt 0 view .LVU321
 1316 0032 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 268:Core/Src/menu.cpp ****         {
 1317              		.loc 1 268 9 view .LVU322
 1318 0034 002B     		cmp	r3, #0
 1319 0036 FBD0     		beq	.L87
 270:Core/Src/menu.cpp ****         }
 1320              		.loc 1 270 9 is_stmt 1 view .LVU323
 270:Core/Src/menu.cpp ****         }
 1321              		.loc 1 270 14 is_stmt 0 view .LVU324
 1322 0038 013B     		subs	r3, r3, #1
 1323 003a 6371     		strb	r3, [r4, #5]
 1324 003c F8E7     		b	.L87
 1325              		.cfi_endproc
 1326              	.LFE1995:
 1327              		.fnend
 1329              		.section	.rodata._ZN4menu13keyboard_pollEv.str1.4,"aMS",%progbits,1
 1330              		.align	2
 1331              	.LC9:
 1332 0000 6E657874 		.ascii	"next\000"
 1332      00
 1333 0005 000000   		.align	2
 1334              	.LC10:
 1335 0008 3600     		.ascii	"6\000"
 1336 000a 0000     		.align	2
 1337              	.LC11:
 1338 000c 3500     		.ascii	"5\000"
 1339 000e 0000     		.align	2
 1340              	.LC12:
 1341 0010 3400     		.ascii	"4\000"
ARM GAS  /tmp/ccXHb2EA.s 			page 39


 1342 0012 0000     		.align	2
 1343              	.LC13:
 1344 0014 70726576 		.ascii	"prev\000"
 1344      00
 1345 0019 000000   		.align	2
 1346              	.LC14:
 1347 001c 3800     		.ascii	"8\000"
 1348 001e 0000     		.align	2
 1349              	.LC15:
 1350 0020 3700     		.ascii	"7\000"
 1351 0022 0000     		.align	2
 1352              	.LC16:
 1353 0024 3900     		.ascii	"9\000"
 1354 0026 0000     		.align	2
 1355              	.LC17:
 1356 0028 646F776E 		.ascii	"down\000"
 1356      00
 1357 002d 000000   		.align	2
 1358              	.LC18:
 1359 0030 4D454E55 		.ascii	"MENUs\000"
 1359      7300
 1360 0036 0000     		.align	2
 1361              	.LC19:
 1362 0038 4D454E55 		.ascii	"MENU\000"
 1362      00
 1363 003d 000000   		.align	2
 1364              	.LC20:
 1365 0040 3000     		.ascii	"0\000"
 1366 0042 0000     		.align	2
 1367              	.LC21:
 1368 0044 4261636B 		.ascii	"Back\000"
 1368      00
 1369 0049 000000   		.align	2
 1370              	.LC22:
 1371 004c 757000   		.ascii	"up\000"
 1372 004f 00       		.align	2
 1373              	.LC23:
 1374 0050 3300     		.ascii	"3\000"
 1375 0052 0000     		.align	2
 1376              	.LC24:
 1377 0054 3200     		.ascii	"2\000"
 1378 0056 0000     		.align	2
 1379              	.LC25:
 1380 0058 3100     		.ascii	"1\000"
 1381              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1382              		.align	1
 1383              		.global	_ZN4menu13keyboard_pollEv
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	_ZN4menu13keyboard_pollEv:
 1390              		.fnstart
 1391              	.LVL79:
 1392              	.LFB1996:
 286:Core/Src/menu.cpp ****     int sds=0;
 1393              		.loc 1 286 1 is_stmt 1 view -0
ARM GAS  /tmp/ccXHb2EA.s 			page 40


 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 24
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 286:Core/Src/menu.cpp ****     int sds=0;
 1397              		.loc 1 286 1 is_stmt 0 view .LVU326
 1398 0000 30B5     		push	{r4, r5, lr}
 1399              		.save {r4, r5, lr}
 1400              	.LCFI15:
 1401              		.cfi_def_cfa_offset 12
 1402              		.cfi_offset 4, -12
 1403              		.cfi_offset 5, -8
 1404              		.cfi_offset 14, -4
 1405              		.pad #28
 1406 0002 87B0     		sub	sp, sp, #28
 1407              	.LCFI16:
 1408              		.cfi_def_cfa_offset 40
 1409 0004 0546     		mov	r5, r0
 287:Core/Src/menu.cpp ****     char x[20];
 1410              		.loc 1 287 5 is_stmt 1 view .LVU327
 1411              	.LVL80:
 288:Core/Src/menu.cpp **** 
 1412              		.loc 1 288 5 view .LVU328
 290:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 1413              		.loc 1 290 5 view .LVU329
 293:Core/Src/menu.cpp ****     while(sds<10)
 1414              		.loc 1 293 5 view .LVU330
 293:Core/Src/menu.cpp ****     while(sds<10)
 1415              		.loc 1 293 15 is_stmt 0 view .LVU331
 1416 0006 A94A     		ldr	r2, .L127
 1417 0008 5369     		ldr	r3, [r2, #20]
 1418 000a 43F40063 		orr	r3, r3, #2048
 1419 000e 5361     		str	r3, [r2, #20]
 287:Core/Src/menu.cpp ****     char x[20];
 1420              		.loc 1 287 9 view .LVU332
 1421 0010 0023     		movs	r3, #0
 1422              	.LVL81:
 1423              	.L98:
 294:Core/Src/menu.cpp ****     {
 1424              		.loc 1 294 5 is_stmt 1 view .LVU333
 294:Core/Src/menu.cpp ****     {
 1425              		.loc 1 294 14 view .LVU334
 1426 0012 092B     		cmp	r3, #9
 1427 0014 01DC     		bgt	.L97
 296:Core/Src/menu.cpp ****     }
 1428              		.loc 1 296 9 view .LVU335
 296:Core/Src/menu.cpp ****     }
 1429              		.loc 1 296 12 is_stmt 0 view .LVU336
 1430 0016 0133     		adds	r3, r3, #1
 1431              	.LVL82:
 294:Core/Src/menu.cpp ****     {
 1432              		.loc 1 294 5 view .LVU337
 1433 0018 FBE7     		b	.L98
 1434              	.L97:
 298:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1435              		.loc 1 298 5 is_stmt 1 view .LVU338
 1436              	.LVL83:
 300:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/ccXHb2EA.s 			page 41


 1437              		.loc 1 300 5 view .LVU339
 300:Core/Src/menu.cpp ****     {
 1438              		.loc 1 300 20 is_stmt 0 view .LVU340
 1439 001a A44B     		ldr	r3, .L127
 1440 001c 1B69     		ldr	r3, [r3, #16]
 300:Core/Src/menu.cpp ****     {
 1441              		.loc 1 300 23 view .LVU341
 1442 001e 03F40743 		and	r3, r3, #34560
 300:Core/Src/menu.cpp ****     {
 1443              		.loc 1 300 5 view .LVU342
 1444 0022 B3F5806F 		cmp	r3, #1024
 1445 0026 31D0     		beq	.L99
 1446 0028 12D8     		bhi	.L100
 1447 002a B3F5807F 		cmp	r3, #256
 1448 002e 3AD0     		beq	.L101
 1449 0030 B3F5007F 		cmp	r3, #512
 1450 0034 1CD1     		bne	.L103
 312:Core/Src/menu.cpp ****             menu_number('5');
 1451              		.loc 1 312 9 is_stmt 1 view .LVU343
 313:Core/Src/menu.cpp ****             sprintf(x,"5");
 1452              		.loc 1 313 13 view .LVU344
 313:Core/Src/menu.cpp ****             sprintf(x,"5");
 1453              		.loc 1 313 24 is_stmt 0 view .LVU345
 1454 0036 3521     		movs	r1, #53
 1455 0038 2846     		mov	r0, r5
 1456              	.LVL84:
 313:Core/Src/menu.cpp ****             sprintf(x,"5");
 1457              		.loc 1 313 24 view .LVU346
 1458 003a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1459              	.LVL85:
 314:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1460              		.loc 1 314 13 is_stmt 1 view .LVU347
 314:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1461              		.loc 1 314 20 is_stmt 0 view .LVU348
 1462 003e 3523     		movs	r3, #53
 1463 0040 ADF80430 		strh	r3, [sp, #4]	@ movhi
 315:Core/Src/menu.cpp ****             break;
 1464              		.loc 1 315 13 is_stmt 1 view .LVU349
 315:Core/Src/menu.cpp ****             break;
 1465              		.loc 1 315 31 is_stmt 0 view .LVU350
 1466 0044 9A4A     		ldr	r2, .L127+4
 1467 0046 01A9     		add	r1, sp, #4
 1468 0048 A869     		ldr	r0, [r5, #24]
 1469 004a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1470              	.LVL86:
 1471 004e 0FE0     		b	.L103
 1472              	.LVL87:
 1473              	.L100:
 300:Core/Src/menu.cpp ****     {
 1474              		.loc 1 300 5 view .LVU351
 1475 0050 B3F5004F 		cmp	r3, #32768
 1476 0054 0CD1     		bne	.L103
 302:Core/Src/menu.cpp ****             menu_next();//R
 1477              		.loc 1 302 9 is_stmt 1 view .LVU352
 303:Core/Src/menu.cpp ****             sprintf(x,"next");
 1478              		.loc 1 303 13 view .LVU353
 303:Core/Src/menu.cpp ****             sprintf(x,"next");
ARM GAS  /tmp/ccXHb2EA.s 			page 42


 1479              		.loc 1 303 22 is_stmt 0 view .LVU354
 1480 0056 2846     		mov	r0, r5
 1481              	.LVL88:
 303:Core/Src/menu.cpp ****             sprintf(x,"next");
 1482              		.loc 1 303 22 view .LVU355
 1483 0058 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1484              	.LVL89:
 304:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1485              		.loc 1 304 13 is_stmt 1 view .LVU356
 304:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1486              		.loc 1 304 20 is_stmt 0 view .LVU357
 1487 005c 954A     		ldr	r2, .L127+8
 1488 005e 92E80300 		ldm	r2, {r0, r1}
 1489 0062 0190     		str	r0, [sp, #4]
 1490 0064 8DF80810 		strb	r1, [sp, #8]
 305:Core/Src/menu.cpp ****             break;
 1491              		.loc 1 305 13 is_stmt 1 view .LVU358
 305:Core/Src/menu.cpp ****             break;
 1492              		.loc 1 305 31 is_stmt 0 view .LVU359
 1493 0068 01A9     		add	r1, sp, #4
 1494 006a A869     		ldr	r0, [r5, #24]
 1495 006c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1496              	.LVL90:
 1497              	.L103:
 325:Core/Src/menu.cpp **** 
 1498              		.loc 1 325 5 is_stmt 1 view .LVU360
 325:Core/Src/menu.cpp **** 
 1499              		.loc 1 325 15 is_stmt 0 view .LVU361
 1500 0070 8E4B     		ldr	r3, .L127
 1501 0072 5A69     		ldr	r2, [r3, #20]
 1502 0074 22F40062 		bic	r2, r2, #2048
 1503 0078 5A61     		str	r2, [r3, #20]
 327:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1504              		.loc 1 327 5 is_stmt 1 view .LVU362
 1505              	.LVL91:
 328:Core/Src/menu.cpp ****     
 1506              		.loc 1 328 5 view .LVU363
 328:Core/Src/menu.cpp ****     
 1507              		.loc 1 328 15 is_stmt 0 view .LVU364
 1508 007a 5A69     		ldr	r2, [r3, #20]
 1509 007c 42F48052 		orr	r2, r2, #4096
 1510 0080 5A61     		str	r2, [r3, #20]
 298:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1511              		.loc 1 298 8 view .LVU365
 1512 0082 0023     		movs	r3, #0
 1513              	.LVL92:
 1514              	.L105:
 330:Core/Src/menu.cpp ****     {
 1515              		.loc 1 330 5 is_stmt 1 view .LVU366
 330:Core/Src/menu.cpp ****     {
 1516              		.loc 1 330 14 view .LVU367
 1517 0084 092B     		cmp	r3, #9
 1518 0086 1BDC     		bgt	.L104
 332:Core/Src/menu.cpp ****     }
 1519              		.loc 1 332 9 view .LVU368
 332:Core/Src/menu.cpp ****     }
 1520              		.loc 1 332 12 is_stmt 0 view .LVU369
ARM GAS  /tmp/ccXHb2EA.s 			page 43


 1521 0088 0133     		adds	r3, r3, #1
 1522              	.LVL93:
 330:Core/Src/menu.cpp ****     {
 1523              		.loc 1 330 5 view .LVU370
 1524 008a FBE7     		b	.L105
 1525              	.LVL94:
 1526              	.L99:
 307:Core/Src/menu.cpp ****             menu_number('6');
 1527              		.loc 1 307 9 is_stmt 1 view .LVU371
 308:Core/Src/menu.cpp ****             sprintf(x,"6");
 1528              		.loc 1 308 13 view .LVU372
 308:Core/Src/menu.cpp ****             sprintf(x,"6");
 1529              		.loc 1 308 24 is_stmt 0 view .LVU373
 1530 008c 3621     		movs	r1, #54
 1531 008e 2846     		mov	r0, r5
 1532              	.LVL95:
 308:Core/Src/menu.cpp ****             sprintf(x,"6");
 1533              		.loc 1 308 24 view .LVU374
 1534 0090 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1535              	.LVL96:
 309:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1536              		.loc 1 309 13 is_stmt 1 view .LVU375
 309:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1537              		.loc 1 309 20 is_stmt 0 view .LVU376
 1538 0094 3623     		movs	r3, #54
 1539 0096 ADF80430 		strh	r3, [sp, #4]	@ movhi
 310:Core/Src/menu.cpp ****             break;
 1540              		.loc 1 310 13 is_stmt 1 view .LVU377
 310:Core/Src/menu.cpp ****             break;
 1541              		.loc 1 310 31 is_stmt 0 view .LVU378
 1542 009a 874A     		ldr	r2, .L127+12
 1543 009c 01A9     		add	r1, sp, #4
 1544 009e A869     		ldr	r0, [r5, #24]
 1545 00a0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1546              	.LVL97:
 1547 00a4 E4E7     		b	.L103
 1548              	.LVL98:
 1549              	.L101:
 317:Core/Src/menu.cpp ****             menu_number('4');
 1550              		.loc 1 317 9 is_stmt 1 view .LVU379
 318:Core/Src/menu.cpp ****             sprintf(x,"4");
 1551              		.loc 1 318 13 view .LVU380
 318:Core/Src/menu.cpp ****             sprintf(x,"4");
 1552              		.loc 1 318 24 is_stmt 0 view .LVU381
 1553 00a6 3421     		movs	r1, #52
 1554 00a8 2846     		mov	r0, r5
 1555              	.LVL99:
 318:Core/Src/menu.cpp ****             sprintf(x,"4");
 1556              		.loc 1 318 24 view .LVU382
 1557 00aa FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1558              	.LVL100:
 319:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1559              		.loc 1 319 13 is_stmt 1 view .LVU383
 319:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1560              		.loc 1 319 20 is_stmt 0 view .LVU384
 1561 00ae 3423     		movs	r3, #52
 1562 00b0 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/ccXHb2EA.s 			page 44


 320:Core/Src/menu.cpp ****             break;
 1563              		.loc 1 320 13 is_stmt 1 view .LVU385
 320:Core/Src/menu.cpp ****             break;
 1564              		.loc 1 320 31 is_stmt 0 view .LVU386
 1565 00b4 814A     		ldr	r2, .L127+16
 1566 00b6 01A9     		add	r1, sp, #4
 1567 00b8 A869     		ldr	r0, [r5, #24]
 1568 00ba FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1569              	.LVL101:
 1570 00be D7E7     		b	.L103
 1571              	.LVL102:
 1572              	.L104:
 334:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1573              		.loc 1 334 5 is_stmt 1 view .LVU387
 336:Core/Src/menu.cpp ****     {
 1574              		.loc 1 336 5 view .LVU388
 336:Core/Src/menu.cpp ****     {
 1575              		.loc 1 336 20 is_stmt 0 view .LVU389
 1576 00c0 7A4B     		ldr	r3, .L127
 1577 00c2 1B69     		ldr	r3, [r3, #16]
 336:Core/Src/menu.cpp ****     {
 1578              		.loc 1 336 23 view .LVU390
 1579 00c4 03F40743 		and	r3, r3, #34560
 336:Core/Src/menu.cpp ****     {
 1580              		.loc 1 336 5 view .LVU391
 1581 00c8 B3F5806F 		cmp	r3, #1024
 1582 00cc 31D0     		beq	.L106
 1583 00ce 12D8     		bhi	.L107
 1584 00d0 B3F5807F 		cmp	r3, #256
 1585 00d4 3AD0     		beq	.L108
 1586 00d6 B3F5007F 		cmp	r3, #512
 1587 00da 1CD1     		bne	.L110
 348:Core/Src/menu.cpp ****             menu_number('7');
 1588              		.loc 1 348 9 is_stmt 1 view .LVU392
 349:Core/Src/menu.cpp ****             sprintf(x,"7");
 1589              		.loc 1 349 13 view .LVU393
 349:Core/Src/menu.cpp ****             sprintf(x,"7");
 1590              		.loc 1 349 24 is_stmt 0 view .LVU394
 1591 00dc 3721     		movs	r1, #55
 1592 00de 2846     		mov	r0, r5
 1593 00e0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1594              	.LVL103:
 350:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1595              		.loc 1 350 13 is_stmt 1 view .LVU395
 350:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1596              		.loc 1 350 20 is_stmt 0 view .LVU396
 1597 00e4 3723     		movs	r3, #55
 1598 00e6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 351:Core/Src/menu.cpp ****             break;
 1599              		.loc 1 351 13 is_stmt 1 view .LVU397
 351:Core/Src/menu.cpp ****             break;
 1600              		.loc 1 351 31 is_stmt 0 view .LVU398
 1601 00ea 754A     		ldr	r2, .L127+20
 1602 00ec 01A9     		add	r1, sp, #4
 1603 00ee A869     		ldr	r0, [r5, #24]
 1604 00f0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1605              	.LVL104:
ARM GAS  /tmp/ccXHb2EA.s 			page 45


 1606 00f4 0FE0     		b	.L110
 1607              	.L107:
 336:Core/Src/menu.cpp ****     {
 1608              		.loc 1 336 5 view .LVU399
 1609 00f6 B3F5004F 		cmp	r3, #32768
 1610 00fa 0CD1     		bne	.L110
 338:Core/Src/menu.cpp ****             menu_prev();//L
 1611              		.loc 1 338 9 is_stmt 1 view .LVU400
 339:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1612              		.loc 1 339 13 view .LVU401
 339:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1613              		.loc 1 339 22 is_stmt 0 view .LVU402
 1614 00fc 2846     		mov	r0, r5
 1615 00fe FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1616              	.LVL105:
 340:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1617              		.loc 1 340 13 is_stmt 1 view .LVU403
 340:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1618              		.loc 1 340 20 is_stmt 0 view .LVU404
 1619 0102 704A     		ldr	r2, .L127+24
 1620 0104 92E80300 		ldm	r2, {r0, r1}
 1621 0108 0190     		str	r0, [sp, #4]
 1622 010a 8DF80810 		strb	r1, [sp, #8]
 341:Core/Src/menu.cpp ****             break;
 1623              		.loc 1 341 13 is_stmt 1 view .LVU405
 341:Core/Src/menu.cpp ****             break;
 1624              		.loc 1 341 31 is_stmt 0 view .LVU406
 1625 010e 01A9     		add	r1, sp, #4
 1626 0110 A869     		ldr	r0, [r5, #24]
 1627 0112 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1628              	.LVL106:
 1629              	.L110:
 362:Core/Src/menu.cpp **** 
 1630              		.loc 1 362 5 is_stmt 1 view .LVU407
 362:Core/Src/menu.cpp **** 
 1631              		.loc 1 362 15 is_stmt 0 view .LVU408
 1632 0116 654B     		ldr	r3, .L127
 1633 0118 5A69     		ldr	r2, [r3, #20]
 1634 011a 22F48052 		bic	r2, r2, #4096
 1635 011e 5A61     		str	r2, [r3, #20]
 365:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1636              		.loc 1 365 5 is_stmt 1 view .LVU409
 1637              	.LVL107:
 366:Core/Src/menu.cpp ****     while(sds<10)
 1638              		.loc 1 366 5 view .LVU410
 366:Core/Src/menu.cpp ****     while(sds<10)
 1639              		.loc 1 366 15 is_stmt 0 view .LVU411
 1640 0120 5A69     		ldr	r2, [r3, #20]
 1641 0122 42F40052 		orr	r2, r2, #8192
 1642 0126 5A61     		str	r2, [r3, #20]
 334:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1643              		.loc 1 334 8 view .LVU412
 1644 0128 0024     		movs	r4, #0
 1645              	.LVL108:
 1646              	.L112:
 367:Core/Src/menu.cpp ****     {
 1647              		.loc 1 367 5 is_stmt 1 view .LVU413
ARM GAS  /tmp/ccXHb2EA.s 			page 46


 367:Core/Src/menu.cpp ****     {
 1648              		.loc 1 367 14 view .LVU414
 1649 012a 092C     		cmp	r4, #9
 1650 012c 1BDC     		bgt	.L111
 369:Core/Src/menu.cpp ****     }
 1651              		.loc 1 369 9 view .LVU415
 369:Core/Src/menu.cpp ****     }
 1652              		.loc 1 369 12 is_stmt 0 view .LVU416
 1653 012e 0134     		adds	r4, r4, #1
 1654              	.LVL109:
 367:Core/Src/menu.cpp ****     {
 1655              		.loc 1 367 5 view .LVU417
 1656 0130 FBE7     		b	.L112
 1657              	.LVL110:
 1658              	.L106:
 343:Core/Src/menu.cpp ****             menu_number('8');
 1659              		.loc 1 343 9 is_stmt 1 view .LVU418
 344:Core/Src/menu.cpp ****             sprintf(x,"8");
 1660              		.loc 1 344 13 view .LVU419
 344:Core/Src/menu.cpp ****             sprintf(x,"8");
 1661              		.loc 1 344 24 is_stmt 0 view .LVU420
 1662 0132 3821     		movs	r1, #56
 1663 0134 2846     		mov	r0, r5
 1664 0136 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1665              	.LVL111:
 345:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1666              		.loc 1 345 13 is_stmt 1 view .LVU421
 345:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1667              		.loc 1 345 20 is_stmt 0 view .LVU422
 1668 013a 3823     		movs	r3, #56
 1669 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 346:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
<<<<<<< HEAD
 347:Core/Src/menu.cpp ****         default:
 348:Core/Src/menu.cpp ****             break;
 349:Core/Src/menu.cpp **** 
 350:Core/Src/menu.cpp ****     }
 351:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1424              		.loc 1 351 5 view .LVU377
 1425              		.loc 1 351 15 is_stmt 0 view .LVU378
 1426 00e2 1C4B     		ldr	r3, .L107
 1427 00e4 5A69     		ldr	r2, [r3, #20]
 1428 00e6 22F40052 		bic	r2, r2, #8192
 1429 00ea 5A61     		str	r2, [r3, #20]
 352:Core/Src/menu.cpp **** 
 353:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 1430              		.loc 1 353 5 is_stmt 1 view .LVU379
 1431              	.LVL92:
 354:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1432              		.loc 1 354 5 view .LVU380
 1433              		.loc 1 354 15 is_stmt 0 view .LVU381
 1434 00ec 5A69     		ldr	r2, [r3, #20]
 1435 00ee 42F48042 		orr	r2, r2, #16384
 1436 00f2 5A61     		str	r2, [r3, #20]
 355:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 356:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1437              		.loc 1 356 5 is_stmt 1 view .LVU382
 1438              		.loc 1 356 20 is_stmt 0 view .LVU383
 1439 00f4 1B69     		ldr	r3, [r3, #16]
 1440              		.loc 1 356 23 view .LVU384
ARM GAS  /tmp/ccMEB0iu.s 			page 36


 1441 00f6 03F40743 		and	r3, r3, #34560
 1442              		.loc 1 356 5 view .LVU385
 1443 00fa B3F5806F 		cmp	r3, #1024
 1444 00fe 1FD0     		beq	.L101
 1445 0100 12D8     		bhi	.L102
 1446 0102 B3F5807F 		cmp	r3, #256
 1447 0106 20D0     		beq	.L103
 1448 0108 B3F5007F 		cmp	r3, #512
 1449 010c 12D1     		bne	.L105
 357:Core/Src/menu.cpp ****     {
 358:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 359:Core/Src/menu.cpp ****             menu_up();//U
 360:Core/Src/menu.cpp ****             break;
 361:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 362:Core/Src/menu.cpp ****             menu_number('3');
 363:Core/Src/menu.cpp ****             break;
 364:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1450              		.loc 1 364 9 is_stmt 1 view .LVU386
 365:Core/Src/menu.cpp ****             menu_number('2');
 1451              		.loc 1 365 13 view .LVU387
 1452              		.loc 1 365 24 is_stmt 0 view .LVU388
 1453 010e 3221     		movs	r1, #50
 1454 0110 2046     		mov	r0, r4
 1455 0112 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1456              	.LVL93:
 366:Core/Src/menu.cpp ****             break;
 1457              		.loc 1 366 13 is_stmt 1 view .LVU389
 1458 0116 0DE0     		b	.L105
 1459              	.LVL94:
 1460              	.L96:
 338:Core/Src/menu.cpp ****             menu_menu();//M
 1461              		.loc 1 338 9 view .LVU390
 339:Core/Src/menu.cpp ****             break;
 1462              		.loc 1 339 13 view .LVU391
 339:Core/Src/menu.cpp ****             break;
 1463              		.loc 1 339 22 is_stmt 0 view .LVU392
 1464 0118 2046     		mov	r0, r4
 1465 011a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1466              	.LVL95:
 340:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1467              		.loc 1 340 13 is_stmt 1 view .LVU393
 1468 011e E0E7     		b	.L100
 1469              	.L98:
 344:Core/Src/menu.cpp ****             menu_back();//B
 1470              		.loc 1 344 9 view .LVU394
 345:Core/Src/menu.cpp ****             break;
 1471              		.loc 1 345 13 view .LVU395
 345:Core/Src/menu.cpp ****             break;
 1472              		.loc 1 345 22 is_stmt 0 view .LVU396
 1473 0120 2046     		mov	r0, r4
 1474 0122 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1475              	.LVL96:
 346:Core/Src/menu.cpp ****         default:
 1476              		.loc 1 346 13 is_stmt 1 view .LVU397
 1477 0126 DCE7     		b	.L100
 1478              	.LVL97:
 1479              	.L102:
ARM GAS  /tmp/ccMEB0iu.s 			page 37


 356:Core/Src/menu.cpp ****     {
 1480              		.loc 1 356 5 is_stmt 0 view .LVU398
 1481 0128 B3F5004F 		cmp	r3, #32768
 1482 012c 02D1     		bne	.L105
 358:Core/Src/menu.cpp ****             menu_up();//U
 1483              		.loc 1 358 9 is_stmt 1 view .LVU399
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
 359:Core/Src/menu.cpp ****             break;
 1559              		.loc 1 359 13 view .LVU411
 359:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
 1560              		.loc 1 359 22 is_stmt 0 view .LVU412
 1561 0120 2046     		mov	r0, r4
 1562 0122 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1563              	.LVL98:
 360:Core/Src/menu.cpp ****         default:
 1564              		.loc 1 360 13 is_stmt 1 view .LVU413
 1565 0126 DCE7     		b	.L106
 1566              	.LVL99:
 1567              	.L108:
 370:Core/Src/menu.cpp ****     {
 1568              		.loc 1 370 5 is_stmt 0 view .LVU414
 1569 0128 B3F5004F 		cmp	r3, #32768
 1570 012c 02D1     		bne	.L111
 372:Core/Src/menu.cpp ****             menu_up();//U
 1571              		.loc 1 372 9 is_stmt 1 view .LVU415
 373:Core/Src/menu.cpp ****             break;
 1572              		.loc 1 373 13 view .LVU416
 373:Core/Src/menu.cpp ****             break;
 1573              		.loc 1 373 20 is_stmt 0 view .LVU417
 1574 012e 2046     		mov	r0, r4
 1575 0130 FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1576              	.LVL100:
 374:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1577              		.loc 1 374 13 is_stmt 1 view .LVU418
 1578              	.L111:
 381:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 382:Core/Src/menu.cpp ****             menu_number('1');
 383:Core/Src/menu.cpp ****             break;
 384:Core/Src/menu.cpp ****         default:
 385:Core/Src/menu.cpp ****             break;
 386:Core/Src/menu.cpp **** 
 387:Core/Src/menu.cpp ****     }
 388:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1579              		.loc 1 388 5 view .LVU419
 1580              		.loc 1 388 15 is_stmt 0 view .LVU420
 1581 0134 074A     		ldr	r2, .L113
 1582 0136 5369     		ldr	r3, [r2, #20]
 1583 0138 23F48043 		bic	r3, r3, #16384
 1584 013c 5361     		str	r3, [r2, #20]
 389:Core/Src/menu.cpp **** 
 390:Core/Src/menu.cpp **** }
 1585              		.loc 1 390 1 view .LVU421
 1586 013e 10BD     		pop	{r4, pc}
 1587              	.LVL101:
 1588              	.L107:
 375:Core/Src/menu.cpp ****             menu_number('3');
 1589              		.loc 1 375 9 is_stmt 1 view .LVU422
 376:Core/Src/menu.cpp ****             break;
 1590              		.loc 1 376 13 view .LVU423
 376:Core/Src/menu.cpp ****             break;
 1591              		.loc 1 376 24 is_stmt 0 view .LVU424
 1592 0140 3321     		movs	r1, #51
 1593 0142 2046     		mov	r0, r4
ARM GAS  /tmp/cceDqxOT.s 			page 40


 1594 0144 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1595              	.LVL102:
 377:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1596              		.loc 1 377 13 is_stmt 1 view .LVU425
 1597 0148 F4E7     		b	.L111
 1598              	.L109:
 381:Core/Src/menu.cpp ****             menu_number('1');
 1599              		.loc 1 381 9 view .LVU426
 382:Core/Src/menu.cpp ****             break;
 1600              		.loc 1 382 13 view .LVU427
 382:Core/Src/menu.cpp ****             break;
 1601              		.loc 1 382 24 is_stmt 0 view .LVU428
 1602 014a 3121     		movs	r1, #49
 1603 014c 2046     		mov	r0, r4
 1604 014e FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1605              	.LVL103:
 383:Core/Src/menu.cpp ****         default:
 1606              		.loc 1 383 13 is_stmt 1 view .LVU429
 1607 0152 EFE7     		b	.L111
 1608              	.L114:
 1609              		.align	2
 1610              	.L113:
 1611 0154 000C0240 		.word	1073875968
 1612              		.cfi_endproc
 1613              	.LFE150:
 1614              		.fnend
 1616              		.text
 1617              	.Letext0:
 1618              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1619              		.file 3 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1620              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1621              		.file 5 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1622              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1623              		.file 7 "/usr/include/newlib/sys/_types.h"
 1624              		.file 8 "/usr/include/newlib/sys/reent.h"
 1625              		.file 9 "/usr/include/newlib/sys/lock.h"
 1626              		.file 10 "/usr/include/newlib/stdlib.h"
 1627              		.file 11 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1628              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1629              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1630              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1631              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1632              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1633              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1634              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1635              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1636              		.file 20 "Core/Inc/fonts.h"
 1637              		.file 21 "Core/Inc/oled.h"
 1638              		.file 22 "Core/Inc/menu.hpp"
 1639              		.file 23 "<built-in>"
 1640              		.file 24 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cceDqxOT.s 			page 41
=======
 1485              		.loc 1 359 20 is_stmt 0 view .LVU401
 1486 012e 2046     		mov	r0, r4
 1487 0130 FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1488              	.LVL98:
 360:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1489              		.loc 1 360 13 is_stmt 1 view .LVU402
 1490              	.L105:
 367:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 368:Core/Src/menu.cpp ****             menu_number('1');
 369:Core/Src/menu.cpp ****             break;
 370:Core/Src/menu.cpp ****         default:
 371:Core/Src/menu.cpp ****             break;
 372:Core/Src/menu.cpp **** 
 373:Core/Src/menu.cpp ****     }
 374:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1491              		.loc 1 374 5 view .LVU403
 1492              		.loc 1 374 15 is_stmt 0 view .LVU404
 1493 0134 074A     		ldr	r2, .L107
 1494 0136 5369     		ldr	r3, [r2, #20]
 1495 0138 23F48043 		bic	r3, r3, #16384
 1496 013c 5361     		str	r3, [r2, #20]
 375:Core/Src/menu.cpp **** 
 376:Core/Src/menu.cpp **** }
 1497              		.loc 1 376 1 view .LVU405
 1498 013e 10BD     		pop	{r4, pc}
 1499              	.LVL99:
 1500              	.L101:
 361:Core/Src/menu.cpp ****             menu_number('3');
 1501              		.loc 1 361 9 is_stmt 1 view .LVU406
 362:Core/Src/menu.cpp ****             break;
 1502              		.loc 1 362 13 view .LVU407
 362:Core/Src/menu.cpp ****             break;
 1503              		.loc 1 362 24 is_stmt 0 view .LVU408
 1504 0140 3321     		movs	r1, #51
 1505 0142 2046     		mov	r0, r4
 1506 0144 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1507              	.LVL100:
 363:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1508              		.loc 1 363 13 is_stmt 1 view .LVU409
 1509 0148 F4E7     		b	.L105
 1510              	.L103:
 367:Core/Src/menu.cpp ****             menu_number('1');
 1511              		.loc 1 367 9 view .LVU410
 368:Core/Src/menu.cpp ****             break;
 1512              		.loc 1 368 13 view .LVU411
 368:Core/Src/menu.cpp ****             break;
 1513              		.loc 1 368 24 is_stmt 0 view .LVU412
 1514 014a 3121     		movs	r1, #49
ARM GAS  /tmp/ccMEB0iu.s 			page 38


 1515 014c 2046     		mov	r0, r4
 1516 014e FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1517              	.LVL101:
 369:Core/Src/menu.cpp ****         default:
 1518              		.loc 1 369 13 is_stmt 1 view .LVU413
 1519 0152 EFE7     		b	.L105
 1520              	.L108:
 1521              		.align	2
 1522              	.L107:
 1523 0154 000C0240 		.word	1073875968
 1524              		.cfi_endproc
 1525              	.LFE150:
 1526              		.fnend
 1528              		.text
 1529              	.Letext0:
 1530              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1531              		.file 3 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1532              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1533              		.file 5 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1534              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1535              		.file 7 "/usr/include/newlib/sys/_types.h"
 1536              		.file 8 "/usr/include/newlib/sys/reent.h"
 1537              		.file 9 "/usr/include/newlib/sys/lock.h"
 1538              		.file 10 "/usr/include/newlib/stdlib.h"
 1539              		.file 11 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1540              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1541              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1542              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1543              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1544              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1545              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1546              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1547              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1548              		.file 20 "Core/Inc/fonts.h"
 1549              		.file 21 "Core/Inc/oled.h"
 1550              		.file 22 "Core/Inc/menu.hpp"
 1551              		.file 23 "<built-in>"
 1552              		.file 24 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccMEB0iu.s 			page 39
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
 1668              		.loc 1 346 13 is_stmt 1 view .LVU423
=======
 1670              		.loc 1 346 13 is_stmt 1 view .LVU423
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
 346:Core/Src/menu.cpp ****             break;
 1671              		.loc 1 346 31 is_stmt 0 view .LVU424
 1672 0140 614A     		ldr	r2, .L127+28
 1673 0142 01A9     		add	r1, sp, #4
 1674 0144 A869     		ldr	r0, [r5, #24]
 1675 0146 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1676              	.LVL112:
 1677 014a E4E7     		b	.L110
 1678              	.L108:
 353:Core/Src/menu.cpp ****             menu_number('9');
 1679              		.loc 1 353 9 is_stmt 1 view .LVU425
 354:Core/Src/menu.cpp ****             sprintf(x,"9");
 1680              		.loc 1 354 13 view .LVU426
 354:Core/Src/menu.cpp ****             sprintf(x,"9");
 1681              		.loc 1 354 24 is_stmt 0 view .LVU427
 1682 014c 3921     		movs	r1, #57
 1683 014e 2846     		mov	r0, r5
 1684 0150 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1685              	.LVL113:
 355:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1686              		.loc 1 355 13 is_stmt 1 view .LVU428
 355:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1687              		.loc 1 355 20 is_stmt 0 view .LVU429
 1688 0154 3923     		movs	r3, #57
ARM GAS  /tmp/ccXHb2EA.s 			page 47


 1689 0156 ADF80430 		strh	r3, [sp, #4]	@ movhi
 356:Core/Src/menu.cpp ****             break;
 1690              		.loc 1 356 13 is_stmt 1 view .LVU430
 356:Core/Src/menu.cpp ****             break;
 1691              		.loc 1 356 31 is_stmt 0 view .LVU431
 1692 015a 5C4A     		ldr	r2, .L127+32
 1693 015c 01A9     		add	r1, sp, #4
 1694 015e A869     		ldr	r0, [r5, #24]
 1695 0160 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1696              	.LVL114:
 1697 0164 D7E7     		b	.L110
 1698              	.LVL115:
 1699              	.L111:
 373:Core/Src/menu.cpp ****     {
 1700              		.loc 1 373 5 is_stmt 1 view .LVU432
 373:Core/Src/menu.cpp ****     {
 1701              		.loc 1 373 20 is_stmt 0 view .LVU433
 1702 0166 514B     		ldr	r3, .L127
 1703 0168 1B69     		ldr	r3, [r3, #16]
 373:Core/Src/menu.cpp ****     {
 1704              		.loc 1 373 23 view .LVU434
 1705 016a 03F40743 		and	r3, r3, #34560
 373:Core/Src/menu.cpp ****     {
 1706              		.loc 1 373 5 view .LVU435
 1707 016e B3F5806F 		cmp	r3, #1024
 1708 0172 49D0     		beq	.L113
 1709 0174 12D8     		bhi	.L114
 1710 0176 B3F5807F 		cmp	r3, #256
 1711 017a 54D0     		beq	.L115
 1712 017c B3F5007F 		cmp	r3, #512
 1713 0180 1CD1     		bne	.L117
 385:Core/Src/menu.cpp ****             menu_number('0');
 1714              		.loc 1 385 9 is_stmt 1 view .LVU436
 386:Core/Src/menu.cpp ****             sprintf(x,"0");
 1715              		.loc 1 386 13 view .LVU437
 386:Core/Src/menu.cpp ****             sprintf(x,"0");
 1716              		.loc 1 386 24 is_stmt 0 view .LVU438
 1717 0182 3021     		movs	r1, #48
 1718 0184 2846     		mov	r0, r5
 1719 0186 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1720              	.LVL116:
 387:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1721              		.loc 1 387 13 is_stmt 1 view .LVU439
 387:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1722              		.loc 1 387 20 is_stmt 0 view .LVU440
 1723 018a 3023     		movs	r3, #48
 1724 018c ADF80430 		strh	r3, [sp, #4]	@ movhi
 388:Core/Src/menu.cpp ****             break;
 1725              		.loc 1 388 13 is_stmt 1 view .LVU441
 388:Core/Src/menu.cpp ****             break;
 1726              		.loc 1 388 31 is_stmt 0 view .LVU442
 1727 0190 4F4A     		ldr	r2, .L127+36
 1728 0192 01A9     		add	r1, sp, #4
 1729 0194 A869     		ldr	r0, [r5, #24]
 1730 0196 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1731              	.LVL117:
 1732 019a 0FE0     		b	.L117
ARM GAS  /tmp/ccXHb2EA.s 			page 48


 1733              	.L114:
 373:Core/Src/menu.cpp ****     {
 1734              		.loc 1 373 5 view .LVU443
 1735 019c B3F5004F 		cmp	r3, #32768
 1736 01a0 0CD1     		bne	.L117
 375:Core/Src/menu.cpp ****             menu_down();//D
 1737              		.loc 1 375 9 is_stmt 1 view .LVU444
 376:Core/Src/menu.cpp ****             sprintf(x,"down");
 1738              		.loc 1 376 13 view .LVU445
 376:Core/Src/menu.cpp ****             sprintf(x,"down");
 1739              		.loc 1 376 22 is_stmt 0 view .LVU446
 1740 01a2 2846     		mov	r0, r5
 1741 01a4 FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1742              	.LVL118:
 377:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1743              		.loc 1 377 13 is_stmt 1 view .LVU447
 377:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1744              		.loc 1 377 20 is_stmt 0 view .LVU448
 1745 01a8 4A4A     		ldr	r2, .L127+40
 1746 01aa 92E80300 		ldm	r2, {r0, r1}
 1747 01ae 0190     		str	r0, [sp, #4]
 1748 01b0 8DF80810 		strb	r1, [sp, #8]
 378:Core/Src/menu.cpp ****             break;
 1749              		.loc 1 378 13 is_stmt 1 view .LVU449
 378:Core/Src/menu.cpp ****             break;
 1750              		.loc 1 378 31 is_stmt 0 view .LVU450
 1751 01b4 01A9     		add	r1, sp, #4
 1752 01b6 A869     		ldr	r0, [r5, #24]
 1753 01b8 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1754              	.LVL119:
 1755              	.L117:
 399:Core/Src/menu.cpp **** 
 1756              		.loc 1 399 5 is_stmt 1 view .LVU451
 399:Core/Src/menu.cpp **** 
 1757              		.loc 1 399 15 is_stmt 0 view .LVU452
 1758 01bc 3B4B     		ldr	r3, .L127
 1759 01be 5A69     		ldr	r2, [r3, #20]
 1760 01c0 22F40052 		bic	r2, r2, #8192
 1761 01c4 5A61     		str	r2, [r3, #20]
 401:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1762              		.loc 1 401 5 is_stmt 1 view .LVU453
 1763              	.LVL120:
 402:Core/Src/menu.cpp ****     while(sds<10)
 1764              		.loc 1 402 5 view .LVU454
 402:Core/Src/menu.cpp ****     while(sds<10)
 1765              		.loc 1 402 15 is_stmt 0 view .LVU455
 1766 01c6 5A69     		ldr	r2, [r3, #20]
 1767 01c8 42F48042 		orr	r2, r2, #16384
 1768 01cc 5A61     		str	r2, [r3, #20]
 1769              	.L119:
 403:Core/Src/menu.cpp ****     {
 1770              		.loc 1 403 5 is_stmt 1 view .LVU456
 403:Core/Src/menu.cpp ****     {
 1771              		.loc 1 403 14 view .LVU457
 1772 01ce 092C     		cmp	r4, #9
 1773 01d0 37DD     		ble	.L126
 407:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
ARM GAS  /tmp/ccXHb2EA.s 			page 49


 1774              		.loc 1 407 5 view .LVU458
 1775              	.LVL121:
 409:Core/Src/menu.cpp ****     {
 1776              		.loc 1 409 5 view .LVU459
 409:Core/Src/menu.cpp ****     {
 1777              		.loc 1 409 20 is_stmt 0 view .LVU460
 1778 01d2 364B     		ldr	r3, .L127
 1779 01d4 1B69     		ldr	r3, [r3, #16]
 409:Core/Src/menu.cpp ****     {
 1780              		.loc 1 409 23 view .LVU461
 1781 01d6 03F40743 		and	r3, r3, #34560
 409:Core/Src/menu.cpp ****     {
 1782              		.loc 1 409 5 view .LVU462
 1783 01da B3F5806F 		cmp	r3, #1024
 1784 01de 4AD0     		beq	.L120
 1785 01e0 31D8     		bhi	.L121
 1786 01e2 B3F5807F 		cmp	r3, #256
 1787 01e6 53D0     		beq	.L122
 1788 01e8 B3F5007F 		cmp	r3, #512
 1789 01ec 3CD1     		bne	.L124
 421:Core/Src/menu.cpp ****             menu_number('2');
 1790              		.loc 1 421 9 is_stmt 1 view .LVU463
 422:Core/Src/menu.cpp ****             sprintf(x,"2");
 1791              		.loc 1 422 13 view .LVU464
 422:Core/Src/menu.cpp ****             sprintf(x,"2");
 1792              		.loc 1 422 24 is_stmt 0 view .LVU465
 1793 01ee 3221     		movs	r1, #50
 1794 01f0 2846     		mov	r0, r5
 1795 01f2 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1796              	.LVL122:
 423:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1797              		.loc 1 423 13 is_stmt 1 view .LVU466
 423:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1798              		.loc 1 423 20 is_stmt 0 view .LVU467
 1799 01f6 3223     		movs	r3, #50
 1800 01f8 ADF80430 		strh	r3, [sp, #4]	@ movhi
 424:Core/Src/menu.cpp ****             break;
 1801              		.loc 1 424 13 is_stmt 1 view .LVU468
 424:Core/Src/menu.cpp ****             break;
 1802              		.loc 1 424 31 is_stmt 0 view .LVU469
 1803 01fc 364A     		ldr	r2, .L127+44
 1804 01fe 01A9     		add	r1, sp, #4
 1805 0200 A869     		ldr	r0, [r5, #24]
 1806 0202 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1807              	.LVL123:
 1808 0206 2FE0     		b	.L124
 1809              	.LVL124:
 1810              	.L113:
 380:Core/Src/menu.cpp ****             menu_menu();//M
 1811              		.loc 1 380 9 is_stmt 1 view .LVU470
 381:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1812              		.loc 1 381 13 view .LVU471
 381:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1813              		.loc 1 381 22 is_stmt 0 view .LVU472
 1814 0208 2846     		mov	r0, r5
 1815 020a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1816              	.LVL125:
ARM GAS  /tmp/ccXHb2EA.s 			page 50


 382:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1817              		.loc 1 382 13 is_stmt 1 view .LVU473
 382:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1818              		.loc 1 382 20 is_stmt 0 view .LVU474
 1819 020e 334B     		ldr	r3, .L127+48
 1820 0210 93E80300 		ldm	r3, {r0, r1}
 1821 0214 0190     		str	r0, [sp, #4]
 1822 0216 ADF80810 		strh	r1, [sp, #8]	@ movhi
 383:Core/Src/menu.cpp ****             break;
 1823              		.loc 1 383 13 is_stmt 1 view .LVU475
 383:Core/Src/menu.cpp ****             break;
 1824              		.loc 1 383 31 is_stmt 0 view .LVU476
 1825 021a 314A     		ldr	r2, .L127+52
 1826 021c 01A9     		add	r1, sp, #4
 1827 021e A869     		ldr	r0, [r5, #24]
 1828 0220 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1829              	.LVL126:
 1830 0224 CAE7     		b	.L117
 1831              	.L115:
 390:Core/Src/menu.cpp ****             menu_back();//B
 1832              		.loc 1 390 9 is_stmt 1 view .LVU477
 391:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1833              		.loc 1 391 13 view .LVU478
 391:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1834              		.loc 1 391 22 is_stmt 0 view .LVU479
 1835 0226 2846     		mov	r0, r5
 1836 0228 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1837              	.LVL127:
 392:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1838              		.loc 1 392 13 is_stmt 1 view .LVU480
 392:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1839              		.loc 1 392 20 is_stmt 0 view .LVU481
 1840 022c 2D4A     		ldr	r2, .L127+56
 1841 022e 92E80300 		ldm	r2, {r0, r1}
 1842 0232 0190     		str	r0, [sp, #4]
 1843 0234 8DF80810 		strb	r1, [sp, #8]
 393:Core/Src/menu.cpp ****             break;
 1844              		.loc 1 393 13 is_stmt 1 view .LVU482
 393:Core/Src/menu.cpp ****             break;
 1845              		.loc 1 393 31 is_stmt 0 view .LVU483
 1846 0238 01A9     		add	r1, sp, #4
 1847 023a A869     		ldr	r0, [r5, #24]
 1848 023c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1849              	.LVL128:
 1850 0240 BCE7     		b	.L117
 1851              	.LVL129:
 1852              	.L126:
 405:Core/Src/menu.cpp ****     }
 1853              		.loc 1 405 9 is_stmt 1 view .LVU484
 405:Core/Src/menu.cpp ****     }
 1854              		.loc 1 405 12 is_stmt 0 view .LVU485
 1855 0242 0134     		adds	r4, r4, #1
 1856              	.LVL130:
 403:Core/Src/menu.cpp ****     {
 1857              		.loc 1 403 5 view .LVU486
 1858 0244 C3E7     		b	.L119
 1859              	.LVL131:
ARM GAS  /tmp/ccXHb2EA.s 			page 51


 1860              	.L121:
 409:Core/Src/menu.cpp ****     {
 1861              		.loc 1 409 5 view .LVU487
 1862 0246 B3F5004F 		cmp	r3, #32768
 1863 024a 0DD1     		bne	.L124
 411:Core/Src/menu.cpp ****             menu_up();//U
 1864              		.loc 1 411 9 is_stmt 1 view .LVU488
 412:Core/Src/menu.cpp ****             sprintf(x,"up");
 1865              		.loc 1 412 13 view .LVU489
 412:Core/Src/menu.cpp ****             sprintf(x,"up");
 1866              		.loc 1 412 20 is_stmt 0 view .LVU490
 1867 024c 2846     		mov	r0, r5
 1868 024e FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1869              	.LVL132:
 413:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1870              		.loc 1 413 13 is_stmt 1 view .LVU491
 413:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1871              		.loc 1 413 20 is_stmt 0 view .LVU492
 1872 0252 254A     		ldr	r2, .L127+60
 1873 0254 1368     		ldr	r3, [r2]
 1874 0256 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1875 025a 1B0C     		lsrs	r3, r3, #16
 1876 025c 8DF80630 		strb	r3, [sp, #6]
 414:Core/Src/menu.cpp ****             break;
 1877              		.loc 1 414 13 is_stmt 1 view .LVU493
 414:Core/Src/menu.cpp ****             break;
 1878              		.loc 1 414 31 is_stmt 0 view .LVU494
 1879 0260 01A9     		add	r1, sp, #4
 1880 0262 A869     		ldr	r0, [r5, #24]
 1881 0264 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1882              	.LVL133:
 1883              	.L124:
 435:Core/Src/menu.cpp **** 
 1884              		.loc 1 435 5 is_stmt 1 view .LVU495
 435:Core/Src/menu.cpp **** 
 1885              		.loc 1 435 15 is_stmt 0 view .LVU496
 1886 0268 104A     		ldr	r2, .L127
 1887 026a 5369     		ldr	r3, [r2, #20]
 1888 026c 23F48043 		bic	r3, r3, #16384
 1889 0270 5361     		str	r3, [r2, #20]
 1890              		.loc 1 437 1 view .LVU497
 1891 0272 07B0     		add	sp, sp, #28
 1892              	.LCFI17:
 1893              		.cfi_remember_state
 1894              		.cfi_def_cfa_offset 12
 1895              		@ sp needed
 1896 0274 30BD     		pop	{r4, r5, pc}
 1897              	.LVL134:
 1898              	.L120:
 1899              	.LCFI18:
 1900              		.cfi_restore_state
 416:Core/Src/menu.cpp ****             menu_number('3');
 1901              		.loc 1 416 9 is_stmt 1 view .LVU498
 417:Core/Src/menu.cpp ****             sprintf(x,"3");
 1902              		.loc 1 417 13 view .LVU499
 417:Core/Src/menu.cpp ****             sprintf(x,"3");
 1903              		.loc 1 417 24 is_stmt 0 view .LVU500
ARM GAS  /tmp/ccXHb2EA.s 			page 52


 1904 0276 3321     		movs	r1, #51
 1905 0278 2846     		mov	r0, r5
 1906 027a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1907              	.LVL135:
 418:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1908              		.loc 1 418 13 is_stmt 1 view .LVU501
 418:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1909              		.loc 1 418 20 is_stmt 0 view .LVU502
 1910 027e 3323     		movs	r3, #51
 1911 0280 ADF80430 		strh	r3, [sp, #4]	@ movhi
 419:Core/Src/menu.cpp ****             break;
 1912              		.loc 1 419 13 is_stmt 1 view .LVU503
 419:Core/Src/menu.cpp ****             break;
 1913              		.loc 1 419 31 is_stmt 0 view .LVU504
 1914 0284 194A     		ldr	r2, .L127+64
 1915 0286 01A9     		add	r1, sp, #4
 1916 0288 A869     		ldr	r0, [r5, #24]
 1917 028a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1918              	.LVL136:
 1919 028e EBE7     		b	.L124
 1920              	.L122:
 426:Core/Src/menu.cpp ****             menu_number('1');
 1921              		.loc 1 426 9 is_stmt 1 view .LVU505
 427:Core/Src/menu.cpp ****             sprintf(x,"1");
 1922              		.loc 1 427 13 view .LVU506
 427:Core/Src/menu.cpp ****             sprintf(x,"1");
 1923              		.loc 1 427 24 is_stmt 0 view .LVU507
 1924 0290 3121     		movs	r1, #49
 1925 0292 2846     		mov	r0, r5
 1926 0294 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1927              	.LVL137:
 428:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1928              		.loc 1 428 13 is_stmt 1 view .LVU508
 428:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1929              		.loc 1 428 20 is_stmt 0 view .LVU509
 1930 0298 3123     		movs	r3, #49
 1931 029a ADF80430 		strh	r3, [sp, #4]	@ movhi
 429:Core/Src/menu.cpp ****             break;
 1932              		.loc 1 429 13 is_stmt 1 view .LVU510
 429:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
 1931              		.loc 1 429 31 is_stmt 0 view .LVU511
 1932 029e 144A     		ldr	r2, .L127+68
 1933 02a0 01A9     		add	r1, sp, #4
 1934 02a2 A869     		ldr	r0, [r5, #24]
 1935 02a4 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1936              	.LVL138:
 1937 02a8 DEE7     		b	.L124
 1938              	.L128:
 1939 02aa 00BF     		.align	2
 1940              	.L127:
 1941 02ac 000C0240 		.word	1073875968
 1942 02b0 0C000000 		.word	.LC11
 1943 02b4 00000000 		.word	.LC9
 1944 02b8 08000000 		.word	.LC10
 1945 02bc 10000000 		.word	.LC12
 1946 02c0 20000000 		.word	.LC15
 1947 02c4 14000000 		.word	.LC13
 1948 02c8 1C000000 		.word	.LC14
 1949 02cc 24000000 		.word	.LC16
ARM GAS  /tmp/ccXnheei.s 			page 53


 1950 02d0 40000000 		.word	.LC20
 1951 02d4 28000000 		.word	.LC17
 1952 02d8 54000000 		.word	.LC24
 1953 02dc 30000000 		.word	.LC18
 1954 02e0 38000000 		.word	.LC19
 1955 02e4 44000000 		.word	.LC21
 1956 02e8 4C000000 		.word	.LC22
 1957 02ec 50000000 		.word	.LC23
 1958 02f0 58000000 		.word	.LC25
 1959              		.cfi_endproc
 1960              	.LFE1996:
 1961              		.fnend
 1963              		.section	.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart,"ax",%progbits
 1964              		.align	1
 1965              		.syntax unified
 1966              		.thumb
 1967              		.thumb_func
 1968              		.fpu fpv4-sp-d16
 1970              	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:
 1971              		.fnstart
 1972              	.LFB2477:
 1973              		.loc 1 437 1 is_stmt 1 view -0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977 0000 08B5     		push	{r3, lr}
 1978              	.LCFI19:
 1979              		.cfi_def_cfa_offset 8
 1980              		.cfi_offset 3, -8
 1981              		.cfi_offset 14, -4
 1982              		.loc 1 437 1 is_stmt 0 view .LVU513
 1983 0002 4FF6FF71 		movw	r1, #65535
 1984 0006 0120     		movs	r0, #1
 1985 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1986              	.LVL139:
 1987 000c 08BD     		pop	{r3, pc}
 1988              		.cfi_endproc
 1989              	.LFE2477:
 1990              		.cantunwind
 1991              		.fnend
 1993              		.section	.init_array,"aw",%init_array
 1994              		.align	2
 1995 0000 00000000 		.word	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart(target1)
 1996              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 1997              		.align	2
 1998              		.set	.LANCHOR0,. + 0
 2001              	_ZStL8__ioinit:
 2002 0000 00       		.space	1
 2003              		.text
 2004              	.Letext0:
 2005              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2006              		.file 4 "/usr/include/newlib/c++/9.2.1/cstdlib"
 2007              		.file 5 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 2008              		.file 6 "/usr/include/newlib/c++/9.2.1/cwchar"
 2009              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 2010              		.file 8 "/usr/include/newlib/c++/9.2.1/new"
 2011              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
ARM GAS  /tmp/ccXnheei.s 			page 54


 2012              		.file 10 "/usr/include/newlib/c++/9.2.1/type_traits"
 2013              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 2014              		.file 12 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 2015              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 2016              		.file 14 "/usr/include/newlib/c++/9.2.1/cstdint"
 2017              		.file 15 "/usr/include/newlib/c++/9.2.1/clocale"
 2018              		.file 16 "/usr/include/newlib/c++/9.2.1/cstdio"
 2019              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 2020              		.file 18 "/usr/include/newlib/c++/9.2.1/system_error"
 2021              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 2022              		.file 20 "/usr/include/newlib/c++/9.2.1/cwctype"
 2023              		.file 21 "/usr/include/newlib/c++/9.2.1/iosfwd"
 2024              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 2025              		.file 23 "/usr/include/newlib/c++/9.2.1/tuple"
 2026              		.file 24 "/usr/include/newlib/c++/9.2.1/functional"
 2027              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2028              		.file 26 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2029              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2030              		.file 28 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2031              		.file 29 "/usr/include/newlib/sys/_types.h"
 2032              		.file 30 "<built-in>"
 2033              		.file 31 "/usr/include/newlib/sys/reent.h"
 2034              		.file 32 "/usr/include/newlib/sys/lock.h"
 2035              		.file 33 "/usr/include/newlib/stdlib.h"
 2036              		.file 34 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2037              		.file 35 "Drivers/CMSIS/Include/core_cm4.h"
 2038              		.file 36 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2039              		.file 37 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2040              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2041              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2042              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2043              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2044              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2045              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2046              		.file 44 "Core/Inc/fonts.h"
 2047              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2048              		.file 46 "/usr/include/newlib/stdio.h"
 2049              		.file 47 "Core/Inc/oled.h"
 2050              		.file 48 "/usr/include/newlib/wchar.h"
 2051              		.file 49 "/usr/include/newlib/locale.h"
 2052              		.file 50 "/usr/include/newlib/ctype.h"
 2053              		.file 51 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
 2054              		.file 52 "/usr/include/newlib/sys/errno.h"
 2055              		.file 53 "/usr/include/newlib/wctype.h"
 2056              		.file 54 "Core/Inc/uart.hpp"
 2057              		.file 55 "Core/Inc/menu.hpp"
ARM GAS  /tmp/ccXnheei.s 			page 55
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
 1933              		.loc 1 429 31 is_stmt 0 view .LVU511
 1934 029e 144A     		ldr	r2, .L127+68
 1935 02a0 01A9     		add	r1, sp, #4
 1936 02a2 A869     		ldr	r0, [r5, #24]
 1937 02a4 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1938              	.LVL138:
 1939 02a8 DEE7     		b	.L124
 1940              	.L128:
 1941 02aa 00BF     		.align	2
 1942              	.L127:
 1943 02ac 000C0240 		.word	1073875968
 1944 02b0 0C000000 		.word	.LC11
 1945 02b4 00000000 		.word	.LC9
 1946 02b8 08000000 		.word	.LC10
 1947 02bc 10000000 		.word	.LC12
 1948 02c0 20000000 		.word	.LC15
 1949 02c4 14000000 		.word	.LC13
ARM GAS  /tmp/ccXHb2EA.s 			page 53


 1950 02c8 1C000000 		.word	.LC14
 1951 02cc 24000000 		.word	.LC16
 1952 02d0 40000000 		.word	.LC20
 1953 02d4 28000000 		.word	.LC17
 1954 02d8 54000000 		.word	.LC24
 1955 02dc 30000000 		.word	.LC18
 1956 02e0 38000000 		.word	.LC19
 1957 02e4 44000000 		.word	.LC21
 1958 02e8 4C000000 		.word	.LC22
 1959 02ec 50000000 		.word	.LC23
 1960 02f0 58000000 		.word	.LC25
 1961              		.cfi_endproc
 1962              	.LFE1996:
 1963              		.fnend
 1965              		.section	.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart,"ax",%progbits
 1966              		.align	1
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu fpv4-sp-d16
 1972              	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:
 1973              		.fnstart
 1974              	.LFB2477:
 1975              		.loc 1 437 1 is_stmt 1 view -0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979 0000 08B5     		push	{r3, lr}
 1980              	.LCFI19:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 3, -8
 1983              		.cfi_offset 14, -4
 1984              		.loc 1 437 1 is_stmt 0 view .LVU513
 1985 0002 4FF6FF71 		movw	r1, #65535
 1986 0006 0120     		movs	r0, #1
 1987 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1988              	.LVL139:
 1989 000c 08BD     		pop	{r3, pc}
 1990              		.cfi_endproc
 1991              	.LFE2477:
 1992              		.cantunwind
 1993              		.fnend
 1995              		.section	.init_array,"aw",%init_array
 1996              		.align	2
 1997 0000 00000000 		.word	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart(target1)
 1998              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 1999              		.align	2
 2000              		.set	.LANCHOR0,. + 0
 2003              	_ZStL8__ioinit:
 2004 0000 00       		.space	1
 2005              		.text
 2006              	.Letext0:
 2007              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2008              		.file 4 "/usr/include/newlib/c++/9.2.1/cstdlib"
 2009              		.file 5 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 2010              		.file 6 "/usr/include/newlib/c++/9.2.1/cwchar"
 2011              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
ARM GAS  /tmp/ccXHb2EA.s 			page 54


 2012              		.file 8 "/usr/include/newlib/c++/9.2.1/new"
 2013              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 2014              		.file 10 "/usr/include/newlib/c++/9.2.1/type_traits"
 2015              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 2016              		.file 12 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 2017              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 2018              		.file 14 "/usr/include/newlib/c++/9.2.1/cstdint"
 2019              		.file 15 "/usr/include/newlib/c++/9.2.1/clocale"
 2020              		.file 16 "/usr/include/newlib/c++/9.2.1/cstdio"
 2021              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 2022              		.file 18 "/usr/include/newlib/c++/9.2.1/system_error"
 2023              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 2024              		.file 20 "/usr/include/newlib/c++/9.2.1/cwctype"
 2025              		.file 21 "/usr/include/newlib/c++/9.2.1/iosfwd"
 2026              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 2027              		.file 23 "/usr/include/newlib/c++/9.2.1/tuple"
 2028              		.file 24 "/usr/include/newlib/c++/9.2.1/functional"
 2029              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2030              		.file 26 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2031              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2032              		.file 28 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2033              		.file 29 "/usr/include/newlib/sys/_types.h"
 2034              		.file 30 "<built-in>"
 2035              		.file 31 "/usr/include/newlib/sys/reent.h"
 2036              		.file 32 "/usr/include/newlib/sys/lock.h"
 2037              		.file 33 "/usr/include/newlib/stdlib.h"
 2038              		.file 34 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2039              		.file 35 "Drivers/CMSIS/Include/core_cm4.h"
 2040              		.file 36 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2041              		.file 37 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2042              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2043              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2044              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2045              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2046              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2047              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2048              		.file 44 "Core/Inc/fonts.h"
 2049              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2050              		.file 46 "/usr/include/newlib/stdio.h"
 2051              		.file 47 "Core/Inc/oled.h"
 2052              		.file 48 "/usr/include/newlib/wchar.h"
 2053              		.file 49 "/usr/include/newlib/locale.h"
 2054              		.file 50 "/usr/include/newlib/ctype.h"
 2055              		.file 51 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
 2056              		.file 52 "/usr/include/newlib/sys/errno.h"
 2057              		.file 53 "/usr/include/newlib/wctype.h"
 2058              		.file 54 "Core/Inc/uart.hpp"
 2059              		.file 55 "Core/Inc/menu.hpp"
ARM GAS  /tmp/ccXHb2EA.s 			page 55
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
     /tmp/cceDqxOT.s:18     .text._ZN4menuC2EP4oled:0000000000000000 $t
     /tmp/cceDqxOT.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC2EP4oled
.ARM.exidx.text._ZN4menuC2EP4oled:0000000000000000 $d
     /tmp/cceDqxOT.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC1EP4oled
     /tmp/cceDqxOT.s:67     .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/cceDqxOT.s:92     .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/cceDqxOT.s:99     .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/cceDqxOT.s:128    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/cceDqxOT.s:355    .text._ZN4menu10menu_printEv:000000000000012c $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/cceDqxOT.s:370    .rodata._ZN4menu7menu_okEv.str1.4:0000000000000000 $d
     /tmp/cceDqxOT.s:378    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/cceDqxOT.s:385    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/cceDqxOT.s:429    .text._ZN4menu7menu_okEv:0000000000000020 $d
     /tmp/cceDqxOT.s:469    .text._ZN4menu7menu_okEv:0000000000000048 $t
     /tmp/cceDqxOT.s:630    .text._ZN4menu7menu_okEv:00000000000000e8 $d
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/cceDqxOT.s:638    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/cceDqxOT.s:645    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/cceDqxOT.s:679    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/cceDqxOT.s:703    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/cceDqxOT.s:767    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/cceDqxOT.s:774    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/cceDqxOT.s:819    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/cceDqxOT.s:826    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/cceDqxOT.s:874    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/cceDqxOT.s:881    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/cceDqxOT.s:915    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/cceDqxOT.s:939    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1013   .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/cceDqxOT.s:1020   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/cceDqxOT.s:1123   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1130   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1218   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1225   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1311   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1318   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/cceDqxOT.s:1611   .text._ZN4menu13keyboard_pollEv:0000000000000154 $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/cceDqxOT.s:153    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/cceDqxOT.s:153    .text._ZN4menu10menu_printEv:000000000000002a $t
=======
     /tmp/ccMEB0iu.s:18     .text._ZN4menuC2EP4oled:0000000000000000 $t
     /tmp/ccMEB0iu.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC2EP4oled
.ARM.exidx.text._ZN4menuC2EP4oled:0000000000000000 $d
     /tmp/ccMEB0iu.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC1EP4oled
     /tmp/ccMEB0iu.s:67     .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/ccMEB0iu.s:92     .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:99     .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/ccMEB0iu.s:128    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/ccMEB0iu.s:355    .text._ZN4menu10menu_printEv:000000000000012c $d
=======
     /tmp/ccXnheei.s:18     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/ccXnheei.s:25     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccXnheei.s:69     .text._Z41__static_initialization_and_destruction_0ii:0000000000000024 $d
=======
     /tmp/ccXHb2EA.s:18     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/ccXHb2EA.s:25     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccXHb2EA.s:69     .text._Z41__static_initialization_and_destruction_0ii:0000000000000024 $d
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/ccXHb2EA.s:78     .rodata._ZN4menuC2EP4oledP4uart.str1.4:0000000000000000 $d
     /tmp/ccXHb2EA.s:82     .text._ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/ccXHb2EA.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC2EP4oledP4uart
     /tmp/ccXHb2EA.s:142    .text._ZN4menuC2EP4oledP4uart:000000000000002c $d
.ARM.exidx.text._ZN4menuC2EP4oledP4uart:0000000000000000 $d
<<<<<<< HEAD
     /tmp/ccXnheei.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC1EP4oledP4uart
     /tmp/ccXnheei.s:151    .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/ccXnheei.s:176    .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/ccXnheei.s:183    .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/ccXnheei.s:211    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/ccXnheei.s:438    .text._ZN4menu10menu_printEv:000000000000012c $d
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
     /tmp/ccXHb2EA.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC1EP4oledP4uart
     /tmp/ccXHb2EA.s:151    .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/ccXHb2EA.s:176    .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:183    .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/ccXHb2EA.s:211    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/ccXHb2EA.s:438    .text._ZN4menu10menu_printEv:000000000000012c $d
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:453    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:460    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/ccXHb2EA.s:499    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/ccXHb2EA.s:523    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:641    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:648    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/ccXHb2EA.s:682    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/ccXHb2EA.s:706    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:770    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:777    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:822    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:829    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:877    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:884    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/ccXHb2EA.s:918    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/ccXHb2EA.s:942    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:1016   .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/ccXHb2EA.s:1023   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/ccXHb2EA.s:1142   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:1149   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:1237   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:1244   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/ccXHb2EA.s:1330   .rodata._ZN4menu13keyboard_pollEv.str1.4:0000000000000000 $d
     /tmp/ccXHb2EA.s:1382   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/ccXHb2EA.s:1389   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/ccXHb2EA.s:1943   .text._ZN4menu13keyboard_pollEv:00000000000002ac $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
<<<<<<< HEAD
<<<<<<< HEAD
     /tmp/ccMEB0iu.s:153    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/ccMEB0iu.s:153    .text._ZN4menu10menu_printEv:000000000000002a $t
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
=======
     /tmp/ccXnheei.s:1964   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/ccXnheei.s:1970   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 _GLOBAL__sub_I__ZN4menuC2EP4oledP4uart
=======
     /tmp/ccXHb2EA.s:1966   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/ccXHb2EA.s:1972   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 _GLOBAL__sub_I__ZN4menuC2EP4oledP4uart
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c
.ARM.exidx.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/ccXHb2EA.s:1996   .init_array:0000000000000000 $d
ARM GAS  /tmp/ccXHb2EA.s 			page 56


<<<<<<< HEAD
     /tmp/ccXnheei.s:1997   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/ccXnheei.s:2001   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/ccXnheei.s:236    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/ccXnheei.s:236    .text._ZN4menu10menu_printEv:000000000000002a $t
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
=======
     /tmp/ccXHb2EA.s:1999   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/ccXHb2EA.s:2003   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/ccXHb2EA.s:236    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/ccXHb2EA.s:236    .text._ZN4menu10menu_printEv:000000000000002a $t
>>>>>>> 07783f3dc3422c343de98c58f0e0cd0beee10b7c

UNDEFINED SYMBOLS
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
__dso_handle
_ZNSt8ios_base4InitD1Ev
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 42
=======
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
<<<<<<< HEAD
ARM GAS  /tmp/ccMEB0iu.s 			page 40
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
=======
>>>>>>> 51f72f82c8ac2083e1ca87e290156dea23c5314f
_ZN4oled7oled_onEv
atoi
_ZN4oled13oled_setTimerEm
_ZN4uart11send_reciveEPcPKc
