ARM GAS  /tmp/ccy7BKMx.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4menuC2EP4oled,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4menuC2EP4oled
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4menuC2EP4oled:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB139:
  30              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_)
  31              		.loc 1 3 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 3 1 is_stmt 0 view .LVU1
  37 0000 10B4     		push	{r4}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 4, -4
  41              	.LBB2:
  42              		.loc 1 3 23 view .LVU2
  43 0002 0022     		movs	r2, #0
  44 0004 8272     		strb	r2, [r0, #10]
  45 0006 1E24     		movs	r4, #30
  46 0008 4473     		strb	r4, [r0, #13]
  47 000a 8273     		strb	r2, [r0, #14]
  48 000c C273     		strb	r2, [r0, #15]
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
  49              		.loc 1 5 5 is_stmt 1 view .LVU3
  50              		.loc 1 5 10 is_stmt 0 view .LVU4
  51 000e 0161     		str	r1, [r0, #16]
  52              	.LBE2:
   6:Core/Src/menu.cpp **** }
ARM GAS  /tmp/ccy7BKMx.s 			page 2


  53              		.loc 1 6 1 view .LVU5
  54 0010 5DF8044B 		ldr	r4, [sp], #4
  55              	.LCFI1:
  56              		.cfi_restore 4
  57              		.cfi_def_cfa_offset 0
  58 0014 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE139:
  61              		.cantunwind
  62              		.fnend
  64              		.global	_ZN4menuC1EP4oled
  65              		.thumb_set _ZN4menuC1EP4oled,_ZN4menuC2EP4oled
  66              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 433A252E 		.ascii	"C:%.2s SQ:%.2s\000"
  69      32732053 
  69      513A252E 
  69      327300
  70 000f 00       		.align	2
  71              	.LC1:
  72 0010 20202020 		.ascii	"    CHAN    \000"
  72      4348414E 
  72      20202020 
  72      00
  73 001d 000000   		.align	2
  74              	.LC2:
  75 0020 20202053 		.ascii	"   SQUASH   \000"
  75      51554153 
  75      48202020 
  75      00
  76 002d 000000   		.align	2
  77              	.LC3:
  78 0030 20446973 		.ascii	" Disp TMO \000"
  78      7020544D 
  78      4F2000
  79 003b 00       		.align	2
  80              	.LC4:
  81 003c 20202043 		.ascii	"   CH:%.2s   \000"
  81      483A252E 
  81      32732020 
  81      2000
  82 004a 0000     		.align	2
  83              	.LC5:
  84 004c 20202053 		.ascii	"   SQ:%.2s   \000"
  84      513A252E 
  84      32732020 
  84      2000
  85 005a 0000     		.align	2
  86              	.LC6:
  87 005c 20202044 		.ascii	"   DS:%.2s   \000"
  87      533A252E 
  87      32732020 
  87      2000
  88 006a 0000     		.align	2
  89              	.LC7:
  90 006c 6D656E75 		.ascii	"menu  back\000"
ARM GAS  /tmp/ccy7BKMx.s 			page 3


  90      20206261 
  90      636B00
  91              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
  92              		.align	1
  93              		.global	_ZN4menu10menu_printEv
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	_ZN4menu10menu_printEv:
 100              		.fnstart
 101              	.LVL1:
 102              	.LFB141:
   7:Core/Src/menu.cpp **** 
   8:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
   9:Core/Src/menu.cpp **** {
 103              		.loc 1 9 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 16
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		.loc 1 9 1 is_stmt 0 view .LVU7
 108 0000 30B5     		push	{r4, r5, lr}
 109              		.save {r4, r5, lr}
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		.cfi_offset 4, -12
 113              		.cfi_offset 5, -8
 114              		.cfi_offset 14, -4
 115              		.pad #28
 116 0002 87B0     		sub	sp, sp, #28
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 40
 119 0004 0446     		mov	r4, r0
  10:Core/Src/menu.cpp ****     char temp [13];
 120              		.loc 1 10 5 is_stmt 1 view .LVU8
  11:Core/Src/menu.cpp **** 
  12:Core/Src/menu.cpp ****     switch (menu_value)
 121              		.loc 1 12 5 view .LVU9
 122              		.loc 1 12 13 is_stmt 0 view .LVU10
 123 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 124 0008 182B     		cmp	r3, #24
 125 000a 1ED8     		bhi	.L4
 126 000c DFE803F0 		tbb	[pc, r3]
 127              	.L6:
 128 0010 0D       		.byte	(.L12-.L6)/2
 129 0011 29       		.byte	(.L11-.L6)/2
 130 0012 39       		.byte	(.L10-.L6)/2
 131 0013 49       		.byte	(.L9-.L6)/2
 132 0014 1D       		.byte	(.L4-.L6)/2
 133 0015 1D       		.byte	(.L4-.L6)/2
 134 0016 1D       		.byte	(.L4-.L6)/2
 135 0017 1D       		.byte	(.L4-.L6)/2
 136 0018 5C       		.byte	(.L8-.L6)/2
 137 0019 1D       		.byte	(.L4-.L6)/2
 138 001a 1D       		.byte	(.L4-.L6)/2
 139 001b 1D       		.byte	(.L4-.L6)/2
 140 001c 1D       		.byte	(.L4-.L6)/2
ARM GAS  /tmp/ccy7BKMx.s 			page 4


 141 001d 1D       		.byte	(.L4-.L6)/2
 142 001e 1D       		.byte	(.L4-.L6)/2
 143 001f 1D       		.byte	(.L4-.L6)/2
 144 0020 6C       		.byte	(.L7-.L6)/2
 145 0021 1D       		.byte	(.L4-.L6)/2
 146 0022 1D       		.byte	(.L4-.L6)/2
 147 0023 1D       		.byte	(.L4-.L6)/2
 148 0024 1D       		.byte	(.L4-.L6)/2
 149 0025 1D       		.byte	(.L4-.L6)/2
 150 0026 1D       		.byte	(.L4-.L6)/2
 151 0027 1D       		.byte	(.L4-.L6)/2
 152 0028 7C       		.byte	(.L5-.L6)/2
 153 0029 00       		.p2align 1
 154              	.L12:
  13:Core/Src/menu.cpp ****     {
  14:Core/Src/menu.cpp ****         case MENU_HOME:
 155              		.loc 1 14 9 is_stmt 1 view .LVU11
  15:Core/Src/menu.cpp ****             sprintf(temp, "C:%.2s SQ:%.2s", ch,sq);
 156              		.loc 1 15 13 view .LVU12
 157              		.loc 1 15 20 is_stmt 0 view .LVU13
 158 002a 831C     		adds	r3, r0, #2
 159 002c 421D     		adds	r2, r0, #5
 160 002e 3F49     		ldr	r1, .L14
 161 0030 02A8     		add	r0, sp, #8
 162              	.LVL2:
 163              		.loc 1 15 20 view .LVU14
 164 0032 FFF7FEFF 		bl	sprintf
 165              	.LVL3:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 166              		.loc 1 16 13 is_stmt 1 view .LVU15
 167              		.loc 1 16 30 is_stmt 0 view .LVU16
 168 0036 3E4B     		ldr	r3, .L14+4
 169 0038 1322     		movs	r2, #19
 170 003a 0192     		str	r2, [sp, #4]
 171 003c 0022     		movs	r2, #0
 172 003e 0092     		str	r2, [sp]
 173 0040 0CCB     		ldm	r3, {r2, r3}
 174 0042 02A9     		add	r1, sp, #8
 175 0044 2069     		ldr	r0, [r4, #16]
 176 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 177              	.LVL4:
 178              	.L4:
  17:Core/Src/menu.cpp ****             break; 
  18:Core/Src/menu.cpp ****         case MENU_CH:
  19:Core/Src/menu.cpp ****             sprintf(temp, "    CHAN    ");
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  21:Core/Src/menu.cpp ****             break;
  22:Core/Src/menu.cpp ****         case MENU_SQ:
  23:Core/Src/menu.cpp ****             sprintf(temp, "   SQUASH   ");
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  25:Core/Src/menu.cpp ****             break;
  26:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  27:Core/Src/menu.cpp ****             sprintf(temp, " Disp TMO "); 
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  29:Core/Src/menu.cpp ****             break;
  30:Core/Src/menu.cpp ****         case MENU_CH_IN:
  31:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
ARM GAS  /tmp/ccy7BKMx.s 			page 5


  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  33:Core/Src/menu.cpp ****             break;
  34:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  35:Core/Src/menu.cpp ****             sprintf(temp, "   SQ:%.2s   ",sq);
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  37:Core/Src/menu.cpp ****             break;
  38:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  39:Core/Src/menu.cpp ****             sprintf(temp, "   DS:%.2s   ",tmo);
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  41:Core/Src/menu.cpp ****             break;
  42:Core/Src/menu.cpp ****         default:
  43:Core/Src/menu.cpp ****             break;
  44:Core/Src/menu.cpp ****     }
  45:Core/Src/menu.cpp ****     oled1->oled_print("menu  back", Font_11x18,0,46);   
 179              		.loc 1 45 5 is_stmt 1 view .LVU17
 180              		.loc 1 45 22 is_stmt 0 view .LVU18
 181 004a 3A4B     		ldr	r3, .L14+8
 182 004c 2E22     		movs	r2, #46
 183 004e 0192     		str	r2, [sp, #4]
 184 0050 0022     		movs	r2, #0
 185 0052 0092     		str	r2, [sp]
 186 0054 0CCB     		ldm	r3, {r2, r3}
 187 0056 3849     		ldr	r1, .L14+12
 188 0058 2069     		ldr	r0, [r4, #16]
 189 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 190              	.LVL5:
  46:Core/Src/menu.cpp **** 
  47:Core/Src/menu.cpp **** }
 191              		.loc 1 47 1 view .LVU19
 192 005e 07B0     		add	sp, sp, #28
 193              	.LCFI4:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 12
 196              		@ sp needed
 197 0060 30BD     		pop	{r4, r5, pc}
 198              	.LVL6:
 199              	.L11:
 200              	.LCFI5:
 201              		.cfi_restore_state
  18:Core/Src/menu.cpp ****             sprintf(temp, "    CHAN    ");
 202              		.loc 1 18 9 is_stmt 1 view .LVU20
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 203              		.loc 1 19 13 view .LVU21
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 204              		.loc 1 19 20 is_stmt 0 view .LVU22
 205 0062 364B     		ldr	r3, .L14+16
 206 0064 02AD     		add	r5, sp, #8
 207 0066 0FCB     		ldm	r3, {r0, r1, r2, r3}
 208              	.LVL7:
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 209              		.loc 1 19 20 view .LVU23
 210 0068 07C5     		stmia	r5!, {r0, r1, r2}
 211 006a 2B70     		strb	r3, [r5]
  20:Core/Src/menu.cpp ****             break;
 212              		.loc 1 20 13 is_stmt 1 view .LVU24
  20:Core/Src/menu.cpp ****             break;
 213              		.loc 1 20 30 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccy7BKMx.s 			page 6


 214 006c 304B     		ldr	r3, .L14+4
 215 006e 1322     		movs	r2, #19
 216 0070 0192     		str	r2, [sp, #4]
 217 0072 0022     		movs	r2, #0
 218 0074 0092     		str	r2, [sp]
 219 0076 0CCB     		ldm	r3, {r2, r3}
 220 0078 02A9     		add	r1, sp, #8
 221 007a 2069     		ldr	r0, [r4, #16]
 222 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 223              	.LVL8:
 224 0080 E3E7     		b	.L4
 225              	.LVL9:
 226              	.L10:
  22:Core/Src/menu.cpp ****             sprintf(temp, "   SQUASH   ");
 227              		.loc 1 22 9 is_stmt 1 view .LVU26
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 228              		.loc 1 23 13 view .LVU27
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 229              		.loc 1 23 20 is_stmt 0 view .LVU28
 230 0082 2F4B     		ldr	r3, .L14+20
 231 0084 02AD     		add	r5, sp, #8
 232 0086 0FCB     		ldm	r3, {r0, r1, r2, r3}
 233              	.LVL10:
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 234              		.loc 1 23 20 view .LVU29
 235 0088 07C5     		stmia	r5!, {r0, r1, r2}
 236 008a 2B70     		strb	r3, [r5]
  24:Core/Src/menu.cpp ****             break;
 237              		.loc 1 24 13 is_stmt 1 view .LVU30
  24:Core/Src/menu.cpp ****             break;
 238              		.loc 1 24 30 is_stmt 0 view .LVU31
 239 008c 284B     		ldr	r3, .L14+4
 240 008e 1322     		movs	r2, #19
 241 0090 0192     		str	r2, [sp, #4]
 242 0092 0022     		movs	r2, #0
 243 0094 0092     		str	r2, [sp]
 244 0096 0CCB     		ldm	r3, {r2, r3}
 245 0098 02A9     		add	r1, sp, #8
 246 009a 2069     		ldr	r0, [r4, #16]
 247 009c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 248              	.LVL11:
 249 00a0 D3E7     		b	.L4
 250              	.LVL12:
 251              	.L9:
  26:Core/Src/menu.cpp ****             sprintf(temp, " Disp TMO "); 
 252              		.loc 1 26 9 is_stmt 1 view .LVU32
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 253              		.loc 1 27 13 view .LVU33
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 254              		.loc 1 27 20 is_stmt 0 view .LVU34
 255 00a2 284A     		ldr	r2, .L14+24
 256 00a4 02AB     		add	r3, sp, #8
 257 00a6 07CA     		ldm	r2, {r0, r1, r2}
 258              	.LVL13:
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 259              		.loc 1 27 20 view .LVU35
 260 00a8 03C3     		stmia	r3!, {r0, r1}
ARM GAS  /tmp/ccy7BKMx.s 			page 7


 261 00aa 23F8022B 		strh	r2, [r3], #2	@ movhi
 262 00ae 120C     		lsrs	r2, r2, #16
 263 00b0 1A70     		strb	r2, [r3]
  28:Core/Src/menu.cpp ****             break;
 264              		.loc 1 28 13 is_stmt 1 view .LVU36
  28:Core/Src/menu.cpp ****             break;
 265              		.loc 1 28 30 is_stmt 0 view .LVU37
 266 00b2 1F4B     		ldr	r3, .L14+4
 267 00b4 1322     		movs	r2, #19
 268 00b6 0192     		str	r2, [sp, #4]
 269 00b8 0022     		movs	r2, #0
 270 00ba 0092     		str	r2, [sp]
 271 00bc 0CCB     		ldm	r3, {r2, r3}
 272 00be 02A9     		add	r1, sp, #8
 273 00c0 2069     		ldr	r0, [r4, #16]
 274 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 275              	.LVL14:
 276 00c6 C0E7     		b	.L4
 277              	.LVL15:
 278              	.L8:
  30:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
 279              		.loc 1 30 9 is_stmt 1 view .LVU38
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 280              		.loc 1 31 13 view .LVU39
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 281              		.loc 1 31 20 is_stmt 0 view .LVU40
 282 00c8 421D     		adds	r2, r0, #5
 283 00ca 1F49     		ldr	r1, .L14+28
 284 00cc 02A8     		add	r0, sp, #8
 285              	.LVL16:
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 286              		.loc 1 31 20 view .LVU41
 287 00ce FFF7FEFF 		bl	sprintf
 288              	.LVL17:
  32:Core/Src/menu.cpp ****             break;
 289              		.loc 1 32 13 is_stmt 1 view .LVU42
  32:Core/Src/menu.cpp ****             break;
 290              		.loc 1 32 30 is_stmt 0 view .LVU43
 291 00d2 174B     		ldr	r3, .L14+4
 292 00d4 1322     		movs	r2, #19
 293 00d6 0192     		str	r2, [sp, #4]
 294 00d8 0022     		movs	r2, #0
 295 00da 0092     		str	r2, [sp]
 296 00dc 0CCB     		ldm	r3, {r2, r3}
 297 00de 02A9     		add	r1, sp, #8
 298 00e0 2069     		ldr	r0, [r4, #16]
 299 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 300              	.LVL18:
 301 00e6 B0E7     		b	.L4
 302              	.LVL19:
 303              	.L7:
  34:Core/Src/menu.cpp ****             sprintf(temp, "   SQ:%.2s   ",sq);
 304              		.loc 1 34 9 is_stmt 1 view .LVU44
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 305              		.loc 1 35 13 view .LVU45
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 306              		.loc 1 35 20 is_stmt 0 view .LVU46
ARM GAS  /tmp/ccy7BKMx.s 			page 8


 307 00e8 821C     		adds	r2, r0, #2
 308 00ea 1849     		ldr	r1, .L14+32
 309 00ec 02A8     		add	r0, sp, #8
 310              	.LVL20:
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 35 20 view .LVU47
 312 00ee FFF7FEFF 		bl	sprintf
 313              	.LVL21:
  36:Core/Src/menu.cpp ****             break;
 314              		.loc 1 36 13 is_stmt 1 view .LVU48
  36:Core/Src/menu.cpp ****             break;
 315              		.loc 1 36 30 is_stmt 0 view .LVU49
 316 00f2 0F4B     		ldr	r3, .L14+4
 317 00f4 1322     		movs	r2, #19
 318 00f6 0192     		str	r2, [sp, #4]
 319 00f8 0022     		movs	r2, #0
 320 00fa 0092     		str	r2, [sp]
 321 00fc 0CCB     		ldm	r3, {r2, r3}
 322 00fe 02A9     		add	r1, sp, #8
 323 0100 2069     		ldr	r0, [r4, #16]
 324 0102 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 325              	.LVL22:
 326 0106 A0E7     		b	.L4
 327              	.LVL23:
 328              	.L5:
  38:Core/Src/menu.cpp ****             sprintf(temp, "   DS:%.2s   ",tmo);
 329              		.loc 1 38 9 is_stmt 1 view .LVU50
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 330              		.loc 1 39 13 view .LVU51
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 331              		.loc 1 39 20 is_stmt 0 view .LVU52
 332 0108 00F10B02 		add	r2, r0, #11
 333 010c 1049     		ldr	r1, .L14+36
 334 010e 02A8     		add	r0, sp, #8
 335              	.LVL24:
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 336              		.loc 1 39 20 view .LVU53
 337 0110 FFF7FEFF 		bl	sprintf
 338              	.LVL25:
  40:Core/Src/menu.cpp ****             break;
 339              		.loc 1 40 13 is_stmt 1 view .LVU54
  40:Core/Src/menu.cpp ****             break;
 340              		.loc 1 40 30 is_stmt 0 view .LVU55
 341 0114 064B     		ldr	r3, .L14+4
 342 0116 1322     		movs	r2, #19
 343 0118 0192     		str	r2, [sp, #4]
 344 011a 0022     		movs	r2, #0
 345 011c 0092     		str	r2, [sp]
 346 011e 0CCB     		ldm	r3, {r2, r3}
 347 0120 02A9     		add	r1, sp, #8
 348 0122 2069     		ldr	r0, [r4, #16]
 349 0124 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 350              	.LVL26:
 351 0128 8FE7     		b	.L4
 352              	.L15:
 353 012a 00BF     		.align	2
 354              	.L14:
ARM GAS  /tmp/ccy7BKMx.s 			page 9


 355 012c 00000000 		.word	.LC0
 356 0130 00000000 		.word	Font_16x26
 357 0134 00000000 		.word	Font_11x18
 358 0138 6C000000 		.word	.LC7
 359 013c 10000000 		.word	.LC1
 360 0140 20000000 		.word	.LC2
 361 0144 30000000 		.word	.LC3
 362 0148 3C000000 		.word	.LC4
 363 014c 4C000000 		.word	.LC5
 364 0150 5C000000 		.word	.LC6
 365              		.cfi_endproc
 366              	.LFE141:
 367              		.fnend
 369              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 370              		.align	1
 371              		.global	_ZN4menu7menu_okEv
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	_ZN4menu7menu_okEv:
 378              		.fnstart
 379              	.LVL27:
 380              	.LFB142:
  48:Core/Src/menu.cpp **** 
  49:Core/Src/menu.cpp **** void menu::menu_ok()
  50:Core/Src/menu.cpp **** {
 381              		.loc 1 50 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 1 50 1 is_stmt 0 view .LVU57
 386 0000 38B5     		push	{r3, r4, r5, lr}
 387              		.save {r3, r4, r5, lr}
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 3, -16
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 5, -8
 393              		.cfi_offset 14, -4
 394 0002 0446     		mov	r4, r0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 395              		.loc 1 51 5 is_stmt 1 view .LVU58
 396              		.loc 1 51 28 is_stmt 0 view .LVU59
 397 0004 0069     		ldr	r0, [r0, #16]
 398              	.LVL28:
 399              		.loc 1 51 28 view .LVU60
 400 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 401              	.LVL29:
 402              		.loc 1 51 5 view .LVU61
 403 000a A0B1     		cbz	r0, .L17
  52:Core/Src/menu.cpp ****     {
  53:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 404              		.loc 1 53 9 is_stmt 1 view .LVU62
 405              		.loc 1 53 31 is_stmt 0 view .LVU63
 406 000c 2069     		ldr	r0, [r4, #16]
 407 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccy7BKMx.s 			page 10


 408              	.LVL30:
 409              	.L18:
  54:Core/Src/menu.cpp ****     }
  55:Core/Src/menu.cpp ****     else
  56:Core/Src/menu.cpp ****     {
  57:Core/Src/menu.cpp ****         oled1->oled_on();
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  59:Core/Src/menu.cpp ****     }
  60:Core/Src/menu.cpp **** 
  61:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
 410              		.loc 1 61 5 is_stmt 1 view .LVU64
 411              		.loc 1 61 13 is_stmt 0 view .LVU65
 412 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 413 0014 013B     		subs	r3, r3, #1
 414 0016 172B     		cmp	r3, #23
 415 0018 16D8     		bhi	.L16
 416 001a DFE803F0 		tbb	[pc, r3]
 417              	.L21:
 418 001e 13       		.byte	(.L26-.L21)/2
 419 001f 16       		.byte	(.L25-.L21)/2
 420 0020 19       		.byte	(.L24-.L21)/2
 421 0021 15       		.byte	(.L16-.L21)/2
 422 0022 15       		.byte	(.L16-.L21)/2
 423 0023 15       		.byte	(.L16-.L21)/2
 424 0024 15       		.byte	(.L16-.L21)/2
 425 0025 1C       		.byte	(.L23-.L21)/2
 426 0026 15       		.byte	(.L16-.L21)/2
 427 0027 15       		.byte	(.L16-.L21)/2
 428 0028 15       		.byte	(.L16-.L21)/2
 429 0029 15       		.byte	(.L16-.L21)/2
 430 002a 15       		.byte	(.L16-.L21)/2
 431 002b 15       		.byte	(.L16-.L21)/2
 432 002c 15       		.byte	(.L16-.L21)/2
 433 002d 29       		.byte	(.L22-.L21)/2
 434 002e 15       		.byte	(.L16-.L21)/2
 435 002f 15       		.byte	(.L16-.L21)/2
 436 0030 15       		.byte	(.L16-.L21)/2
 437 0031 15       		.byte	(.L16-.L21)/2
 438 0032 15       		.byte	(.L16-.L21)/2
 439 0033 15       		.byte	(.L16-.L21)/2
 440 0034 15       		.byte	(.L16-.L21)/2
 441 0035 36       		.byte	(.L20-.L21)/2
 442              		.p2align 1
 443              	.L17:
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 444              		.loc 1 57 9 is_stmt 1 view .LVU66
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 445              		.loc 1 57 23 is_stmt 0 view .LVU67
 446 0036 2069     		ldr	r0, [r4, #16]
 447 0038 FFF7FEFF 		bl	_ZN4oled7oled_onEv
 448              	.LVL31:
  58:Core/Src/menu.cpp ****     }
 449              		.loc 1 58 9 is_stmt 1 view .LVU68
  58:Core/Src/menu.cpp ****     }
 450              		.loc 1 58 31 is_stmt 0 view .LVU69
 451 003c 2069     		ldr	r0, [r4, #16]
 452 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccy7BKMx.s 			page 11


 453              	.LVL32:
 454 0042 E6E7     		b	.L18
 455              	.L26:
  62:Core/Src/menu.cpp ****     {
  63:Core/Src/menu.cpp ****     case MENU_HOME:
  64:Core/Src/menu.cpp ****         break;
  65:Core/Src/menu.cpp ****     case MENU_CH:
 456              		.loc 1 65 5 is_stmt 1 view .LVU70
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 457              		.loc 1 66 9 view .LVU71
 458              		.loc 1 66 19 is_stmt 0 view .LVU72
 459 0044 0823     		movs	r3, #8
 460 0046 2370     		strb	r3, [r4]
  67:Core/Src/menu.cpp ****         break;
 461              		.loc 1 67 9 is_stmt 1 view .LVU73
 462              	.L16:
  68:Core/Src/menu.cpp ****     case MENU_SQ:
  69:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  70:Core/Src/menu.cpp ****         break;
  71:Core/Src/menu.cpp ****     case MENU_TMO:
  72:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
  73:Core/Src/menu.cpp ****         break;
  74:Core/Src/menu.cpp ****     case MENU_CH_IN:
  75:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  76:Core/Src/menu.cpp ****         if(!cursorOn)
  77:Core/Src/menu.cpp ****         {
  78:Core/Src/menu.cpp ****             chVal=atoi(ch);
  79:Core/Src/menu.cpp ****             cursorPos=0;
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  81:Core/Src/menu.cpp ****         }
  82:Core/Src/menu.cpp ****         break;
  83:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  84:Core/Src/menu.cpp ****         cursorOn^=1;
  85:Core/Src/menu.cpp ****         if(!cursorOn)
  86:Core/Src/menu.cpp ****         {
  87:Core/Src/menu.cpp ****             chVal=atoi(sq);
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  90:Core/Src/menu.cpp ****         }
  91:Core/Src/menu.cpp ****         break;
  92:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  93:Core/Src/menu.cpp ****         cursorOn%=1;
  94:Core/Src/menu.cpp ****         if(!cursorOn)
  95:Core/Src/menu.cpp ****         {
  96:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  97:Core/Src/menu.cpp ****             cursorPos=0;
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
  99:Core/Src/menu.cpp ****         }
 100:Core/Src/menu.cpp ****         break;
 101:Core/Src/menu.cpp **** 
 102:Core/Src/menu.cpp ****     default:
 103:Core/Src/menu.cpp ****         break;
 104:Core/Src/menu.cpp ****     }
 105:Core/Src/menu.cpp **** 
 106:Core/Src/menu.cpp ****     
 107:Core/Src/menu.cpp **** }
 463              		.loc 1 107 1 is_stmt 0 view .LVU74
ARM GAS  /tmp/ccy7BKMx.s 			page 12


 464 0048 38BD     		pop	{r3, r4, r5, pc}
 465              	.LVL33:
 466              	.L25:
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 467              		.loc 1 68 5 is_stmt 1 view .LVU75
  69:Core/Src/menu.cpp ****         break;
 468              		.loc 1 69 9 view .LVU76
  69:Core/Src/menu.cpp ****         break;
 469              		.loc 1 69 19 is_stmt 0 view .LVU77
 470 004a 1023     		movs	r3, #16
 471 004c 2370     		strb	r3, [r4]
  70:Core/Src/menu.cpp ****     case MENU_TMO:
 472              		.loc 1 70 9 is_stmt 1 view .LVU78
 473 004e FBE7     		b	.L16
 474              	.L24:
  71:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 475              		.loc 1 71 5 view .LVU79
  72:Core/Src/menu.cpp ****         break;
 476              		.loc 1 72 9 view .LVU80
  72:Core/Src/menu.cpp ****         break;
 477              		.loc 1 72 19 is_stmt 0 view .LVU81
 478 0050 1823     		movs	r3, #24
 479 0052 2370     		strb	r3, [r4]
  73:Core/Src/menu.cpp ****     case MENU_CH_IN:
 480              		.loc 1 73 9 is_stmt 1 view .LVU82
 481 0054 F8E7     		b	.L16
 482              	.L23:
  74:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 483              		.loc 1 74 5 view .LVU83
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 484              		.loc 1 75 9 view .LVU84
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 485              		.loc 1 75 17 is_stmt 0 view .LVU85
 486 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 487 0058 83F00103 		eor	r3, r3, #1
 488 005c E373     		strb	r3, [r4, #15]
  76:Core/Src/menu.cpp ****         {
 489              		.loc 1 76 9 is_stmt 1 view .LVU86
 490 005e 002B     		cmp	r3, #0
 491 0060 F2D1     		bne	.L16
  78:Core/Src/menu.cpp ****             cursorPos=0;
 492              		.loc 1 78 13 view .LVU87
  78:Core/Src/menu.cpp ****             cursorPos=0;
 493              		.loc 1 78 23 is_stmt 0 view .LVU88
 494 0062 601D     		adds	r0, r4, #5
 495 0064 FFF7FEFF 		bl	atoi
 496              	.LVL34:
  78:Core/Src/menu.cpp ****             cursorPos=0;
 497              		.loc 1 78 18 view .LVU89
 498 0068 E071     		strb	r0, [r4, #7]
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 499              		.loc 1 79 13 is_stmt 1 view .LVU90
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 500              		.loc 1 79 22 is_stmt 0 view .LVU91
 501 006a 0023     		movs	r3, #0
 502 006c A373     		strb	r3, [r4, #14]
 503 006e EBE7     		b	.L16
ARM GAS  /tmp/ccy7BKMx.s 			page 13


 504              	.L22:
  83:Core/Src/menu.cpp ****         cursorOn^=1;
 505              		.loc 1 83 5 is_stmt 1 view .LVU92
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 506              		.loc 1 84 9 view .LVU93
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 507              		.loc 1 84 17 is_stmt 0 view .LVU94
 508 0070 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 509 0072 83F00103 		eor	r3, r3, #1
 510 0076 E373     		strb	r3, [r4, #15]
  85:Core/Src/menu.cpp ****         {
 511              		.loc 1 85 9 is_stmt 1 view .LVU95
 512 0078 002B     		cmp	r3, #0
 513 007a E5D1     		bne	.L16
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 514              		.loc 1 87 13 view .LVU96
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 515              		.loc 1 87 23 is_stmt 0 view .LVU97
 516 007c A01C     		adds	r0, r4, #2
 517 007e FFF7FEFF 		bl	atoi
 518              	.LVL35:
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 519              		.loc 1 87 18 view .LVU98
 520 0082 E071     		strb	r0, [r4, #7]
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 521              		.loc 1 88 13 is_stmt 1 view .LVU99
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 522              		.loc 1 88 22 is_stmt 0 view .LVU100
 523 0084 0023     		movs	r3, #0
 524 0086 A373     		strb	r3, [r4, #14]
 525 0088 DEE7     		b	.L16
 526              	.L20:
  92:Core/Src/menu.cpp ****         cursorOn%=1;
 527              		.loc 1 92 5 is_stmt 1 view .LVU101
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 528              		.loc 1 93 9 view .LVU102
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 529              		.loc 1 93 17 is_stmt 0 view .LVU103
 530 008a 0025     		movs	r5, #0
 531 008c E573     		strb	r5, [r4, #15]
  94:Core/Src/menu.cpp ****         {
 532              		.loc 1 94 9 is_stmt 1 view .LVU104
  96:Core/Src/menu.cpp ****             cursorPos=0;
 533              		.loc 1 96 13 view .LVU105
  96:Core/Src/menu.cpp ****             cursorPos=0;
 534              		.loc 1 96 24 is_stmt 0 view .LVU106
 535 008e 04F10B00 		add	r0, r4, #11
 536 0092 FFF7FEFF 		bl	atoi
 537              	.LVL36:
  96:Core/Src/menu.cpp ****             cursorPos=0;
 538              		.loc 1 96 19 view .LVU107
 539 0096 6073     		strb	r0, [r4, #13]
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 540              		.loc 1 97 13 is_stmt 1 view .LVU108
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 541              		.loc 1 97 22 is_stmt 0 view .LVU109
 542 0098 A573     		strb	r5, [r4, #14]
ARM GAS  /tmp/ccy7BKMx.s 			page 14


 543              		.loc 1 107 1 view .LVU110
 544 009a D5E7     		b	.L16
 545              		.cfi_endproc
 546              	.LFE142:
 547              		.fnend
 549              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 550              		.align	1
 551              		.global	_ZN4menu9menu_nextEv
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	_ZN4menu9menu_nextEv:
 558              		.fnstart
 559              	.LVL37:
 560              	.LFB143:
 108:Core/Src/menu.cpp **** 
 109:Core/Src/menu.cpp **** void menu::menu_next()
 110:Core/Src/menu.cpp **** {
 561              		.loc 1 110 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		.loc 1 110 1 is_stmt 0 view .LVU112
 566 0000 10B5     		push	{r4, lr}
 567              		.save {r4, lr}
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 14, -4
 572 0002 0446     		mov	r4, r0
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 573              		.loc 1 111 5 is_stmt 1 view .LVU113
 574              		.loc 1 111 28 is_stmt 0 view .LVU114
 575 0004 0069     		ldr	r0, [r0, #16]
 576              	.LVL38:
 577              		.loc 1 111 28 view .LVU115
 578 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 579              	.LVL39:
 580              		.loc 1 111 5 view .LVU116
 581 000a 88B9     		cbnz	r0, .L38
 582              	.L29:
 112:Core/Src/menu.cpp ****     {
 113:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 114:Core/Src/menu.cpp ****     }
 115:Core/Src/menu.cpp ****     switch (menu_value)
 583              		.loc 1 115 5 is_stmt 1 view .LVU117
 584              		.loc 1 115 13 is_stmt 0 view .LVU118
 585 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 586 000e 013B     		subs	r3, r3, #1
 587 0010 172B     		cmp	r3, #23
 588 0012 1AD8     		bhi	.L28
 589 0014 DFE803F0 		tbb	[pc, r3]
 590              	.L32:
 591 0018 10       		.byte	(.L36-.L32)/2
 592 0019 13       		.byte	(.L35-.L32)/2
 593 001a 13       		.byte	(.L35-.L32)/2
ARM GAS  /tmp/ccy7BKMx.s 			page 15


 594 001b 19       		.byte	(.L28-.L32)/2
 595 001c 19       		.byte	(.L28-.L32)/2
 596 001d 19       		.byte	(.L28-.L32)/2
 597 001e 19       		.byte	(.L28-.L32)/2
 598 001f 15       		.byte	(.L34-.L32)/2
 599 0020 19       		.byte	(.L28-.L32)/2
 600 0021 19       		.byte	(.L28-.L32)/2
 601 0022 19       		.byte	(.L28-.L32)/2
 602 0023 19       		.byte	(.L28-.L32)/2
 603 0024 19       		.byte	(.L28-.L32)/2
 604 0025 19       		.byte	(.L28-.L32)/2
 605 0026 19       		.byte	(.L28-.L32)/2
 606 0027 1A       		.byte	(.L33-.L32)/2
 607 0028 19       		.byte	(.L28-.L32)/2
 608 0029 19       		.byte	(.L28-.L32)/2
 609 002a 19       		.byte	(.L28-.L32)/2
 610 002b 19       		.byte	(.L28-.L32)/2
 611 002c 19       		.byte	(.L28-.L32)/2
 612 002d 19       		.byte	(.L28-.L32)/2
 613 002e 19       		.byte	(.L28-.L32)/2
 614 002f 1F       		.byte	(.L31-.L32)/2
 615              		.p2align 1
 616              	.L38:
 113:Core/Src/menu.cpp ****     }
 617              		.loc 1 113 9 is_stmt 1 view .LVU119
 113:Core/Src/menu.cpp ****     }
 618              		.loc 1 113 31 is_stmt 0 view .LVU120
 619 0030 2069     		ldr	r0, [r4, #16]
 620 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 621              	.LVL40:
 622 0036 E9E7     		b	.L29
 623              	.L36:
 116:Core/Src/menu.cpp ****     {
 117:Core/Src/menu.cpp ****     case MENU_HOME:
 118:Core/Src/menu.cpp ****         break;
 119:Core/Src/menu.cpp ****     case MENU_CH:
 624              		.loc 1 119 5 is_stmt 1 view .LVU121
 120:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 625              		.loc 1 120 9 view .LVU122
 626              		.loc 1 120 19 is_stmt 0 view .LVU123
 627 0038 0223     		movs	r3, #2
 628 003a 2370     		strb	r3, [r4]
 121:Core/Src/menu.cpp ****         break;
 629              		.loc 1 121 9 is_stmt 1 view .LVU124
 630 003c 05E0     		b	.L28
 631              	.L35:
 122:Core/Src/menu.cpp ****     case MENU_SQ:
 123:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 124:Core/Src/menu.cpp ****     case MENU_TMO:
 632              		.loc 1 124 5 view .LVU125
 125:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 633              		.loc 1 125 9 view .LVU126
 634              		.loc 1 125 19 is_stmt 0 view .LVU127
 635 003e 0123     		movs	r3, #1
 636 0040 2370     		strb	r3, [r4]
 637              	.L34:
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/ccy7BKMx.s 			page 16


 638              		.loc 1 126 5 is_stmt 1 view .LVU128
 127:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 639              		.loc 1 127 9 view .LVU129
 640              		.loc 1 127 20 is_stmt 0 view .LVU130
 641 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 642              		.loc 1 127 18 view .LVU131
 643 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 644 0046 5340     		eors	r3, r3, r2
 645 0048 A373     		strb	r3, [r4, #14]
 128:Core/Src/menu.cpp ****         break;
 646              		.loc 1 128 9 is_stmt 1 view .LVU132
 647              	.L28:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 130:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 131:Core/Src/menu.cpp ****         break;
 132:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 133:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 134:Core/Src/menu.cpp ****         break;
 135:Core/Src/menu.cpp **** 
 136:Core/Src/menu.cpp ****     default:
 137:Core/Src/menu.cpp ****         break;
 138:Core/Src/menu.cpp ****     }
 139:Core/Src/menu.cpp **** }
 648              		.loc 1 139 1 is_stmt 0 view .LVU133
 649 004a 10BD     		pop	{r4, pc}
 650              	.LVL41:
 651              	.L33:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 652              		.loc 1 129 5 is_stmt 1 view .LVU134
 130:Core/Src/menu.cpp ****         break;
 653              		.loc 1 130 9 view .LVU135
 130:Core/Src/menu.cpp ****         break;
 654              		.loc 1 130 20 is_stmt 0 view .LVU136
 655 004c E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 130:Core/Src/menu.cpp ****         break;
 656              		.loc 1 130 18 view .LVU137
 657 004e A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 658 0050 5340     		eors	r3, r3, r2
 659 0052 A373     		strb	r3, [r4, #14]
 131:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 660              		.loc 1 131 9 is_stmt 1 view .LVU138
 661 0054 F9E7     		b	.L28
 662              	.L31:
 132:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 663              		.loc 1 132 5 view .LVU139
 133:Core/Src/menu.cpp ****         break;
 664              		.loc 1 133 9 view .LVU140
 133:Core/Src/menu.cpp ****         break;
 665              		.loc 1 133 20 is_stmt 0 view .LVU141
 666 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 133:Core/Src/menu.cpp ****         break;
 667              		.loc 1 133 18 view .LVU142
 668 0058 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 669 005a 5340     		eors	r3, r3, r2
 670 005c A373     		strb	r3, [r4, #14]
 134:Core/Src/menu.cpp **** 
 671              		.loc 1 134 9 is_stmt 1 view .LVU143
ARM GAS  /tmp/ccy7BKMx.s 			page 17


 672              		.loc 1 139 1 is_stmt 0 view .LVU144
 673 005e F4E7     		b	.L28
 674              		.cfi_endproc
 675              	.LFE143:
 676              		.fnend
 678              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 679              		.align	1
 680              		.global	_ZN4menu9menu_menuEv
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	_ZN4menu9menu_menuEv:
 687              		.fnstart
 688              	.LVL42:
 689              	.LFB144:
 140:Core/Src/menu.cpp **** 
 141:Core/Src/menu.cpp **** void menu::menu_menu()
 142:Core/Src/menu.cpp **** {
 690              		.loc 1 142 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		.loc 1 142 1 is_stmt 0 view .LVU146
 695 0000 10B5     		push	{r4, lr}
 696              		.save {r4, lr}
 697              	.LCFI8:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 0446     		mov	r4, r0
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 702              		.loc 1 143 5 is_stmt 1 view .LVU147
 703              		.loc 1 143 28 is_stmt 0 view .LVU148
 704 0004 0069     		ldr	r0, [r0, #16]
 705              	.LVL43:
 706              		.loc 1 143 28 view .LVU149
 707 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 708              	.LVL44:
 709              		.loc 1 143 5 view .LVU150
 710 000a 10B9     		cbnz	r0, .L42
 711              	.L40:
 144:Core/Src/menu.cpp ****     {
 145:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 146:Core/Src/menu.cpp ****     }
 147:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 712              		.loc 1 147 5 is_stmt 1 view .LVU151
 713              		.loc 1 147 16 is_stmt 0 view .LVU152
 714 000c 0123     		movs	r3, #1
 715 000e 2370     		strb	r3, [r4]
 148:Core/Src/menu.cpp **** }
 716              		.loc 1 148 1 view .LVU153
 717 0010 10BD     		pop	{r4, pc}
 718              	.LVL45:
 719              	.L42:
 145:Core/Src/menu.cpp ****     }
 720              		.loc 1 145 9 is_stmt 1 view .LVU154
ARM GAS  /tmp/ccy7BKMx.s 			page 18


 145:Core/Src/menu.cpp ****     }
 721              		.loc 1 145 31 is_stmt 0 view .LVU155
 722 0012 2069     		ldr	r0, [r4, #16]
 723 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 724              	.LVL46:
 725 0018 F8E7     		b	.L40
 726              		.cfi_endproc
 727              	.LFE144:
 728              		.fnend
 730              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 731              		.align	1
 732              		.global	_ZN4menu9menu_backEv
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv4-sp-d16
 738              	_ZN4menu9menu_backEv:
 739              		.fnstart
 740              	.LVL47:
 741              	.LFB145:
 149:Core/Src/menu.cpp **** 
 150:Core/Src/menu.cpp **** void menu::menu_back()
 151:Core/Src/menu.cpp **** {
 742              		.loc 1 151 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		.loc 1 151 1 is_stmt 0 view .LVU157
 747 0000 10B5     		push	{r4, lr}
 748              		.save {r4, lr}
 749              	.LCFI9:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 4, -8
 752              		.cfi_offset 14, -4
 753 0002 0446     		mov	r4, r0
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 754              		.loc 1 152 5 is_stmt 1 view .LVU158
 755              		.loc 1 152 28 is_stmt 0 view .LVU159
 756 0004 0069     		ldr	r0, [r0, #16]
 757              	.LVL48:
 758              		.loc 1 152 28 view .LVU160
 759 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 760              	.LVL49:
 761              		.loc 1 152 5 view .LVU161
 762 000a 18B9     		cbnz	r0, .L46
 763              	.L44:
 153:Core/Src/menu.cpp ****     {
 154:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 155:Core/Src/menu.cpp ****     }
 156:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 764              		.loc 1 156 5 is_stmt 1 view .LVU162
 765              		.loc 1 156 36 is_stmt 0 view .LVU163
 766 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 767              		.loc 1 156 18 view .LVU164
 768 000e DB08     		lsrs	r3, r3, #3
 769              		.loc 1 156 16 view .LVU165
 770 0010 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccy7BKMx.s 			page 19


 157:Core/Src/menu.cpp **** }
 771              		.loc 1 157 1 view .LVU166
 772 0012 10BD     		pop	{r4, pc}
 773              	.LVL50:
 774              	.L46:
 154:Core/Src/menu.cpp ****     }
 775              		.loc 1 154 9 is_stmt 1 view .LVU167
 154:Core/Src/menu.cpp ****     }
 776              		.loc 1 154 31 is_stmt 0 view .LVU168
 777 0014 2069     		ldr	r0, [r4, #16]
 778 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 779              	.LVL51:
 780 001a F7E7     		b	.L44
 781              		.cfi_endproc
 782              	.LFE145:
 783              		.fnend
 785              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 786              		.align	1
 787              		.global	_ZN4menu9menu_prevEv
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 793              	_ZN4menu9menu_prevEv:
 794              		.fnstart
 795              	.LVL52:
 796              	.LFB146:
 158:Core/Src/menu.cpp **** 
 159:Core/Src/menu.cpp **** void menu::menu_prev()
 160:Core/Src/menu.cpp **** {
 797              		.loc 1 160 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		.loc 1 160 1 is_stmt 0 view .LVU170
 802 0000 10B5     		push	{r4, lr}
 803              		.save {r4, lr}
 804              	.LCFI10:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 808 0002 0446     		mov	r4, r0
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 809              		.loc 1 161 5 is_stmt 1 view .LVU171
 810              		.loc 1 161 28 is_stmt 0 view .LVU172
 811 0004 0069     		ldr	r0, [r0, #16]
 812              	.LVL53:
 813              		.loc 1 161 28 view .LVU173
 814 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 815              	.LVL54:
 816              		.loc 1 161 5 view .LVU174
 817 000a 88B9     		cbnz	r0, .L58
 818              	.L48:
 162:Core/Src/menu.cpp ****     {
 163:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 164:Core/Src/menu.cpp ****     }
 165:Core/Src/menu.cpp ****     switch (menu_value)
ARM GAS  /tmp/ccy7BKMx.s 			page 20


 819              		.loc 1 165 5 is_stmt 1 view .LVU175
 820              		.loc 1 165 13 is_stmt 0 view .LVU176
 821 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 822 000e 013B     		subs	r3, r3, #1
 823 0010 172B     		cmp	r3, #23
 824 0012 13D8     		bhi	.L47
 825 0014 DFE803F0 		tbb	[pc, r3]
 826              	.L51:
 827 0018 10       		.byte	(.L56-.L51)/2
 828 0019 13       		.byte	(.L55-.L51)/2
 829 001a 16       		.byte	(.L54-.L51)/2
 830 001b 12       		.byte	(.L47-.L51)/2
 831 001c 12       		.byte	(.L47-.L51)/2
 832 001d 12       		.byte	(.L47-.L51)/2
 833 001e 12       		.byte	(.L47-.L51)/2
 834 001f 19       		.byte	(.L53-.L51)/2
 835 0020 12       		.byte	(.L47-.L51)/2
 836 0021 12       		.byte	(.L47-.L51)/2
 837 0022 12       		.byte	(.L47-.L51)/2
 838 0023 12       		.byte	(.L47-.L51)/2
 839 0024 12       		.byte	(.L47-.L51)/2
 840 0025 12       		.byte	(.L47-.L51)/2
 841 0026 12       		.byte	(.L47-.L51)/2
 842 0027 1E       		.byte	(.L52-.L51)/2
 843 0028 12       		.byte	(.L47-.L51)/2
 844 0029 12       		.byte	(.L47-.L51)/2
 845 002a 12       		.byte	(.L47-.L51)/2
 846 002b 12       		.byte	(.L47-.L51)/2
 847 002c 12       		.byte	(.L47-.L51)/2
 848 002d 12       		.byte	(.L47-.L51)/2
 849 002e 12       		.byte	(.L47-.L51)/2
 850 002f 23       		.byte	(.L50-.L51)/2
 851              		.p2align 1
 852              	.L58:
 163:Core/Src/menu.cpp ****     }
 853              		.loc 1 163 9 is_stmt 1 view .LVU177
 163:Core/Src/menu.cpp ****     }
 854              		.loc 1 163 31 is_stmt 0 view .LVU178
 855 0030 2069     		ldr	r0, [r4, #16]
 856 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 857              	.LVL55:
 858 0036 E9E7     		b	.L48
 859              	.L56:
 166:Core/Src/menu.cpp ****     {
 167:Core/Src/menu.cpp ****     case MENU_HOME:
 168:Core/Src/menu.cpp ****         break;
 169:Core/Src/menu.cpp ****     case MENU_CH:
 860              		.loc 1 169 5 is_stmt 1 view .LVU179
 170:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 861              		.loc 1 170 9 view .LVU180
 862              		.loc 1 170 19 is_stmt 0 view .LVU181
 863 0038 0323     		movs	r3, #3
 864 003a 2370     		strb	r3, [r4]
 171:Core/Src/menu.cpp ****         break;
 865              		.loc 1 171 9 is_stmt 1 view .LVU182
 866              	.L47:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
ARM GAS  /tmp/ccy7BKMx.s 			page 21


 173:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 174:Core/Src/menu.cpp ****         break;
 175:Core/Src/menu.cpp ****     case MENU_TMO:
 176:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 177:Core/Src/menu.cpp ****         break;
 178:Core/Src/menu.cpp ****     case MENU_CH_IN:
 179:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 180:Core/Src/menu.cpp ****         break;
 181:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 182:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 183:Core/Src/menu.cpp ****         break;
 184:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 185:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 186:Core/Src/menu.cpp ****         break;
 187:Core/Src/menu.cpp **** 
 188:Core/Src/menu.cpp ****     default:
 189:Core/Src/menu.cpp ****         break;
 190:Core/Src/menu.cpp ****     }
 191:Core/Src/menu.cpp **** }
 867              		.loc 1 191 1 is_stmt 0 view .LVU183
 868 003c 10BD     		pop	{r4, pc}
 869              	.LVL56:
 870              	.L55:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
 871              		.loc 1 172 5 is_stmt 1 view .LVU184
 173:Core/Src/menu.cpp ****         break;
 872              		.loc 1 173 9 view .LVU185
 173:Core/Src/menu.cpp ****         break;
 873              		.loc 1 173 19 is_stmt 0 view .LVU186
 874 003e 0123     		movs	r3, #1
 875 0040 2370     		strb	r3, [r4]
 174:Core/Src/menu.cpp ****     case MENU_TMO:
 876              		.loc 1 174 9 is_stmt 1 view .LVU187
 877 0042 FBE7     		b	.L47
 878              	.L54:
 175:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 879              		.loc 1 175 5 view .LVU188
 176:Core/Src/menu.cpp ****         break;
 880              		.loc 1 176 9 view .LVU189
 176:Core/Src/menu.cpp ****         break;
 881              		.loc 1 176 19 is_stmt 0 view .LVU190
 882 0044 0223     		movs	r3, #2
 883 0046 2370     		strb	r3, [r4]
 177:Core/Src/menu.cpp ****     case MENU_CH_IN:
 884              		.loc 1 177 9 is_stmt 1 view .LVU191
 885 0048 F8E7     		b	.L47
 886              	.L53:
 178:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 887              		.loc 1 178 5 view .LVU192
 179:Core/Src/menu.cpp ****         break;
 888              		.loc 1 179 9 view .LVU193
 179:Core/Src/menu.cpp ****         break;
 889              		.loc 1 179 20 is_stmt 0 view .LVU194
 890 004a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 179:Core/Src/menu.cpp ****         break;
 891              		.loc 1 179 18 view .LVU195
 892 004c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccy7BKMx.s 			page 22


 893 004e 5340     		eors	r3, r3, r2
 894 0050 A373     		strb	r3, [r4, #14]
 180:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 895              		.loc 1 180 9 is_stmt 1 view .LVU196
 896 0052 F3E7     		b	.L47
 897              	.L52:
 181:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 898              		.loc 1 181 5 view .LVU197
 182:Core/Src/menu.cpp ****         break;
 899              		.loc 1 182 9 view .LVU198
 182:Core/Src/menu.cpp ****         break;
 900              		.loc 1 182 20 is_stmt 0 view .LVU199
 901 0054 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 182:Core/Src/menu.cpp ****         break;
 902              		.loc 1 182 18 view .LVU200
 903 0056 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 904 0058 5340     		eors	r3, r3, r2
 905 005a A373     		strb	r3, [r4, #14]
 183:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 906              		.loc 1 183 9 is_stmt 1 view .LVU201
 907 005c EEE7     		b	.L47
 908              	.L50:
 184:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 909              		.loc 1 184 5 view .LVU202
 185:Core/Src/menu.cpp ****         break;
 910              		.loc 1 185 9 view .LVU203
 185:Core/Src/menu.cpp ****         break;
 911              		.loc 1 185 20 is_stmt 0 view .LVU204
 912 005e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 185:Core/Src/menu.cpp ****         break;
 913              		.loc 1 185 18 view .LVU205
 914 0060 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 915 0062 5340     		eors	r3, r3, r2
 916 0064 A373     		strb	r3, [r4, #14]
 186:Core/Src/menu.cpp **** 
 917              		.loc 1 186 9 is_stmt 1 view .LVU206
 918              		.loc 1 191 1 is_stmt 0 view .LVU207
 919 0066 E9E7     		b	.L47
 920              		.cfi_endproc
 921              	.LFE146:
 922              		.fnend
 924              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 925              		.align	1
 926              		.global	_ZN4menu11menu_numberEc
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN4menu11menu_numberEc:
 933              		.fnstart
 934              	.LVL57:
 935              	.LFB147:
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 193:Core/Src/menu.cpp **** {
 936              		.loc 1 193 1 is_stmt 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccy7BKMx.s 			page 23


 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		.loc 1 193 1 is_stmt 0 view .LVU209
 941 0000 38B5     		push	{r3, r4, r5, lr}
 942              		.save {r3, r4, r5, lr}
 943              	.LCFI11:
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 3, -16
 946              		.cfi_offset 4, -12
 947              		.cfi_offset 5, -8
 948              		.cfi_offset 14, -4
 949 0002 0446     		mov	r4, r0
 950 0004 0D46     		mov	r5, r1
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 951              		.loc 1 194 5 is_stmt 1 view .LVU210
 952              		.loc 1 194 28 is_stmt 0 view .LVU211
 953 0006 0069     		ldr	r0, [r0, #16]
 954              	.LVL58:
 955              		.loc 1 194 28 view .LVU212
 956 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 957              	.LVL59:
 958              		.loc 1 194 5 view .LVU213
 959 000c 48B9     		cbnz	r0, .L65
 960              	.L60:
 195:Core/Src/menu.cpp ****     {
 196:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 197:Core/Src/menu.cpp ****     }
 198:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 961              		.loc 1 198 5 is_stmt 1 view .LVU214
 962              		.loc 1 198 8 is_stmt 0 view .LVU215
 963 000e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 964              		.loc 1 198 5 view .LVU216
 965 0010 33B1     		cbz	r3, .L59
 199:Core/Src/menu.cpp ****     {
 200:Core/Src/menu.cpp ****         switch (menu_value)
 966              		.loc 1 200 9 is_stmt 1 view .LVU217
 967              		.loc 1 200 17 is_stmt 0 view .LVU218
 968 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 969              		.loc 1 200 9 view .LVU219
 970 0014 102A     		cmp	r2, #16
 971 0016 0ED0     		beq	.L62
 972 0018 182A     		cmp	r2, #24
 973 001a 12D0     		beq	.L63
 974 001c 082A     		cmp	r2, #8
 975 001e 04D0     		beq	.L66
 976              	.L59:
 201:Core/Src/menu.cpp ****         {
 202:Core/Src/menu.cpp ****         case MENU_CH_IN:
 203:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 205:Core/Src/menu.cpp ****             break;
 206:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 207:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 209:Core/Src/menu.cpp ****             break;
 210:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 211:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
ARM GAS  /tmp/ccy7BKMx.s 			page 24


 213:Core/Src/menu.cpp ****             break;
 214:Core/Src/menu.cpp **** 
 215:Core/Src/menu.cpp ****         default:
 216:Core/Src/menu.cpp ****             break;
 217:Core/Src/menu.cpp ****         }
 218:Core/Src/menu.cpp ****     }
 219:Core/Src/menu.cpp **** }
 977              		.loc 1 219 1 view .LVU220
 978 0020 38BD     		pop	{r3, r4, r5, pc}
 979              	.LVL60:
 980              	.L65:
 196:Core/Src/menu.cpp ****     }
 981              		.loc 1 196 9 is_stmt 1 view .LVU221
 196:Core/Src/menu.cpp ****     }
 982              		.loc 1 196 31 is_stmt 0 view .LVU222
 983 0022 2069     		ldr	r0, [r4, #16]
 984 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 985              	.LVL61:
 986 0028 F1E7     		b	.L60
 987              	.L66:
 202:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 988              		.loc 1 202 9 is_stmt 1 view .LVU223
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 989              		.loc 1 203 13 view .LVU224
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 990              		.loc 1 203 16 is_stmt 0 view .LVU225
 991 002a A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 992              		.loc 1 203 26 view .LVU226
 993 002c A118     		adds	r1, r4, r2
 994 002e 4D71     		strb	r5, [r1, #5]
 204:Core/Src/menu.cpp ****             break;
 995              		.loc 1 204 13 is_stmt 1 view .LVU227
 204:Core/Src/menu.cpp ****             break;
 996              		.loc 1 204 22 is_stmt 0 view .LVU228
 997 0030 5340     		eors	r3, r3, r2
 998 0032 A373     		strb	r3, [r4, #14]
 205:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 999              		.loc 1 205 13 is_stmt 1 view .LVU229
 1000 0034 F4E7     		b	.L59
 1001              	.L62:
 206:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1002              		.loc 1 206 9 view .LVU230
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1003              		.loc 1 207 13 view .LVU231
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1004              		.loc 1 207 16 is_stmt 0 view .LVU232
 1005 0036 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1006              		.loc 1 207 26 view .LVU233
 1007 0038 A118     		adds	r1, r4, r2
 1008 003a 8D70     		strb	r5, [r1, #2]
 208:Core/Src/menu.cpp ****             break;
 1009              		.loc 1 208 13 is_stmt 1 view .LVU234
 208:Core/Src/menu.cpp ****             break;
 1010              		.loc 1 208 22 is_stmt 0 view .LVU235
 1011 003c 5340     		eors	r3, r3, r2
ARM GAS  /tmp/ccy7BKMx.s 			page 25


 1012 003e A373     		strb	r3, [r4, #14]
 209:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1013              		.loc 1 209 13 is_stmt 1 view .LVU236
 1014 0040 EEE7     		b	.L59
 1015              	.L63:
 210:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1016              		.loc 1 210 9 view .LVU237
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1017              		.loc 1 211 13 view .LVU238
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1018              		.loc 1 211 17 is_stmt 0 view .LVU239
 1019 0042 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1020              		.loc 1 211 27 view .LVU240
 1021 0044 A118     		adds	r1, r4, r2
 1022 0046 CD72     		strb	r5, [r1, #11]
 212:Core/Src/menu.cpp ****             break;
 1023              		.loc 1 212 13 is_stmt 1 view .LVU241
 212:Core/Src/menu.cpp ****             break;
 1024              		.loc 1 212 22 is_stmt 0 view .LVU242
 1025 0048 5340     		eors	r3, r3, r2
 1026 004a A373     		strb	r3, [r4, #14]
 213:Core/Src/menu.cpp **** 
 1027              		.loc 1 213 13 is_stmt 1 view .LVU243
 1028              		.loc 1 219 1 is_stmt 0 view .LVU244
 1029 004c E8E7     		b	.L59
 1030              		.cfi_endproc
 1031              	.LFE147:
 1032              		.fnend
 1034              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1035              		.align	1
 1036              		.global	_ZN4menu13keyboard_pollEv
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	_ZN4menu13keyboard_pollEv:
 1043              		.fnstart
 1044              	.LVL62:
 1045              	.LFB148:
 220:Core/Src/menu.cpp **** 
 221:Core/Src/menu.cpp **** 
 222:Core/Src/menu.cpp **** void menu::keyboard_poll()
 223:Core/Src/menu.cpp **** {
 1046              		.loc 1 223 1 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		.loc 1 223 1 is_stmt 0 view .LVU246
 1051 0000 10B5     		push	{r4, lr}
 1052              		.save {r4, lr}
 1053              	.LCFI12:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 4, -8
 1056              		.cfi_offset 14, -4
 1057 0002 0446     		mov	r4, r0
 224:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
ARM GAS  /tmp/ccy7BKMx.s 			page 26


 1058              		.loc 1 224 5 is_stmt 1 view .LVU247
 1059              	.LVL63:
 225:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 226:Core/Src/menu.cpp **** 
 227:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1060              		.loc 1 227 5 view .LVU248
 1061              		.loc 1 227 15 is_stmt 0 view .LVU249
 1062 0004 534B     		ldr	r3, .L89
 1063 0006 5A69     		ldr	r2, [r3, #20]
 1064 0008 42F40062 		orr	r2, r2, #2048
 1065 000c 5A61     		str	r2, [r3, #20]
 228:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 229:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1066              		.loc 1 229 5 is_stmt 1 view .LVU250
 1067              		.loc 1 229 20 is_stmt 0 view .LVU251
 1068 000e 1B69     		ldr	r3, [r3, #16]
 1069              		.loc 1 229 23 view .LVU252
 1070 0010 03F40743 		and	r3, r3, #34560
 1071              		.loc 1 229 5 view .LVU253
 1072 0014 B3F5806F 		cmp	r3, #1024
 1073 0018 2AD0     		beq	.L68
 1074 001a 09D8     		bhi	.L69
 1075 001c B3F5807F 		cmp	r3, #256
 1076 0020 2AD0     		beq	.L70
 1077 0022 B3F5007F 		cmp	r3, #512
 1078 0026 08D1     		bne	.L72
 230:Core/Src/menu.cpp ****     {
 231:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 232:Core/Src/menu.cpp ****             menu_next();//R
 233:Core/Src/menu.cpp ****             break;
 234:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 235:Core/Src/menu.cpp ****             menu_number('6');
 236:Core/Src/menu.cpp ****             break;
 237:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1079              		.loc 1 237 9 is_stmt 1 view .LVU254
 238:Core/Src/menu.cpp ****             menu_number('5');
 1080              		.loc 1 238 13 view .LVU255
 1081              		.loc 1 238 24 is_stmt 0 view .LVU256
 1082 0028 3521     		movs	r1, #53
 1083 002a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1084              	.LVL64:
 239:Core/Src/menu.cpp ****             break;
 1085              		.loc 1 239 13 is_stmt 1 view .LVU257
 1086 002e 04E0     		b	.L72
 1087              	.LVL65:
 1088              	.L69:
 229:Core/Src/menu.cpp ****     {
 1089              		.loc 1 229 5 is_stmt 0 view .LVU258
 1090 0030 B3F5004F 		cmp	r3, #32768
 1091 0034 01D1     		bne	.L72
 231:Core/Src/menu.cpp ****             menu_next();//R
 1092              		.loc 1 231 9 is_stmt 1 view .LVU259
 232:Core/Src/menu.cpp ****             break;
 1093              		.loc 1 232 13 view .LVU260
 232:Core/Src/menu.cpp ****             break;
 1094              		.loc 1 232 22 is_stmt 0 view .LVU261
 1095 0036 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
ARM GAS  /tmp/ccy7BKMx.s 			page 27


 1096              	.LVL66:
 233:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1097              		.loc 1 233 13 is_stmt 1 view .LVU262
 1098              	.L72:
 240:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 241:Core/Src/menu.cpp ****             menu_number('4');
 242:Core/Src/menu.cpp ****             break;
 243:Core/Src/menu.cpp ****         default:
 244:Core/Src/menu.cpp ****             break;
 245:Core/Src/menu.cpp ****     }
 246:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1099              		.loc 1 246 5 view .LVU263
 1100              		.loc 1 246 15 is_stmt 0 view .LVU264
 1101 003a 464B     		ldr	r3, .L89
 1102 003c 5A69     		ldr	r2, [r3, #20]
 1103 003e 22F40062 		bic	r2, r2, #2048
 1104 0042 5A61     		str	r2, [r3, #20]
 247:Core/Src/menu.cpp **** 
 248:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 1105              		.loc 1 248 5 is_stmt 1 view .LVU265
 1106              	.LVL67:
 249:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1107              		.loc 1 249 5 view .LVU266
 1108              		.loc 1 249 15 is_stmt 0 view .LVU267
 1109 0044 5A69     		ldr	r2, [r3, #20]
 1110 0046 42F48052 		orr	r2, r2, #4096
 1111 004a 5A61     		str	r2, [r3, #20]
 250:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 251:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1112              		.loc 1 251 5 is_stmt 1 view .LVU268
 1113              		.loc 1 251 20 is_stmt 0 view .LVU269
 1114 004c 1B69     		ldr	r3, [r3, #16]
 1115              		.loc 1 251 23 view .LVU270
 1116 004e 03F40743 		and	r3, r3, #34560
 1117              		.loc 1 251 5 view .LVU271
 1118 0052 B3F5806F 		cmp	r3, #1024
 1119 0056 34D0     		beq	.L73
 1120 0058 12D8     		bhi	.L74
 1121 005a B3F5807F 		cmp	r3, #256
 1122 005e 35D0     		beq	.L75
 1123 0060 B3F5007F 		cmp	r3, #512
 1124 0064 12D1     		bne	.L77
 252:Core/Src/menu.cpp ****     {
 253:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 254:Core/Src/menu.cpp ****             menu_prev();//L
 255:Core/Src/menu.cpp ****             break;
 256:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 257:Core/Src/menu.cpp ****             menu_number('8');
 258:Core/Src/menu.cpp ****             break;
 259:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1125              		.loc 1 259 9 is_stmt 1 view .LVU272
 260:Core/Src/menu.cpp ****             menu_number('7');
 1126              		.loc 1 260 13 view .LVU273
 1127              		.loc 1 260 24 is_stmt 0 view .LVU274
 1128 0066 3721     		movs	r1, #55
 1129 0068 2046     		mov	r0, r4
 1130 006a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
ARM GAS  /tmp/ccy7BKMx.s 			page 28


 1131              	.LVL68:
 261:Core/Src/menu.cpp ****             break;
 1132              		.loc 1 261 13 is_stmt 1 view .LVU275
 1133 006e 0DE0     		b	.L77
 1134              	.LVL69:
 1135              	.L68:
 234:Core/Src/menu.cpp ****             menu_number('6');
 1136              		.loc 1 234 9 view .LVU276
 235:Core/Src/menu.cpp ****             break;
 1137              		.loc 1 235 13 view .LVU277
 235:Core/Src/menu.cpp ****             break;
 1138              		.loc 1 235 24 is_stmt 0 view .LVU278
 1139 0070 3621     		movs	r1, #54
 1140 0072 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1141              	.LVL70:
 236:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1142              		.loc 1 236 13 is_stmt 1 view .LVU279
 1143 0076 E0E7     		b	.L72
 1144              	.LVL71:
 1145              	.L70:
 240:Core/Src/menu.cpp ****             menu_number('4');
 1146              		.loc 1 240 9 view .LVU280
 241:Core/Src/menu.cpp ****             break;
 1147              		.loc 1 241 13 view .LVU281
 241:Core/Src/menu.cpp ****             break;
 1148              		.loc 1 241 24 is_stmt 0 view .LVU282
 1149 0078 3421     		movs	r1, #52
 1150 007a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1151              	.LVL72:
 242:Core/Src/menu.cpp ****         default:
 1152              		.loc 1 242 13 is_stmt 1 view .LVU283
 1153 007e DCE7     		b	.L72
 1154              	.LVL73:
 1155              	.L74:
 251:Core/Src/menu.cpp ****     {
 1156              		.loc 1 251 5 is_stmt 0 view .LVU284
 1157 0080 B3F5004F 		cmp	r3, #32768
 1158 0084 02D1     		bne	.L77
 253:Core/Src/menu.cpp ****             menu_prev();//L
 1159              		.loc 1 253 9 is_stmt 1 view .LVU285
 254:Core/Src/menu.cpp ****             break;
 1160              		.loc 1 254 13 view .LVU286
 254:Core/Src/menu.cpp ****             break;
 1161              		.loc 1 254 22 is_stmt 0 view .LVU287
 1162 0086 2046     		mov	r0, r4
 1163 0088 FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1164              	.LVL74:
 255:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1165              		.loc 1 255 13 is_stmt 1 view .LVU288
 1166              	.L77:
 262:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 263:Core/Src/menu.cpp ****             menu_number('9');
 264:Core/Src/menu.cpp ****             break;
 265:Core/Src/menu.cpp ****         default:
 266:Core/Src/menu.cpp ****             break;
 267:Core/Src/menu.cpp **** 
 268:Core/Src/menu.cpp ****     }
ARM GAS  /tmp/ccy7BKMx.s 			page 29


 269:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1167              		.loc 1 269 5 view .LVU289
 1168              		.loc 1 269 15 is_stmt 0 view .LVU290
 1169 008c 314B     		ldr	r3, .L89
 1170 008e 5A69     		ldr	r2, [r3, #20]
 1171 0090 22F48052 		bic	r2, r2, #4096
 1172 0094 5A61     		str	r2, [r3, #20]
 270:Core/Src/menu.cpp **** 
 271:Core/Src/menu.cpp **** 
 272:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 1173              		.loc 1 272 5 is_stmt 1 view .LVU291
 1174              	.LVL75:
 273:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1175              		.loc 1 273 5 view .LVU292
 1176              		.loc 1 273 15 is_stmt 0 view .LVU293
 1177 0096 5A69     		ldr	r2, [r3, #20]
 1178 0098 42F40052 		orr	r2, r2, #8192
 1179 009c 5A61     		str	r2, [r3, #20]
 274:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 275:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1180              		.loc 1 275 5 is_stmt 1 view .LVU294
 1181              		.loc 1 275 20 is_stmt 0 view .LVU295
 1182 009e 1B69     		ldr	r3, [r3, #16]
 1183              		.loc 1 275 23 view .LVU296
 1184 00a0 03F40743 		and	r3, r3, #34560
 1185              		.loc 1 275 5 view .LVU297
 1186 00a4 B3F5806F 		cmp	r3, #1024
 1187 00a8 36D0     		beq	.L78
 1188 00aa 14D8     		bhi	.L79
 1189 00ac B3F5807F 		cmp	r3, #256
 1190 00b0 36D0     		beq	.L80
 1191 00b2 B3F5007F 		cmp	r3, #512
 1192 00b6 14D1     		bne	.L82
 276:Core/Src/menu.cpp ****     {
 277:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 278:Core/Src/menu.cpp ****             menu_down();//D
 279:Core/Src/menu.cpp ****             break;
 280:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 281:Core/Src/menu.cpp ****             menu_menu();//M
 282:Core/Src/menu.cpp ****             break;
 283:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1193              		.loc 1 283 9 is_stmt 1 view .LVU298
 284:Core/Src/menu.cpp ****             menu_number('0');
 1194              		.loc 1 284 13 view .LVU299
 1195              		.loc 1 284 24 is_stmt 0 view .LVU300
 1196 00b8 3021     		movs	r1, #48
 1197 00ba 2046     		mov	r0, r4
 1198 00bc FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1199              	.LVL76:
 285:Core/Src/menu.cpp ****             break;
 1200              		.loc 1 285 13 is_stmt 1 view .LVU301
 1201 00c0 0FE0     		b	.L82
 1202              	.LVL77:
 1203              	.L73:
 256:Core/Src/menu.cpp ****             menu_number('8');
 1204              		.loc 1 256 9 view .LVU302
 257:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/ccy7BKMx.s 			page 30


 1205              		.loc 1 257 13 view .LVU303
 257:Core/Src/menu.cpp ****             break;
 1206              		.loc 1 257 24 is_stmt 0 view .LVU304
 1207 00c2 3821     		movs	r1, #56
 1208 00c4 2046     		mov	r0, r4
 1209 00c6 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1210              	.LVL78:
 258:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1211              		.loc 1 258 13 is_stmt 1 view .LVU305
 1212 00ca DFE7     		b	.L77
 1213              	.L75:
 262:Core/Src/menu.cpp ****             menu_number('9');
 1214              		.loc 1 262 9 view .LVU306
 263:Core/Src/menu.cpp ****             break;
 1215              		.loc 1 263 13 view .LVU307
 263:Core/Src/menu.cpp ****             break;
 1216              		.loc 1 263 24 is_stmt 0 view .LVU308
 1217 00cc 3921     		movs	r1, #57
 1218 00ce 2046     		mov	r0, r4
 1219 00d0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1220              	.LVL79:
 264:Core/Src/menu.cpp ****         default:
 1221              		.loc 1 264 13 is_stmt 1 view .LVU309
 1222 00d4 DAE7     		b	.L77
 1223              	.LVL80:
 1224              	.L79:
 275:Core/Src/menu.cpp ****     {
 1225              		.loc 1 275 5 is_stmt 0 view .LVU310
 1226 00d6 B3F5004F 		cmp	r3, #32768
 1227 00da 02D1     		bne	.L82
 277:Core/Src/menu.cpp ****             menu_down();//D
 1228              		.loc 1 277 9 is_stmt 1 view .LVU311
 278:Core/Src/menu.cpp ****             break;
 1229              		.loc 1 278 13 view .LVU312
 278:Core/Src/menu.cpp ****             break;
 1230              		.loc 1 278 22 is_stmt 0 view .LVU313
 1231 00dc 2046     		mov	r0, r4
 1232 00de FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1233              	.LVL81:
 279:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1234              		.loc 1 279 13 is_stmt 1 view .LVU314
 1235              	.L82:
 286:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 287:Core/Src/menu.cpp ****             menu_back();//B
 288:Core/Src/menu.cpp ****             break;
 289:Core/Src/menu.cpp ****         default:
 290:Core/Src/menu.cpp ****             break;
 291:Core/Src/menu.cpp **** 
 292:Core/Src/menu.cpp ****     }
 293:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1236              		.loc 1 293 5 view .LVU315
 1237              		.loc 1 293 15 is_stmt 0 view .LVU316
 1238 00e2 1C4B     		ldr	r3, .L89
 1239 00e4 5A69     		ldr	r2, [r3, #20]
 1240 00e6 22F40052 		bic	r2, r2, #8192
 1241 00ea 5A61     		str	r2, [r3, #20]
 294:Core/Src/menu.cpp **** 
ARM GAS  /tmp/ccy7BKMx.s 			page 31


 295:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 1242              		.loc 1 295 5 is_stmt 1 view .LVU317
 1243              	.LVL82:
 296:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1244              		.loc 1 296 5 view .LVU318
 1245              		.loc 1 296 15 is_stmt 0 view .LVU319
 1246 00ec 5A69     		ldr	r2, [r3, #20]
 1247 00ee 42F48042 		orr	r2, r2, #16384
 1248 00f2 5A61     		str	r2, [r3, #20]
 297:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 298:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1249              		.loc 1 298 5 is_stmt 1 view .LVU320
 1250              		.loc 1 298 20 is_stmt 0 view .LVU321
 1251 00f4 1B69     		ldr	r3, [r3, #16]
 1252              		.loc 1 298 23 view .LVU322
 1253 00f6 03F40743 		and	r3, r3, #34560
 1254              		.loc 1 298 5 view .LVU323
 1255 00fa B3F5806F 		cmp	r3, #1024
 1256 00fe 1FD0     		beq	.L83
 1257 0100 12D8     		bhi	.L84
 1258 0102 B3F5807F 		cmp	r3, #256
 1259 0106 20D0     		beq	.L85
 1260 0108 B3F5007F 		cmp	r3, #512
 1261 010c 12D1     		bne	.L87
 299:Core/Src/menu.cpp ****     {
 300:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 301:Core/Src/menu.cpp ****             menu_up();//U
 302:Core/Src/menu.cpp ****             break;
 303:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 304:Core/Src/menu.cpp ****             menu_number('3');
 305:Core/Src/menu.cpp ****             break;
 306:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1262              		.loc 1 306 9 is_stmt 1 view .LVU324
 307:Core/Src/menu.cpp ****             menu_number('2');
 1263              		.loc 1 307 13 view .LVU325
 1264              		.loc 1 307 24 is_stmt 0 view .LVU326
 1265 010e 3221     		movs	r1, #50
 1266 0110 2046     		mov	r0, r4
 1267 0112 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1268              	.LVL83:
 308:Core/Src/menu.cpp ****             break;
 1269              		.loc 1 308 13 is_stmt 1 view .LVU327
 1270 0116 0DE0     		b	.L87
 1271              	.LVL84:
 1272              	.L78:
 280:Core/Src/menu.cpp ****             menu_menu();//M
 1273              		.loc 1 280 9 view .LVU328
 281:Core/Src/menu.cpp ****             break;
 1274              		.loc 1 281 13 view .LVU329
 281:Core/Src/menu.cpp ****             break;
 1275              		.loc 1 281 22 is_stmt 0 view .LVU330
 1276 0118 2046     		mov	r0, r4
 1277 011a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1278              	.LVL85:
 282:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1279              		.loc 1 282 13 is_stmt 1 view .LVU331
 1280 011e E0E7     		b	.L82
ARM GAS  /tmp/ccy7BKMx.s 			page 32


 1281              	.L80:
 286:Core/Src/menu.cpp ****             menu_back();//B
 1282              		.loc 1 286 9 view .LVU332
 287:Core/Src/menu.cpp ****             break;
 1283              		.loc 1 287 13 view .LVU333
 287:Core/Src/menu.cpp ****             break;
 1284              		.loc 1 287 22 is_stmt 0 view .LVU334
 1285 0120 2046     		mov	r0, r4
 1286 0122 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1287              	.LVL86:
 288:Core/Src/menu.cpp ****         default:
 1288              		.loc 1 288 13 is_stmt 1 view .LVU335
 1289 0126 DCE7     		b	.L82
 1290              	.LVL87:
 1291              	.L84:
 298:Core/Src/menu.cpp ****     {
 1292              		.loc 1 298 5 is_stmt 0 view .LVU336
 1293 0128 B3F5004F 		cmp	r3, #32768
 1294 012c 02D1     		bne	.L87
 300:Core/Src/menu.cpp ****             menu_up();//U
 1295              		.loc 1 300 9 is_stmt 1 view .LVU337
 301:Core/Src/menu.cpp ****             break;
 1296              		.loc 1 301 13 view .LVU338
 301:Core/Src/menu.cpp ****             break;
 1297              		.loc 1 301 20 is_stmt 0 view .LVU339
 1298 012e 2046     		mov	r0, r4
 1299 0130 FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1300              	.LVL88:
 302:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1301              		.loc 1 302 13 is_stmt 1 view .LVU340
 1302              	.L87:
 309:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 310:Core/Src/menu.cpp ****             menu_number('1');
 311:Core/Src/menu.cpp ****             break;
 312:Core/Src/menu.cpp ****         default:
 313:Core/Src/menu.cpp ****             break;
 314:Core/Src/menu.cpp **** 
 315:Core/Src/menu.cpp ****     }
 316:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1303              		.loc 1 316 5 view .LVU341
 1304              		.loc 1 316 15 is_stmt 0 view .LVU342
 1305 0134 074A     		ldr	r2, .L89
 1306 0136 5369     		ldr	r3, [r2, #20]
 1307 0138 23F48043 		bic	r3, r3, #16384
 1308 013c 5361     		str	r3, [r2, #20]
 317:Core/Src/menu.cpp **** 
 318:Core/Src/menu.cpp **** }
 1309              		.loc 1 318 1 view .LVU343
 1310 013e 10BD     		pop	{r4, pc}
 1311              	.LVL89:
 1312              	.L83:
 303:Core/Src/menu.cpp ****             menu_number('3');
 1313              		.loc 1 303 9 is_stmt 1 view .LVU344
 304:Core/Src/menu.cpp ****             break;
 1314              		.loc 1 304 13 view .LVU345
 304:Core/Src/menu.cpp ****             break;
 1315              		.loc 1 304 24 is_stmt 0 view .LVU346
ARM GAS  /tmp/ccy7BKMx.s 			page 33


 1316 0140 3321     		movs	r1, #51
 1317 0142 2046     		mov	r0, r4
 1318 0144 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1319              	.LVL90:
 305:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1320              		.loc 1 305 13 is_stmt 1 view .LVU347
 1321 0148 F4E7     		b	.L87
 1322              	.L85:
 309:Core/Src/menu.cpp ****             menu_number('1');
 1323              		.loc 1 309 9 view .LVU348
 310:Core/Src/menu.cpp ****             break;
 1324              		.loc 1 310 13 view .LVU349
 310:Core/Src/menu.cpp ****             break;
 1325              		.loc 1 310 24 is_stmt 0 view .LVU350
 1326 014a 3121     		movs	r1, #49
 1327 014c 2046     		mov	r0, r4
 1328 014e FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1329              	.LVL91:
 311:Core/Src/menu.cpp ****         default:
 1330              		.loc 1 311 13 is_stmt 1 view .LVU351
 1331 0152 EFE7     		b	.L87
 1332              	.L90:
 1333              		.align	2
 1334              	.L89:
 1335 0154 000C0240 		.word	1073875968
 1336              		.cfi_endproc
 1337              	.LFE148:
 1338              		.fnend
 1340              		.text
 1341              	.Letext0:
 1342              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1343              		.file 3 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1344              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1345              		.file 5 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1346              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1347              		.file 7 "/usr/include/newlib/sys/_types.h"
 1348              		.file 8 "/usr/include/newlib/sys/reent.h"
 1349              		.file 9 "/usr/include/newlib/sys/lock.h"
 1350              		.file 10 "/usr/include/newlib/stdlib.h"
 1351              		.file 11 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1352              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1353              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1354              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1355              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1356              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1357              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1358              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1359              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1360              		.file 20 "Core/Inc/fonts.h"
 1361              		.file 21 "Core/Inc/oled.h"
 1362              		.file 22 "Core/Inc/menu.hpp"
 1363              		.file 23 "<built-in>"
 1364              		.file 24 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccy7BKMx.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
     /tmp/ccy7BKMx.s:18     .text._ZN4menuC2EP4oled:0000000000000000 $t
     /tmp/ccy7BKMx.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC2EP4oled
.ARM.exidx.text._ZN4menuC2EP4oled:0000000000000000 $d
     /tmp/ccy7BKMx.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC1EP4oled
     /tmp/ccy7BKMx.s:67     .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/ccy7BKMx.s:92     .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:99     .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/ccy7BKMx.s:128    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/ccy7BKMx.s:355    .text._ZN4menu10menu_printEv:000000000000012c $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:370    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:377    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/ccy7BKMx.s:418    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/ccy7BKMx.s:442    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:550    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:557    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/ccy7BKMx.s:591    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/ccy7BKMx.s:615    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:679    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:686    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:731    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:738    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:786    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:793    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/ccy7BKMx.s:827    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/ccy7BKMx.s:851    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:925    .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/ccy7BKMx.s:932    .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/ccy7BKMx.s:1035   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/ccy7BKMx.s:1042   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/ccy7BKMx.s:1335   .text._ZN4menu13keyboard_pollEv:0000000000000154 $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/ccy7BKMx.s:153    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/ccy7BKMx.s:153    .text._ZN4menu10menu_printEv:000000000000002a $t

UNDEFINED SYMBOLS
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
_ZN4oled7oled_onEv
atoi
_ZN4menu9menu_downEv
_ZN4menu7menu_upEv
