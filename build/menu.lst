ARM GAS  /tmp/cc9L4PIe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z41__static_initialization_and_destruction_0ii:
  26              		.fnstart
  27              	.LVL0:
  28              	.LFB2476:
  29              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_, uart* uart_)
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
   6:Core/Src/menu.cpp ****     uart1=uart_;
   7:Core/Src/menu.cpp **** }
   8:Core/Src/menu.cpp **** 
   9:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
  10:Core/Src/menu.cpp **** {
  11:Core/Src/menu.cpp ****     char temp [20];
  12:Core/Src/menu.cpp **** 
  13:Core/Src/menu.cpp ****     switch (menu_value)
  14:Core/Src/menu.cpp ****     {
  15:Core/Src/menu.cpp ****         case MENU_HOME:
  16:Core/Src/menu.cpp ****             sprintf(temp, "C:%.2s SQ:%.2s", ch,sq);
  17:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  18:Core/Src/menu.cpp ****             break; 
  19:Core/Src/menu.cpp ****         case MENU_CH:
  20:Core/Src/menu.cpp ****             sprintf(temp, "CHAN   ");
  21:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  22:Core/Src/menu.cpp ****             break;
  23:Core/Src/menu.cpp ****         case MENU_SQ:
  24:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH  ");
  25:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  26:Core/Src/menu.cpp ****             break;
  27:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  28:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
  29:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
ARM GAS  /tmp/cc9L4PIe.s 			page 2


  30:Core/Src/menu.cpp ****             break;
  31:Core/Src/menu.cpp ****         case MENU_CH_IN:
  32:Core/Src/menu.cpp ****             sprintf(temp, " CH:%.2s  ",ch);
  33:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  34:Core/Src/menu.cpp ****             break;
  35:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  36:Core/Src/menu.cpp ****             sprintf(temp, " SQ:%.2s   ",sq);
  37:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  38:Core/Src/menu.cpp ****             break;
  39:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  40:Core/Src/menu.cpp ****             sprintf(temp, " DS:%.2s   ",tmo);
  41:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  42:Core/Src/menu.cpp ****             break;
  43:Core/Src/menu.cpp ****         default:
  44:Core/Src/menu.cpp ****             break;
  45:Core/Src/menu.cpp ****     }
  46:Core/Src/menu.cpp ****     oled1->oled_print("menu back", Font_11x18,0,46);   
  47:Core/Src/menu.cpp **** 
  48:Core/Src/menu.cpp **** }
  49:Core/Src/menu.cpp **** 
  50:Core/Src/menu.cpp **** void menu::menu_ok()
  51:Core/Src/menu.cpp **** {
  52:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
  53:Core/Src/menu.cpp ****     {
  54:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  55:Core/Src/menu.cpp ****     }
  56:Core/Src/menu.cpp ****     else
  57:Core/Src/menu.cpp ****     {
  58:Core/Src/menu.cpp ****         oled1->oled_on();
  59:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  60:Core/Src/menu.cpp ****     }
  61:Core/Src/menu.cpp **** 
  62:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
  63:Core/Src/menu.cpp ****     {
  64:Core/Src/menu.cpp ****     case MENU_HOME:
  65:Core/Src/menu.cpp ****         break;
  66:Core/Src/menu.cpp ****     case MENU_CH:
  67:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
  68:Core/Src/menu.cpp ****         break;
  69:Core/Src/menu.cpp ****     case MENU_SQ:
  70:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  71:Core/Src/menu.cpp ****         break;
  72:Core/Src/menu.cpp ****     case MENU_TMO:
  73:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
  74:Core/Src/menu.cpp ****         break;
  75:Core/Src/menu.cpp ****     case MENU_CH_IN:
  76:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  77:Core/Src/menu.cpp ****         if(!cursorOn)
  78:Core/Src/menu.cpp ****         {
  79:Core/Src/menu.cpp ****             chVal=atoi(ch);
  80:Core/Src/menu.cpp ****             cursorPos=0;
  81:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  82:Core/Src/menu.cpp ****         }
  83:Core/Src/menu.cpp ****         break;
  84:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  85:Core/Src/menu.cpp ****         cursorOn^=1;
  86:Core/Src/menu.cpp ****         if(!cursorOn)
ARM GAS  /tmp/cc9L4PIe.s 			page 3


  87:Core/Src/menu.cpp ****         {
  88:Core/Src/menu.cpp ****             chVal=atoi(sq);
  89:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  90:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  91:Core/Src/menu.cpp ****         }
  92:Core/Src/menu.cpp ****         break;
  93:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  94:Core/Src/menu.cpp ****         cursorOn%=1;
  95:Core/Src/menu.cpp ****         if(!cursorOn)
  96:Core/Src/menu.cpp ****         {
  97:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  98:Core/Src/menu.cpp ****             cursorPos=0;
  99:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 100:Core/Src/menu.cpp ****         }
 101:Core/Src/menu.cpp ****         break;
 102:Core/Src/menu.cpp **** 
 103:Core/Src/menu.cpp ****     default:
 104:Core/Src/menu.cpp ****         break;
 105:Core/Src/menu.cpp ****     }
 106:Core/Src/menu.cpp **** 
 107:Core/Src/menu.cpp ****     
 108:Core/Src/menu.cpp **** }
 109:Core/Src/menu.cpp **** 
 110:Core/Src/menu.cpp **** void menu::menu_next()
 111:Core/Src/menu.cpp **** {
 112:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 113:Core/Src/menu.cpp ****     {
 114:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 115:Core/Src/menu.cpp ****     }
 116:Core/Src/menu.cpp ****     switch (menu_value)
 117:Core/Src/menu.cpp ****     {
 118:Core/Src/menu.cpp ****     case MENU_HOME:
 119:Core/Src/menu.cpp ****         break;
 120:Core/Src/menu.cpp ****     case MENU_CH:
 121:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 122:Core/Src/menu.cpp ****         break;
 123:Core/Src/menu.cpp ****     case MENU_SQ:
 124:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 125:Core/Src/menu.cpp ****     case MENU_TMO:
 126:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 127:Core/Src/menu.cpp ****     case MENU_CH_IN:
 128:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 129:Core/Src/menu.cpp ****         break;
 130:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 131:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 132:Core/Src/menu.cpp ****         break;
 133:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 134:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 135:Core/Src/menu.cpp ****         break;
 136:Core/Src/menu.cpp **** 
 137:Core/Src/menu.cpp ****     default:
 138:Core/Src/menu.cpp ****         break;
 139:Core/Src/menu.cpp ****     }
 140:Core/Src/menu.cpp **** }
 141:Core/Src/menu.cpp **** 
 142:Core/Src/menu.cpp **** void menu::menu_menu()
 143:Core/Src/menu.cpp **** {
ARM GAS  /tmp/cc9L4PIe.s 			page 4


 144:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 145:Core/Src/menu.cpp ****     {
 146:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 147:Core/Src/menu.cpp ****     }
 148:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 149:Core/Src/menu.cpp **** }
 150:Core/Src/menu.cpp **** 
 151:Core/Src/menu.cpp **** void menu::menu_back()
 152:Core/Src/menu.cpp **** {
 153:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 154:Core/Src/menu.cpp ****     {
 155:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 156:Core/Src/menu.cpp ****     }
 157:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 158:Core/Src/menu.cpp **** }
 159:Core/Src/menu.cpp **** 
 160:Core/Src/menu.cpp **** void menu::menu_prev()
 161:Core/Src/menu.cpp **** {
 162:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 163:Core/Src/menu.cpp ****     {
 164:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 165:Core/Src/menu.cpp ****     }
 166:Core/Src/menu.cpp ****     switch (menu_value)
 167:Core/Src/menu.cpp ****     {
 168:Core/Src/menu.cpp ****     case MENU_HOME:
 169:Core/Src/menu.cpp ****         break;
 170:Core/Src/menu.cpp ****     case MENU_CH:
 171:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 172:Core/Src/menu.cpp ****         break;
 173:Core/Src/menu.cpp ****     case MENU_SQ:
 174:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 175:Core/Src/menu.cpp ****         break;
 176:Core/Src/menu.cpp ****     case MENU_TMO:
 177:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 178:Core/Src/menu.cpp ****         break;
 179:Core/Src/menu.cpp ****     case MENU_CH_IN:
 180:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 181:Core/Src/menu.cpp ****         break;
 182:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 183:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 184:Core/Src/menu.cpp ****         break;
 185:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 186:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 187:Core/Src/menu.cpp ****         break;
 188:Core/Src/menu.cpp **** 
 189:Core/Src/menu.cpp ****     default:
 190:Core/Src/menu.cpp ****         break;
 191:Core/Src/menu.cpp ****     }
 192:Core/Src/menu.cpp **** }
 193:Core/Src/menu.cpp **** void menu::menu_number(char num)
 194:Core/Src/menu.cpp **** {
 195:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 196:Core/Src/menu.cpp ****     {
 197:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 198:Core/Src/menu.cpp ****     }
 199:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 200:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc9L4PIe.s 			page 5


 201:Core/Src/menu.cpp ****         switch (menu_value)
 202:Core/Src/menu.cpp ****         {
 203:Core/Src/menu.cpp ****         case MENU_CH_IN:
 204:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 205:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 206:Core/Src/menu.cpp ****             break;
 207:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 208:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 210:Core/Src/menu.cpp ****             break;
 211:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 212:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 213:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 214:Core/Src/menu.cpp ****             break;
 215:Core/Src/menu.cpp **** 
 216:Core/Src/menu.cpp ****         default:
 217:Core/Src/menu.cpp ****             break;
 218:Core/Src/menu.cpp ****         }
 219:Core/Src/menu.cpp ****     }
 220:Core/Src/menu.cpp **** }
 221:Core/Src/menu.cpp **** void menu::menu_up()
 222:Core/Src/menu.cpp **** {
 223:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 224:Core/Src/menu.cpp ****     {
 225:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 226:Core/Src/menu.cpp ****     }
 227:Core/Src/menu.cpp ****     switch (menu_value)
 228:Core/Src/menu.cpp ****     {
 229:Core/Src/menu.cpp ****     case MENU_CH_IN:
 230:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 231:Core/Src/menu.cpp ****         {
 232:Core/Src/menu.cpp ****             chVal++;
 233:Core/Src/menu.cpp ****         }
 234:Core/Src/menu.cpp ****         break;
 235:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 236:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 237:Core/Src/menu.cpp ****         {
 238:Core/Src/menu.cpp ****             sqVal++;
 239:Core/Src/menu.cpp ****         }
 240:Core/Src/menu.cpp ****         break;   
 241:Core/Src/menu.cpp ****     default:
 242:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 243:Core/Src/menu.cpp ****         {
 244:Core/Src/menu.cpp ****             volVal++;
 245:Core/Src/menu.cpp ****         }
 246:Core/Src/menu.cpp ****         break;
 247:Core/Src/menu.cpp ****     }
 248:Core/Src/menu.cpp **** }
 249:Core/Src/menu.cpp **** 
 250:Core/Src/menu.cpp **** void menu::menu_down()
 251:Core/Src/menu.cpp **** {
 252:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 253:Core/Src/menu.cpp ****     {
 254:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 255:Core/Src/menu.cpp ****     }
 256:Core/Src/menu.cpp ****     switch (menu_value)
 257:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc9L4PIe.s 			page 6


 258:Core/Src/menu.cpp ****     case MENU_CH_IN:
 259:Core/Src/menu.cpp ****         if(chVal > 0)
 260:Core/Src/menu.cpp ****         {
 261:Core/Src/menu.cpp ****         chVal--;
 262:Core/Src/menu.cpp ****         }
 263:Core/Src/menu.cpp ****         break;
 264:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 265:Core/Src/menu.cpp ****         if(sqVal > 0)
 266:Core/Src/menu.cpp ****         {
 267:Core/Src/menu.cpp ****         sqVal--;
 268:Core/Src/menu.cpp ****         }
 269:Core/Src/menu.cpp ****         break;   
 270:Core/Src/menu.cpp ****     default:
 271:Core/Src/menu.cpp ****         if(volVal > 0)
 272:Core/Src/menu.cpp ****         {
 273:Core/Src/menu.cpp ****             volVal--;
 274:Core/Src/menu.cpp ****         }
 275:Core/Src/menu.cpp ****         break;
 276:Core/Src/menu.cpp ****     }
 277:Core/Src/menu.cpp **** 
 278:Core/Src/menu.cpp **** }
 279:Core/Src/menu.cpp **** 
 280:Core/Src/menu.cpp **** 
 281:Core/Src/menu.cpp **** 
 282:Core/Src/menu.cpp **** void menu::keyboard_poll()
 283:Core/Src/menu.cpp **** {
 284:Core/Src/menu.cpp ****     int sds=0;
 285:Core/Src/menu.cpp ****     char x[20];
 286:Core/Src/menu.cpp **** 
 287:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 288:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 289:Core/Src/menu.cpp **** 
 290:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 291:Core/Src/menu.cpp ****     while(sds<10)
 292:Core/Src/menu.cpp ****     {
 293:Core/Src/menu.cpp ****         sds++;
 294:Core/Src/menu.cpp ****     }
 295:Core/Src/menu.cpp ****     sds=0;
 296:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 297:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 298:Core/Src/menu.cpp ****     {
 299:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 300:Core/Src/menu.cpp ****             menu_next();//R
 301:Core/Src/menu.cpp ****             sprintf(x,"next");
 302:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 303:Core/Src/menu.cpp ****             break;
 304:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 305:Core/Src/menu.cpp ****             menu_number('6');
 306:Core/Src/menu.cpp ****             sprintf(x,"6");
 307:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 308:Core/Src/menu.cpp ****             break;
 309:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 310:Core/Src/menu.cpp ****             menu_number('5');
 311:Core/Src/menu.cpp ****             sprintf(x,"5");
 312:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 313:Core/Src/menu.cpp ****             break;
 314:Core/Src/menu.cpp ****         case GPIO_PIN_8:
ARM GAS  /tmp/cc9L4PIe.s 			page 7


 315:Core/Src/menu.cpp ****             menu_number('4');
 316:Core/Src/menu.cpp ****             sprintf(x,"4");
 317:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 318:Core/Src/menu.cpp ****             break;
 319:Core/Src/menu.cpp ****         default:
 320:Core/Src/menu.cpp ****             break;
 321:Core/Src/menu.cpp ****     }
 322:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 323:Core/Src/menu.cpp **** 
 324:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 325:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 326:Core/Src/menu.cpp ****     
 327:Core/Src/menu.cpp ****     while(sds<10)
 328:Core/Src/menu.cpp ****     {
 329:Core/Src/menu.cpp ****         sds++;
 330:Core/Src/menu.cpp ****     }
 331:Core/Src/menu.cpp ****     sds=0;
 332:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 333:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 334:Core/Src/menu.cpp ****     {
 335:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 336:Core/Src/menu.cpp ****             menu_prev();//L
 337:Core/Src/menu.cpp ****             sprintf(x,"prev");
 338:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 339:Core/Src/menu.cpp ****             break;
 340:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 341:Core/Src/menu.cpp ****             menu_number('8');
 342:Core/Src/menu.cpp ****             sprintf(x,"8");
 343:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 344:Core/Src/menu.cpp ****             break;
 345:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 346:Core/Src/menu.cpp ****             menu_number('7');
 347:Core/Src/menu.cpp ****             sprintf(x,"7");
 348:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 349:Core/Src/menu.cpp ****             break;
 350:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 351:Core/Src/menu.cpp ****             menu_number('9');
 352:Core/Src/menu.cpp ****             sprintf(x,"9");
 353:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 354:Core/Src/menu.cpp ****             break;
 355:Core/Src/menu.cpp ****         default:
 356:Core/Src/menu.cpp ****             break;
 357:Core/Src/menu.cpp **** 
 358:Core/Src/menu.cpp ****     }
 359:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 360:Core/Src/menu.cpp **** 
 361:Core/Src/menu.cpp **** 
 362:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 363:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 364:Core/Src/menu.cpp ****     while(sds<10)
 365:Core/Src/menu.cpp ****     {
 366:Core/Src/menu.cpp ****         sds++;
 367:Core/Src/menu.cpp ****     }
 368:Core/Src/menu.cpp ****     //uart1->send_recive("PD13","PD13");
 369:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 370:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 371:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc9L4PIe.s 			page 8


 372:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 373:Core/Src/menu.cpp ****             menu_down();//D
 374:Core/Src/menu.cpp ****             sprintf(x,"down");
 375:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 376:Core/Src/menu.cpp ****             break;
 377:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 378:Core/Src/menu.cpp ****             menu_menu();//M
 379:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 380:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 381:Core/Src/menu.cpp ****             break;
 382:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 383:Core/Src/menu.cpp ****             menu_number('0');
 384:Core/Src/menu.cpp ****             sprintf(x,"0");
 385:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 386:Core/Src/menu.cpp ****             break;
 387:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 388:Core/Src/menu.cpp ****             menu_back();//B
 389:Core/Src/menu.cpp ****             sprintf(x,"Back");
 390:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 391:Core/Src/menu.cpp ****             break;
 392:Core/Src/menu.cpp ****         default:
 393:Core/Src/menu.cpp ****             break;
 394:Core/Src/menu.cpp **** 
 395:Core/Src/menu.cpp ****     }
 396:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 397:Core/Src/menu.cpp **** 
 398:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 399:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 400:Core/Src/menu.cpp ****     while(sds<10)
 401:Core/Src/menu.cpp ****     {
 402:Core/Src/menu.cpp ****         sds++;
 403:Core/Src/menu.cpp ****     }
 404:Core/Src/menu.cpp ****     sds=0;
 405:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 406:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 407:Core/Src/menu.cpp ****     {
 408:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 409:Core/Src/menu.cpp ****             menu_up();//U
 410:Core/Src/menu.cpp ****             sprintf(x,"up");
 411:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 412:Core/Src/menu.cpp ****             break;
 413:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 414:Core/Src/menu.cpp ****             menu_number('3');
 415:Core/Src/menu.cpp ****             sprintf(x,"3");
 416:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 417:Core/Src/menu.cpp ****             break;
 418:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 419:Core/Src/menu.cpp ****             menu_number('2');
 420:Core/Src/menu.cpp ****             sprintf(x,"2");
 421:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 422:Core/Src/menu.cpp ****             break;
 423:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 424:Core/Src/menu.cpp ****             menu_number('1');
 425:Core/Src/menu.cpp ****             sprintf(x,"1");
 426:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 427:Core/Src/menu.cpp ****             break;
 428:Core/Src/menu.cpp ****         default:
ARM GAS  /tmp/cc9L4PIe.s 			page 9


 429:Core/Src/menu.cpp ****             break;
 430:Core/Src/menu.cpp **** 
 431:Core/Src/menu.cpp ****     }
 432:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 433:Core/Src/menu.cpp **** 
 434:Core/Src/menu.cpp **** }
  30              		.loc 1 434 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 434 1 is_stmt 0 view .LVU1
  35 0000 0128     		cmp	r0, #1
  36 0002 00D0     		beq	.L7
  37              	.L4:
  38 0004 7047     		bx	lr
  39              	.L7:
  40              		.loc 1 434 1 discriminator 1 view .LVU2
  41 0006 4FF6FF73 		movw	r3, #65535
  42 000a 9942     		cmp	r1, r3
  43 000c FAD1     		bne	.L4
  44              		.loc 1 434 1 view .LVU3
  45 000e 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  50              		.file 2 "/usr/include/newlib/c++/9.2.1/iostream"
   1:/usr/include/newlib/c++/9.2.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/iostream **** 
   3:/usr/include/newlib/c++/9.2.1/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/iostream **** //
   5:/usr/include/newlib/c++/9.2.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/iostream **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/iostream **** 
  11:/usr/include/newlib/c++/9.2.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/iostream **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/iostream **** 
  16:/usr/include/newlib/c++/9.2.1/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/iostream **** 
  20:/usr/include/newlib/c++/9.2.1/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/iostream **** 
  25:/usr/include/newlib/c++/9.2.1/iostream **** /** @file include/iostream
  26:/usr/include/newlib/c++/9.2.1/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/newlib/c++/9.2.1/iostream ****  */
  28:/usr/include/newlib/c++/9.2.1/iostream **** 
  29:/usr/include/newlib/c++/9.2.1/iostream **** //
  30:/usr/include/newlib/c++/9.2.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
ARM GAS  /tmp/cc9L4PIe.s 			page 10


  31:/usr/include/newlib/c++/9.2.1/iostream **** //
  32:/usr/include/newlib/c++/9.2.1/iostream **** 
  33:/usr/include/newlib/c++/9.2.1/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/newlib/c++/9.2.1/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/newlib/c++/9.2.1/iostream **** 
  36:/usr/include/newlib/c++/9.2.1/iostream **** #pragma GCC system_header
  37:/usr/include/newlib/c++/9.2.1/iostream **** 
  38:/usr/include/newlib/c++/9.2.1/iostream **** #include <bits/c++config.h>
  39:/usr/include/newlib/c++/9.2.1/iostream **** #include <ostream>
  40:/usr/include/newlib/c++/9.2.1/iostream **** #include <istream>
  41:/usr/include/newlib/c++/9.2.1/iostream **** 
  42:/usr/include/newlib/c++/9.2.1/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/newlib/c++/9.2.1/iostream **** {
  44:/usr/include/newlib/c++/9.2.1/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/newlib/c++/9.2.1/iostream **** 
  46:/usr/include/newlib/c++/9.2.1/iostream ****   /**
  47:/usr/include/newlib/c++/9.2.1/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/newlib/c++/9.2.1/iostream ****    *
  49:/usr/include/newlib/c++/9.2.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/newlib/c++/9.2.1/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/newlib/c++/9.2.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/newlib/c++/9.2.1/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/newlib/c++/9.2.1/iostream ****    *
  54:/usr/include/newlib/c++/9.2.1/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/newlib/c++/9.2.1/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/newlib/c++/9.2.1/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/newlib/c++/9.2.1/iostream ****    *  manual linked to above.
  58:/usr/include/newlib/c++/9.2.1/iostream ****   */
  59:/usr/include/newlib/c++/9.2.1/iostream ****   //@{
  60:/usr/include/newlib/c++/9.2.1/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/newlib/c++/9.2.1/iostream **** 
  65:/usr/include/newlib/c++/9.2.1/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/newlib/c++/9.2.1/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/newlib/c++/9.2.1/iostream **** #endif
  71:/usr/include/newlib/c++/9.2.1/iostream ****   //@}
  72:/usr/include/newlib/c++/9.2.1/iostream **** 
  73:/usr/include/newlib/c++/9.2.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/newlib/c++/9.2.1/iostream ****   static ios_base::Init __ioinit;
  51              		.loc 2 74 25 view .LVU4
  52 0010 044C     		ldr	r4, .L8
  53 0012 2046     		mov	r0, r4
  54              	.LVL1:
  55              		.loc 2 74 25 view .LVU5
  56 0014 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
  57              	.LVL2:
  58              		.loc 2 74 25 view .LVU6
  59 0018 034A     		ldr	r2, .L8+4
  60 001a 0449     		ldr	r1, .L8+8
  61 001c 2046     		mov	r0, r4
  62 001e FFF7FEFF 		bl	__aeabi_atexit
  63              	.LVL3:
ARM GAS  /tmp/cc9L4PIe.s 			page 11


  64              		.loc 1 434 1 view .LVU7
  65 0022 10BD     		pop	{r4, pc}
  66              	.L9:
  67              		.align	2
  68              	.L8:
  69 0024 00000000 		.word	.LANCHOR0
  70 0028 00000000 		.word	__dso_handle
  71 002c 00000000 		.word	_ZNSt8ios_base4InitD1Ev
  72              		.cfi_endproc
  73              	.LFE2476:
  74              		.cantunwind
  75              		.fnend
  77              		.section	.text._ZN4menuC2EP4oledP4uart,"ax",%progbits
  78              		.align	1
  79              		.global	_ZN4menuC2EP4oledP4uart
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	_ZN4menuC2EP4oledP4uart:
  86              		.fnstart
  87              	.LVL4:
  88              	.LFB1985:
   3:Core/Src/menu.cpp **** 
  89              		.loc 1 3 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
   3:Core/Src/menu.cpp **** 
  94              		.loc 1 3 1 is_stmt 0 view .LVU9
  95 0000 30B4     		push	{r4, r5}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 5, -4
 100              	.LBB2:
   3:Core/Src/menu.cpp **** 
 101              		.loc 1 3 36 view .LVU10
 102 0002 094C     		ldr	r4, .L12
 103 0004 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 104 0006 8570     		strb	r5, [r0, #2]
 105 0008 0024     		movs	r4, #0
 106 000a A0F80340 		strh	r4, [r0, #3]	@ unaligned
 107 000e 8571     		strb	r5, [r0, #6]
 108 0010 A0F80740 		strh	r4, [r0, #7]	@ unaligned
 109 0014 0473     		strb	r4, [r0, #12]
 110 0016 1E25     		movs	r5, #30
 111 0018 C573     		strb	r5, [r0, #15]
 112 001a 0474     		strb	r4, [r0, #16]
 113 001c 4474     		strb	r4, [r0, #17]
   5:Core/Src/menu.cpp ****     uart1=uart_;
 114              		.loc 1 5 5 is_stmt 1 view .LVU11
   5:Core/Src/menu.cpp ****     uart1=uart_;
 115              		.loc 1 5 10 is_stmt 0 view .LVU12
 116 001e 4161     		str	r1, [r0, #20]
   6:Core/Src/menu.cpp **** }
ARM GAS  /tmp/cc9L4PIe.s 			page 12


 117              		.loc 1 6 5 is_stmt 1 view .LVU13
   6:Core/Src/menu.cpp **** }
 118              		.loc 1 6 10 is_stmt 0 view .LVU14
 119 0020 8261     		str	r2, [r0, #24]
 120              	.LBE2:
   7:Core/Src/menu.cpp **** 
 121              		.loc 1 7 1 view .LVU15
 122 0022 30BC     		pop	{r4, r5}
 123              	.LCFI2:
 124              		.cfi_restore 5
 125              		.cfi_restore 4
 126              		.cfi_def_cfa_offset 0
 127 0024 7047     		bx	lr
 128              	.L13:
 129 0026 00BF     		.align	2
 130              	.L12:
 131 0028 00000000 		.word	.LANCHOR1
 132              		.cfi_endproc
 133              	.LFE1985:
 134              		.cantunwind
 135              		.fnend
 137              		.global	_ZN4menuC1EP4oledP4uart
 138              		.thumb_set _ZN4menuC1EP4oledP4uart,_ZN4menuC2EP4oledP4uart
 139              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
 140              		.align	2
 141              	.LC1:
 142 0000 433A252E 		.ascii	"C:%.2s SQ:%.2s\000"
 142      32732053 
 142      513A252E 
 142      327300
 143 000f 00       		.align	2
 144              	.LC2:
 145 0010 4348414E 		.ascii	"CHAN   \000"
 145      20202000 
 146              		.align	2
 147              	.LC3:
 148 0018 53515541 		.ascii	"SQUASH  \000"
 148      53482020 
 148      00
 149 0021 000000   		.align	2
 150              	.LC4:
 151 0024 44697370 		.ascii	"Disp TMO\000"
 151      20544D4F 
 151      00
 152 002d 000000   		.align	2
 153              	.LC5:
 154 0030 2043483A 		.ascii	" CH:%.2s  \000"
 154      252E3273 
 154      202000
 155 003b 00       		.align	2
 156              	.LC6:
 157 003c 2053513A 		.ascii	" SQ:%.2s   \000"
 157      252E3273 
 157      20202000 
 158              		.align	2
 159              	.LC7:
 160 0048 2044533A 		.ascii	" DS:%.2s   \000"
ARM GAS  /tmp/cc9L4PIe.s 			page 13


 160      252E3273 
 160      20202000 
 161              		.align	2
 162              	.LC8:
 163 0054 6D656E75 		.ascii	"menu back\000"
 163      20626163 
 163      6B00
 164              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
 165              		.align	1
 166              		.global	_ZN4menu10menu_printEv
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv4-sp-d16
 172              	_ZN4menu10menu_printEv:
 173              		.fnstart
 174              	.LVL5:
 175              	.LFB1987:
  10:Core/Src/menu.cpp ****     char temp [20];
 176              		.loc 1 10 1 is_stmt 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 24
 179              		@ frame_needed = 0, uses_anonymous_args = 0
  10:Core/Src/menu.cpp ****     char temp [20];
 180              		.loc 1 10 1 is_stmt 0 view .LVU17
 181 0000 30B5     		push	{r4, r5, lr}
 182              		.save {r4, r5, lr}
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 188              		.pad #36
 189 0002 89B0     		sub	sp, sp, #36
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 48
 192 0004 0446     		mov	r4, r0
  11:Core/Src/menu.cpp **** 
 193              		.loc 1 11 5 is_stmt 1 view .LVU18
  13:Core/Src/menu.cpp ****     {
 194              		.loc 1 13 5 view .LVU19
  13:Core/Src/menu.cpp ****     {
 195              		.loc 1 13 13 is_stmt 0 view .LVU20
 196 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 197 0008 182B     		cmp	r3, #24
 198 000a 1ED8     		bhi	.L15
 199 000c DFE803F0 		tbb	[pc, r3]
 200              	.L17:
 201 0010 0D       		.byte	(.L23-.L17)/2
 202 0011 29       		.byte	(.L22-.L17)/2
 203 0012 3A       		.byte	(.L21-.L17)/2
 204 0013 4A       		.byte	(.L20-.L17)/2
 205 0014 1D       		.byte	(.L15-.L17)/2
 206 0015 1D       		.byte	(.L15-.L17)/2
 207 0016 1D       		.byte	(.L15-.L17)/2
 208 0017 1D       		.byte	(.L15-.L17)/2
 209 0018 5A       		.byte	(.L19-.L17)/2
ARM GAS  /tmp/cc9L4PIe.s 			page 14


 210 0019 1D       		.byte	(.L15-.L17)/2
 211 001a 1D       		.byte	(.L15-.L17)/2
 212 001b 1D       		.byte	(.L15-.L17)/2
 213 001c 1D       		.byte	(.L15-.L17)/2
 214 001d 1D       		.byte	(.L15-.L17)/2
 215 001e 1D       		.byte	(.L15-.L17)/2
 216 001f 1D       		.byte	(.L15-.L17)/2
 217 0020 6A       		.byte	(.L18-.L17)/2
 218 0021 1D       		.byte	(.L15-.L17)/2
 219 0022 1D       		.byte	(.L15-.L17)/2
 220 0023 1D       		.byte	(.L15-.L17)/2
 221 0024 1D       		.byte	(.L15-.L17)/2
 222 0025 1D       		.byte	(.L15-.L17)/2
 223 0026 1D       		.byte	(.L15-.L17)/2
 224 0027 1D       		.byte	(.L15-.L17)/2
 225 0028 7A       		.byte	(.L16-.L17)/2
 226 0029 00       		.p2align 1
 227              	.L23:
  15:Core/Src/menu.cpp ****             sprintf(temp, "C:%.2s SQ:%.2s", ch,sq);
 228              		.loc 1 15 9 is_stmt 1 view .LVU21
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 229              		.loc 1 16 13 view .LVU22
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 230              		.loc 1 16 20 is_stmt 0 view .LVU23
 231 002a 831C     		adds	r3, r0, #2
 232 002c 821D     		adds	r2, r0, #6
 233 002e 3E49     		ldr	r1, .L25
 234 0030 03A8     		add	r0, sp, #12
 235              	.LVL6:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 236              		.loc 1 16 20 view .LVU24
 237 0032 FFF7FEFF 		bl	sprintf
 238              	.LVL7:
  17:Core/Src/menu.cpp ****             break; 
 239              		.loc 1 17 13 is_stmt 1 view .LVU25
  17:Core/Src/menu.cpp ****             break; 
 240              		.loc 1 17 30 is_stmt 0 view .LVU26
 241 0036 3D4B     		ldr	r3, .L25+4
 242 0038 1322     		movs	r2, #19
 243 003a 0192     		str	r2, [sp, #4]
 244 003c 0022     		movs	r2, #0
 245 003e 0092     		str	r2, [sp]
 246 0040 0CCB     		ldm	r3, {r2, r3}
 247 0042 03A9     		add	r1, sp, #12
 248 0044 6069     		ldr	r0, [r4, #20]
 249 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 250              	.LVL8:
 251              	.L15:
  46:Core/Src/menu.cpp **** 
 252              		.loc 1 46 5 is_stmt 1 view .LVU27
  46:Core/Src/menu.cpp **** 
 253              		.loc 1 46 22 is_stmt 0 view .LVU28
 254 004a 394B     		ldr	r3, .L25+8
 255 004c 2E22     		movs	r2, #46
 256 004e 0192     		str	r2, [sp, #4]
 257 0050 0022     		movs	r2, #0
 258 0052 0092     		str	r2, [sp]
ARM GAS  /tmp/cc9L4PIe.s 			page 15


 259 0054 0CCB     		ldm	r3, {r2, r3}
 260 0056 3749     		ldr	r1, .L25+12
 261 0058 6069     		ldr	r0, [r4, #20]
 262 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 263              	.LVL9:
  48:Core/Src/menu.cpp **** 
 264              		.loc 1 48 1 view .LVU29
 265 005e 09B0     		add	sp, sp, #36
 266              	.LCFI5:
 267              		.cfi_remember_state
 268              		.cfi_def_cfa_offset 12
 269              		@ sp needed
 270 0060 30BD     		pop	{r4, r5, pc}
 271              	.LVL10:
 272              	.L22:
 273              	.LCFI6:
 274              		.cfi_restore_state
  19:Core/Src/menu.cpp ****             sprintf(temp, "CHAN   ");
 275              		.loc 1 19 9 is_stmt 1 view .LVU30
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 276              		.loc 1 20 13 view .LVU31
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 277              		.loc 1 20 20 is_stmt 0 view .LVU32
 278 0062 03AD     		add	r5, sp, #12
 279 0064 344B     		ldr	r3, .L25+16
 280 0066 93E80300 		ldm	r3, {r0, r1}
 281              	.LVL11:
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 282              		.loc 1 20 20 view .LVU33
 283 006a 85E80300 		stm	r5, {r0, r1}
  21:Core/Src/menu.cpp ****             break;
 284              		.loc 1 21 13 is_stmt 1 view .LVU34
  21:Core/Src/menu.cpp ****             break;
 285              		.loc 1 21 30 is_stmt 0 view .LVU35
 286 006e 2F4B     		ldr	r3, .L25+4
 287 0070 1322     		movs	r2, #19
 288 0072 0192     		str	r2, [sp, #4]
 289 0074 0022     		movs	r2, #0
 290 0076 0092     		str	r2, [sp]
 291 0078 0CCB     		ldm	r3, {r2, r3}
 292 007a 2946     		mov	r1, r5
 293 007c 6069     		ldr	r0, [r4, #20]
 294 007e FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 295              	.LVL12:
 296 0082 E2E7     		b	.L15
 297              	.LVL13:
 298              	.L21:
  23:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH  ");
 299              		.loc 1 23 9 is_stmt 1 view .LVU36
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 300              		.loc 1 24 13 view .LVU37
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 301              		.loc 1 24 20 is_stmt 0 view .LVU38
 302 0084 2D4A     		ldr	r2, .L25+20
 303 0086 03AB     		add	r3, sp, #12
 304 0088 07CA     		ldm	r2, {r0, r1, r2}
 305              	.LVL14:
ARM GAS  /tmp/cc9L4PIe.s 			page 16


  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 306              		.loc 1 24 20 view .LVU39
 307 008a 03C3     		stmia	r3!, {r0, r1}
 308 008c 1A70     		strb	r2, [r3]
  25:Core/Src/menu.cpp ****             break;
 309              		.loc 1 25 13 is_stmt 1 view .LVU40
  25:Core/Src/menu.cpp ****             break;
 310              		.loc 1 25 30 is_stmt 0 view .LVU41
 311 008e 274B     		ldr	r3, .L25+4
 312 0090 1322     		movs	r2, #19
 313 0092 0192     		str	r2, [sp, #4]
 314 0094 0022     		movs	r2, #0
 315 0096 0092     		str	r2, [sp]
 316 0098 0CCB     		ldm	r3, {r2, r3}
 317 009a 03A9     		add	r1, sp, #12
 318 009c 6069     		ldr	r0, [r4, #20]
 319 009e FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 320              	.LVL15:
 321 00a2 D2E7     		b	.L15
 322              	.LVL16:
 323              	.L20:
  27:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
 324              		.loc 1 27 9 is_stmt 1 view .LVU42
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 325              		.loc 1 28 13 view .LVU43
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 326              		.loc 1 28 20 is_stmt 0 view .LVU44
 327 00a4 264A     		ldr	r2, .L25+24
 328 00a6 03AB     		add	r3, sp, #12
 329 00a8 07CA     		ldm	r2, {r0, r1, r2}
 330              	.LVL17:
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 331              		.loc 1 28 20 view .LVU45
 332 00aa 03C3     		stmia	r3!, {r0, r1}
 333 00ac 1A70     		strb	r2, [r3]
  29:Core/Src/menu.cpp ****             break;
 334              		.loc 1 29 13 is_stmt 1 view .LVU46
  29:Core/Src/menu.cpp ****             break;
 335              		.loc 1 29 30 is_stmt 0 view .LVU47
 336 00ae 1F4B     		ldr	r3, .L25+4
 337 00b0 1322     		movs	r2, #19
 338 00b2 0192     		str	r2, [sp, #4]
 339 00b4 0022     		movs	r2, #0
 340 00b6 0092     		str	r2, [sp]
 341 00b8 0CCB     		ldm	r3, {r2, r3}
 342 00ba 03A9     		add	r1, sp, #12
 343 00bc 6069     		ldr	r0, [r4, #20]
 344 00be FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 345              	.LVL18:
 346 00c2 C2E7     		b	.L15
 347              	.LVL19:
 348              	.L19:
  31:Core/Src/menu.cpp ****             sprintf(temp, " CH:%.2s  ",ch);
 349              		.loc 1 31 9 is_stmt 1 view .LVU48
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 350              		.loc 1 32 13 view .LVU49
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
ARM GAS  /tmp/cc9L4PIe.s 			page 17


 351              		.loc 1 32 20 is_stmt 0 view .LVU50
 352 00c4 821D     		adds	r2, r0, #6
 353 00c6 1F49     		ldr	r1, .L25+28
 354 00c8 03A8     		add	r0, sp, #12
 355              	.LVL20:
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 356              		.loc 1 32 20 view .LVU51
 357 00ca FFF7FEFF 		bl	sprintf
 358              	.LVL21:
  33:Core/Src/menu.cpp ****             break;
 359              		.loc 1 33 13 is_stmt 1 view .LVU52
  33:Core/Src/menu.cpp ****             break;
 360              		.loc 1 33 30 is_stmt 0 view .LVU53
 361 00ce 174B     		ldr	r3, .L25+4
 362 00d0 1322     		movs	r2, #19
 363 00d2 0192     		str	r2, [sp, #4]
 364 00d4 0022     		movs	r2, #0
 365 00d6 0092     		str	r2, [sp]
 366 00d8 0CCB     		ldm	r3, {r2, r3}
 367 00da 03A9     		add	r1, sp, #12
 368 00dc 6069     		ldr	r0, [r4, #20]
 369 00de FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 370              	.LVL22:
 371 00e2 B2E7     		b	.L15
 372              	.LVL23:
 373              	.L18:
  35:Core/Src/menu.cpp ****             sprintf(temp, " SQ:%.2s   ",sq);
 374              		.loc 1 35 9 is_stmt 1 view .LVU54
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 375              		.loc 1 36 13 view .LVU55
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 376              		.loc 1 36 20 is_stmt 0 view .LVU56
 377 00e4 821C     		adds	r2, r0, #2
 378 00e6 1849     		ldr	r1, .L25+32
 379 00e8 03A8     		add	r0, sp, #12
 380              	.LVL24:
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 381              		.loc 1 36 20 view .LVU57
 382 00ea FFF7FEFF 		bl	sprintf
 383              	.LVL25:
  37:Core/Src/menu.cpp ****             break;
 384              		.loc 1 37 13 is_stmt 1 view .LVU58
  37:Core/Src/menu.cpp ****             break;
 385              		.loc 1 37 30 is_stmt 0 view .LVU59
 386 00ee 0F4B     		ldr	r3, .L25+4
 387 00f0 1322     		movs	r2, #19
 388 00f2 0192     		str	r2, [sp, #4]
 389 00f4 0022     		movs	r2, #0
 390 00f6 0092     		str	r2, [sp]
 391 00f8 0CCB     		ldm	r3, {r2, r3}
 392 00fa 03A9     		add	r1, sp, #12
 393 00fc 6069     		ldr	r0, [r4, #20]
 394 00fe FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 395              	.LVL26:
 396 0102 A2E7     		b	.L15
 397              	.LVL27:
 398              	.L16:
ARM GAS  /tmp/cc9L4PIe.s 			page 18


  39:Core/Src/menu.cpp ****             sprintf(temp, " DS:%.2s   ",tmo);
 399              		.loc 1 39 9 is_stmt 1 view .LVU60
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 400              		.loc 1 40 13 view .LVU61
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 401              		.loc 1 40 20 is_stmt 0 view .LVU62
 402 0104 00F10D02 		add	r2, r0, #13
 403 0108 1049     		ldr	r1, .L25+36
 404 010a 03A8     		add	r0, sp, #12
 405              	.LVL28:
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 406              		.loc 1 40 20 view .LVU63
 407 010c FFF7FEFF 		bl	sprintf
 408              	.LVL29:
  41:Core/Src/menu.cpp ****             break;
 409              		.loc 1 41 13 is_stmt 1 view .LVU64
  41:Core/Src/menu.cpp ****             break;
 410              		.loc 1 41 30 is_stmt 0 view .LVU65
 411 0110 064B     		ldr	r3, .L25+4
 412 0112 1322     		movs	r2, #19
 413 0114 0192     		str	r2, [sp, #4]
 414 0116 0022     		movs	r2, #0
 415 0118 0092     		str	r2, [sp]
 416 011a 0CCB     		ldm	r3, {r2, r3}
 417 011c 03A9     		add	r1, sp, #12
 418 011e 6069     		ldr	r0, [r4, #20]
 419 0120 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 420              	.LVL30:
 421 0124 91E7     		b	.L15
 422              	.L26:
 423 0126 00BF     		.align	2
 424              	.L25:
 425 0128 00000000 		.word	.LC1
 426 012c 00000000 		.word	Font_16x26
 427 0130 00000000 		.word	Font_11x18
 428 0134 54000000 		.word	.LC8
 429 0138 10000000 		.word	.LC2
 430 013c 18000000 		.word	.LC3
 431 0140 24000000 		.word	.LC4
 432 0144 30000000 		.word	.LC5
 433 0148 3C000000 		.word	.LC6
 434 014c 48000000 		.word	.LC7
 435              		.cfi_endproc
 436              	.LFE1987:
 437              		.fnend
 439              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 440              		.align	1
 441              		.global	_ZN4menu7menu_okEv
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv4-sp-d16
 447              	_ZN4menu7menu_okEv:
 448              		.fnstart
 449              	.LVL31:
 450              	.LFB1988:
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
ARM GAS  /tmp/cc9L4PIe.s 			page 19


 451              		.loc 1 51 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 455              		.loc 1 51 1 is_stmt 0 view .LVU67
 456 0000 38B5     		push	{r3, r4, r5, lr}
 457              		.save {r3, r4, r5, lr}
 458              	.LCFI7:
 459              		.cfi_def_cfa_offset 16
 460              		.cfi_offset 3, -16
 461              		.cfi_offset 4, -12
 462              		.cfi_offset 5, -8
 463              		.cfi_offset 14, -4
 464 0002 0446     		mov	r4, r0
  52:Core/Src/menu.cpp ****     {
 465              		.loc 1 52 5 is_stmt 1 view .LVU68
  52:Core/Src/menu.cpp ****     {
 466              		.loc 1 52 28 is_stmt 0 view .LVU69
 467 0004 4069     		ldr	r0, [r0, #20]
 468              	.LVL32:
  52:Core/Src/menu.cpp ****     {
 469              		.loc 1 52 28 view .LVU70
 470 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 471              	.LVL33:
  52:Core/Src/menu.cpp ****     {
 472              		.loc 1 52 5 view .LVU71
 473 000a A0B1     		cbz	r0, .L28
  54:Core/Src/menu.cpp ****     }
 474              		.loc 1 54 9 is_stmt 1 view .LVU72
  54:Core/Src/menu.cpp ****     }
 475              		.loc 1 54 31 is_stmt 0 view .LVU73
 476 000c 6069     		ldr	r0, [r4, #20]
 477 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 478              	.LVL34:
 479              	.L29:
  62:Core/Src/menu.cpp ****     {
 480              		.loc 1 62 5 is_stmt 1 view .LVU74
  62:Core/Src/menu.cpp ****     {
 481              		.loc 1 62 13 is_stmt 0 view .LVU75
 482 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 483 0014 013B     		subs	r3, r3, #1
 484 0016 172B     		cmp	r3, #23
 485 0018 16D8     		bhi	.L27
 486 001a DFE803F0 		tbb	[pc, r3]
 487              	.L32:
 488 001e 13       		.byte	(.L37-.L32)/2
 489 001f 16       		.byte	(.L36-.L32)/2
 490 0020 19       		.byte	(.L35-.L32)/2
 491 0021 15       		.byte	(.L27-.L32)/2
 492 0022 15       		.byte	(.L27-.L32)/2
 493 0023 15       		.byte	(.L27-.L32)/2
 494 0024 15       		.byte	(.L27-.L32)/2
 495 0025 1C       		.byte	(.L34-.L32)/2
 496 0026 15       		.byte	(.L27-.L32)/2
 497 0027 15       		.byte	(.L27-.L32)/2
 498 0028 15       		.byte	(.L27-.L32)/2
ARM GAS  /tmp/cc9L4PIe.s 			page 20


 499 0029 15       		.byte	(.L27-.L32)/2
 500 002a 15       		.byte	(.L27-.L32)/2
 501 002b 15       		.byte	(.L27-.L32)/2
 502 002c 15       		.byte	(.L27-.L32)/2
 503 002d 29       		.byte	(.L33-.L32)/2
 504 002e 15       		.byte	(.L27-.L32)/2
 505 002f 15       		.byte	(.L27-.L32)/2
 506 0030 15       		.byte	(.L27-.L32)/2
 507 0031 15       		.byte	(.L27-.L32)/2
 508 0032 15       		.byte	(.L27-.L32)/2
 509 0033 15       		.byte	(.L27-.L32)/2
 510 0034 15       		.byte	(.L27-.L32)/2
 511 0035 36       		.byte	(.L31-.L32)/2
 512              		.p2align 1
 513              	.L28:
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 514              		.loc 1 58 9 is_stmt 1 view .LVU76
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 515              		.loc 1 58 23 is_stmt 0 view .LVU77
 516 0036 6069     		ldr	r0, [r4, #20]
 517 0038 FFF7FEFF 		bl	_ZN4oled7oled_onEv
 518              	.LVL35:
  59:Core/Src/menu.cpp ****     }
 519              		.loc 1 59 9 is_stmt 1 view .LVU78
  59:Core/Src/menu.cpp ****     }
 520              		.loc 1 59 31 is_stmt 0 view .LVU79
 521 003c 6069     		ldr	r0, [r4, #20]
 522 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 523              	.LVL36:
 524 0042 E6E7     		b	.L29
 525              	.L37:
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 526              		.loc 1 66 5 is_stmt 1 view .LVU80
  67:Core/Src/menu.cpp ****         break;
 527              		.loc 1 67 9 view .LVU81
  67:Core/Src/menu.cpp ****         break;
 528              		.loc 1 67 19 is_stmt 0 view .LVU82
 529 0044 0823     		movs	r3, #8
 530 0046 2370     		strb	r3, [r4]
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 531              		.loc 1 68 9 is_stmt 1 view .LVU83
 532              	.L27:
 108:Core/Src/menu.cpp **** 
 533              		.loc 1 108 1 is_stmt 0 view .LVU84
 534 0048 38BD     		pop	{r3, r4, r5, pc}
 535              	.LVL37:
 536              	.L36:
  69:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
 537              		.loc 1 69 5 is_stmt 1 view .LVU85
  70:Core/Src/menu.cpp ****         break;
 538              		.loc 1 70 9 view .LVU86
  70:Core/Src/menu.cpp ****         break;
 539              		.loc 1 70 19 is_stmt 0 view .LVU87
 540 004a 1023     		movs	r3, #16
 541 004c 2370     		strb	r3, [r4]
  71:Core/Src/menu.cpp ****     case MENU_TMO:
 542              		.loc 1 71 9 is_stmt 1 view .LVU88
ARM GAS  /tmp/cc9L4PIe.s 			page 21


 543 004e FBE7     		b	.L27
 544              	.L35:
  72:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 545              		.loc 1 72 5 view .LVU89
  73:Core/Src/menu.cpp ****         break;
 546              		.loc 1 73 9 view .LVU90
  73:Core/Src/menu.cpp ****         break;
 547              		.loc 1 73 19 is_stmt 0 view .LVU91
 548 0050 1823     		movs	r3, #24
 549 0052 2370     		strb	r3, [r4]
  74:Core/Src/menu.cpp ****     case MENU_CH_IN:
 550              		.loc 1 74 9 is_stmt 1 view .LVU92
 551 0054 F8E7     		b	.L27
 552              	.L34:
  75:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 553              		.loc 1 75 5 view .LVU93
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 554              		.loc 1 76 9 view .LVU94
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 555              		.loc 1 76 17 is_stmt 0 view .LVU95
 556 0056 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 557 0058 83F00103 		eor	r3, r3, #1
 558 005c 6374     		strb	r3, [r4, #17]
  77:Core/Src/menu.cpp ****         {
 559              		.loc 1 77 9 is_stmt 1 view .LVU96
 560 005e 002B     		cmp	r3, #0
 561 0060 F2D1     		bne	.L27
  79:Core/Src/menu.cpp ****             cursorPos=0;
 562              		.loc 1 79 13 view .LVU97
  79:Core/Src/menu.cpp ****             cursorPos=0;
 563              		.loc 1 79 23 is_stmt 0 view .LVU98
 564 0062 A01D     		adds	r0, r4, #6
 565 0064 FFF7FEFF 		bl	atoi
 566              	.LVL38:
  79:Core/Src/menu.cpp ****             cursorPos=0;
 567              		.loc 1 79 18 view .LVU99
 568 0068 6072     		strb	r0, [r4, #9]
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 569              		.loc 1 80 13 is_stmt 1 view .LVU100
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 570              		.loc 1 80 22 is_stmt 0 view .LVU101
 571 006a 0023     		movs	r3, #0
 572 006c 2374     		strb	r3, [r4, #16]
 573 006e EBE7     		b	.L27
 574              	.L33:
  84:Core/Src/menu.cpp ****         cursorOn^=1;
 575              		.loc 1 84 5 is_stmt 1 view .LVU102
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 576              		.loc 1 85 9 view .LVU103
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 577              		.loc 1 85 17 is_stmt 0 view .LVU104
 578 0070 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 579 0072 83F00103 		eor	r3, r3, #1
 580 0076 6374     		strb	r3, [r4, #17]
  86:Core/Src/menu.cpp ****         {
 581              		.loc 1 86 9 is_stmt 1 view .LVU105
 582 0078 002B     		cmp	r3, #0
ARM GAS  /tmp/cc9L4PIe.s 			page 22


 583 007a E5D1     		bne	.L27
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 584              		.loc 1 88 13 view .LVU106
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 585              		.loc 1 88 23 is_stmt 0 view .LVU107
 586 007c A01C     		adds	r0, r4, #2
 587 007e FFF7FEFF 		bl	atoi
 588              	.LVL39:
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 589              		.loc 1 88 18 view .LVU108
 590 0082 6072     		strb	r0, [r4, #9]
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 591              		.loc 1 89 13 is_stmt 1 view .LVU109
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 592              		.loc 1 89 22 is_stmt 0 view .LVU110
 593 0084 0023     		movs	r3, #0
 594 0086 2374     		strb	r3, [r4, #16]
 595 0088 DEE7     		b	.L27
 596              	.L31:
  93:Core/Src/menu.cpp ****         cursorOn%=1;
 597              		.loc 1 93 5 is_stmt 1 view .LVU111
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 598              		.loc 1 94 9 view .LVU112
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 599              		.loc 1 94 17 is_stmt 0 view .LVU113
 600 008a 0025     		movs	r5, #0
 601 008c 6574     		strb	r5, [r4, #17]
  95:Core/Src/menu.cpp ****         {
 602              		.loc 1 95 9 is_stmt 1 view .LVU114
  97:Core/Src/menu.cpp ****             cursorPos=0;
 603              		.loc 1 97 13 view .LVU115
  97:Core/Src/menu.cpp ****             cursorPos=0;
 604              		.loc 1 97 24 is_stmt 0 view .LVU116
 605 008e 04F10D00 		add	r0, r4, #13
 606 0092 FFF7FEFF 		bl	atoi
 607              	.LVL40:
  97:Core/Src/menu.cpp ****             cursorPos=0;
 608              		.loc 1 97 19 view .LVU117
 609 0096 E073     		strb	r0, [r4, #15]
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 610              		.loc 1 98 13 is_stmt 1 view .LVU118
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 611              		.loc 1 98 22 is_stmt 0 view .LVU119
 612 0098 2574     		strb	r5, [r4, #16]
 108:Core/Src/menu.cpp **** 
 613              		.loc 1 108 1 view .LVU120
 614 009a D5E7     		b	.L27
 615              		.cfi_endproc
 616              	.LFE1988:
 617              		.fnend
 619              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 620              		.align	1
 621              		.global	_ZN4menu9menu_nextEv
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc9L4PIe.s 			page 23


 627              	_ZN4menu9menu_nextEv:
 628              		.fnstart
 629              	.LVL41:
 630              	.LFB1989:
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 631              		.loc 1 111 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 635              		.loc 1 111 1 is_stmt 0 view .LVU122
 636 0000 10B5     		push	{r4, lr}
 637              		.save {r4, lr}
 638              	.LCFI8:
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0002 0446     		mov	r4, r0
 112:Core/Src/menu.cpp ****     {
 643              		.loc 1 112 5 is_stmt 1 view .LVU123
 112:Core/Src/menu.cpp ****     {
 644              		.loc 1 112 28 is_stmt 0 view .LVU124
 645 0004 4069     		ldr	r0, [r0, #20]
 646              	.LVL42:
 112:Core/Src/menu.cpp ****     {
 647              		.loc 1 112 28 view .LVU125
 648 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 649              	.LVL43:
 112:Core/Src/menu.cpp ****     {
 650              		.loc 1 112 5 view .LVU126
 651 000a 88B9     		cbnz	r0, .L49
 652              	.L40:
 116:Core/Src/menu.cpp ****     {
 653              		.loc 1 116 5 is_stmt 1 view .LVU127
 116:Core/Src/menu.cpp ****     {
 654              		.loc 1 116 13 is_stmt 0 view .LVU128
 655 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 656 000e 013B     		subs	r3, r3, #1
 657 0010 172B     		cmp	r3, #23
 658 0012 1AD8     		bhi	.L39
 659 0014 DFE803F0 		tbb	[pc, r3]
 660              	.L43:
 661 0018 10       		.byte	(.L47-.L43)/2
 662 0019 13       		.byte	(.L46-.L43)/2
 663 001a 13       		.byte	(.L46-.L43)/2
 664 001b 19       		.byte	(.L39-.L43)/2
 665 001c 19       		.byte	(.L39-.L43)/2
 666 001d 19       		.byte	(.L39-.L43)/2
 667 001e 19       		.byte	(.L39-.L43)/2
 668 001f 15       		.byte	(.L45-.L43)/2
 669 0020 19       		.byte	(.L39-.L43)/2
 670 0021 19       		.byte	(.L39-.L43)/2
 671 0022 19       		.byte	(.L39-.L43)/2
 672 0023 19       		.byte	(.L39-.L43)/2
 673 0024 19       		.byte	(.L39-.L43)/2
 674 0025 19       		.byte	(.L39-.L43)/2
 675 0026 19       		.byte	(.L39-.L43)/2
ARM GAS  /tmp/cc9L4PIe.s 			page 24


 676 0027 1A       		.byte	(.L44-.L43)/2
 677 0028 19       		.byte	(.L39-.L43)/2
 678 0029 19       		.byte	(.L39-.L43)/2
 679 002a 19       		.byte	(.L39-.L43)/2
 680 002b 19       		.byte	(.L39-.L43)/2
 681 002c 19       		.byte	(.L39-.L43)/2
 682 002d 19       		.byte	(.L39-.L43)/2
 683 002e 19       		.byte	(.L39-.L43)/2
 684 002f 1F       		.byte	(.L42-.L43)/2
 685              		.p2align 1
 686              	.L49:
 114:Core/Src/menu.cpp ****     }
 687              		.loc 1 114 9 is_stmt 1 view .LVU129
 114:Core/Src/menu.cpp ****     }
 688              		.loc 1 114 31 is_stmt 0 view .LVU130
 689 0030 6069     		ldr	r0, [r4, #20]
 690 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 691              	.LVL44:
 692 0036 E9E7     		b	.L40
 693              	.L47:
 120:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 694              		.loc 1 120 5 is_stmt 1 view .LVU131
 121:Core/Src/menu.cpp ****         break;
 695              		.loc 1 121 9 view .LVU132
 121:Core/Src/menu.cpp ****         break;
 696              		.loc 1 121 19 is_stmt 0 view .LVU133
 697 0038 0223     		movs	r3, #2
 698 003a 2370     		strb	r3, [r4]
 122:Core/Src/menu.cpp ****     case MENU_SQ:
 699              		.loc 1 122 9 is_stmt 1 view .LVU134
 700 003c 05E0     		b	.L39
 701              	.L46:
 125:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 702              		.loc 1 125 5 view .LVU135
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
 703              		.loc 1 126 9 view .LVU136
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
 704              		.loc 1 126 19 is_stmt 0 view .LVU137
 705 003e 0123     		movs	r3, #1
 706 0040 2370     		strb	r3, [r4]
 707              	.L45:
 127:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 708              		.loc 1 127 5 is_stmt 1 view .LVU138
 128:Core/Src/menu.cpp ****         break;
 709              		.loc 1 128 9 view .LVU139
 128:Core/Src/menu.cpp ****         break;
 710              		.loc 1 128 20 is_stmt 0 view .LVU140
 711 0042 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 128:Core/Src/menu.cpp ****         break;
 712              		.loc 1 128 18 view .LVU141
 713 0044 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 714 0046 5340     		eors	r3, r3, r2
 715 0048 2374     		strb	r3, [r4, #16]
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 716              		.loc 1 129 9 is_stmt 1 view .LVU142
 717              	.L39:
 140:Core/Src/menu.cpp **** 
ARM GAS  /tmp/cc9L4PIe.s 			page 25


 718              		.loc 1 140 1 is_stmt 0 view .LVU143
 719 004a 10BD     		pop	{r4, pc}
 720              	.LVL45:
 721              	.L44:
 130:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 722              		.loc 1 130 5 is_stmt 1 view .LVU144
 131:Core/Src/menu.cpp ****         break;
 723              		.loc 1 131 9 view .LVU145
 131:Core/Src/menu.cpp ****         break;
 724              		.loc 1 131 20 is_stmt 0 view .LVU146
 725 004c 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 131:Core/Src/menu.cpp ****         break;
 726              		.loc 1 131 18 view .LVU147
 727 004e 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 728 0050 5340     		eors	r3, r3, r2
 729 0052 2374     		strb	r3, [r4, #16]
 132:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 730              		.loc 1 132 9 is_stmt 1 view .LVU148
 731 0054 F9E7     		b	.L39
 732              	.L42:
 133:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 733              		.loc 1 133 5 view .LVU149
 134:Core/Src/menu.cpp ****         break;
 734              		.loc 1 134 9 view .LVU150
 134:Core/Src/menu.cpp ****         break;
 735              		.loc 1 134 20 is_stmt 0 view .LVU151
 736 0056 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 134:Core/Src/menu.cpp ****         break;
 737              		.loc 1 134 18 view .LVU152
 738 0058 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 739 005a 5340     		eors	r3, r3, r2
 740 005c 2374     		strb	r3, [r4, #16]
 135:Core/Src/menu.cpp **** 
 741              		.loc 1 135 9 is_stmt 1 view .LVU153
 140:Core/Src/menu.cpp **** 
 742              		.loc 1 140 1 is_stmt 0 view .LVU154
 743 005e F4E7     		b	.L39
 744              		.cfi_endproc
 745              	.LFE1989:
 746              		.fnend
 748              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 749              		.align	1
 750              		.global	_ZN4menu9menu_menuEv
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv4-sp-d16
 756              	_ZN4menu9menu_menuEv:
 757              		.fnstart
 758              	.LVL46:
 759              	.LFB1990:
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 760              		.loc 1 143 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
ARM GAS  /tmp/cc9L4PIe.s 			page 26


 764              		.loc 1 143 1 is_stmt 0 view .LVU156
 765 0000 10B5     		push	{r4, lr}
 766              		.save {r4, lr}
 767              	.LCFI9:
 768              		.cfi_def_cfa_offset 8
 769              		.cfi_offset 4, -8
 770              		.cfi_offset 14, -4
 771 0002 0446     		mov	r4, r0
 144:Core/Src/menu.cpp ****     {
 772              		.loc 1 144 5 is_stmt 1 view .LVU157
 144:Core/Src/menu.cpp ****     {
 773              		.loc 1 144 28 is_stmt 0 view .LVU158
 774 0004 4069     		ldr	r0, [r0, #20]
 775              	.LVL47:
 144:Core/Src/menu.cpp ****     {
 776              		.loc 1 144 28 view .LVU159
 777 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 778              	.LVL48:
 144:Core/Src/menu.cpp ****     {
 779              		.loc 1 144 5 view .LVU160
 780 000a 10B9     		cbnz	r0, .L53
 781              	.L51:
 148:Core/Src/menu.cpp **** }
 782              		.loc 1 148 5 is_stmt 1 view .LVU161
 148:Core/Src/menu.cpp **** }
 783              		.loc 1 148 16 is_stmt 0 view .LVU162
 784 000c 0123     		movs	r3, #1
 785 000e 2370     		strb	r3, [r4]
 149:Core/Src/menu.cpp **** 
 786              		.loc 1 149 1 view .LVU163
 787 0010 10BD     		pop	{r4, pc}
 788              	.LVL49:
 789              	.L53:
 146:Core/Src/menu.cpp ****     }
 790              		.loc 1 146 9 is_stmt 1 view .LVU164
 146:Core/Src/menu.cpp ****     }
 791              		.loc 1 146 31 is_stmt 0 view .LVU165
 792 0012 6069     		ldr	r0, [r4, #20]
 793 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 794              	.LVL50:
 795 0018 F8E7     		b	.L51
 796              		.cfi_endproc
 797              	.LFE1990:
 798              		.fnend
 800              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 801              		.align	1
 802              		.global	_ZN4menu9menu_backEv
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	_ZN4menu9menu_backEv:
 809              		.fnstart
 810              	.LVL51:
 811              	.LFB1991:
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 812              		.loc 1 152 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9L4PIe.s 			page 27


 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 816              		.loc 1 152 1 is_stmt 0 view .LVU167
 817 0000 10B5     		push	{r4, lr}
 818              		.save {r4, lr}
 819              	.LCFI10:
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 4, -8
 822              		.cfi_offset 14, -4
 823 0002 0446     		mov	r4, r0
 153:Core/Src/menu.cpp ****     {
 824              		.loc 1 153 5 is_stmt 1 view .LVU168
 153:Core/Src/menu.cpp ****     {
 825              		.loc 1 153 28 is_stmt 0 view .LVU169
 826 0004 4069     		ldr	r0, [r0, #20]
 827              	.LVL52:
 153:Core/Src/menu.cpp ****     {
 828              		.loc 1 153 28 view .LVU170
 829 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 830              	.LVL53:
 153:Core/Src/menu.cpp ****     {
 831              		.loc 1 153 5 view .LVU171
 832 000a 18B9     		cbnz	r0, .L57
 833              	.L55:
 157:Core/Src/menu.cpp **** }
 834              		.loc 1 157 5 is_stmt 1 view .LVU172
 157:Core/Src/menu.cpp **** }
 835              		.loc 1 157 36 is_stmt 0 view .LVU173
 836 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 157:Core/Src/menu.cpp **** }
 837              		.loc 1 157 18 view .LVU174
 838 000e DB08     		lsrs	r3, r3, #3
 157:Core/Src/menu.cpp **** }
 839              		.loc 1 157 16 view .LVU175
 840 0010 2370     		strb	r3, [r4]
 158:Core/Src/menu.cpp **** 
 841              		.loc 1 158 1 view .LVU176
 842 0012 10BD     		pop	{r4, pc}
 843              	.LVL54:
 844              	.L57:
 155:Core/Src/menu.cpp ****     }
 845              		.loc 1 155 9 is_stmt 1 view .LVU177
 155:Core/Src/menu.cpp ****     }
 846              		.loc 1 155 31 is_stmt 0 view .LVU178
 847 0014 6069     		ldr	r0, [r4, #20]
 848 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 849              	.LVL55:
 850 001a F7E7     		b	.L55
 851              		.cfi_endproc
 852              	.LFE1991:
 853              		.fnend
 855              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 856              		.align	1
 857              		.global	_ZN4menu9menu_prevEv
 858              		.syntax unified
ARM GAS  /tmp/cc9L4PIe.s 			page 28


 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	_ZN4menu9menu_prevEv:
 864              		.fnstart
 865              	.LVL56:
 866              	.LFB1992:
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 867              		.loc 1 161 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 871              		.loc 1 161 1 is_stmt 0 view .LVU180
 872 0000 10B5     		push	{r4, lr}
 873              		.save {r4, lr}
 874              	.LCFI11:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
 162:Core/Src/menu.cpp ****     {
 879              		.loc 1 162 5 is_stmt 1 view .LVU181
 162:Core/Src/menu.cpp ****     {
 880              		.loc 1 162 28 is_stmt 0 view .LVU182
 881 0004 4069     		ldr	r0, [r0, #20]
 882              	.LVL57:
 162:Core/Src/menu.cpp ****     {
 883              		.loc 1 162 28 view .LVU183
 884 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 885              	.LVL58:
 162:Core/Src/menu.cpp ****     {
 886              		.loc 1 162 5 view .LVU184
 887 000a 88B9     		cbnz	r0, .L69
 888              	.L59:
 166:Core/Src/menu.cpp ****     {
 889              		.loc 1 166 5 is_stmt 1 view .LVU185
 166:Core/Src/menu.cpp ****     {
 890              		.loc 1 166 13 is_stmt 0 view .LVU186
 891 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 892 000e 013B     		subs	r3, r3, #1
 893 0010 172B     		cmp	r3, #23
 894 0012 13D8     		bhi	.L58
 895 0014 DFE803F0 		tbb	[pc, r3]
 896              	.L62:
 897 0018 10       		.byte	(.L67-.L62)/2
 898 0019 13       		.byte	(.L66-.L62)/2
 899 001a 16       		.byte	(.L65-.L62)/2
 900 001b 12       		.byte	(.L58-.L62)/2
 901 001c 12       		.byte	(.L58-.L62)/2
 902 001d 12       		.byte	(.L58-.L62)/2
 903 001e 12       		.byte	(.L58-.L62)/2
 904 001f 19       		.byte	(.L64-.L62)/2
 905 0020 12       		.byte	(.L58-.L62)/2
 906 0021 12       		.byte	(.L58-.L62)/2
 907 0022 12       		.byte	(.L58-.L62)/2
 908 0023 12       		.byte	(.L58-.L62)/2
ARM GAS  /tmp/cc9L4PIe.s 			page 29


 909 0024 12       		.byte	(.L58-.L62)/2
 910 0025 12       		.byte	(.L58-.L62)/2
 911 0026 12       		.byte	(.L58-.L62)/2
 912 0027 1E       		.byte	(.L63-.L62)/2
 913 0028 12       		.byte	(.L58-.L62)/2
 914 0029 12       		.byte	(.L58-.L62)/2
 915 002a 12       		.byte	(.L58-.L62)/2
 916 002b 12       		.byte	(.L58-.L62)/2
 917 002c 12       		.byte	(.L58-.L62)/2
 918 002d 12       		.byte	(.L58-.L62)/2
 919 002e 12       		.byte	(.L58-.L62)/2
 920 002f 23       		.byte	(.L61-.L62)/2
 921              		.p2align 1
 922              	.L69:
 164:Core/Src/menu.cpp ****     }
 923              		.loc 1 164 9 is_stmt 1 view .LVU187
 164:Core/Src/menu.cpp ****     }
 924              		.loc 1 164 31 is_stmt 0 view .LVU188
 925 0030 6069     		ldr	r0, [r4, #20]
 926 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 927              	.LVL59:
 928 0036 E9E7     		b	.L59
 929              	.L67:
 170:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 930              		.loc 1 170 5 is_stmt 1 view .LVU189
 171:Core/Src/menu.cpp ****         break;
 931              		.loc 1 171 9 view .LVU190
 171:Core/Src/menu.cpp ****         break;
 932              		.loc 1 171 19 is_stmt 0 view .LVU191
 933 0038 0323     		movs	r3, #3
 934 003a 2370     		strb	r3, [r4]
 172:Core/Src/menu.cpp ****     case MENU_SQ:
 935              		.loc 1 172 9 is_stmt 1 view .LVU192
 936              	.L58:
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 937              		.loc 1 192 1 is_stmt 0 view .LVU193
 938 003c 10BD     		pop	{r4, pc}
 939              	.LVL60:
 940              	.L66:
 173:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 941              		.loc 1 173 5 is_stmt 1 view .LVU194
 174:Core/Src/menu.cpp ****         break;
 942              		.loc 1 174 9 view .LVU195
 174:Core/Src/menu.cpp ****         break;
 943              		.loc 1 174 19 is_stmt 0 view .LVU196
 944 003e 0123     		movs	r3, #1
 945 0040 2370     		strb	r3, [r4]
 175:Core/Src/menu.cpp ****     case MENU_TMO:
 946              		.loc 1 175 9 is_stmt 1 view .LVU197
 947 0042 FBE7     		b	.L58
 948              	.L65:
 176:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 949              		.loc 1 176 5 view .LVU198
 177:Core/Src/menu.cpp ****         break;
 950              		.loc 1 177 9 view .LVU199
 177:Core/Src/menu.cpp ****         break;
 951              		.loc 1 177 19 is_stmt 0 view .LVU200
ARM GAS  /tmp/cc9L4PIe.s 			page 30


 952 0044 0223     		movs	r3, #2
 953 0046 2370     		strb	r3, [r4]
 178:Core/Src/menu.cpp ****     case MENU_CH_IN:
 954              		.loc 1 178 9 is_stmt 1 view .LVU201
 955 0048 F8E7     		b	.L58
 956              	.L64:
 179:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 957              		.loc 1 179 5 view .LVU202
 180:Core/Src/menu.cpp ****         break;
 958              		.loc 1 180 9 view .LVU203
 180:Core/Src/menu.cpp ****         break;
 959              		.loc 1 180 20 is_stmt 0 view .LVU204
 960 004a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 180:Core/Src/menu.cpp ****         break;
 961              		.loc 1 180 18 view .LVU205
 962 004c 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 963 004e 5340     		eors	r3, r3, r2
 964 0050 2374     		strb	r3, [r4, #16]
 181:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 965              		.loc 1 181 9 is_stmt 1 view .LVU206
 966 0052 F3E7     		b	.L58
 967              	.L63:
 182:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 968              		.loc 1 182 5 view .LVU207
 183:Core/Src/menu.cpp ****         break;
 969              		.loc 1 183 9 view .LVU208
 183:Core/Src/menu.cpp ****         break;
 970              		.loc 1 183 20 is_stmt 0 view .LVU209
 971 0054 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 183:Core/Src/menu.cpp ****         break;
 972              		.loc 1 183 18 view .LVU210
 973 0056 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 974 0058 5340     		eors	r3, r3, r2
 975 005a 2374     		strb	r3, [r4, #16]
 184:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 976              		.loc 1 184 9 is_stmt 1 view .LVU211
 977 005c EEE7     		b	.L58
 978              	.L61:
 185:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 979              		.loc 1 185 5 view .LVU212
 186:Core/Src/menu.cpp ****         break;
 980              		.loc 1 186 9 view .LVU213
 186:Core/Src/menu.cpp ****         break;
 981              		.loc 1 186 20 is_stmt 0 view .LVU214
 982 005e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 186:Core/Src/menu.cpp ****         break;
 983              		.loc 1 186 18 view .LVU215
 984 0060 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 985 0062 5340     		eors	r3, r3, r2
 986 0064 2374     		strb	r3, [r4, #16]
 187:Core/Src/menu.cpp **** 
 987              		.loc 1 187 9 is_stmt 1 view .LVU216
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 988              		.loc 1 192 1 is_stmt 0 view .LVU217
 989 0066 E9E7     		b	.L58
 990              		.cfi_endproc
 991              	.LFE1992:
ARM GAS  /tmp/cc9L4PIe.s 			page 31


 992              		.fnend
 994              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 995              		.align	1
 996              		.global	_ZN4menu11menu_numberEc
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	_ZN4menu11menu_numberEc:
 1003              		.fnstart
 1004              	.LVL61:
 1005              	.LFB1993:
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1006              		.loc 1 194 1 is_stmt 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1010              		.loc 1 194 1 is_stmt 0 view .LVU219
 1011 0000 38B5     		push	{r3, r4, r5, lr}
 1012              		.save {r3, r4, r5, lr}
 1013              	.LCFI12:
 1014              		.cfi_def_cfa_offset 16
 1015              		.cfi_offset 3, -16
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 5, -8
 1018              		.cfi_offset 14, -4
 1019 0002 0446     		mov	r4, r0
 1020 0004 0D46     		mov	r5, r1
 195:Core/Src/menu.cpp ****     {
 1021              		.loc 1 195 5 is_stmt 1 view .LVU220
 195:Core/Src/menu.cpp ****     {
 1022              		.loc 1 195 28 is_stmt 0 view .LVU221
 1023 0006 4069     		ldr	r0, [r0, #20]
 1024              	.LVL62:
 195:Core/Src/menu.cpp ****     {
 1025              		.loc 1 195 28 view .LVU222
 1026 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1027              	.LVL63:
 195:Core/Src/menu.cpp ****     {
 1028              		.loc 1 195 5 view .LVU223
 1029 000c 48B9     		cbnz	r0, .L76
 1030              	.L71:
 199:Core/Src/menu.cpp ****     {
 1031              		.loc 1 199 5 is_stmt 1 view .LVU224
 199:Core/Src/menu.cpp ****     {
 1032              		.loc 1 199 8 is_stmt 0 view .LVU225
 1033 000e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 199:Core/Src/menu.cpp ****     {
 1034              		.loc 1 199 5 view .LVU226
 1035 0010 33B1     		cbz	r3, .L70
 201:Core/Src/menu.cpp ****         {
 1036              		.loc 1 201 9 is_stmt 1 view .LVU227
 201:Core/Src/menu.cpp ****         {
 1037              		.loc 1 201 17 is_stmt 0 view .LVU228
 1038 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 201:Core/Src/menu.cpp ****         {
ARM GAS  /tmp/cc9L4PIe.s 			page 32


 1039              		.loc 1 201 9 view .LVU229
 1040 0014 102A     		cmp	r2, #16
 1041 0016 0ED0     		beq	.L73
 1042 0018 182A     		cmp	r2, #24
 1043 001a 12D0     		beq	.L74
 1044 001c 082A     		cmp	r2, #8
 1045 001e 04D0     		beq	.L77
 1046              	.L70:
 220:Core/Src/menu.cpp **** void menu::menu_up()
 1047              		.loc 1 220 1 view .LVU230
 1048 0020 38BD     		pop	{r3, r4, r5, pc}
 1049              	.LVL64:
 1050              	.L76:
 197:Core/Src/menu.cpp ****     }
 1051              		.loc 1 197 9 is_stmt 1 view .LVU231
 197:Core/Src/menu.cpp ****     }
 1052              		.loc 1 197 31 is_stmt 0 view .LVU232
 1053 0022 6069     		ldr	r0, [r4, #20]
 1054 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1055              	.LVL65:
 1056 0028 F1E7     		b	.L71
 1057              	.L77:
 203:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1058              		.loc 1 203 9 is_stmt 1 view .LVU233
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1059              		.loc 1 204 13 view .LVU234
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1060              		.loc 1 204 16 is_stmt 0 view .LVU235
 1061 002a 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1062              		.loc 1 204 26 view .LVU236
 1063 002c A118     		adds	r1, r4, r2
 1064 002e 8D71     		strb	r5, [r1, #6]
 205:Core/Src/menu.cpp ****             break;
 1065              		.loc 1 205 13 is_stmt 1 view .LVU237
 205:Core/Src/menu.cpp ****             break;
 1066              		.loc 1 205 22 is_stmt 0 view .LVU238
 1067 0030 5340     		eors	r3, r3, r2
 1068 0032 2374     		strb	r3, [r4, #16]
 206:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1069              		.loc 1 206 13 is_stmt 1 view .LVU239
 1070 0034 F4E7     		b	.L70
 1071              	.L73:
 207:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1072              		.loc 1 207 9 view .LVU240
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1073              		.loc 1 208 13 view .LVU241
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1074              		.loc 1 208 16 is_stmt 0 view .LVU242
 1075 0036 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1076              		.loc 1 208 26 view .LVU243
 1077 0038 A118     		adds	r1, r4, r2
 1078 003a 8D70     		strb	r5, [r1, #2]
 209:Core/Src/menu.cpp ****             break;
 1079              		.loc 1 209 13 is_stmt 1 view .LVU244
 209:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cc9L4PIe.s 			page 33


 1080              		.loc 1 209 22 is_stmt 0 view .LVU245
 1081 003c 5340     		eors	r3, r3, r2
 1082 003e 2374     		strb	r3, [r4, #16]
 210:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1083              		.loc 1 210 13 is_stmt 1 view .LVU246
 1084 0040 EEE7     		b	.L70
 1085              	.L74:
 211:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1086              		.loc 1 211 9 view .LVU247
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1087              		.loc 1 212 13 view .LVU248
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1088              		.loc 1 212 17 is_stmt 0 view .LVU249
 1089 0042 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1090              		.loc 1 212 27 view .LVU250
 1091 0044 A118     		adds	r1, r4, r2
 1092 0046 4D73     		strb	r5, [r1, #13]
 213:Core/Src/menu.cpp ****             break;
 1093              		.loc 1 213 13 is_stmt 1 view .LVU251
 213:Core/Src/menu.cpp ****             break;
 1094              		.loc 1 213 22 is_stmt 0 view .LVU252
 1095 0048 5340     		eors	r3, r3, r2
 1096 004a 2374     		strb	r3, [r4, #16]
 214:Core/Src/menu.cpp **** 
 1097              		.loc 1 214 13 is_stmt 1 view .LVU253
 220:Core/Src/menu.cpp **** void menu::menu_up()
 1098              		.loc 1 220 1 is_stmt 0 view .LVU254
 1099 004c E8E7     		b	.L70
 1100              		.cfi_endproc
 1101              	.LFE1993:
 1102              		.fnend
 1104              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1105              		.align	1
 1106              		.global	_ZN4menu7menu_upEv
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu fpv4-sp-d16
 1112              	_ZN4menu7menu_upEv:
 1113              		.fnstart
 1114              	.LVL66:
 1115              	.LFB1994:
 222:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1116              		.loc 1 222 1 is_stmt 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1120              		.loc 1 222 1 is_stmt 0 view .LVU256
 1121 0000 10B5     		push	{r4, lr}
 1122              		.save {r4, lr}
 1123              	.LCFI13:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 4, -8
 1126              		.cfi_offset 14, -4
 1127 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc9L4PIe.s 			page 34


 223:Core/Src/menu.cpp ****     {
 1128              		.loc 1 223 5 is_stmt 1 view .LVU257
 223:Core/Src/menu.cpp ****     {
 1129              		.loc 1 223 28 is_stmt 0 view .LVU258
 1130 0004 4069     		ldr	r0, [r0, #20]
 1131              	.LVL67:
 223:Core/Src/menu.cpp ****     {
 1132              		.loc 1 223 28 view .LVU259
 1133 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1134              	.LVL68:
 223:Core/Src/menu.cpp ****     {
 1135              		.loc 1 223 5 view .LVU260
 1136 000a 50B9     		cbnz	r0, .L86
 1137              	.L79:
 227:Core/Src/menu.cpp ****     {
 1138              		.loc 1 227 5 is_stmt 1 view .LVU261
 227:Core/Src/menu.cpp ****     {
 1139              		.loc 1 227 13 is_stmt 0 view .LVU262
 1140 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 227:Core/Src/menu.cpp ****     {
 1141              		.loc 1 227 5 view .LVU263
 1142 000e 082B     		cmp	r3, #8
 1143 0010 0BD0     		beq	.L80
 1144 0012 102B     		cmp	r3, #16
 1145 0014 0FD0     		beq	.L81
 241:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1146              		.loc 1 241 5 is_stmt 1 view .LVU264
 242:Core/Src/menu.cpp ****         {
 1147              		.loc 1 242 9 view .LVU265
 242:Core/Src/menu.cpp ****         {
 1148              		.loc 1 242 12 is_stmt 0 view .LVU266
 1149 0016 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 242:Core/Src/menu.cpp ****         {
 1150              		.loc 1 242 9 view .LVU267
 1151 0018 072B     		cmp	r3, #7
 1152 001a 0BD8     		bhi	.L78
 244:Core/Src/menu.cpp ****         }
 1153              		.loc 1 244 13 is_stmt 1 view .LVU268
 244:Core/Src/menu.cpp ****         }
 1154              		.loc 1 244 19 is_stmt 0 view .LVU269
 1155 001c 0133     		adds	r3, r3, #1
 1156 001e 2373     		strb	r3, [r4, #12]
 248:Core/Src/menu.cpp **** 
 1157              		.loc 1 248 1 view .LVU270
 1158 0020 08E0     		b	.L78
 1159              	.L86:
 225:Core/Src/menu.cpp ****     }
 1160              		.loc 1 225 9 is_stmt 1 view .LVU271
 225:Core/Src/menu.cpp ****     }
 1161              		.loc 1 225 31 is_stmt 0 view .LVU272
 1162 0022 6069     		ldr	r0, [r4, #20]
 1163 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1164              	.LVL69:
 1165 0028 F0E7     		b	.L79
 1166              	.L80:
 229:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1167              		.loc 1 229 5 is_stmt 1 view .LVU273
ARM GAS  /tmp/cc9L4PIe.s 			page 35


 230:Core/Src/menu.cpp ****         {
 1168              		.loc 1 230 9 view .LVU274
 230:Core/Src/menu.cpp ****         {
 1169              		.loc 1 230 12 is_stmt 0 view .LVU275
 1170 002a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 230:Core/Src/menu.cpp ****         {
 1171              		.loc 1 230 9 view .LVU276
 1172 002c 152B     		cmp	r3, #21
 1173 002e 01D8     		bhi	.L78
 232:Core/Src/menu.cpp ****         }
 1174              		.loc 1 232 13 is_stmt 1 view .LVU277
 232:Core/Src/menu.cpp ****         }
 1175              		.loc 1 232 18 is_stmt 0 view .LVU278
 1176 0030 0133     		adds	r3, r3, #1
 1177 0032 6372     		strb	r3, [r4, #9]
 1178              	.L78:
 248:Core/Src/menu.cpp **** 
 1179              		.loc 1 248 1 view .LVU279
 1180 0034 10BD     		pop	{r4, pc}
 1181              	.LVL70:
 1182              	.L81:
 235:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1183              		.loc 1 235 5 is_stmt 1 view .LVU280
 236:Core/Src/menu.cpp ****         {
 1184              		.loc 1 236 9 view .LVU281
 236:Core/Src/menu.cpp ****         {
 1185              		.loc 1 236 12 is_stmt 0 view .LVU282
 1186 0036 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 236:Core/Src/menu.cpp ****         {
 1187              		.loc 1 236 9 view .LVU283
 1188 0038 082B     		cmp	r3, #8
 1189 003a FBD8     		bhi	.L78
 238:Core/Src/menu.cpp ****         }
 1190              		.loc 1 238 13 is_stmt 1 view .LVU284
 238:Core/Src/menu.cpp ****         }
 1191              		.loc 1 238 18 is_stmt 0 view .LVU285
 1192 003c 0133     		adds	r3, r3, #1
 1193 003e 6371     		strb	r3, [r4, #5]
 1194 0040 F8E7     		b	.L78
 1195              		.cfi_endproc
 1196              	.LFE1994:
 1197              		.fnend
 1199              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1200              		.align	1
 1201              		.global	_ZN4menu9menu_downEv
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu fpv4-sp-d16
 1207              	_ZN4menu9menu_downEv:
 1208              		.fnstart
 1209              	.LVL71:
 1210              	.LFB1995:
 251:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1211              		.loc 1 251 1 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc9L4PIe.s 			page 36


 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 251:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1215              		.loc 1 251 1 is_stmt 0 view .LVU287
 1216 0000 10B5     		push	{r4, lr}
 1217              		.save {r4, lr}
 1218              	.LCFI14:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 1222 0002 0446     		mov	r4, r0
 252:Core/Src/menu.cpp ****     {
 1223              		.loc 1 252 5 is_stmt 1 view .LVU288
 252:Core/Src/menu.cpp ****     {
 1224              		.loc 1 252 28 is_stmt 0 view .LVU289
 1225 0004 4069     		ldr	r0, [r0, #20]
 1226              	.LVL72:
 252:Core/Src/menu.cpp ****     {
 1227              		.loc 1 252 28 view .LVU290
 1228 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1229              	.LVL73:
 252:Core/Src/menu.cpp ****     {
 1230              		.loc 1 252 5 view .LVU291
 1231 000a 48B9     		cbnz	r0, .L95
 1232              	.L88:
 256:Core/Src/menu.cpp ****     {
 1233              		.loc 1 256 5 is_stmt 1 view .LVU292
 256:Core/Src/menu.cpp ****     {
 1234              		.loc 1 256 13 is_stmt 0 view .LVU293
 1235 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 256:Core/Src/menu.cpp ****     {
 1236              		.loc 1 256 5 view .LVU294
 1237 000e 082B     		cmp	r3, #8
 1238 0010 0AD0     		beq	.L89
 1239 0012 102B     		cmp	r3, #16
 1240 0014 0DD0     		beq	.L90
 270:Core/Src/menu.cpp ****         if(volVal > 0)
 1241              		.loc 1 270 5 is_stmt 1 view .LVU295
 271:Core/Src/menu.cpp ****         {
 1242              		.loc 1 271 9 view .LVU296
 271:Core/Src/menu.cpp ****         {
 1243              		.loc 1 271 12 is_stmt 0 view .LVU297
 1244 0016 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 271:Core/Src/menu.cpp ****         {
 1245              		.loc 1 271 9 view .LVU298
 1246 0018 53B1     		cbz	r3, .L87
 273:Core/Src/menu.cpp ****         }
 1247              		.loc 1 273 13 is_stmt 1 view .LVU299
 273:Core/Src/menu.cpp ****         }
 1248              		.loc 1 273 19 is_stmt 0 view .LVU300
 1249 001a 013B     		subs	r3, r3, #1
 1250 001c 2373     		strb	r3, [r4, #12]
 278:Core/Src/menu.cpp **** 
 1251              		.loc 1 278 1 view .LVU301
 1252 001e 07E0     		b	.L87
 1253              	.L95:
 254:Core/Src/menu.cpp ****     }
 1254              		.loc 1 254 9 is_stmt 1 view .LVU302
ARM GAS  /tmp/cc9L4PIe.s 			page 37


 254:Core/Src/menu.cpp ****     }
 1255              		.loc 1 254 31 is_stmt 0 view .LVU303
 1256 0020 6069     		ldr	r0, [r4, #20]
 1257 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1258              	.LVL74:
 1259 0026 F1E7     		b	.L88
 1260              	.L89:
 258:Core/Src/menu.cpp ****         if(chVal > 0)
 1261              		.loc 1 258 5 is_stmt 1 view .LVU304
 259:Core/Src/menu.cpp ****         {
 1262              		.loc 1 259 9 view .LVU305
 259:Core/Src/menu.cpp ****         {
 1263              		.loc 1 259 12 is_stmt 0 view .LVU306
 1264 0028 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 259:Core/Src/menu.cpp ****         {
 1265              		.loc 1 259 9 view .LVU307
 1266 002a 0BB1     		cbz	r3, .L87
 261:Core/Src/menu.cpp ****         }
 1267              		.loc 1 261 9 is_stmt 1 view .LVU308
 261:Core/Src/menu.cpp ****         }
 1268              		.loc 1 261 14 is_stmt 0 view .LVU309
 1269 002c 013B     		subs	r3, r3, #1
 1270 002e 6372     		strb	r3, [r4, #9]
 1271              	.L87:
 278:Core/Src/menu.cpp **** 
 1272              		.loc 1 278 1 view .LVU310
 1273 0030 10BD     		pop	{r4, pc}
 1274              	.LVL75:
 1275              	.L90:
 264:Core/Src/menu.cpp ****         if(sqVal > 0)
 1276              		.loc 1 264 5 is_stmt 1 view .LVU311
 265:Core/Src/menu.cpp ****         {
 1277              		.loc 1 265 9 view .LVU312
 265:Core/Src/menu.cpp ****         {
 1278              		.loc 1 265 12 is_stmt 0 view .LVU313
 1279 0032 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 265:Core/Src/menu.cpp ****         {
 1280              		.loc 1 265 9 view .LVU314
 1281 0034 002B     		cmp	r3, #0
 1282 0036 FBD0     		beq	.L87
 267:Core/Src/menu.cpp ****         }
 1283              		.loc 1 267 9 is_stmt 1 view .LVU315
 267:Core/Src/menu.cpp ****         }
 1284              		.loc 1 267 14 is_stmt 0 view .LVU316
 1285 0038 013B     		subs	r3, r3, #1
 1286 003a 6371     		strb	r3, [r4, #5]
 1287 003c F8E7     		b	.L87
 1288              		.cfi_endproc
 1289              	.LFE1995:
 1290              		.fnend
 1292              		.section	.rodata._ZN4menu13keyboard_pollEv.str1.4,"aMS",%progbits,1
 1293              		.align	2
 1294              	.LC9:
 1295 0000 6E657874 		.ascii	"next\000"
 1295      00
 1296 0005 000000   		.align	2
 1297              	.LC10:
ARM GAS  /tmp/cc9L4PIe.s 			page 38


 1298 0008 3600     		.ascii	"6\000"
 1299 000a 0000     		.align	2
 1300              	.LC11:
 1301 000c 3500     		.ascii	"5\000"
 1302 000e 0000     		.align	2
 1303              	.LC12:
 1304 0010 3400     		.ascii	"4\000"
 1305 0012 0000     		.align	2
 1306              	.LC13:
 1307 0014 70726576 		.ascii	"prev\000"
 1307      00
 1308 0019 000000   		.align	2
 1309              	.LC14:
 1310 001c 3800     		.ascii	"8\000"
 1311 001e 0000     		.align	2
 1312              	.LC15:
 1313 0020 3700     		.ascii	"7\000"
 1314 0022 0000     		.align	2
 1315              	.LC16:
 1316 0024 3900     		.ascii	"9\000"
 1317 0026 0000     		.align	2
 1318              	.LC17:
 1319 0028 646F776E 		.ascii	"down\000"
 1319      00
 1320 002d 000000   		.align	2
 1321              	.LC18:
 1322 0030 4D454E55 		.ascii	"MENUs\000"
 1322      7300
 1323 0036 0000     		.align	2
 1324              	.LC19:
 1325 0038 4D454E55 		.ascii	"MENU\000"
 1325      00
 1326 003d 000000   		.align	2
 1327              	.LC20:
 1328 0040 3000     		.ascii	"0\000"
 1329 0042 0000     		.align	2
 1330              	.LC21:
 1331 0044 4261636B 		.ascii	"Back\000"
 1331      00
 1332 0049 000000   		.align	2
 1333              	.LC22:
 1334 004c 757000   		.ascii	"up\000"
 1335 004f 00       		.align	2
 1336              	.LC23:
 1337 0050 3300     		.ascii	"3\000"
 1338 0052 0000     		.align	2
 1339              	.LC24:
 1340 0054 3200     		.ascii	"2\000"
 1341 0056 0000     		.align	2
 1342              	.LC25:
 1343 0058 3100     		.ascii	"1\000"
 1344              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1345              		.align	1
 1346              		.global	_ZN4menu13keyboard_pollEv
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
ARM GAS  /tmp/cc9L4PIe.s 			page 39


 1350              		.fpu fpv4-sp-d16
 1352              	_ZN4menu13keyboard_pollEv:
 1353              		.fnstart
 1354              	.LVL76:
 1355              	.LFB1996:
 283:Core/Src/menu.cpp ****     int sds=0;
 1356              		.loc 1 283 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 24
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 283:Core/Src/menu.cpp ****     int sds=0;
 1360              		.loc 1 283 1 is_stmt 0 view .LVU318
 1361 0000 30B5     		push	{r4, r5, lr}
 1362              		.save {r4, r5, lr}
 1363              	.LCFI15:
 1364              		.cfi_def_cfa_offset 12
 1365              		.cfi_offset 4, -12
 1366              		.cfi_offset 5, -8
 1367              		.cfi_offset 14, -4
 1368              		.pad #28
 1369 0002 87B0     		sub	sp, sp, #28
 1370              	.LCFI16:
 1371              		.cfi_def_cfa_offset 40
 1372 0004 0546     		mov	r5, r0
 284:Core/Src/menu.cpp ****     char x[20];
 1373              		.loc 1 284 5 is_stmt 1 view .LVU319
 1374              	.LVL77:
 285:Core/Src/menu.cpp **** 
 1375              		.loc 1 285 5 view .LVU320
 287:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 1376              		.loc 1 287 5 view .LVU321
 290:Core/Src/menu.cpp ****     while(sds<10)
 1377              		.loc 1 290 5 view .LVU322
 290:Core/Src/menu.cpp ****     while(sds<10)
 1378              		.loc 1 290 15 is_stmt 0 view .LVU323
 1379 0006 A94A     		ldr	r2, .L127
 1380 0008 5369     		ldr	r3, [r2, #20]
 1381 000a 43F40063 		orr	r3, r3, #2048
 1382 000e 5361     		str	r3, [r2, #20]
 284:Core/Src/menu.cpp ****     char x[20];
 1383              		.loc 1 284 9 view .LVU324
 1384 0010 0023     		movs	r3, #0
 1385              	.LVL78:
 1386              	.L98:
 291:Core/Src/menu.cpp ****     {
 1387              		.loc 1 291 5 is_stmt 1 view .LVU325
 291:Core/Src/menu.cpp ****     {
 1388              		.loc 1 291 14 view .LVU326
 1389 0012 092B     		cmp	r3, #9
 1390 0014 01DC     		bgt	.L97
 293:Core/Src/menu.cpp ****     }
 1391              		.loc 1 293 9 view .LVU327
 293:Core/Src/menu.cpp ****     }
 1392              		.loc 1 293 12 is_stmt 0 view .LVU328
 1393 0016 0133     		adds	r3, r3, #1
 1394              	.LVL79:
 291:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc9L4PIe.s 			page 40


 1395              		.loc 1 291 5 view .LVU329
 1396 0018 FBE7     		b	.L98
 1397              	.L97:
 295:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1398              		.loc 1 295 5 is_stmt 1 view .LVU330
 1399              	.LVL80:
 297:Core/Src/menu.cpp ****     {
 1400              		.loc 1 297 5 view .LVU331
 297:Core/Src/menu.cpp ****     {
 1401              		.loc 1 297 20 is_stmt 0 view .LVU332
 1402 001a A44B     		ldr	r3, .L127
 1403 001c 1B69     		ldr	r3, [r3, #16]
 297:Core/Src/menu.cpp ****     {
 1404              		.loc 1 297 23 view .LVU333
 1405 001e 03F40743 		and	r3, r3, #34560
 297:Core/Src/menu.cpp ****     {
 1406              		.loc 1 297 5 view .LVU334
 1407 0022 B3F5806F 		cmp	r3, #1024
 1408 0026 31D0     		beq	.L99
 1409 0028 12D8     		bhi	.L100
 1410 002a B3F5807F 		cmp	r3, #256
 1411 002e 3AD0     		beq	.L101
 1412 0030 B3F5007F 		cmp	r3, #512
 1413 0034 1CD1     		bne	.L103
 309:Core/Src/menu.cpp ****             menu_number('5');
 1414              		.loc 1 309 9 is_stmt 1 view .LVU335
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1415              		.loc 1 310 13 view .LVU336
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1416              		.loc 1 310 24 is_stmt 0 view .LVU337
 1417 0036 3521     		movs	r1, #53
 1418 0038 2846     		mov	r0, r5
 1419              	.LVL81:
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1420              		.loc 1 310 24 view .LVU338
 1421 003a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1422              	.LVL82:
 311:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1423              		.loc 1 311 13 is_stmt 1 view .LVU339
 311:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1424              		.loc 1 311 20 is_stmt 0 view .LVU340
 1425 003e 3523     		movs	r3, #53
 1426 0040 ADF80430 		strh	r3, [sp, #4]	@ movhi
 312:Core/Src/menu.cpp ****             break;
 1427              		.loc 1 312 13 is_stmt 1 view .LVU341
 312:Core/Src/menu.cpp ****             break;
 1428              		.loc 1 312 31 is_stmt 0 view .LVU342
 1429 0044 9A4A     		ldr	r2, .L127+4
 1430 0046 01A9     		add	r1, sp, #4
 1431 0048 A869     		ldr	r0, [r5, #24]
 1432 004a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1433              	.LVL83:
 1434 004e 0FE0     		b	.L103
 1435              	.LVL84:
 1436              	.L100:
 297:Core/Src/menu.cpp ****     {
 1437              		.loc 1 297 5 view .LVU343
ARM GAS  /tmp/cc9L4PIe.s 			page 41


 1438 0050 B3F5004F 		cmp	r3, #32768
 1439 0054 0CD1     		bne	.L103
 299:Core/Src/menu.cpp ****             menu_next();//R
 1440              		.loc 1 299 9 is_stmt 1 view .LVU344
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1441              		.loc 1 300 13 view .LVU345
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1442              		.loc 1 300 22 is_stmt 0 view .LVU346
 1443 0056 2846     		mov	r0, r5
 1444              	.LVL85:
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1445              		.loc 1 300 22 view .LVU347
 1446 0058 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1447              	.LVL86:
 301:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1448              		.loc 1 301 13 is_stmt 1 view .LVU348
 301:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1449              		.loc 1 301 20 is_stmt 0 view .LVU349
 1450 005c 954A     		ldr	r2, .L127+8
 1451 005e 92E80300 		ldm	r2, {r0, r1}
 1452 0062 0190     		str	r0, [sp, #4]
 1453 0064 8DF80810 		strb	r1, [sp, #8]
 302:Core/Src/menu.cpp ****             break;
 1454              		.loc 1 302 13 is_stmt 1 view .LVU350
 302:Core/Src/menu.cpp ****             break;
 1455              		.loc 1 302 31 is_stmt 0 view .LVU351
 1456 0068 01A9     		add	r1, sp, #4
 1457 006a A869     		ldr	r0, [r5, #24]
 1458 006c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1459              	.LVL87:
 1460              	.L103:
 322:Core/Src/menu.cpp **** 
 1461              		.loc 1 322 5 is_stmt 1 view .LVU352
 322:Core/Src/menu.cpp **** 
 1462              		.loc 1 322 15 is_stmt 0 view .LVU353
 1463 0070 8E4B     		ldr	r3, .L127
 1464 0072 5A69     		ldr	r2, [r3, #20]
 1465 0074 22F40062 		bic	r2, r2, #2048
 1466 0078 5A61     		str	r2, [r3, #20]
 324:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1467              		.loc 1 324 5 is_stmt 1 view .LVU354
 1468              	.LVL88:
 325:Core/Src/menu.cpp ****     
 1469              		.loc 1 325 5 view .LVU355
 325:Core/Src/menu.cpp ****     
 1470              		.loc 1 325 15 is_stmt 0 view .LVU356
 1471 007a 5A69     		ldr	r2, [r3, #20]
 1472 007c 42F48052 		orr	r2, r2, #4096
 1473 0080 5A61     		str	r2, [r3, #20]
 295:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1474              		.loc 1 295 8 view .LVU357
 1475 0082 0023     		movs	r3, #0
 1476              	.LVL89:
 1477              	.L105:
 327:Core/Src/menu.cpp ****     {
 1478              		.loc 1 327 5 is_stmt 1 view .LVU358
 327:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc9L4PIe.s 			page 42


 1479              		.loc 1 327 14 view .LVU359
 1480 0084 092B     		cmp	r3, #9
 1481 0086 1BDC     		bgt	.L104
 329:Core/Src/menu.cpp ****     }
 1482              		.loc 1 329 9 view .LVU360
 329:Core/Src/menu.cpp ****     }
 1483              		.loc 1 329 12 is_stmt 0 view .LVU361
 1484 0088 0133     		adds	r3, r3, #1
 1485              	.LVL90:
 327:Core/Src/menu.cpp ****     {
 1486              		.loc 1 327 5 view .LVU362
 1487 008a FBE7     		b	.L105
 1488              	.LVL91:
 1489              	.L99:
 304:Core/Src/menu.cpp ****             menu_number('6');
 1490              		.loc 1 304 9 is_stmt 1 view .LVU363
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1491              		.loc 1 305 13 view .LVU364
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1492              		.loc 1 305 24 is_stmt 0 view .LVU365
 1493 008c 3621     		movs	r1, #54
 1494 008e 2846     		mov	r0, r5
 1495              	.LVL92:
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1496              		.loc 1 305 24 view .LVU366
 1497 0090 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1498              	.LVL93:
 306:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1499              		.loc 1 306 13 is_stmt 1 view .LVU367
 306:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1500              		.loc 1 306 20 is_stmt 0 view .LVU368
 1501 0094 3623     		movs	r3, #54
 1502 0096 ADF80430 		strh	r3, [sp, #4]	@ movhi
 307:Core/Src/menu.cpp ****             break;
 1503              		.loc 1 307 13 is_stmt 1 view .LVU369
 307:Core/Src/menu.cpp ****             break;
 1504              		.loc 1 307 31 is_stmt 0 view .LVU370
 1505 009a 874A     		ldr	r2, .L127+12
 1506 009c 01A9     		add	r1, sp, #4
 1507 009e A869     		ldr	r0, [r5, #24]
 1508 00a0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1509              	.LVL94:
 1510 00a4 E4E7     		b	.L103
 1511              	.LVL95:
 1512              	.L101:
 314:Core/Src/menu.cpp ****             menu_number('4');
 1513              		.loc 1 314 9 is_stmt 1 view .LVU371
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1514              		.loc 1 315 13 view .LVU372
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1515              		.loc 1 315 24 is_stmt 0 view .LVU373
 1516 00a6 3421     		movs	r1, #52
 1517 00a8 2846     		mov	r0, r5
 1518              	.LVL96:
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1519              		.loc 1 315 24 view .LVU374
 1520 00aa FFF7FEFF 		bl	_ZN4menu11menu_numberEc
ARM GAS  /tmp/cc9L4PIe.s 			page 43


 1521              	.LVL97:
 316:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1522              		.loc 1 316 13 is_stmt 1 view .LVU375
 316:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1523              		.loc 1 316 20 is_stmt 0 view .LVU376
 1524 00ae 3423     		movs	r3, #52
 1525 00b0 ADF80430 		strh	r3, [sp, #4]	@ movhi
 317:Core/Src/menu.cpp ****             break;
 1526              		.loc 1 317 13 is_stmt 1 view .LVU377
 317:Core/Src/menu.cpp ****             break;
 1527              		.loc 1 317 31 is_stmt 0 view .LVU378
 1528 00b4 814A     		ldr	r2, .L127+16
 1529 00b6 01A9     		add	r1, sp, #4
 1530 00b8 A869     		ldr	r0, [r5, #24]
 1531 00ba FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1532              	.LVL98:
 1533 00be D7E7     		b	.L103
 1534              	.LVL99:
 1535              	.L104:
 331:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1536              		.loc 1 331 5 is_stmt 1 view .LVU379
 333:Core/Src/menu.cpp ****     {
 1537              		.loc 1 333 5 view .LVU380
 333:Core/Src/menu.cpp ****     {
 1538              		.loc 1 333 20 is_stmt 0 view .LVU381
 1539 00c0 7A4B     		ldr	r3, .L127
 1540 00c2 1B69     		ldr	r3, [r3, #16]
 333:Core/Src/menu.cpp ****     {
 1541              		.loc 1 333 23 view .LVU382
 1542 00c4 03F40743 		and	r3, r3, #34560
 333:Core/Src/menu.cpp ****     {
 1543              		.loc 1 333 5 view .LVU383
 1544 00c8 B3F5806F 		cmp	r3, #1024
 1545 00cc 31D0     		beq	.L106
 1546 00ce 12D8     		bhi	.L107
 1547 00d0 B3F5807F 		cmp	r3, #256
 1548 00d4 3AD0     		beq	.L108
 1549 00d6 B3F5007F 		cmp	r3, #512
 1550 00da 1CD1     		bne	.L110
 345:Core/Src/menu.cpp ****             menu_number('7');
 1551              		.loc 1 345 9 is_stmt 1 view .LVU384
 346:Core/Src/menu.cpp ****             sprintf(x,"7");
 1552              		.loc 1 346 13 view .LVU385
 346:Core/Src/menu.cpp ****             sprintf(x,"7");
 1553              		.loc 1 346 24 is_stmt 0 view .LVU386
 1554 00dc 3721     		movs	r1, #55
 1555 00de 2846     		mov	r0, r5
 1556 00e0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1557              	.LVL100:
 347:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1558              		.loc 1 347 13 is_stmt 1 view .LVU387
 347:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1559              		.loc 1 347 20 is_stmt 0 view .LVU388
 1560 00e4 3723     		movs	r3, #55
 1561 00e6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 348:Core/Src/menu.cpp ****             break;
 1562              		.loc 1 348 13 is_stmt 1 view .LVU389
ARM GAS  /tmp/cc9L4PIe.s 			page 44


 348:Core/Src/menu.cpp ****             break;
 1563              		.loc 1 348 31 is_stmt 0 view .LVU390
 1564 00ea 754A     		ldr	r2, .L127+20
 1565 00ec 01A9     		add	r1, sp, #4
 1566 00ee A869     		ldr	r0, [r5, #24]
 1567 00f0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1568              	.LVL101:
 1569 00f4 0FE0     		b	.L110
 1570              	.L107:
 333:Core/Src/menu.cpp ****     {
 1571              		.loc 1 333 5 view .LVU391
 1572 00f6 B3F5004F 		cmp	r3, #32768
 1573 00fa 0CD1     		bne	.L110
 335:Core/Src/menu.cpp ****             menu_prev();//L
 1574              		.loc 1 335 9 is_stmt 1 view .LVU392
 336:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1575              		.loc 1 336 13 view .LVU393
 336:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1576              		.loc 1 336 22 is_stmt 0 view .LVU394
 1577 00fc 2846     		mov	r0, r5
 1578 00fe FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1579              	.LVL102:
 337:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1580              		.loc 1 337 13 is_stmt 1 view .LVU395
 337:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1581              		.loc 1 337 20 is_stmt 0 view .LVU396
 1582 0102 704A     		ldr	r2, .L127+24
 1583 0104 92E80300 		ldm	r2, {r0, r1}
 1584 0108 0190     		str	r0, [sp, #4]
 1585 010a 8DF80810 		strb	r1, [sp, #8]
 338:Core/Src/menu.cpp ****             break;
 1586              		.loc 1 338 13 is_stmt 1 view .LVU397
 338:Core/Src/menu.cpp ****             break;
 1587              		.loc 1 338 31 is_stmt 0 view .LVU398
 1588 010e 01A9     		add	r1, sp, #4
 1589 0110 A869     		ldr	r0, [r5, #24]
 1590 0112 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1591              	.LVL103:
 1592              	.L110:
 359:Core/Src/menu.cpp **** 
 1593              		.loc 1 359 5 is_stmt 1 view .LVU399
 359:Core/Src/menu.cpp **** 
 1594              		.loc 1 359 15 is_stmt 0 view .LVU400
 1595 0116 654B     		ldr	r3, .L127
 1596 0118 5A69     		ldr	r2, [r3, #20]
 1597 011a 22F48052 		bic	r2, r2, #4096
 1598 011e 5A61     		str	r2, [r3, #20]
 362:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1599              		.loc 1 362 5 is_stmt 1 view .LVU401
 1600              	.LVL104:
 363:Core/Src/menu.cpp ****     while(sds<10)
 1601              		.loc 1 363 5 view .LVU402
 363:Core/Src/menu.cpp ****     while(sds<10)
 1602              		.loc 1 363 15 is_stmt 0 view .LVU403
 1603 0120 5A69     		ldr	r2, [r3, #20]
 1604 0122 42F40052 		orr	r2, r2, #8192
 1605 0126 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/cc9L4PIe.s 			page 45


 331:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1606              		.loc 1 331 8 view .LVU404
 1607 0128 0024     		movs	r4, #0
 1608              	.LVL105:
 1609              	.L112:
 364:Core/Src/menu.cpp ****     {
 1610              		.loc 1 364 5 is_stmt 1 view .LVU405
 364:Core/Src/menu.cpp ****     {
 1611              		.loc 1 364 14 view .LVU406
 1612 012a 092C     		cmp	r4, #9
 1613 012c 1BDC     		bgt	.L111
 366:Core/Src/menu.cpp ****     }
 1614              		.loc 1 366 9 view .LVU407
 366:Core/Src/menu.cpp ****     }
 1615              		.loc 1 366 12 is_stmt 0 view .LVU408
 1616 012e 0134     		adds	r4, r4, #1
 1617              	.LVL106:
 364:Core/Src/menu.cpp ****     {
 1618              		.loc 1 364 5 view .LVU409
 1619 0130 FBE7     		b	.L112
 1620              	.LVL107:
 1621              	.L106:
 340:Core/Src/menu.cpp ****             menu_number('8');
 1622              		.loc 1 340 9 is_stmt 1 view .LVU410
 341:Core/Src/menu.cpp ****             sprintf(x,"8");
 1623              		.loc 1 341 13 view .LVU411
 341:Core/Src/menu.cpp ****             sprintf(x,"8");
 1624              		.loc 1 341 24 is_stmt 0 view .LVU412
 1625 0132 3821     		movs	r1, #56
 1626 0134 2846     		mov	r0, r5
 1627 0136 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1628              	.LVL108:
 342:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1629              		.loc 1 342 13 is_stmt 1 view .LVU413
 342:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1630              		.loc 1 342 20 is_stmt 0 view .LVU414
 1631 013a 3823     		movs	r3, #56
 1632 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 343:Core/Src/menu.cpp ****             break;
 1633              		.loc 1 343 13 is_stmt 1 view .LVU415
 343:Core/Src/menu.cpp ****             break;
 1634              		.loc 1 343 31 is_stmt 0 view .LVU416
 1635 0140 614A     		ldr	r2, .L127+28
 1636 0142 01A9     		add	r1, sp, #4
 1637 0144 A869     		ldr	r0, [r5, #24]
 1638 0146 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1639              	.LVL109:
 1640 014a E4E7     		b	.L110
 1641              	.L108:
 350:Core/Src/menu.cpp ****             menu_number('9');
 1642              		.loc 1 350 9 is_stmt 1 view .LVU417
 351:Core/Src/menu.cpp ****             sprintf(x,"9");
 1643              		.loc 1 351 13 view .LVU418
 351:Core/Src/menu.cpp ****             sprintf(x,"9");
 1644              		.loc 1 351 24 is_stmt 0 view .LVU419
 1645 014c 3921     		movs	r1, #57
 1646 014e 2846     		mov	r0, r5
ARM GAS  /tmp/cc9L4PIe.s 			page 46


 1647 0150 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1648              	.LVL110:
 352:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1649              		.loc 1 352 13 is_stmt 1 view .LVU420
 352:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1650              		.loc 1 352 20 is_stmt 0 view .LVU421
 1651 0154 3923     		movs	r3, #57
 1652 0156 ADF80430 		strh	r3, [sp, #4]	@ movhi
 353:Core/Src/menu.cpp ****             break;
 1653              		.loc 1 353 13 is_stmt 1 view .LVU422
 353:Core/Src/menu.cpp ****             break;
 1654              		.loc 1 353 31 is_stmt 0 view .LVU423
 1655 015a 5C4A     		ldr	r2, .L127+32
 1656 015c 01A9     		add	r1, sp, #4
 1657 015e A869     		ldr	r0, [r5, #24]
 1658 0160 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1659              	.LVL111:
 1660 0164 D7E7     		b	.L110
 1661              	.LVL112:
 1662              	.L111:
 370:Core/Src/menu.cpp ****     {
 1663              		.loc 1 370 5 is_stmt 1 view .LVU424
 370:Core/Src/menu.cpp ****     {
 1664              		.loc 1 370 20 is_stmt 0 view .LVU425
 1665 0166 514B     		ldr	r3, .L127
 1666 0168 1B69     		ldr	r3, [r3, #16]
 370:Core/Src/menu.cpp ****     {
 1667              		.loc 1 370 23 view .LVU426
 1668 016a 03F40743 		and	r3, r3, #34560
 370:Core/Src/menu.cpp ****     {
 1669              		.loc 1 370 5 view .LVU427
 1670 016e B3F5806F 		cmp	r3, #1024
 1671 0172 49D0     		beq	.L113
 1672 0174 12D8     		bhi	.L114
 1673 0176 B3F5807F 		cmp	r3, #256
 1674 017a 54D0     		beq	.L115
 1675 017c B3F5007F 		cmp	r3, #512
 1676 0180 1CD1     		bne	.L117
 382:Core/Src/menu.cpp ****             menu_number('0');
 1677              		.loc 1 382 9 is_stmt 1 view .LVU428
 383:Core/Src/menu.cpp ****             sprintf(x,"0");
 1678              		.loc 1 383 13 view .LVU429
 383:Core/Src/menu.cpp ****             sprintf(x,"0");
 1679              		.loc 1 383 24 is_stmt 0 view .LVU430
 1680 0182 3021     		movs	r1, #48
 1681 0184 2846     		mov	r0, r5
 1682 0186 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1683              	.LVL113:
 384:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1684              		.loc 1 384 13 is_stmt 1 view .LVU431
 384:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1685              		.loc 1 384 20 is_stmt 0 view .LVU432
 1686 018a 3023     		movs	r3, #48
 1687 018c ADF80430 		strh	r3, [sp, #4]	@ movhi
 385:Core/Src/menu.cpp ****             break;
 1688              		.loc 1 385 13 is_stmt 1 view .LVU433
 385:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cc9L4PIe.s 			page 47


 1689              		.loc 1 385 31 is_stmt 0 view .LVU434
 1690 0190 4F4A     		ldr	r2, .L127+36
 1691 0192 01A9     		add	r1, sp, #4
 1692 0194 A869     		ldr	r0, [r5, #24]
 1693 0196 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1694              	.LVL114:
 1695 019a 0FE0     		b	.L117
 1696              	.L114:
 370:Core/Src/menu.cpp ****     {
 1697              		.loc 1 370 5 view .LVU435
 1698 019c B3F5004F 		cmp	r3, #32768
 1699 01a0 0CD1     		bne	.L117
 372:Core/Src/menu.cpp ****             menu_down();//D
 1700              		.loc 1 372 9 is_stmt 1 view .LVU436
 373:Core/Src/menu.cpp ****             sprintf(x,"down");
 1701              		.loc 1 373 13 view .LVU437
 373:Core/Src/menu.cpp ****             sprintf(x,"down");
 1702              		.loc 1 373 22 is_stmt 0 view .LVU438
 1703 01a2 2846     		mov	r0, r5
 1704 01a4 FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1705              	.LVL115:
 374:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1706              		.loc 1 374 13 is_stmt 1 view .LVU439
 374:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1707              		.loc 1 374 20 is_stmt 0 view .LVU440
 1708 01a8 4A4A     		ldr	r2, .L127+40
 1709 01aa 92E80300 		ldm	r2, {r0, r1}
 1710 01ae 0190     		str	r0, [sp, #4]
 1711 01b0 8DF80810 		strb	r1, [sp, #8]
 375:Core/Src/menu.cpp ****             break;
 1712              		.loc 1 375 13 is_stmt 1 view .LVU441
 375:Core/Src/menu.cpp ****             break;
 1713              		.loc 1 375 31 is_stmt 0 view .LVU442
 1714 01b4 01A9     		add	r1, sp, #4
 1715 01b6 A869     		ldr	r0, [r5, #24]
 1716 01b8 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1717              	.LVL116:
 1718              	.L117:
 396:Core/Src/menu.cpp **** 
 1719              		.loc 1 396 5 is_stmt 1 view .LVU443
 396:Core/Src/menu.cpp **** 
 1720              		.loc 1 396 15 is_stmt 0 view .LVU444
 1721 01bc 3B4B     		ldr	r3, .L127
 1722 01be 5A69     		ldr	r2, [r3, #20]
 1723 01c0 22F40052 		bic	r2, r2, #8192
 1724 01c4 5A61     		str	r2, [r3, #20]
 398:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1725              		.loc 1 398 5 is_stmt 1 view .LVU445
 1726              	.LVL117:
 399:Core/Src/menu.cpp ****     while(sds<10)
 1727              		.loc 1 399 5 view .LVU446
 399:Core/Src/menu.cpp ****     while(sds<10)
 1728              		.loc 1 399 15 is_stmt 0 view .LVU447
 1729 01c6 5A69     		ldr	r2, [r3, #20]
 1730 01c8 42F48042 		orr	r2, r2, #16384
 1731 01cc 5A61     		str	r2, [r3, #20]
 1732              	.L119:
ARM GAS  /tmp/cc9L4PIe.s 			page 48


 400:Core/Src/menu.cpp ****     {
 1733              		.loc 1 400 5 is_stmt 1 view .LVU448
 400:Core/Src/menu.cpp ****     {
 1734              		.loc 1 400 14 view .LVU449
 1735 01ce 092C     		cmp	r4, #9
 1736 01d0 37DD     		ble	.L126
 404:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1737              		.loc 1 404 5 view .LVU450
 1738              	.LVL118:
 406:Core/Src/menu.cpp ****     {
 1739              		.loc 1 406 5 view .LVU451
 406:Core/Src/menu.cpp ****     {
 1740              		.loc 1 406 20 is_stmt 0 view .LVU452
 1741 01d2 364B     		ldr	r3, .L127
 1742 01d4 1B69     		ldr	r3, [r3, #16]
 406:Core/Src/menu.cpp ****     {
 1743              		.loc 1 406 23 view .LVU453
 1744 01d6 03F40743 		and	r3, r3, #34560
 406:Core/Src/menu.cpp ****     {
 1745              		.loc 1 406 5 view .LVU454
 1746 01da B3F5806F 		cmp	r3, #1024
 1747 01de 4AD0     		beq	.L120
 1748 01e0 31D8     		bhi	.L121
 1749 01e2 B3F5807F 		cmp	r3, #256
 1750 01e6 53D0     		beq	.L122
 1751 01e8 B3F5007F 		cmp	r3, #512
 1752 01ec 3CD1     		bne	.L124
 418:Core/Src/menu.cpp ****             menu_number('2');
 1753              		.loc 1 418 9 is_stmt 1 view .LVU455
 419:Core/Src/menu.cpp ****             sprintf(x,"2");
 1754              		.loc 1 419 13 view .LVU456
 419:Core/Src/menu.cpp ****             sprintf(x,"2");
 1755              		.loc 1 419 24 is_stmt 0 view .LVU457
 1756 01ee 3221     		movs	r1, #50
 1757 01f0 2846     		mov	r0, r5
 1758 01f2 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1759              	.LVL119:
 420:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1760              		.loc 1 420 13 is_stmt 1 view .LVU458
 420:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1761              		.loc 1 420 20 is_stmt 0 view .LVU459
 1762 01f6 3223     		movs	r3, #50
 1763 01f8 ADF80430 		strh	r3, [sp, #4]	@ movhi
 421:Core/Src/menu.cpp ****             break;
 1764              		.loc 1 421 13 is_stmt 1 view .LVU460
 421:Core/Src/menu.cpp ****             break;
 1765              		.loc 1 421 31 is_stmt 0 view .LVU461
 1766 01fc 364A     		ldr	r2, .L127+44
 1767 01fe 01A9     		add	r1, sp, #4
 1768 0200 A869     		ldr	r0, [r5, #24]
 1769 0202 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1770              	.LVL120:
 1771 0206 2FE0     		b	.L124
 1772              	.LVL121:
 1773              	.L113:
 377:Core/Src/menu.cpp ****             menu_menu();//M
 1774              		.loc 1 377 9 is_stmt 1 view .LVU462
ARM GAS  /tmp/cc9L4PIe.s 			page 49


 378:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1775              		.loc 1 378 13 view .LVU463
 378:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1776              		.loc 1 378 22 is_stmt 0 view .LVU464
 1777 0208 2846     		mov	r0, r5
 1778 020a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1779              	.LVL122:
 379:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1780              		.loc 1 379 13 is_stmt 1 view .LVU465
 379:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1781              		.loc 1 379 20 is_stmt 0 view .LVU466
 1782 020e 334B     		ldr	r3, .L127+48
 1783 0210 93E80300 		ldm	r3, {r0, r1}
 1784 0214 0190     		str	r0, [sp, #4]
 1785 0216 ADF80810 		strh	r1, [sp, #8]	@ movhi
 380:Core/Src/menu.cpp ****             break;
 1786              		.loc 1 380 13 is_stmt 1 view .LVU467
 380:Core/Src/menu.cpp ****             break;
 1787              		.loc 1 380 31 is_stmt 0 view .LVU468
 1788 021a 314A     		ldr	r2, .L127+52
 1789 021c 01A9     		add	r1, sp, #4
 1790 021e A869     		ldr	r0, [r5, #24]
 1791 0220 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1792              	.LVL123:
 1793 0224 CAE7     		b	.L117
 1794              	.L115:
 387:Core/Src/menu.cpp ****             menu_back();//B
 1795              		.loc 1 387 9 is_stmt 1 view .LVU469
 388:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1796              		.loc 1 388 13 view .LVU470
 388:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1797              		.loc 1 388 22 is_stmt 0 view .LVU471
 1798 0226 2846     		mov	r0, r5
 1799 0228 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1800              	.LVL124:
 389:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1801              		.loc 1 389 13 is_stmt 1 view .LVU472
 389:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1802              		.loc 1 389 20 is_stmt 0 view .LVU473
 1803 022c 2D4A     		ldr	r2, .L127+56
 1804 022e 92E80300 		ldm	r2, {r0, r1}
 1805 0232 0190     		str	r0, [sp, #4]
 1806 0234 8DF80810 		strb	r1, [sp, #8]
 390:Core/Src/menu.cpp ****             break;
 1807              		.loc 1 390 13 is_stmt 1 view .LVU474
 390:Core/Src/menu.cpp ****             break;
 1808              		.loc 1 390 31 is_stmt 0 view .LVU475
 1809 0238 01A9     		add	r1, sp, #4
 1810 023a A869     		ldr	r0, [r5, #24]
 1811 023c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1812              	.LVL125:
 1813 0240 BCE7     		b	.L117
 1814              	.LVL126:
 1815              	.L126:
 402:Core/Src/menu.cpp ****     }
 1816              		.loc 1 402 9 is_stmt 1 view .LVU476
 402:Core/Src/menu.cpp ****     }
ARM GAS  /tmp/cc9L4PIe.s 			page 50


 1817              		.loc 1 402 12 is_stmt 0 view .LVU477
 1818 0242 0134     		adds	r4, r4, #1
 1819              	.LVL127:
 400:Core/Src/menu.cpp ****     {
 1820              		.loc 1 400 5 view .LVU478
 1821 0244 C3E7     		b	.L119
 1822              	.LVL128:
 1823              	.L121:
 406:Core/Src/menu.cpp ****     {
 1824              		.loc 1 406 5 view .LVU479
 1825 0246 B3F5004F 		cmp	r3, #32768
 1826 024a 0DD1     		bne	.L124
 408:Core/Src/menu.cpp ****             menu_up();//U
 1827              		.loc 1 408 9 is_stmt 1 view .LVU480
 409:Core/Src/menu.cpp ****             sprintf(x,"up");
 1828              		.loc 1 409 13 view .LVU481
 409:Core/Src/menu.cpp ****             sprintf(x,"up");
 1829              		.loc 1 409 20 is_stmt 0 view .LVU482
 1830 024c 2846     		mov	r0, r5
 1831 024e FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1832              	.LVL129:
 410:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1833              		.loc 1 410 13 is_stmt 1 view .LVU483
 410:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1834              		.loc 1 410 20 is_stmt 0 view .LVU484
 1835 0252 254A     		ldr	r2, .L127+60
 1836 0254 1368     		ldr	r3, [r2]
 1837 0256 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1838 025a 1B0C     		lsrs	r3, r3, #16
 1839 025c 8DF80630 		strb	r3, [sp, #6]
 411:Core/Src/menu.cpp ****             break;
 1840              		.loc 1 411 13 is_stmt 1 view .LVU485
 411:Core/Src/menu.cpp ****             break;
 1841              		.loc 1 411 31 is_stmt 0 view .LVU486
 1842 0260 01A9     		add	r1, sp, #4
 1843 0262 A869     		ldr	r0, [r5, #24]
 1844 0264 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1845              	.LVL130:
 1846              	.L124:
 432:Core/Src/menu.cpp **** 
 1847              		.loc 1 432 5 is_stmt 1 view .LVU487
 432:Core/Src/menu.cpp **** 
 1848              		.loc 1 432 15 is_stmt 0 view .LVU488
 1849 0268 104A     		ldr	r2, .L127
 1850 026a 5369     		ldr	r3, [r2, #20]
 1851 026c 23F48043 		bic	r3, r3, #16384
 1852 0270 5361     		str	r3, [r2, #20]
 1853              		.loc 1 434 1 view .LVU489
 1854 0272 07B0     		add	sp, sp, #28
 1855              	.LCFI17:
 1856              		.cfi_remember_state
 1857              		.cfi_def_cfa_offset 12
 1858              		@ sp needed
 1859 0274 30BD     		pop	{r4, r5, pc}
 1860              	.LVL131:
 1861              	.L120:
 1862              	.LCFI18:
ARM GAS  /tmp/cc9L4PIe.s 			page 51


 1863              		.cfi_restore_state
 413:Core/Src/menu.cpp ****             menu_number('3');
 1864              		.loc 1 413 9 is_stmt 1 view .LVU490
 414:Core/Src/menu.cpp ****             sprintf(x,"3");
 1865              		.loc 1 414 13 view .LVU491
 414:Core/Src/menu.cpp ****             sprintf(x,"3");
 1866              		.loc 1 414 24 is_stmt 0 view .LVU492
 1867 0276 3321     		movs	r1, #51
 1868 0278 2846     		mov	r0, r5
 1869 027a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1870              	.LVL132:
 415:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1871              		.loc 1 415 13 is_stmt 1 view .LVU493
 415:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1872              		.loc 1 415 20 is_stmt 0 view .LVU494
 1873 027e 3323     		movs	r3, #51
 1874 0280 ADF80430 		strh	r3, [sp, #4]	@ movhi
 416:Core/Src/menu.cpp ****             break;
 1875              		.loc 1 416 13 is_stmt 1 view .LVU495
 416:Core/Src/menu.cpp ****             break;
 1876              		.loc 1 416 31 is_stmt 0 view .LVU496
 1877 0284 194A     		ldr	r2, .L127+64
 1878 0286 01A9     		add	r1, sp, #4
 1879 0288 A869     		ldr	r0, [r5, #24]
 1880 028a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1881              	.LVL133:
 1882 028e EBE7     		b	.L124
 1883              	.L122:
 423:Core/Src/menu.cpp ****             menu_number('1');
 1884              		.loc 1 423 9 is_stmt 1 view .LVU497
 424:Core/Src/menu.cpp ****             sprintf(x,"1");
 1885              		.loc 1 424 13 view .LVU498
 424:Core/Src/menu.cpp ****             sprintf(x,"1");
 1886              		.loc 1 424 24 is_stmt 0 view .LVU499
 1887 0290 3121     		movs	r1, #49
 1888 0292 2846     		mov	r0, r5
 1889 0294 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1890              	.LVL134:
 425:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1891              		.loc 1 425 13 is_stmt 1 view .LVU500
 425:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1892              		.loc 1 425 20 is_stmt 0 view .LVU501
 1893 0298 3123     		movs	r3, #49
 1894 029a ADF80430 		strh	r3, [sp, #4]	@ movhi
 426:Core/Src/menu.cpp ****             break;
 1895              		.loc 1 426 13 is_stmt 1 view .LVU502
 426:Core/Src/menu.cpp ****             break;
 1896              		.loc 1 426 31 is_stmt 0 view .LVU503
 1897 029e 144A     		ldr	r2, .L127+68
 1898 02a0 01A9     		add	r1, sp, #4
 1899 02a2 A869     		ldr	r0, [r5, #24]
 1900 02a4 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1901              	.LVL135:
 1902 02a8 DEE7     		b	.L124
 1903              	.L128:
 1904 02aa 00BF     		.align	2
 1905              	.L127:
ARM GAS  /tmp/cc9L4PIe.s 			page 52


 1906 02ac 000C0240 		.word	1073875968
 1907 02b0 0C000000 		.word	.LC11
 1908 02b4 00000000 		.word	.LC9
 1909 02b8 08000000 		.word	.LC10
 1910 02bc 10000000 		.word	.LC12
 1911 02c0 20000000 		.word	.LC15
 1912 02c4 14000000 		.word	.LC13
 1913 02c8 1C000000 		.word	.LC14
 1914 02cc 24000000 		.word	.LC16
 1915 02d0 40000000 		.word	.LC20
 1916 02d4 28000000 		.word	.LC17
 1917 02d8 54000000 		.word	.LC24
 1918 02dc 30000000 		.word	.LC18
 1919 02e0 38000000 		.word	.LC19
 1920 02e4 44000000 		.word	.LC21
 1921 02e8 4C000000 		.word	.LC22
 1922 02ec 50000000 		.word	.LC23
 1923 02f0 58000000 		.word	.LC25
 1924              		.cfi_endproc
 1925              	.LFE1996:
 1926              		.fnend
 1928              		.section	.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart,"ax",%progbits
 1929              		.align	1
 1930              		.syntax unified
 1931              		.thumb
 1932              		.thumb_func
 1933              		.fpu fpv4-sp-d16
 1935              	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:
 1936              		.fnstart
 1937              	.LFB2477:
 1938              		.loc 1 434 1 is_stmt 1 view -0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 1942 0000 08B5     		push	{r3, lr}
 1943              	.LCFI19:
 1944              		.cfi_def_cfa_offset 8
 1945              		.cfi_offset 3, -8
 1946              		.cfi_offset 14, -4
 1947              		.loc 1 434 1 is_stmt 0 view .LVU505
 1948 0002 4FF6FF71 		movw	r1, #65535
 1949 0006 0120     		movs	r0, #1
 1950 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1951              	.LVL136:
 1952 000c 08BD     		pop	{r3, pc}
 1953              		.cfi_endproc
 1954              	.LFE2477:
 1955              		.cantunwind
 1956              		.fnend
 1958              		.section	.init_array,"aw",%init_array
 1959              		.align	2
 1960 0000 00000000 		.word	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart(target1)
 1961              		.section	.rodata
 1962              		.align	2
 1963              		.set	.LANCHOR1,. + 0
 1964              	.LC0:
 1965 0000 00       		.ascii	"\000"
ARM GAS  /tmp/cc9L4PIe.s 			page 53


 1966 0001 0000     		.space	2
 1967              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 1968              		.align	2
 1969              		.set	.LANCHOR0,. + 0
 1972              	_ZStL8__ioinit:
 1973 0000 00       		.space	1
 1974              		.text
 1975              	.Letext0:
 1976              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1977              		.file 4 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1978              		.file 5 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1979              		.file 6 "/usr/include/newlib/c++/9.2.1/cwchar"
 1980              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 1981              		.file 8 "/usr/include/newlib/c++/9.2.1/new"
 1982              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1983              		.file 10 "/usr/include/newlib/c++/9.2.1/type_traits"
 1984              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 1985              		.file 12 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 1986              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 1987              		.file 14 "/usr/include/newlib/c++/9.2.1/cstdint"
 1988              		.file 15 "/usr/include/newlib/c++/9.2.1/clocale"
 1989              		.file 16 "/usr/include/newlib/c++/9.2.1/cstdio"
 1990              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 1991              		.file 18 "/usr/include/newlib/c++/9.2.1/system_error"
 1992              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 1993              		.file 20 "/usr/include/newlib/c++/9.2.1/cwctype"
 1994              		.file 21 "/usr/include/newlib/c++/9.2.1/iosfwd"
 1995              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 1996              		.file 23 "/usr/include/newlib/c++/9.2.1/tuple"
 1997              		.file 24 "/usr/include/newlib/c++/9.2.1/functional"
 1998              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 1999              		.file 26 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2000              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2001              		.file 28 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2002              		.file 29 "/usr/include/newlib/sys/_types.h"
 2003              		.file 30 "<built-in>"
 2004              		.file 31 "/usr/include/newlib/sys/reent.h"
 2005              		.file 32 "/usr/include/newlib/sys/lock.h"
 2006              		.file 33 "/usr/include/newlib/stdlib.h"
 2007              		.file 34 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2008              		.file 35 "Drivers/CMSIS/Include/core_cm4.h"
 2009              		.file 36 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2010              		.file 37 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2011              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2012              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2013              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2014              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2015              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2016              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2017              		.file 44 "Core/Inc/fonts.h"
 2018              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2019              		.file 46 "/usr/include/newlib/stdio.h"
 2020              		.file 47 "Core/Inc/oled.h"
 2021              		.file 48 "/usr/include/newlib/wchar.h"
 2022              		.file 49 "/usr/include/newlib/locale.h"
 2023              		.file 50 "/usr/include/newlib/ctype.h"
 2024              		.file 51 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
ARM GAS  /tmp/cc9L4PIe.s 			page 54


 2025              		.file 52 "/usr/include/newlib/sys/errno.h"
 2026              		.file 53 "/usr/include/newlib/wctype.h"
 2027              		.file 54 "Core/Inc/uart.hpp"
 2028              		.file 55 "Core/Inc/menu.hpp"
ARM GAS  /tmp/cc9L4PIe.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
     /tmp/cc9L4PIe.s:18     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/cc9L4PIe.s:25     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/cc9L4PIe.s:69     .text._Z41__static_initialization_and_destruction_0ii:0000000000000024 $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/cc9L4PIe.s:78     .text._ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc9L4PIe.s:85     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC2EP4oledP4uart
     /tmp/cc9L4PIe.s:131    .text._ZN4menuC2EP4oledP4uart:0000000000000028 $d
.ARM.exidx.text._ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc9L4PIe.s:85     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC1EP4oledP4uart
     /tmp/cc9L4PIe.s:140    .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/cc9L4PIe.s:165    .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:172    .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/cc9L4PIe.s:201    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/cc9L4PIe.s:425    .text._ZN4menu10menu_printEv:0000000000000128 $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:440    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:447    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/cc9L4PIe.s:488    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/cc9L4PIe.s:512    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:620    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:627    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/cc9L4PIe.s:661    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/cc9L4PIe.s:685    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:749    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:756    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:801    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:808    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:856    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:863    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/cc9L4PIe.s:897    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/cc9L4PIe.s:921    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:995    .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/cc9L4PIe.s:1002   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/cc9L4PIe.s:1105   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:1112   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:1200   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:1207   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:1293   .rodata._ZN4menu13keyboard_pollEv.str1.4:0000000000000000 $d
     /tmp/cc9L4PIe.s:1345   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/cc9L4PIe.s:1352   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/cc9L4PIe.s:1906   .text._ZN4menu13keyboard_pollEv:00000000000002ac $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/cc9L4PIe.s:1929   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc9L4PIe.s:1935   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 _GLOBAL__sub_I__ZN4menuC2EP4oledP4uart
.ARM.exidx.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc9L4PIe.s:1959   .init_array:0000000000000000 $d
     /tmp/cc9L4PIe.s:1962   .rodata:0000000000000000 $d
ARM GAS  /tmp/cc9L4PIe.s 			page 56


     /tmp/cc9L4PIe.s:1968   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/cc9L4PIe.s:1972   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/cc9L4PIe.s:226    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/cc9L4PIe.s:226    .text._ZN4menu10menu_printEv:000000000000002a $t

UNDEFINED SYMBOLS
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
__dso_handle
_ZNSt8ios_base4InitD1Ev
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
_ZN4oled7oled_onEv
atoi
_ZN4uart11send_reciveEPcPKc
