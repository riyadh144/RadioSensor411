ARM GAS  /tmp/cc565qAH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z41__static_initialization_and_destruction_0ii:
  26              		.fnstart
  27              	.LVL0:
  28              	.LFB2476:
  29              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_, uart* uart_)
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
   6:Core/Src/menu.cpp ****     uart1=uart_;
   7:Core/Src/menu.cpp **** }
   8:Core/Src/menu.cpp **** 
   9:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
  10:Core/Src/menu.cpp **** {
  11:Core/Src/menu.cpp ****     char temp [22];
  12:Core/Src/menu.cpp **** 
  13:Core/Src/menu.cpp ****     switch (menu_value)
  14:Core/Src/menu.cpp ****     {
  15:Core/Src/menu.cpp ****         case MENU_HOME:
  16:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
  17:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  18:Core/Src/menu.cpp ****             break; 
  19:Core/Src/menu.cpp ****         case MENU_CH:
  20:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
  21:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  22:Core/Src/menu.cpp ****             break;
  23:Core/Src/menu.cpp ****         case MENU_SQ:
  24:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
  25:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  26:Core/Src/menu.cpp ****             break;
  27:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  28:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
  29:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
ARM GAS  /tmp/cc565qAH.s 			page 2


  30:Core/Src/menu.cpp ****             break;
  31:Core/Src/menu.cpp ****         case MENU_CH_IN:
  32:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
  33:Core/Src/menu.cpp ****             cursorOn=1;
  34:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  35:Core/Src/menu.cpp ****             break;
  36:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  37:Core/Src/menu.cpp ****             cursorOn=1;
  38:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  40:Core/Src/menu.cpp ****             break;
  41:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  42:Core/Src/menu.cpp ****             cursorOn=1;
  43:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
  44:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  45:Core/Src/menu.cpp ****             break;
  46:Core/Src/menu.cpp ****         default:
  47:Core/Src/menu.cpp ****             break;
  48:Core/Src/menu.cpp ****     }
  49:Core/Src/menu.cpp ****     oled1->oled_print("menu backk   ", Font_11x18,0,46);   
  50:Core/Src/menu.cpp **** 
  51:Core/Src/menu.cpp **** }
  52:Core/Src/menu.cpp **** 
  53:Core/Src/menu.cpp **** void menu::menu_ok()
  54:Core/Src/menu.cpp **** {
  55:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
  56:Core/Src/menu.cpp ****     {
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  58:Core/Src/menu.cpp ****     }
  59:Core/Src/menu.cpp ****     else
  60:Core/Src/menu.cpp ****     {
  61:Core/Src/menu.cpp ****         oled1->oled_on();
  62:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  63:Core/Src/menu.cpp ****     }
  64:Core/Src/menu.cpp **** 
  65:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
  66:Core/Src/menu.cpp ****     {
  67:Core/Src/menu.cpp ****     case MENU_HOME:
  68:Core/Src/menu.cpp ****         break;
  69:Core/Src/menu.cpp ****     case MENU_CH:
  70:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
  71:Core/Src/menu.cpp ****         break;
  72:Core/Src/menu.cpp ****     case MENU_SQ:
  73:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  74:Core/Src/menu.cpp ****         break;
  75:Core/Src/menu.cpp ****     case MENU_TMO:
  76:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
  77:Core/Src/menu.cpp ****         break;
  78:Core/Src/menu.cpp ****     case MENU_CH_IN:
  79:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  80:Core/Src/menu.cpp ****         if(!cursorOn)
  81:Core/Src/menu.cpp ****         {
  82:Core/Src/menu.cpp ****             chVal=atoi(ch);
  83:Core/Src/menu.cpp ****             cursorPos=0;
  84:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  85:Core/Src/menu.cpp ****         }
  86:Core/Src/menu.cpp ****         break;
ARM GAS  /tmp/cc565qAH.s 			page 3


  87:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  88:Core/Src/menu.cpp ****         cursorOn^=1;
  89:Core/Src/menu.cpp ****         if(!cursorOn)
  90:Core/Src/menu.cpp ****         {
  91:Core/Src/menu.cpp ****             chVal=atoi(sq);
  92:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  93:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  94:Core/Src/menu.cpp ****         }
  95:Core/Src/menu.cpp ****         break;
  96:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  97:Core/Src/menu.cpp ****         cursorOn^=1;
  98:Core/Src/menu.cpp ****         if(!cursorOn)
  99:Core/Src/menu.cpp ****         {
 100:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 101:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 102:Core/Src/menu.cpp ****             cursorPos=0;
 103:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 104:Core/Src/menu.cpp ****         }
 105:Core/Src/menu.cpp ****         break;
 106:Core/Src/menu.cpp **** 
 107:Core/Src/menu.cpp ****     default:
 108:Core/Src/menu.cpp ****         break;
 109:Core/Src/menu.cpp ****     }
 110:Core/Src/menu.cpp **** 
 111:Core/Src/menu.cpp ****     
 112:Core/Src/menu.cpp **** }
 113:Core/Src/menu.cpp **** 
 114:Core/Src/menu.cpp **** void menu::menu_next()
 115:Core/Src/menu.cpp **** {
 116:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 117:Core/Src/menu.cpp ****     {
 118:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 119:Core/Src/menu.cpp ****     }
 120:Core/Src/menu.cpp ****     switch (menu_value)
 121:Core/Src/menu.cpp ****     {
 122:Core/Src/menu.cpp ****     case MENU_HOME:
 123:Core/Src/menu.cpp ****         break;
 124:Core/Src/menu.cpp ****     case MENU_CH:
 125:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 126:Core/Src/menu.cpp ****         break;
 127:Core/Src/menu.cpp ****     case MENU_SQ:
 128:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 129:Core/Src/menu.cpp ****     case MENU_TMO:
 130:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 131:Core/Src/menu.cpp ****     case MENU_CH_IN:
 132:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 133:Core/Src/menu.cpp ****         break;
 134:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 135:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 136:Core/Src/menu.cpp ****         break;
 137:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 138:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 139:Core/Src/menu.cpp ****         break;
 140:Core/Src/menu.cpp **** 
 141:Core/Src/menu.cpp ****     default:
 142:Core/Src/menu.cpp ****         break;
 143:Core/Src/menu.cpp ****     }
ARM GAS  /tmp/cc565qAH.s 			page 4


 144:Core/Src/menu.cpp **** }
 145:Core/Src/menu.cpp **** 
 146:Core/Src/menu.cpp **** void menu::menu_menu()
 147:Core/Src/menu.cpp **** {
 148:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 149:Core/Src/menu.cpp ****     {
 150:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 151:Core/Src/menu.cpp ****     }
 152:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 153:Core/Src/menu.cpp **** }
 154:Core/Src/menu.cpp **** 
 155:Core/Src/menu.cpp **** void menu::menu_back()
 156:Core/Src/menu.cpp **** {
 157:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 158:Core/Src/menu.cpp ****     {
 159:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 160:Core/Src/menu.cpp ****     }
 161:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 162:Core/Src/menu.cpp **** }
 163:Core/Src/menu.cpp **** 
 164:Core/Src/menu.cpp **** void menu::menu_prev()
 165:Core/Src/menu.cpp **** {
 166:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 167:Core/Src/menu.cpp ****     {
 168:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 169:Core/Src/menu.cpp ****     }
 170:Core/Src/menu.cpp ****     switch (menu_value)
 171:Core/Src/menu.cpp ****     {
 172:Core/Src/menu.cpp ****     case MENU_HOME:
 173:Core/Src/menu.cpp ****         break;
 174:Core/Src/menu.cpp ****     case MENU_CH:
 175:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 176:Core/Src/menu.cpp ****         break;
 177:Core/Src/menu.cpp ****     case MENU_SQ:
 178:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 179:Core/Src/menu.cpp ****         break;
 180:Core/Src/menu.cpp ****     case MENU_TMO:
 181:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 182:Core/Src/menu.cpp ****         break;
 183:Core/Src/menu.cpp ****     case MENU_CH_IN:
 184:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 185:Core/Src/menu.cpp ****         break;
 186:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 187:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 188:Core/Src/menu.cpp ****         break;
 189:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 190:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 191:Core/Src/menu.cpp ****         break;
 192:Core/Src/menu.cpp **** 
 193:Core/Src/menu.cpp ****     default:
 194:Core/Src/menu.cpp ****         break;
 195:Core/Src/menu.cpp ****     }
 196:Core/Src/menu.cpp **** }
 197:Core/Src/menu.cpp **** void menu::menu_number(char num)
 198:Core/Src/menu.cpp **** {
 199:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 200:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc565qAH.s 			page 5


 201:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 202:Core/Src/menu.cpp ****     }
 203:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 204:Core/Src/menu.cpp ****     {
 205:Core/Src/menu.cpp ****         switch (menu_value)
 206:Core/Src/menu.cpp ****         {
 207:Core/Src/menu.cpp ****         case MENU_CH_IN:
 208:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 210:Core/Src/menu.cpp ****             break;
 211:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 212:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 213:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 214:Core/Src/menu.cpp ****             break;
 215:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 216:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 217:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 218:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 219:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 220:Core/Src/menu.cpp ****             break;
 221:Core/Src/menu.cpp **** 
 222:Core/Src/menu.cpp ****         default:
 223:Core/Src/menu.cpp ****             break;
 224:Core/Src/menu.cpp ****         }
 225:Core/Src/menu.cpp ****     }
 226:Core/Src/menu.cpp **** }
 227:Core/Src/menu.cpp **** void menu::menu_up()
 228:Core/Src/menu.cpp **** {
 229:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 230:Core/Src/menu.cpp ****     {
 231:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 232:Core/Src/menu.cpp ****     }
 233:Core/Src/menu.cpp ****     switch (menu_value)
 234:Core/Src/menu.cpp ****     {
 235:Core/Src/menu.cpp ****     case MENU_CH_IN:
 236:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 237:Core/Src/menu.cpp ****         {
 238:Core/Src/menu.cpp ****             chVal++;
 239:Core/Src/menu.cpp ****         }
 240:Core/Src/menu.cpp ****         break;
 241:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 242:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 243:Core/Src/menu.cpp ****         {
 244:Core/Src/menu.cpp ****             sqVal++;
 245:Core/Src/menu.cpp ****         }
 246:Core/Src/menu.cpp ****         break;   
 247:Core/Src/menu.cpp ****     default:
 248:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 249:Core/Src/menu.cpp ****         {
 250:Core/Src/menu.cpp ****             volVal++;
 251:Core/Src/menu.cpp ****         }
 252:Core/Src/menu.cpp ****         break;
 253:Core/Src/menu.cpp ****     }
 254:Core/Src/menu.cpp **** }
 255:Core/Src/menu.cpp **** 
 256:Core/Src/menu.cpp **** void menu::menu_down()
 257:Core/Src/menu.cpp **** {
ARM GAS  /tmp/cc565qAH.s 			page 6


 258:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 259:Core/Src/menu.cpp ****     {
 260:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 261:Core/Src/menu.cpp ****     }
 262:Core/Src/menu.cpp ****     switch (menu_value)
 263:Core/Src/menu.cpp ****     {
 264:Core/Src/menu.cpp ****     case MENU_CH_IN:
 265:Core/Src/menu.cpp ****         if(chVal > 0)
 266:Core/Src/menu.cpp ****         {
 267:Core/Src/menu.cpp ****         chVal--;
 268:Core/Src/menu.cpp ****         }
 269:Core/Src/menu.cpp ****         break;
 270:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 271:Core/Src/menu.cpp ****         if(sqVal > 0)
 272:Core/Src/menu.cpp ****         {
 273:Core/Src/menu.cpp ****         sqVal--;
 274:Core/Src/menu.cpp ****         }
 275:Core/Src/menu.cpp ****         break;   
 276:Core/Src/menu.cpp ****     default:
 277:Core/Src/menu.cpp ****         if(volVal > 0)
 278:Core/Src/menu.cpp ****         {
 279:Core/Src/menu.cpp ****             volVal--;
 280:Core/Src/menu.cpp ****         }
 281:Core/Src/menu.cpp ****         break;
 282:Core/Src/menu.cpp ****     }
 283:Core/Src/menu.cpp **** 
 284:Core/Src/menu.cpp **** }
 285:Core/Src/menu.cpp **** 
 286:Core/Src/menu.cpp **** 
 287:Core/Src/menu.cpp **** 
 288:Core/Src/menu.cpp **** void menu::keyboard_poll()
 289:Core/Src/menu.cpp **** {
 290:Core/Src/menu.cpp ****     int sds=0;
 291:Core/Src/menu.cpp ****     char x[20];
 292:Core/Src/menu.cpp **** 
 293:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 294:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 295:Core/Src/menu.cpp **** 
 296:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 297:Core/Src/menu.cpp ****     while(sds<10)
 298:Core/Src/menu.cpp ****     {
 299:Core/Src/menu.cpp ****         sds++;
 300:Core/Src/menu.cpp ****     }
 301:Core/Src/menu.cpp ****     sds=0;
 302:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 303:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 304:Core/Src/menu.cpp ****     {
 305:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 306:Core/Src/menu.cpp ****             menu_next();//R
 307:Core/Src/menu.cpp ****             sprintf(x,"next");
 308:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 309:Core/Src/menu.cpp ****             break;
 310:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 311:Core/Src/menu.cpp ****             menu_number('6');
 312:Core/Src/menu.cpp ****             sprintf(x,"6");
 313:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 314:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cc565qAH.s 			page 7


 315:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 316:Core/Src/menu.cpp ****             menu_number('5');
 317:Core/Src/menu.cpp ****             sprintf(x,"5");
 318:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 319:Core/Src/menu.cpp ****             break;
 320:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 321:Core/Src/menu.cpp ****             menu_number('4');
 322:Core/Src/menu.cpp ****             sprintf(x,"4");
 323:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 324:Core/Src/menu.cpp ****             break;
 325:Core/Src/menu.cpp ****         default:
 326:Core/Src/menu.cpp ****             break;
 327:Core/Src/menu.cpp ****     }
 328:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 329:Core/Src/menu.cpp **** 
 330:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 331:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 332:Core/Src/menu.cpp ****     
 333:Core/Src/menu.cpp ****     while(sds<10)
 334:Core/Src/menu.cpp ****     {
 335:Core/Src/menu.cpp ****         sds++;
 336:Core/Src/menu.cpp ****     }
 337:Core/Src/menu.cpp ****     sds=0;
 338:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 339:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 340:Core/Src/menu.cpp ****     {
 341:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 342:Core/Src/menu.cpp ****             menu_prev();//L
 343:Core/Src/menu.cpp ****             sprintf(x,"prev");
 344:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 345:Core/Src/menu.cpp ****             break;
 346:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 347:Core/Src/menu.cpp ****             menu_number('8');
 348:Core/Src/menu.cpp ****             sprintf(x,"8");
 349:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 350:Core/Src/menu.cpp ****             break;
 351:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 352:Core/Src/menu.cpp ****             menu_number('7');
 353:Core/Src/menu.cpp ****             sprintf(x,"7");
 354:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 355:Core/Src/menu.cpp ****             break;
 356:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 357:Core/Src/menu.cpp ****             menu_number('9');
 358:Core/Src/menu.cpp ****             sprintf(x,"9");
 359:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 360:Core/Src/menu.cpp ****             break;
 361:Core/Src/menu.cpp ****         default:
 362:Core/Src/menu.cpp ****             break;
 363:Core/Src/menu.cpp **** 
 364:Core/Src/menu.cpp ****     }
 365:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 366:Core/Src/menu.cpp **** 
 367:Core/Src/menu.cpp **** 
 368:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 369:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 370:Core/Src/menu.cpp ****     while(sds<10)
 371:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc565qAH.s 			page 8


 372:Core/Src/menu.cpp ****         sds++;
 373:Core/Src/menu.cpp ****     }
 374:Core/Src/menu.cpp ****     //uart1->send_recive("PD13","PD13");
 375:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 376:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 377:Core/Src/menu.cpp ****     {
 378:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 379:Core/Src/menu.cpp ****             menu_down();//D
 380:Core/Src/menu.cpp ****             sprintf(x,"down");
 381:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 382:Core/Src/menu.cpp ****             break;
 383:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 384:Core/Src/menu.cpp ****             menu_menu();//M
 385:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 386:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 387:Core/Src/menu.cpp ****             break;
 388:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 389:Core/Src/menu.cpp ****             menu_number('0');
 390:Core/Src/menu.cpp ****             sprintf(x,"0");
 391:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 392:Core/Src/menu.cpp ****             break;
 393:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 394:Core/Src/menu.cpp ****             menu_back();//B
 395:Core/Src/menu.cpp ****             sprintf(x,"Back");
 396:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 397:Core/Src/menu.cpp ****             break;
 398:Core/Src/menu.cpp ****         default:
 399:Core/Src/menu.cpp ****             break;
 400:Core/Src/menu.cpp **** 
 401:Core/Src/menu.cpp ****     }
 402:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 403:Core/Src/menu.cpp **** 
 404:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 405:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 406:Core/Src/menu.cpp ****     while(sds<10)
 407:Core/Src/menu.cpp ****     {
 408:Core/Src/menu.cpp ****         sds++;
 409:Core/Src/menu.cpp ****     }
 410:Core/Src/menu.cpp ****     sds=0;
 411:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 412:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 413:Core/Src/menu.cpp ****     {
 414:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 415:Core/Src/menu.cpp ****             menu_up();//U
 416:Core/Src/menu.cpp ****             sprintf(x,"up");
 417:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 418:Core/Src/menu.cpp ****             break;
 419:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 420:Core/Src/menu.cpp ****             menu_number('3');
 421:Core/Src/menu.cpp ****             sprintf(x,"3");
 422:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 423:Core/Src/menu.cpp ****             break;
 424:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 425:Core/Src/menu.cpp ****             menu_number('2');
 426:Core/Src/menu.cpp ****             sprintf(x,"2");
 427:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 428:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cc565qAH.s 			page 9


 429:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 430:Core/Src/menu.cpp ****             menu_number('1');
 431:Core/Src/menu.cpp ****             sprintf(x,"1");
 432:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 433:Core/Src/menu.cpp ****             break;
 434:Core/Src/menu.cpp ****         default:
 435:Core/Src/menu.cpp ****             break;
 436:Core/Src/menu.cpp **** 
 437:Core/Src/menu.cpp ****     }
 438:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 439:Core/Src/menu.cpp **** 
 440:Core/Src/menu.cpp **** }
  30              		.loc 1 440 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 440 1 is_stmt 0 view .LVU1
  35 0000 0128     		cmp	r0, #1
  36 0002 00D0     		beq	.L7
  37              	.L4:
  38 0004 7047     		bx	lr
  39              	.L7:
  40              		.loc 1 440 1 discriminator 1 view .LVU2
  41 0006 4FF6FF73 		movw	r3, #65535
  42 000a 9942     		cmp	r1, r3
  43 000c FAD1     		bne	.L4
  44              		.loc 1 440 1 view .LVU3
  45 000e 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  50              		.file 2 "/usr/include/newlib/c++/9.2.1/iostream"
   1:/usr/include/newlib/c++/9.2.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/iostream **** 
   3:/usr/include/newlib/c++/9.2.1/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/iostream **** //
   5:/usr/include/newlib/c++/9.2.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/iostream **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/iostream **** 
  11:/usr/include/newlib/c++/9.2.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/iostream **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/iostream **** 
  16:/usr/include/newlib/c++/9.2.1/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/iostream **** 
  20:/usr/include/newlib/c++/9.2.1/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/iostream **** 
ARM GAS  /tmp/cc565qAH.s 			page 10


  25:/usr/include/newlib/c++/9.2.1/iostream **** /** @file include/iostream
  26:/usr/include/newlib/c++/9.2.1/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/newlib/c++/9.2.1/iostream ****  */
  28:/usr/include/newlib/c++/9.2.1/iostream **** 
  29:/usr/include/newlib/c++/9.2.1/iostream **** //
  30:/usr/include/newlib/c++/9.2.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/newlib/c++/9.2.1/iostream **** //
  32:/usr/include/newlib/c++/9.2.1/iostream **** 
  33:/usr/include/newlib/c++/9.2.1/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/newlib/c++/9.2.1/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/newlib/c++/9.2.1/iostream **** 
  36:/usr/include/newlib/c++/9.2.1/iostream **** #pragma GCC system_header
  37:/usr/include/newlib/c++/9.2.1/iostream **** 
  38:/usr/include/newlib/c++/9.2.1/iostream **** #include <bits/c++config.h>
  39:/usr/include/newlib/c++/9.2.1/iostream **** #include <ostream>
  40:/usr/include/newlib/c++/9.2.1/iostream **** #include <istream>
  41:/usr/include/newlib/c++/9.2.1/iostream **** 
  42:/usr/include/newlib/c++/9.2.1/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/newlib/c++/9.2.1/iostream **** {
  44:/usr/include/newlib/c++/9.2.1/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/newlib/c++/9.2.1/iostream **** 
  46:/usr/include/newlib/c++/9.2.1/iostream ****   /**
  47:/usr/include/newlib/c++/9.2.1/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/newlib/c++/9.2.1/iostream ****    *
  49:/usr/include/newlib/c++/9.2.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/newlib/c++/9.2.1/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/newlib/c++/9.2.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/newlib/c++/9.2.1/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/newlib/c++/9.2.1/iostream ****    *
  54:/usr/include/newlib/c++/9.2.1/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/newlib/c++/9.2.1/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/newlib/c++/9.2.1/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/newlib/c++/9.2.1/iostream ****    *  manual linked to above.
  58:/usr/include/newlib/c++/9.2.1/iostream ****   */
  59:/usr/include/newlib/c++/9.2.1/iostream ****   //@{
  60:/usr/include/newlib/c++/9.2.1/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/newlib/c++/9.2.1/iostream **** 
  65:/usr/include/newlib/c++/9.2.1/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/newlib/c++/9.2.1/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/newlib/c++/9.2.1/iostream **** #endif
  71:/usr/include/newlib/c++/9.2.1/iostream ****   //@}
  72:/usr/include/newlib/c++/9.2.1/iostream **** 
  73:/usr/include/newlib/c++/9.2.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/newlib/c++/9.2.1/iostream ****   static ios_base::Init __ioinit;
  51              		.loc 2 74 25 view .LVU4
  52 0010 044C     		ldr	r4, .L8
  53 0012 2046     		mov	r0, r4
  54              	.LVL1:
  55              		.loc 2 74 25 view .LVU5
  56 0014 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
  57              	.LVL2:
ARM GAS  /tmp/cc565qAH.s 			page 11


  58              		.loc 2 74 25 view .LVU6
  59 0018 034A     		ldr	r2, .L8+4
  60 001a 0449     		ldr	r1, .L8+8
  61 001c 2046     		mov	r0, r4
  62 001e FFF7FEFF 		bl	__aeabi_atexit
  63              	.LVL3:
  64              		.loc 1 440 1 view .LVU7
  65 0022 10BD     		pop	{r4, pc}
  66              	.L9:
  67              		.align	2
  68              	.L8:
  69 0024 00000000 		.word	.LANCHOR0
  70 0028 00000000 		.word	__dso_handle
  71 002c 00000000 		.word	_ZNSt8ios_base4InitD1Ev
  72              		.cfi_endproc
  73              	.LFE2476:
  74              		.cantunwind
  75              		.fnend
  77              		.section	.rodata._ZN4menuC2EP4oledP4uart.str1.4,"aMS",%progbits,1
  78              		.align	2
  79              	.LC0:
  80 0000 303000   		.ascii	"00\000"
  81              		.section	.text._ZN4menuC2EP4oledP4uart,"ax",%progbits
  82              		.align	1
  83              		.global	_ZN4menuC2EP4oledP4uart
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	_ZN4menuC2EP4oledP4uart:
  90              		.fnstart
  91              	.LVL4:
  92              	.LFB1985:
   3:Core/Src/menu.cpp **** {
  93              		.loc 1 3 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
   3:Core/Src/menu.cpp **** {
  98              		.loc 1 3 1 is_stmt 0 view .LVU9
  99 0000 70B4     		push	{r4, r5, r6}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 5, -8
 104              		.cfi_offset 6, -4
 105              	.LBB2:
   3:Core/Src/menu.cpp **** {
 106              		.loc 1 3 36 view .LVU10
 107 0002 0A4C     		ldr	r4, .L12
 108 0004 2588     		ldrh	r5, [r4]	@ unaligned
 109 0006 A478     		ldrb	r4, [r4, #2]	@ zero_extendqisi2
 110 0008 4580     		strh	r5, [r0, #2]	@ unaligned
 111 000a 0471     		strb	r4, [r0, #4]
 112 000c C580     		strh	r5, [r0, #6]	@ unaligned
 113 000e 0472     		strb	r4, [r0, #8]
ARM GAS  /tmp/cc565qAH.s 			page 12


 114 0010 4581     		strh	r5, [r0, #10]	@ unaligned
 115 0012 0473     		strb	r4, [r0, #12]
 116 0014 0026     		movs	r6, #0
 117 0016 4673     		strb	r6, [r0, #13]
 118 0018 C581     		strh	r5, [r0, #14]	@ unaligned
 119 001a 0474     		strb	r4, [r0, #16]
 120 001c 1E24     		movs	r4, #30
 121 001e 4474     		strb	r4, [r0, #17]
 122 0020 8674     		strb	r6, [r0, #18]
 123 0022 C674     		strb	r6, [r0, #19]
   5:Core/Src/menu.cpp ****     uart1=uart_;
 124              		.loc 1 5 5 is_stmt 1 view .LVU11
   5:Core/Src/menu.cpp ****     uart1=uart_;
 125              		.loc 1 5 10 is_stmt 0 view .LVU12
 126 0024 4161     		str	r1, [r0, #20]
   6:Core/Src/menu.cpp **** }
 127              		.loc 1 6 5 is_stmt 1 view .LVU13
   6:Core/Src/menu.cpp **** }
 128              		.loc 1 6 10 is_stmt 0 view .LVU14
 129 0026 8261     		str	r2, [r0, #24]
 130              	.LBE2:
   7:Core/Src/menu.cpp **** 
 131              		.loc 1 7 1 view .LVU15
 132 0028 70BC     		pop	{r4, r5, r6}
 133              	.LCFI2:
 134              		.cfi_restore 6
 135              		.cfi_restore 5
 136              		.cfi_restore 4
 137              		.cfi_def_cfa_offset 0
 138 002a 7047     		bx	lr
 139              	.L13:
 140              		.align	2
 141              	.L12:
 142 002c 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE1985:
 145              		.cantunwind
 146              		.fnend
 148              		.global	_ZN4menuC1EP4oledP4uart
 149              		.thumb_set _ZN4menuC1EP4oledP4uart,_ZN4menuC2EP4oledP4uart
 150              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC1:
 153 0000 43252E32 		.ascii	"C%.2s S%.2s  \000"
 153      73205325 
 153      2E327320 
 153      2000
 154 000e 0000     		.align	2
 155              	.LC2:
 156 0010 4348414E 		.ascii	"CHAN     \000"
 156      20202020 
 156      2000
 157 001a 0000     		.align	2
 158              	.LC3:
 159 001c 53515541 		.ascii	"SQUASH    \000"
 159      53482020 
 159      202000
ARM GAS  /tmp/cc565qAH.s 			page 13


 160 0027 00       		.align	2
 161              	.LC4:
 162 0028 44697370 		.ascii	"Disp TMO\000"
 162      20544D4F 
 162      00
 163 0031 000000   		.align	2
 164              	.LC5:
 165 0034 43483A25 		.ascii	"CH:%.2s    \000"
 165      2E327320 
 165      20202000 
 166              		.align	2
 167              	.LC6:
 168 0040 53513A25 		.ascii	"SQ:%.2s    \000"
 168      2E327320 
 168      20202000 
 169              		.align	2
 170              	.LC7:
 171 004c 44533A25 		.ascii	"DS:%.2s    \000"
 171      2E327320 
 171      20202000 
 172              		.align	2
 173              	.LC8:
 174 0058 6D656E75 		.ascii	"menu backk   \000"
 174      20626163 
 174      6B6B2020 
 174      2000
 175              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
 176              		.align	1
 177              		.global	_ZN4menu10menu_printEv
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	_ZN4menu10menu_printEv:
 184              		.fnstart
 185              	.LVL5:
 186              	.LFB1987:
  10:Core/Src/menu.cpp ****     char temp [22];
 187              		.loc 1 10 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 0, uses_anonymous_args = 0
  10:Core/Src/menu.cpp ****     char temp [22];
 191              		.loc 1 10 1 is_stmt 0 view .LVU17
 192 0000 10B5     		push	{r4, lr}
 193              		.save {r4, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198              		.pad #32
 199 0002 88B0     		sub	sp, sp, #32
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 40
 202 0004 0446     		mov	r4, r0
  11:Core/Src/menu.cpp **** 
 203              		.loc 1 11 5 is_stmt 1 view .LVU18
ARM GAS  /tmp/cc565qAH.s 			page 14


  13:Core/Src/menu.cpp ****     {
 204              		.loc 1 13 5 view .LVU19
  13:Core/Src/menu.cpp ****     {
 205              		.loc 1 13 13 is_stmt 0 view .LVU20
 206 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 207 0008 182B     		cmp	r3, #24
 208 000a 1ED8     		bhi	.L15
 209 000c DFE803F0 		tbb	[pc, r3]
 210              	.L17:
 211 0010 0D       		.byte	(.L23-.L17)/2
 212 0011 29       		.byte	(.L22-.L17)/2
 213 0012 39       		.byte	(.L21-.L17)/2
 214 0013 4C       		.byte	(.L20-.L17)/2
 215 0014 1D       		.byte	(.L15-.L17)/2
 216 0015 1D       		.byte	(.L15-.L17)/2
 217 0016 1D       		.byte	(.L15-.L17)/2
 218 0017 1D       		.byte	(.L15-.L17)/2
 219 0018 5C       		.byte	(.L19-.L17)/2
 220 0019 1D       		.byte	(.L15-.L17)/2
 221 001a 1D       		.byte	(.L15-.L17)/2
 222 001b 1D       		.byte	(.L15-.L17)/2
 223 001c 1D       		.byte	(.L15-.L17)/2
 224 001d 1D       		.byte	(.L15-.L17)/2
 225 001e 1D       		.byte	(.L15-.L17)/2
 226 001f 1D       		.byte	(.L15-.L17)/2
 227 0020 6E       		.byte	(.L18-.L17)/2
 228 0021 1D       		.byte	(.L15-.L17)/2
 229 0022 1D       		.byte	(.L15-.L17)/2
 230 0023 1D       		.byte	(.L15-.L17)/2
 231 0024 1D       		.byte	(.L15-.L17)/2
 232 0025 1D       		.byte	(.L15-.L17)/2
 233 0026 1D       		.byte	(.L15-.L17)/2
 234 0027 1D       		.byte	(.L15-.L17)/2
 235 0028 80       		.byte	(.L16-.L17)/2
 236 0029 00       		.p2align 1
 237              	.L23:
  15:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
 238              		.loc 1 15 9 is_stmt 1 view .LVU21
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 239              		.loc 1 16 13 view .LVU22
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 240              		.loc 1 16 20 is_stmt 0 view .LVU23
 241 002a 831C     		adds	r3, r0, #2
 242 002c 821D     		adds	r2, r0, #6
 243 002e 4249     		ldr	r1, .L25
 244 0030 02A8     		add	r0, sp, #8
 245              	.LVL6:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 246              		.loc 1 16 20 view .LVU24
 247 0032 FFF7FEFF 		bl	sprintf
 248              	.LVL7:
  17:Core/Src/menu.cpp ****             break; 
 249              		.loc 1 17 13 is_stmt 1 view .LVU25
  17:Core/Src/menu.cpp ****             break; 
 250              		.loc 1 17 30 is_stmt 0 view .LVU26
 251 0036 414B     		ldr	r3, .L25+4
 252 0038 1322     		movs	r2, #19
ARM GAS  /tmp/cc565qAH.s 			page 15


 253 003a 0192     		str	r2, [sp, #4]
 254 003c 0022     		movs	r2, #0
 255 003e 0092     		str	r2, [sp]
 256 0040 0CCB     		ldm	r3, {r2, r3}
 257 0042 02A9     		add	r1, sp, #8
 258 0044 6069     		ldr	r0, [r4, #20]
 259 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 260              	.LVL8:
 261              	.L15:
  49:Core/Src/menu.cpp **** 
 262              		.loc 1 49 5 is_stmt 1 view .LVU27
  49:Core/Src/menu.cpp **** 
 263              		.loc 1 49 22 is_stmt 0 view .LVU28
 264 004a 3D4B     		ldr	r3, .L25+8
 265 004c 2E22     		movs	r2, #46
 266 004e 0192     		str	r2, [sp, #4]
 267 0050 0022     		movs	r2, #0
 268 0052 0092     		str	r2, [sp]
 269 0054 0CCB     		ldm	r3, {r2, r3}
 270 0056 3B49     		ldr	r1, .L25+12
 271 0058 6069     		ldr	r0, [r4, #20]
 272 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 273              	.LVL9:
  51:Core/Src/menu.cpp **** 
 274              		.loc 1 51 1 view .LVU29
 275 005e 08B0     		add	sp, sp, #32
 276              	.LCFI5:
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 8
 279              		@ sp needed
 280 0060 10BD     		pop	{r4, pc}
 281              	.LVL10:
 282              	.L22:
 283              	.LCFI6:
 284              		.cfi_restore_state
  19:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
 285              		.loc 1 19 9 is_stmt 1 view .LVU30
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 286              		.loc 1 20 13 view .LVU31
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 287              		.loc 1 20 20 is_stmt 0 view .LVU32
 288 0062 394A     		ldr	r2, .L25+16
 289 0064 02AB     		add	r3, sp, #8
 290 0066 07CA     		ldm	r2, {r0, r1, r2}
 291              	.LVL11:
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 292              		.loc 1 20 20 view .LVU33
 293 0068 03C3     		stmia	r3!, {r0, r1}
 294 006a 1A80     		strh	r2, [r3]	@ movhi
  21:Core/Src/menu.cpp ****             break;
 295              		.loc 1 21 13 is_stmt 1 view .LVU34
  21:Core/Src/menu.cpp ****             break;
 296              		.loc 1 21 30 is_stmt 0 view .LVU35
 297 006c 334B     		ldr	r3, .L25+4
 298 006e 1322     		movs	r2, #19
 299 0070 0192     		str	r2, [sp, #4]
 300 0072 0022     		movs	r2, #0
ARM GAS  /tmp/cc565qAH.s 			page 16


 301 0074 0092     		str	r2, [sp]
 302 0076 0CCB     		ldm	r3, {r2, r3}
 303 0078 02A9     		add	r1, sp, #8
 304 007a 6069     		ldr	r0, [r4, #20]
 305 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 306              	.LVL12:
 307 0080 E3E7     		b	.L15
 308              	.LVL13:
 309              	.L21:
  23:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
 310              		.loc 1 23 9 is_stmt 1 view .LVU36
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 24 13 view .LVU37
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 312              		.loc 1 24 20 is_stmt 0 view .LVU38
 313 0082 324A     		ldr	r2, .L25+20
 314 0084 02AB     		add	r3, sp, #8
 315 0086 07CA     		ldm	r2, {r0, r1, r2}
 316              	.LVL14:
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 317              		.loc 1 24 20 view .LVU39
 318 0088 03C3     		stmia	r3!, {r0, r1}
 319 008a 23F8022B 		strh	r2, [r3], #2	@ movhi
 320 008e 120C     		lsrs	r2, r2, #16
 321 0090 1A70     		strb	r2, [r3]
  25:Core/Src/menu.cpp ****             break;
 322              		.loc 1 25 13 is_stmt 1 view .LVU40
  25:Core/Src/menu.cpp ****             break;
 323              		.loc 1 25 30 is_stmt 0 view .LVU41
 324 0092 2A4B     		ldr	r3, .L25+4
 325 0094 1322     		movs	r2, #19
 326 0096 0192     		str	r2, [sp, #4]
 327 0098 0022     		movs	r2, #0
 328 009a 0092     		str	r2, [sp]
 329 009c 0CCB     		ldm	r3, {r2, r3}
 330 009e 02A9     		add	r1, sp, #8
 331 00a0 6069     		ldr	r0, [r4, #20]
 332 00a2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 333              	.LVL15:
 334 00a6 D0E7     		b	.L15
 335              	.LVL16:
 336              	.L20:
  27:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
 337              		.loc 1 27 9 is_stmt 1 view .LVU42
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 338              		.loc 1 28 13 view .LVU43
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 339              		.loc 1 28 20 is_stmt 0 view .LVU44
 340 00a8 294A     		ldr	r2, .L25+24
 341 00aa 02AB     		add	r3, sp, #8
 342 00ac 07CA     		ldm	r2, {r0, r1, r2}
 343              	.LVL17:
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 344              		.loc 1 28 20 view .LVU45
 345 00ae 03C3     		stmia	r3!, {r0, r1}
 346 00b0 1A70     		strb	r2, [r3]
  29:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cc565qAH.s 			page 17


 347              		.loc 1 29 13 is_stmt 1 view .LVU46
  29:Core/Src/menu.cpp ****             break;
 348              		.loc 1 29 30 is_stmt 0 view .LVU47
 349 00b2 224B     		ldr	r3, .L25+4
 350 00b4 1322     		movs	r2, #19
 351 00b6 0192     		str	r2, [sp, #4]
 352 00b8 0022     		movs	r2, #0
 353 00ba 0092     		str	r2, [sp]
 354 00bc 0CCB     		ldm	r3, {r2, r3}
 355 00be 02A9     		add	r1, sp, #8
 356 00c0 6069     		ldr	r0, [r4, #20]
 357 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 358              	.LVL18:
 359 00c6 C0E7     		b	.L15
 360              	.LVL19:
 361              	.L19:
  31:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
 362              		.loc 1 31 9 is_stmt 1 view .LVU48
  32:Core/Src/menu.cpp ****             cursorOn=1;
 363              		.loc 1 32 13 view .LVU49
  32:Core/Src/menu.cpp ****             cursorOn=1;
 364              		.loc 1 32 20 is_stmt 0 view .LVU50
 365 00c8 821D     		adds	r2, r0, #6
 366 00ca 2249     		ldr	r1, .L25+28
 367 00cc 02A8     		add	r0, sp, #8
 368              	.LVL20:
  32:Core/Src/menu.cpp ****             cursorOn=1;
 369              		.loc 1 32 20 view .LVU51
 370 00ce FFF7FEFF 		bl	sprintf
 371              	.LVL21:
  33:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 372              		.loc 1 33 13 is_stmt 1 view .LVU52
  33:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 373              		.loc 1 33 21 is_stmt 0 view .LVU53
 374 00d2 0123     		movs	r3, #1
 375 00d4 E374     		strb	r3, [r4, #19]
  34:Core/Src/menu.cpp ****             break;
 376              		.loc 1 34 13 is_stmt 1 view .LVU54
  34:Core/Src/menu.cpp ****             break;
 377              		.loc 1 34 30 is_stmt 0 view .LVU55
 378 00d6 194B     		ldr	r3, .L25+4
 379 00d8 1322     		movs	r2, #19
 380 00da 0192     		str	r2, [sp, #4]
 381 00dc 0022     		movs	r2, #0
 382 00de 0092     		str	r2, [sp]
 383 00e0 0CCB     		ldm	r3, {r2, r3}
 384 00e2 02A9     		add	r1, sp, #8
 385 00e4 6069     		ldr	r0, [r4, #20]
 386 00e6 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 387              	.LVL22:
 388 00ea AEE7     		b	.L15
 389              	.LVL23:
 390              	.L18:
  36:Core/Src/menu.cpp ****             cursorOn=1;
 391              		.loc 1 36 9 is_stmt 1 view .LVU56
  37:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
 392              		.loc 1 37 13 view .LVU57
ARM GAS  /tmp/cc565qAH.s 			page 18


  37:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
 393              		.loc 1 37 21 is_stmt 0 view .LVU58
 394 00ec 0123     		movs	r3, #1
 395 00ee C374     		strb	r3, [r0, #19]
  38:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 396              		.loc 1 38 13 is_stmt 1 view .LVU59
  38:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 397              		.loc 1 38 20 is_stmt 0 view .LVU60
 398 00f0 821C     		adds	r2, r0, #2
 399 00f2 1949     		ldr	r1, .L25+32
 400 00f4 02A8     		add	r0, sp, #8
 401              	.LVL24:
  38:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 402              		.loc 1 38 20 view .LVU61
 403 00f6 FFF7FEFF 		bl	sprintf
 404              	.LVL25:
  39:Core/Src/menu.cpp ****             break;
 405              		.loc 1 39 13 is_stmt 1 view .LVU62
  39:Core/Src/menu.cpp ****             break;
 406              		.loc 1 39 30 is_stmt 0 view .LVU63
 407 00fa 104B     		ldr	r3, .L25+4
 408 00fc 1322     		movs	r2, #19
 409 00fe 0192     		str	r2, [sp, #4]
 410 0100 0022     		movs	r2, #0
 411 0102 0092     		str	r2, [sp]
 412 0104 0CCB     		ldm	r3, {r2, r3}
 413 0106 02A9     		add	r1, sp, #8
 414 0108 6069     		ldr	r0, [r4, #20]
 415 010a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 416              	.LVL26:
 417 010e 9CE7     		b	.L15
 418              	.LVL27:
 419              	.L16:
  41:Core/Src/menu.cpp ****             cursorOn=1;
 420              		.loc 1 41 9 is_stmt 1 view .LVU64
  42:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
 421              		.loc 1 42 13 view .LVU65
  42:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
 422              		.loc 1 42 21 is_stmt 0 view .LVU66
 423 0110 0123     		movs	r3, #1
 424 0112 C374     		strb	r3, [r0, #19]
  43:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 425              		.loc 1 43 13 is_stmt 1 view .LVU67
  43:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 426              		.loc 1 43 20 is_stmt 0 view .LVU68
 427 0114 00F10E02 		add	r2, r0, #14
 428 0118 1049     		ldr	r1, .L25+36
 429 011a 02A8     		add	r0, sp, #8
 430              	.LVL28:
  43:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 431              		.loc 1 43 20 view .LVU69
 432 011c FFF7FEFF 		bl	sprintf
 433              	.LVL29:
  44:Core/Src/menu.cpp ****             break;
 434              		.loc 1 44 13 is_stmt 1 view .LVU70
  44:Core/Src/menu.cpp ****             break;
 435              		.loc 1 44 30 is_stmt 0 view .LVU71
ARM GAS  /tmp/cc565qAH.s 			page 19


 436 0120 064B     		ldr	r3, .L25+4
 437 0122 1322     		movs	r2, #19
 438 0124 0192     		str	r2, [sp, #4]
 439 0126 0022     		movs	r2, #0
 440 0128 0092     		str	r2, [sp]
 441 012a 0CCB     		ldm	r3, {r2, r3}
 442 012c 02A9     		add	r1, sp, #8
 443 012e 6069     		ldr	r0, [r4, #20]
 444 0130 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 445              	.LVL30:
 446 0134 89E7     		b	.L15
 447              	.L26:
 448 0136 00BF     		.align	2
 449              	.L25:
 450 0138 00000000 		.word	.LC1
 451 013c 00000000 		.word	Font_16x26
 452 0140 00000000 		.word	Font_11x18
 453 0144 58000000 		.word	.LC8
 454 0148 10000000 		.word	.LC2
 455 014c 1C000000 		.word	.LC3
 456 0150 28000000 		.word	.LC4
 457 0154 34000000 		.word	.LC5
 458 0158 40000000 		.word	.LC6
 459 015c 4C000000 		.word	.LC7
 460              		.cfi_endproc
 461              	.LFE1987:
 462              		.fnend
 464              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 465              		.align	1
 466              		.global	_ZN4menu7menu_okEv
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	_ZN4menu7menu_okEv:
 473              		.fnstart
 474              	.LVL31:
 475              	.LFB1988:
  54:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 476              		.loc 1 54 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
  54:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 480              		.loc 1 54 1 is_stmt 0 view .LVU73
 481 0000 10B5     		push	{r4, lr}
 482              		.save {r4, lr}
 483              	.LCFI7:
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 487 0002 0446     		mov	r4, r0
  55:Core/Src/menu.cpp ****     {
 488              		.loc 1 55 5 is_stmt 1 view .LVU74
  55:Core/Src/menu.cpp ****     {
 489              		.loc 1 55 28 is_stmt 0 view .LVU75
 490 0004 4069     		ldr	r0, [r0, #20]
ARM GAS  /tmp/cc565qAH.s 			page 20


 491              	.LVL32:
  55:Core/Src/menu.cpp ****     {
 492              		.loc 1 55 28 view .LVU76
 493 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 494              	.LVL33:
  55:Core/Src/menu.cpp ****     {
 495              		.loc 1 55 5 view .LVU77
 496 000a A0B1     		cbz	r0, .L28
  57:Core/Src/menu.cpp ****     }
 497              		.loc 1 57 9 is_stmt 1 view .LVU78
  57:Core/Src/menu.cpp ****     }
 498              		.loc 1 57 31 is_stmt 0 view .LVU79
 499 000c 6069     		ldr	r0, [r4, #20]
 500 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 501              	.LVL34:
 502              	.L29:
  65:Core/Src/menu.cpp ****     {
 503              		.loc 1 65 5 is_stmt 1 view .LVU80
  65:Core/Src/menu.cpp ****     {
 504              		.loc 1 65 13 is_stmt 0 view .LVU81
 505 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 506 0014 013B     		subs	r3, r3, #1
 507 0016 172B     		cmp	r3, #23
 508 0018 16D8     		bhi	.L27
 509 001a DFE803F0 		tbb	[pc, r3]
 510              	.L32:
 511 001e 13       		.byte	(.L37-.L32)/2
 512 001f 16       		.byte	(.L36-.L32)/2
 513 0020 19       		.byte	(.L35-.L32)/2
 514 0021 15       		.byte	(.L27-.L32)/2
 515 0022 15       		.byte	(.L27-.L32)/2
 516 0023 15       		.byte	(.L27-.L32)/2
 517 0024 15       		.byte	(.L27-.L32)/2
 518 0025 1C       		.byte	(.L34-.L32)/2
 519 0026 15       		.byte	(.L27-.L32)/2
 520 0027 15       		.byte	(.L27-.L32)/2
 521 0028 15       		.byte	(.L27-.L32)/2
 522 0029 15       		.byte	(.L27-.L32)/2
 523 002a 15       		.byte	(.L27-.L32)/2
 524 002b 15       		.byte	(.L27-.L32)/2
 525 002c 15       		.byte	(.L27-.L32)/2
 526 002d 29       		.byte	(.L33-.L32)/2
 527 002e 15       		.byte	(.L27-.L32)/2
 528 002f 15       		.byte	(.L27-.L32)/2
 529 0030 15       		.byte	(.L27-.L32)/2
 530 0031 15       		.byte	(.L27-.L32)/2
 531 0032 15       		.byte	(.L27-.L32)/2
 532 0033 15       		.byte	(.L27-.L32)/2
 533 0034 15       		.byte	(.L27-.L32)/2
 534 0035 36       		.byte	(.L31-.L32)/2
 535              		.p2align 1
 536              	.L28:
  61:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 537              		.loc 1 61 9 is_stmt 1 view .LVU82
  61:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 538              		.loc 1 61 23 is_stmt 0 view .LVU83
 539 0036 6069     		ldr	r0, [r4, #20]
ARM GAS  /tmp/cc565qAH.s 			page 21


 540 0038 FFF7FEFF 		bl	_ZN4oled7oled_onEv
 541              	.LVL35:
  62:Core/Src/menu.cpp ****     }
 542              		.loc 1 62 9 is_stmt 1 view .LVU84
  62:Core/Src/menu.cpp ****     }
 543              		.loc 1 62 31 is_stmt 0 view .LVU85
 544 003c 6069     		ldr	r0, [r4, #20]
 545 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 546              	.LVL36:
 547 0042 E6E7     		b	.L29
 548              	.L37:
  69:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 549              		.loc 1 69 5 is_stmt 1 view .LVU86
  70:Core/Src/menu.cpp ****         break;
 550              		.loc 1 70 9 view .LVU87
  70:Core/Src/menu.cpp ****         break;
 551              		.loc 1 70 19 is_stmt 0 view .LVU88
 552 0044 0823     		movs	r3, #8
 553 0046 2370     		strb	r3, [r4]
  71:Core/Src/menu.cpp ****     case MENU_SQ:
 554              		.loc 1 71 9 is_stmt 1 view .LVU89
 555              	.L27:
 112:Core/Src/menu.cpp **** 
 556              		.loc 1 112 1 is_stmt 0 view .LVU90
 557 0048 10BD     		pop	{r4, pc}
 558              	.LVL37:
 559              	.L36:
  72:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
 560              		.loc 1 72 5 is_stmt 1 view .LVU91
  73:Core/Src/menu.cpp ****         break;
 561              		.loc 1 73 9 view .LVU92
  73:Core/Src/menu.cpp ****         break;
 562              		.loc 1 73 19 is_stmt 0 view .LVU93
 563 004a 1023     		movs	r3, #16
 564 004c 2370     		strb	r3, [r4]
  74:Core/Src/menu.cpp ****     case MENU_TMO:
 565              		.loc 1 74 9 is_stmt 1 view .LVU94
 566 004e FBE7     		b	.L27
 567              	.L35:
  75:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 568              		.loc 1 75 5 view .LVU95
  76:Core/Src/menu.cpp ****         break;
 569              		.loc 1 76 9 view .LVU96
  76:Core/Src/menu.cpp ****         break;
 570              		.loc 1 76 19 is_stmt 0 view .LVU97
 571 0050 1823     		movs	r3, #24
 572 0052 2370     		strb	r3, [r4]
  77:Core/Src/menu.cpp ****     case MENU_CH_IN:
 573              		.loc 1 77 9 is_stmt 1 view .LVU98
 574 0054 F8E7     		b	.L27
 575              	.L34:
  78:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 576              		.loc 1 78 5 view .LVU99
  79:Core/Src/menu.cpp ****         if(!cursorOn)
 577              		.loc 1 79 9 view .LVU100
  79:Core/Src/menu.cpp ****         if(!cursorOn)
 578              		.loc 1 79 17 is_stmt 0 view .LVU101
ARM GAS  /tmp/cc565qAH.s 			page 22


 579 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 580 0058 83F00103 		eor	r3, r3, #1
 581 005c E374     		strb	r3, [r4, #19]
  80:Core/Src/menu.cpp ****         {
 582              		.loc 1 80 9 is_stmt 1 view .LVU102
 583 005e 002B     		cmp	r3, #0
 584 0060 F2D1     		bne	.L27
  82:Core/Src/menu.cpp ****             cursorPos=0;
 585              		.loc 1 82 13 view .LVU103
  82:Core/Src/menu.cpp ****             cursorPos=0;
 586              		.loc 1 82 23 is_stmt 0 view .LVU104
 587 0062 A01D     		adds	r0, r4, #6
 588 0064 FFF7FEFF 		bl	atoi
 589              	.LVL38:
  82:Core/Src/menu.cpp ****             cursorPos=0;
 590              		.loc 1 82 18 view .LVU105
 591 0068 6072     		strb	r0, [r4, #9]
  83:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 592              		.loc 1 83 13 is_stmt 1 view .LVU106
  83:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 593              		.loc 1 83 22 is_stmt 0 view .LVU107
 594 006a 0023     		movs	r3, #0
 595 006c A374     		strb	r3, [r4, #18]
 596 006e EBE7     		b	.L27
 597              	.L33:
  87:Core/Src/menu.cpp ****         cursorOn^=1;
 598              		.loc 1 87 5 is_stmt 1 view .LVU108
  88:Core/Src/menu.cpp ****         if(!cursorOn)
 599              		.loc 1 88 9 view .LVU109
  88:Core/Src/menu.cpp ****         if(!cursorOn)
 600              		.loc 1 88 17 is_stmt 0 view .LVU110
 601 0070 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 602 0072 83F00103 		eor	r3, r3, #1
 603 0076 E374     		strb	r3, [r4, #19]
  89:Core/Src/menu.cpp ****         {
 604              		.loc 1 89 9 is_stmt 1 view .LVU111
 605 0078 002B     		cmp	r3, #0
 606 007a E5D1     		bne	.L27
  91:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 607              		.loc 1 91 13 view .LVU112
  91:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 608              		.loc 1 91 23 is_stmt 0 view .LVU113
 609 007c A01C     		adds	r0, r4, #2
 610 007e FFF7FEFF 		bl	atoi
 611              	.LVL39:
  91:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 612              		.loc 1 91 18 view .LVU114
 613 0082 6072     		strb	r0, [r4, #9]
  92:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 614              		.loc 1 92 13 is_stmt 1 view .LVU115
  92:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 615              		.loc 1 92 22 is_stmt 0 view .LVU116
 616 0084 0023     		movs	r3, #0
 617 0086 A374     		strb	r3, [r4, #18]
 618 0088 DEE7     		b	.L27
 619              	.L31:
  96:Core/Src/menu.cpp ****         cursorOn^=1;
ARM GAS  /tmp/cc565qAH.s 			page 23


 620              		.loc 1 96 5 is_stmt 1 view .LVU117
  97:Core/Src/menu.cpp ****         if(!cursorOn)
 621              		.loc 1 97 9 view .LVU118
  97:Core/Src/menu.cpp ****         if(!cursorOn)
 622              		.loc 1 97 17 is_stmt 0 view .LVU119
 623 008a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 624 008c 83F00103 		eor	r3, r3, #1
 625 0090 E374     		strb	r3, [r4, #19]
  98:Core/Src/menu.cpp ****         {
 626              		.loc 1 98 9 is_stmt 1 view .LVU120
 627 0092 002B     		cmp	r3, #0
 628 0094 D8D1     		bne	.L27
 100:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 629              		.loc 1 100 13 view .LVU121
 100:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 630              		.loc 1 100 24 is_stmt 0 view .LVU122
 631 0096 04F10E00 		add	r0, r4, #14
 632 009a FFF7FEFF 		bl	atoi
 633              	.LVL40:
 100:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 634              		.loc 1 100 19 view .LVU123
 635 009e C1B2     		uxtb	r1, r0
 636 00a0 6174     		strb	r1, [r4, #17]
 101:Core/Src/menu.cpp ****             cursorPos=0;
 637              		.loc 1 101 13 is_stmt 1 view .LVU124
 101:Core/Src/menu.cpp ****             cursorPos=0;
 638              		.loc 1 101 33 is_stmt 0 view .LVU125
 639 00a2 6069     		ldr	r0, [r4, #20]
 640 00a4 FFF7FEFF 		bl	_ZN4oled13oled_setTimerEm
 641              	.LVL41:
 102:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 642              		.loc 1 102 13 is_stmt 1 view .LVU126
 102:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 643              		.loc 1 102 22 is_stmt 0 view .LVU127
 644 00a8 0023     		movs	r3, #0
 645 00aa A374     		strb	r3, [r4, #18]
 112:Core/Src/menu.cpp **** 
 646              		.loc 1 112 1 view .LVU128
 647 00ac CCE7     		b	.L27
 648              		.cfi_endproc
 649              	.LFE1988:
 650              		.fnend
 652              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 653              		.align	1
 654              		.global	_ZN4menu9menu_nextEv
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	_ZN4menu9menu_nextEv:
 661              		.fnstart
 662              	.LVL42:
 663              	.LFB1989:
 115:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 664              		.loc 1 115 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc565qAH.s 			page 24


 667              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 668              		.loc 1 115 1 is_stmt 0 view .LVU130
 669 0000 10B5     		push	{r4, lr}
 670              		.save {r4, lr}
 671              	.LCFI8:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 4, -8
 674              		.cfi_offset 14, -4
 675 0002 0446     		mov	r4, r0
 116:Core/Src/menu.cpp ****     {
 676              		.loc 1 116 5 is_stmt 1 view .LVU131
 116:Core/Src/menu.cpp ****     {
 677              		.loc 1 116 28 is_stmt 0 view .LVU132
 678 0004 4069     		ldr	r0, [r0, #20]
 679              	.LVL43:
 116:Core/Src/menu.cpp ****     {
 680              		.loc 1 116 28 view .LVU133
 681 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 682              	.LVL44:
 116:Core/Src/menu.cpp ****     {
 683              		.loc 1 116 5 view .LVU134
 684 000a 88B9     		cbnz	r0, .L49
 685              	.L40:
 120:Core/Src/menu.cpp ****     {
 686              		.loc 1 120 5 is_stmt 1 view .LVU135
 120:Core/Src/menu.cpp ****     {
 687              		.loc 1 120 13 is_stmt 0 view .LVU136
 688 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 689 000e 013B     		subs	r3, r3, #1
 690 0010 172B     		cmp	r3, #23
 691 0012 1AD8     		bhi	.L39
 692 0014 DFE803F0 		tbb	[pc, r3]
 693              	.L43:
 694 0018 10       		.byte	(.L47-.L43)/2
 695 0019 13       		.byte	(.L46-.L43)/2
 696 001a 13       		.byte	(.L46-.L43)/2
 697 001b 19       		.byte	(.L39-.L43)/2
 698 001c 19       		.byte	(.L39-.L43)/2
 699 001d 19       		.byte	(.L39-.L43)/2
 700 001e 19       		.byte	(.L39-.L43)/2
 701 001f 15       		.byte	(.L45-.L43)/2
 702 0020 19       		.byte	(.L39-.L43)/2
 703 0021 19       		.byte	(.L39-.L43)/2
 704 0022 19       		.byte	(.L39-.L43)/2
 705 0023 19       		.byte	(.L39-.L43)/2
 706 0024 19       		.byte	(.L39-.L43)/2
 707 0025 19       		.byte	(.L39-.L43)/2
 708 0026 19       		.byte	(.L39-.L43)/2
 709 0027 1A       		.byte	(.L44-.L43)/2
 710 0028 19       		.byte	(.L39-.L43)/2
 711 0029 19       		.byte	(.L39-.L43)/2
 712 002a 19       		.byte	(.L39-.L43)/2
 713 002b 19       		.byte	(.L39-.L43)/2
 714 002c 19       		.byte	(.L39-.L43)/2
 715 002d 19       		.byte	(.L39-.L43)/2
 716 002e 19       		.byte	(.L39-.L43)/2
ARM GAS  /tmp/cc565qAH.s 			page 25


 717 002f 1F       		.byte	(.L42-.L43)/2
 718              		.p2align 1
 719              	.L49:
 118:Core/Src/menu.cpp ****     }
 720              		.loc 1 118 9 is_stmt 1 view .LVU137
 118:Core/Src/menu.cpp ****     }
 721              		.loc 1 118 31 is_stmt 0 view .LVU138
 722 0030 6069     		ldr	r0, [r4, #20]
 723 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 724              	.LVL45:
 725 0036 E9E7     		b	.L40
 726              	.L47:
 124:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 727              		.loc 1 124 5 is_stmt 1 view .LVU139
 125:Core/Src/menu.cpp ****         break;
 728              		.loc 1 125 9 view .LVU140
 125:Core/Src/menu.cpp ****         break;
 729              		.loc 1 125 19 is_stmt 0 view .LVU141
 730 0038 0223     		movs	r3, #2
 731 003a 2370     		strb	r3, [r4]
 126:Core/Src/menu.cpp ****     case MENU_SQ:
 732              		.loc 1 126 9 is_stmt 1 view .LVU142
 733 003c 05E0     		b	.L39
 734              	.L46:
 129:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 735              		.loc 1 129 5 view .LVU143
 130:Core/Src/menu.cpp ****     case MENU_CH_IN:
 736              		.loc 1 130 9 view .LVU144
 130:Core/Src/menu.cpp ****     case MENU_CH_IN:
 737              		.loc 1 130 19 is_stmt 0 view .LVU145
 738 003e 0123     		movs	r3, #1
 739 0040 2370     		strb	r3, [r4]
 740              	.L45:
 131:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 741              		.loc 1 131 5 is_stmt 1 view .LVU146
 132:Core/Src/menu.cpp ****         break;
 742              		.loc 1 132 9 view .LVU147
 132:Core/Src/menu.cpp ****         break;
 743              		.loc 1 132 20 is_stmt 0 view .LVU148
 744 0042 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 132:Core/Src/menu.cpp ****         break;
 745              		.loc 1 132 18 view .LVU149
 746 0044 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 747 0046 5340     		eors	r3, r3, r2
 748 0048 A374     		strb	r3, [r4, #18]
 133:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 749              		.loc 1 133 9 is_stmt 1 view .LVU150
 750              	.L39:
 144:Core/Src/menu.cpp **** 
 751              		.loc 1 144 1 is_stmt 0 view .LVU151
 752 004a 10BD     		pop	{r4, pc}
 753              	.LVL46:
 754              	.L44:
 134:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 755              		.loc 1 134 5 is_stmt 1 view .LVU152
 135:Core/Src/menu.cpp ****         break;
 756              		.loc 1 135 9 view .LVU153
ARM GAS  /tmp/cc565qAH.s 			page 26


 135:Core/Src/menu.cpp ****         break;
 757              		.loc 1 135 20 is_stmt 0 view .LVU154
 758 004c E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 135:Core/Src/menu.cpp ****         break;
 759              		.loc 1 135 18 view .LVU155
 760 004e A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 761 0050 5340     		eors	r3, r3, r2
 762 0052 A374     		strb	r3, [r4, #18]
 136:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 763              		.loc 1 136 9 is_stmt 1 view .LVU156
 764 0054 F9E7     		b	.L39
 765              	.L42:
 137:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 766              		.loc 1 137 5 view .LVU157
 138:Core/Src/menu.cpp ****         break;
 767              		.loc 1 138 9 view .LVU158
 138:Core/Src/menu.cpp ****         break;
 768              		.loc 1 138 20 is_stmt 0 view .LVU159
 769 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 138:Core/Src/menu.cpp ****         break;
 770              		.loc 1 138 18 view .LVU160
 771 0058 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 772 005a 5340     		eors	r3, r3, r2
 773 005c A374     		strb	r3, [r4, #18]
 139:Core/Src/menu.cpp **** 
 774              		.loc 1 139 9 is_stmt 1 view .LVU161
 144:Core/Src/menu.cpp **** 
 775              		.loc 1 144 1 is_stmt 0 view .LVU162
 776 005e F4E7     		b	.L39
 777              		.cfi_endproc
 778              	.LFE1989:
 779              		.fnend
 781              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 782              		.align	1
 783              		.global	_ZN4menu9menu_menuEv
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu fpv4-sp-d16
 789              	_ZN4menu9menu_menuEv:
 790              		.fnstart
 791              	.LVL47:
 792              	.LFB1990:
 147:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 793              		.loc 1 147 1 is_stmt 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 147:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 797              		.loc 1 147 1 is_stmt 0 view .LVU164
 798 0000 10B5     		push	{r4, lr}
 799              		.save {r4, lr}
 800              	.LCFI9:
 801              		.cfi_def_cfa_offset 8
 802              		.cfi_offset 4, -8
 803              		.cfi_offset 14, -4
 804 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc565qAH.s 			page 27


 148:Core/Src/menu.cpp ****     {
 805              		.loc 1 148 5 is_stmt 1 view .LVU165
 148:Core/Src/menu.cpp ****     {
 806              		.loc 1 148 28 is_stmt 0 view .LVU166
 807 0004 4069     		ldr	r0, [r0, #20]
 808              	.LVL48:
 148:Core/Src/menu.cpp ****     {
 809              		.loc 1 148 28 view .LVU167
 810 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 811              	.LVL49:
 148:Core/Src/menu.cpp ****     {
 812              		.loc 1 148 5 view .LVU168
 813 000a 10B9     		cbnz	r0, .L53
 814              	.L51:
 152:Core/Src/menu.cpp **** }
 815              		.loc 1 152 5 is_stmt 1 view .LVU169
 152:Core/Src/menu.cpp **** }
 816              		.loc 1 152 16 is_stmt 0 view .LVU170
 817 000c 0123     		movs	r3, #1
 818 000e 2370     		strb	r3, [r4]
 153:Core/Src/menu.cpp **** 
 819              		.loc 1 153 1 view .LVU171
 820 0010 10BD     		pop	{r4, pc}
 821              	.LVL50:
 822              	.L53:
 150:Core/Src/menu.cpp ****     }
 823              		.loc 1 150 9 is_stmt 1 view .LVU172
 150:Core/Src/menu.cpp ****     }
 824              		.loc 1 150 31 is_stmt 0 view .LVU173
 825 0012 6069     		ldr	r0, [r4, #20]
 826 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 827              	.LVL51:
 828 0018 F8E7     		b	.L51
 829              		.cfi_endproc
 830              	.LFE1990:
 831              		.fnend
 833              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 834              		.align	1
 835              		.global	_ZN4menu9menu_backEv
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	_ZN4menu9menu_backEv:
 842              		.fnstart
 843              	.LVL52:
 844              	.LFB1991:
 156:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 845              		.loc 1 156 1 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 849              		.loc 1 156 1 is_stmt 0 view .LVU175
 850 0000 10B5     		push	{r4, lr}
 851              		.save {r4, lr}
 852              	.LCFI10:
ARM GAS  /tmp/cc565qAH.s 			page 28


 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 856 0002 0446     		mov	r4, r0
 157:Core/Src/menu.cpp ****     {
 857              		.loc 1 157 5 is_stmt 1 view .LVU176
 157:Core/Src/menu.cpp ****     {
 858              		.loc 1 157 28 is_stmt 0 view .LVU177
 859 0004 4069     		ldr	r0, [r0, #20]
 860              	.LVL53:
 157:Core/Src/menu.cpp ****     {
 861              		.loc 1 157 28 view .LVU178
 862 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 863              	.LVL54:
 157:Core/Src/menu.cpp ****     {
 864              		.loc 1 157 5 view .LVU179
 865 000a 18B9     		cbnz	r0, .L57
 866              	.L55:
 161:Core/Src/menu.cpp **** }
 867              		.loc 1 161 5 is_stmt 1 view .LVU180
 161:Core/Src/menu.cpp **** }
 868              		.loc 1 161 36 is_stmt 0 view .LVU181
 869 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 161:Core/Src/menu.cpp **** }
 870              		.loc 1 161 18 view .LVU182
 871 000e DB08     		lsrs	r3, r3, #3
 161:Core/Src/menu.cpp **** }
 872              		.loc 1 161 16 view .LVU183
 873 0010 2370     		strb	r3, [r4]
 162:Core/Src/menu.cpp **** 
 874              		.loc 1 162 1 view .LVU184
 875 0012 10BD     		pop	{r4, pc}
 876              	.LVL55:
 877              	.L57:
 159:Core/Src/menu.cpp ****     }
 878              		.loc 1 159 9 is_stmt 1 view .LVU185
 159:Core/Src/menu.cpp ****     }
 879              		.loc 1 159 31 is_stmt 0 view .LVU186
 880 0014 6069     		ldr	r0, [r4, #20]
 881 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 882              	.LVL56:
 883 001a F7E7     		b	.L55
 884              		.cfi_endproc
 885              	.LFE1991:
 886              		.fnend
 888              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 889              		.align	1
 890              		.global	_ZN4menu9menu_prevEv
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv4-sp-d16
 896              	_ZN4menu9menu_prevEv:
 897              		.fnstart
 898              	.LVL57:
 899              	.LFB1992:
 165:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
ARM GAS  /tmp/cc565qAH.s 			page 29


 900              		.loc 1 165 1 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 904              		.loc 1 165 1 is_stmt 0 view .LVU188
 905 0000 10B5     		push	{r4, lr}
 906              		.save {r4, lr}
 907              	.LCFI11:
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 911 0002 0446     		mov	r4, r0
 166:Core/Src/menu.cpp ****     {
 912              		.loc 1 166 5 is_stmt 1 view .LVU189
 166:Core/Src/menu.cpp ****     {
 913              		.loc 1 166 28 is_stmt 0 view .LVU190
 914 0004 4069     		ldr	r0, [r0, #20]
 915              	.LVL58:
 166:Core/Src/menu.cpp ****     {
 916              		.loc 1 166 28 view .LVU191
 917 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 918              	.LVL59:
 166:Core/Src/menu.cpp ****     {
 919              		.loc 1 166 5 view .LVU192
 920 000a 88B9     		cbnz	r0, .L69
 921              	.L59:
 170:Core/Src/menu.cpp ****     {
 922              		.loc 1 170 5 is_stmt 1 view .LVU193
 170:Core/Src/menu.cpp ****     {
 923              		.loc 1 170 13 is_stmt 0 view .LVU194
 924 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 925 000e 013B     		subs	r3, r3, #1
 926 0010 172B     		cmp	r3, #23
 927 0012 13D8     		bhi	.L58
 928 0014 DFE803F0 		tbb	[pc, r3]
 929              	.L62:
 930 0018 10       		.byte	(.L67-.L62)/2
 931 0019 13       		.byte	(.L66-.L62)/2
 932 001a 16       		.byte	(.L65-.L62)/2
 933 001b 12       		.byte	(.L58-.L62)/2
 934 001c 12       		.byte	(.L58-.L62)/2
 935 001d 12       		.byte	(.L58-.L62)/2
 936 001e 12       		.byte	(.L58-.L62)/2
 937 001f 19       		.byte	(.L64-.L62)/2
 938 0020 12       		.byte	(.L58-.L62)/2
 939 0021 12       		.byte	(.L58-.L62)/2
 940 0022 12       		.byte	(.L58-.L62)/2
 941 0023 12       		.byte	(.L58-.L62)/2
 942 0024 12       		.byte	(.L58-.L62)/2
 943 0025 12       		.byte	(.L58-.L62)/2
 944 0026 12       		.byte	(.L58-.L62)/2
 945 0027 1E       		.byte	(.L63-.L62)/2
 946 0028 12       		.byte	(.L58-.L62)/2
 947 0029 12       		.byte	(.L58-.L62)/2
 948 002a 12       		.byte	(.L58-.L62)/2
 949 002b 12       		.byte	(.L58-.L62)/2
ARM GAS  /tmp/cc565qAH.s 			page 30


 950 002c 12       		.byte	(.L58-.L62)/2
 951 002d 12       		.byte	(.L58-.L62)/2
 952 002e 12       		.byte	(.L58-.L62)/2
 953 002f 23       		.byte	(.L61-.L62)/2
 954              		.p2align 1
 955              	.L69:
 168:Core/Src/menu.cpp ****     }
 956              		.loc 1 168 9 is_stmt 1 view .LVU195
 168:Core/Src/menu.cpp ****     }
 957              		.loc 1 168 31 is_stmt 0 view .LVU196
 958 0030 6069     		ldr	r0, [r4, #20]
 959 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 960              	.LVL60:
 961 0036 E9E7     		b	.L59
 962              	.L67:
 174:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 963              		.loc 1 174 5 is_stmt 1 view .LVU197
 175:Core/Src/menu.cpp ****         break;
 964              		.loc 1 175 9 view .LVU198
 175:Core/Src/menu.cpp ****         break;
 965              		.loc 1 175 19 is_stmt 0 view .LVU199
 966 0038 0323     		movs	r3, #3
 967 003a 2370     		strb	r3, [r4]
 176:Core/Src/menu.cpp ****     case MENU_SQ:
 968              		.loc 1 176 9 is_stmt 1 view .LVU200
 969              	.L58:
 196:Core/Src/menu.cpp **** void menu::menu_number(char num)
 970              		.loc 1 196 1 is_stmt 0 view .LVU201
 971 003c 10BD     		pop	{r4, pc}
 972              	.LVL61:
 973              	.L66:
 177:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 974              		.loc 1 177 5 is_stmt 1 view .LVU202
 178:Core/Src/menu.cpp ****         break;
 975              		.loc 1 178 9 view .LVU203
 178:Core/Src/menu.cpp ****         break;
 976              		.loc 1 178 19 is_stmt 0 view .LVU204
 977 003e 0123     		movs	r3, #1
 978 0040 2370     		strb	r3, [r4]
 179:Core/Src/menu.cpp ****     case MENU_TMO:
 979              		.loc 1 179 9 is_stmt 1 view .LVU205
 980 0042 FBE7     		b	.L58
 981              	.L65:
 180:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 982              		.loc 1 180 5 view .LVU206
 181:Core/Src/menu.cpp ****         break;
 983              		.loc 1 181 9 view .LVU207
 181:Core/Src/menu.cpp ****         break;
 984              		.loc 1 181 19 is_stmt 0 view .LVU208
 985 0044 0223     		movs	r3, #2
 986 0046 2370     		strb	r3, [r4]
 182:Core/Src/menu.cpp ****     case MENU_CH_IN:
 987              		.loc 1 182 9 is_stmt 1 view .LVU209
 988 0048 F8E7     		b	.L58
 989              	.L64:
 183:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 990              		.loc 1 183 5 view .LVU210
ARM GAS  /tmp/cc565qAH.s 			page 31


 184:Core/Src/menu.cpp ****         break;
 991              		.loc 1 184 9 view .LVU211
 184:Core/Src/menu.cpp ****         break;
 992              		.loc 1 184 20 is_stmt 0 view .LVU212
 993 004a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 184:Core/Src/menu.cpp ****         break;
 994              		.loc 1 184 18 view .LVU213
 995 004c A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 996 004e 5340     		eors	r3, r3, r2
 997 0050 A374     		strb	r3, [r4, #18]
 185:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 998              		.loc 1 185 9 is_stmt 1 view .LVU214
 999 0052 F3E7     		b	.L58
 1000              	.L63:
 186:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 1001              		.loc 1 186 5 view .LVU215
 187:Core/Src/menu.cpp ****         break;
 1002              		.loc 1 187 9 view .LVU216
 187:Core/Src/menu.cpp ****         break;
 1003              		.loc 1 187 20 is_stmt 0 view .LVU217
 1004 0054 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 187:Core/Src/menu.cpp ****         break;
 1005              		.loc 1 187 18 view .LVU218
 1006 0056 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1007 0058 5340     		eors	r3, r3, r2
 1008 005a A374     		strb	r3, [r4, #18]
 188:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 1009              		.loc 1 188 9 is_stmt 1 view .LVU219
 1010 005c EEE7     		b	.L58
 1011              	.L61:
 189:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 1012              		.loc 1 189 5 view .LVU220
 190:Core/Src/menu.cpp ****         break;
 1013              		.loc 1 190 9 view .LVU221
 190:Core/Src/menu.cpp ****         break;
 1014              		.loc 1 190 20 is_stmt 0 view .LVU222
 1015 005e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 190:Core/Src/menu.cpp ****         break;
 1016              		.loc 1 190 18 view .LVU223
 1017 0060 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1018 0062 5340     		eors	r3, r3, r2
 1019 0064 A374     		strb	r3, [r4, #18]
 191:Core/Src/menu.cpp **** 
 1020              		.loc 1 191 9 is_stmt 1 view .LVU224
 196:Core/Src/menu.cpp **** void menu::menu_number(char num)
 1021              		.loc 1 196 1 is_stmt 0 view .LVU225
 1022 0066 E9E7     		b	.L58
 1023              		.cfi_endproc
 1024              	.LFE1992:
 1025              		.fnend
 1027              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 1028              		.align	1
 1029              		.global	_ZN4menu11menu_numberEc
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc565qAH.s 			page 32


 1035              	_ZN4menu11menu_numberEc:
 1036              		.fnstart
 1037              	.LVL62:
 1038              	.LFB1993:
 198:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1039              		.loc 1 198 1 is_stmt 1 view -0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 198:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1043              		.loc 1 198 1 is_stmt 0 view .LVU227
 1044 0000 38B5     		push	{r3, r4, r5, lr}
 1045              		.save {r3, r4, r5, lr}
 1046              	.LCFI12:
 1047              		.cfi_def_cfa_offset 16
 1048              		.cfi_offset 3, -16
 1049              		.cfi_offset 4, -12
 1050              		.cfi_offset 5, -8
 1051              		.cfi_offset 14, -4
 1052 0002 0446     		mov	r4, r0
 1053 0004 0D46     		mov	r5, r1
 199:Core/Src/menu.cpp ****     {
 1054              		.loc 1 199 5 is_stmt 1 view .LVU228
 199:Core/Src/menu.cpp ****     {
 1055              		.loc 1 199 28 is_stmt 0 view .LVU229
 1056 0006 4069     		ldr	r0, [r0, #20]
 1057              	.LVL63:
 199:Core/Src/menu.cpp ****     {
 1058              		.loc 1 199 28 view .LVU230
 1059 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1060              	.LVL64:
 199:Core/Src/menu.cpp ****     {
 1061              		.loc 1 199 5 view .LVU231
 1062 000c 48B9     		cbnz	r0, .L76
 1063              	.L71:
 203:Core/Src/menu.cpp ****     {
 1064              		.loc 1 203 5 is_stmt 1 view .LVU232
 203:Core/Src/menu.cpp ****     {
 1065              		.loc 1 203 8 is_stmt 0 view .LVU233
 1066 000e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 203:Core/Src/menu.cpp ****     {
 1067              		.loc 1 203 5 view .LVU234
 1068 0010 33B1     		cbz	r3, .L70
 205:Core/Src/menu.cpp ****         {
 1069              		.loc 1 205 9 is_stmt 1 view .LVU235
 205:Core/Src/menu.cpp ****         {
 1070              		.loc 1 205 17 is_stmt 0 view .LVU236
 1071 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 205:Core/Src/menu.cpp ****         {
 1072              		.loc 1 205 9 view .LVU237
 1073 0014 102A     		cmp	r2, #16
 1074 0016 0ED0     		beq	.L73
 1075 0018 182A     		cmp	r2, #24
 1076 001a 12D0     		beq	.L74
 1077 001c 082A     		cmp	r2, #8
 1078 001e 04D0     		beq	.L77
 1079              	.L70:
ARM GAS  /tmp/cc565qAH.s 			page 33


 226:Core/Src/menu.cpp **** void menu::menu_up()
 1080              		.loc 1 226 1 view .LVU238
 1081 0020 38BD     		pop	{r3, r4, r5, pc}
 1082              	.LVL65:
 1083              	.L76:
 201:Core/Src/menu.cpp ****     }
 1084              		.loc 1 201 9 is_stmt 1 view .LVU239
 201:Core/Src/menu.cpp ****     }
 1085              		.loc 1 201 31 is_stmt 0 view .LVU240
 1086 0022 6069     		ldr	r0, [r4, #20]
 1087 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1088              	.LVL66:
 1089 0028 F1E7     		b	.L71
 1090              	.L77:
 207:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1091              		.loc 1 207 9 is_stmt 1 view .LVU241
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1092              		.loc 1 208 13 view .LVU242
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1093              		.loc 1 208 16 is_stmt 0 view .LVU243
 1094 002a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1095              		.loc 1 208 26 view .LVU244
 1096 002c A118     		adds	r1, r4, r2
 1097 002e 8D71     		strb	r5, [r1, #6]
 209:Core/Src/menu.cpp ****             break;
 1098              		.loc 1 209 13 is_stmt 1 view .LVU245
 209:Core/Src/menu.cpp ****             break;
 1099              		.loc 1 209 22 is_stmt 0 view .LVU246
 1100 0030 5340     		eors	r3, r3, r2
 1101 0032 A374     		strb	r3, [r4, #18]
 210:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1102              		.loc 1 210 13 is_stmt 1 view .LVU247
 1103 0034 F4E7     		b	.L70
 1104              	.L73:
 211:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1105              		.loc 1 211 9 view .LVU248
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1106              		.loc 1 212 13 view .LVU249
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1107              		.loc 1 212 16 is_stmt 0 view .LVU250
 1108 0036 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1109              		.loc 1 212 26 view .LVU251
 1110 0038 A118     		adds	r1, r4, r2
 1111 003a 8D70     		strb	r5, [r1, #2]
 213:Core/Src/menu.cpp ****             break;
 1112              		.loc 1 213 13 is_stmt 1 view .LVU252
 213:Core/Src/menu.cpp ****             break;
 1113              		.loc 1 213 22 is_stmt 0 view .LVU253
 1114 003c 5340     		eors	r3, r3, r2
 1115 003e A374     		strb	r3, [r4, #18]
 214:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1116              		.loc 1 214 13 is_stmt 1 view .LVU254
 1117 0040 EEE7     		b	.L70
 1118              	.L74:
 215:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
ARM GAS  /tmp/cc565qAH.s 			page 34


 1119              		.loc 1 215 9 view .LVU255
 216:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1120              		.loc 1 216 13 view .LVU256
 216:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1121              		.loc 1 216 17 is_stmt 0 view .LVU257
 1122 0042 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 216:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 1123              		.loc 1 216 27 view .LVU258
 1124 0044 2344     		add	r3, r3, r4
 1125 0046 9D73     		strb	r5, [r3, #14]
 217:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1126              		.loc 1 217 13 is_stmt 1 view .LVU259
 217:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1127              		.loc 1 217 24 is_stmt 0 view .LVU260
 1128 0048 04F10E00 		add	r0, r4, #14
 1129 004c FFF7FEFF 		bl	atoi
 1130              	.LVL67:
 217:Core/Src/menu.cpp ****             oled1->oled_setTimer(tmoVal);
 1131              		.loc 1 217 19 view .LVU261
 1132 0050 C1B2     		uxtb	r1, r0
 1133 0052 6174     		strb	r1, [r4, #17]
 218:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1134              		.loc 1 218 13 is_stmt 1 view .LVU262
 218:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1135              		.loc 1 218 33 is_stmt 0 view .LVU263
 1136 0054 6069     		ldr	r0, [r4, #20]
 1137 0056 FFF7FEFF 		bl	_ZN4oled13oled_setTimerEm
 1138              	.LVL68:
 219:Core/Src/menu.cpp ****             break;
 1139              		.loc 1 219 13 is_stmt 1 view .LVU264
 219:Core/Src/menu.cpp ****             break;
 1140              		.loc 1 219 24 is_stmt 0 view .LVU265
 1141 005a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 219:Core/Src/menu.cpp ****             break;
 1142              		.loc 1 219 22 view .LVU266
 1143 005c A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 1144 005e 5340     		eors	r3, r3, r2
 1145 0060 A374     		strb	r3, [r4, #18]
 220:Core/Src/menu.cpp **** 
 1146              		.loc 1 220 13 is_stmt 1 view .LVU267
 226:Core/Src/menu.cpp **** void menu::menu_up()
 1147              		.loc 1 226 1 is_stmt 0 view .LVU268
 1148 0062 DDE7     		b	.L70
 1149              		.cfi_endproc
 1150              	.LFE1993:
 1151              		.fnend
 1153              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1154              		.align	1
 1155              		.global	_ZN4menu7menu_upEv
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv4-sp-d16
 1161              	_ZN4menu7menu_upEv:
 1162              		.fnstart
 1163              	.LVL69:
 1164              	.LFB1994:
ARM GAS  /tmp/cc565qAH.s 			page 35


 228:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1165              		.loc 1 228 1 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1169              		.loc 1 228 1 is_stmt 0 view .LVU270
 1170 0000 10B5     		push	{r4, lr}
 1171              		.save {r4, lr}
 1172              	.LCFI13:
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 4, -8
 1175              		.cfi_offset 14, -4
 1176 0002 0446     		mov	r4, r0
 229:Core/Src/menu.cpp ****     {
 1177              		.loc 1 229 5 is_stmt 1 view .LVU271
 229:Core/Src/menu.cpp ****     {
 1178              		.loc 1 229 28 is_stmt 0 view .LVU272
 1179 0004 4069     		ldr	r0, [r0, #20]
 1180              	.LVL70:
 229:Core/Src/menu.cpp ****     {
 1181              		.loc 1 229 28 view .LVU273
 1182 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1183              	.LVL71:
 229:Core/Src/menu.cpp ****     {
 1184              		.loc 1 229 5 view .LVU274
 1185 000a 50B9     		cbnz	r0, .L86
 1186              	.L79:
 233:Core/Src/menu.cpp ****     {
 1187              		.loc 1 233 5 is_stmt 1 view .LVU275
 233:Core/Src/menu.cpp ****     {
 1188              		.loc 1 233 13 is_stmt 0 view .LVU276
 1189 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 233:Core/Src/menu.cpp ****     {
 1190              		.loc 1 233 5 view .LVU277
 1191 000e 082B     		cmp	r3, #8
 1192 0010 0BD0     		beq	.L80
 1193 0012 102B     		cmp	r3, #16
 1194 0014 0FD0     		beq	.L81
 247:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1195              		.loc 1 247 5 is_stmt 1 view .LVU278
 248:Core/Src/menu.cpp ****         {
 1196              		.loc 1 248 9 view .LVU279
 248:Core/Src/menu.cpp ****         {
 1197              		.loc 1 248 12 is_stmt 0 view .LVU280
 1198 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 248:Core/Src/menu.cpp ****         {
 1199              		.loc 1 248 9 view .LVU281
 1200 0018 072B     		cmp	r3, #7
 1201 001a 0BD8     		bhi	.L78
 250:Core/Src/menu.cpp ****         }
 1202              		.loc 1 250 13 is_stmt 1 view .LVU282
 250:Core/Src/menu.cpp ****         }
 1203              		.loc 1 250 19 is_stmt 0 view .LVU283
 1204 001c 0133     		adds	r3, r3, #1
 1205 001e 6373     		strb	r3, [r4, #13]
 254:Core/Src/menu.cpp **** 
ARM GAS  /tmp/cc565qAH.s 			page 36


 1206              		.loc 1 254 1 view .LVU284
 1207 0020 08E0     		b	.L78
 1208              	.L86:
 231:Core/Src/menu.cpp ****     }
 1209              		.loc 1 231 9 is_stmt 1 view .LVU285
 231:Core/Src/menu.cpp ****     }
 1210              		.loc 1 231 31 is_stmt 0 view .LVU286
 1211 0022 6069     		ldr	r0, [r4, #20]
 1212 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1213              	.LVL72:
 1214 0028 F0E7     		b	.L79
 1215              	.L80:
 235:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1216              		.loc 1 235 5 is_stmt 1 view .LVU287
 236:Core/Src/menu.cpp ****         {
 1217              		.loc 1 236 9 view .LVU288
 236:Core/Src/menu.cpp ****         {
 1218              		.loc 1 236 12 is_stmt 0 view .LVU289
 1219 002a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 236:Core/Src/menu.cpp ****         {
 1220              		.loc 1 236 9 view .LVU290
 1221 002c 152B     		cmp	r3, #21
 1222 002e 01D8     		bhi	.L78
 238:Core/Src/menu.cpp ****         }
 1223              		.loc 1 238 13 is_stmt 1 view .LVU291
 238:Core/Src/menu.cpp ****         }
 1224              		.loc 1 238 18 is_stmt 0 view .LVU292
 1225 0030 0133     		adds	r3, r3, #1
 1226 0032 6372     		strb	r3, [r4, #9]
 1227              	.L78:
 254:Core/Src/menu.cpp **** 
 1228              		.loc 1 254 1 view .LVU293
 1229 0034 10BD     		pop	{r4, pc}
 1230              	.LVL73:
 1231              	.L81:
 241:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1232              		.loc 1 241 5 is_stmt 1 view .LVU294
 242:Core/Src/menu.cpp ****         {
 1233              		.loc 1 242 9 view .LVU295
 242:Core/Src/menu.cpp ****         {
 1234              		.loc 1 242 12 is_stmt 0 view .LVU296
 1235 0036 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 242:Core/Src/menu.cpp ****         {
 1236              		.loc 1 242 9 view .LVU297
 1237 0038 082B     		cmp	r3, #8
 1238 003a FBD8     		bhi	.L78
 244:Core/Src/menu.cpp ****         }
 1239              		.loc 1 244 13 is_stmt 1 view .LVU298
 244:Core/Src/menu.cpp ****         }
 1240              		.loc 1 244 18 is_stmt 0 view .LVU299
 1241 003c 0133     		adds	r3, r3, #1
 1242 003e 6371     		strb	r3, [r4, #5]
 1243 0040 F8E7     		b	.L78
 1244              		.cfi_endproc
 1245              	.LFE1994:
 1246              		.fnend
 1248              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
ARM GAS  /tmp/cc565qAH.s 			page 37


 1249              		.align	1
 1250              		.global	_ZN4menu9menu_downEv
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1254              		.fpu fpv4-sp-d16
 1256              	_ZN4menu9menu_downEv:
 1257              		.fnstart
 1258              	.LVL74:
 1259              	.LFB1995:
 257:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1260              		.loc 1 257 1 is_stmt 1 view -0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 257:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1264              		.loc 1 257 1 is_stmt 0 view .LVU301
 1265 0000 10B5     		push	{r4, lr}
 1266              		.save {r4, lr}
 1267              	.LCFI14:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 4, -8
 1270              		.cfi_offset 14, -4
 1271 0002 0446     		mov	r4, r0
 258:Core/Src/menu.cpp ****     {
 1272              		.loc 1 258 5 is_stmt 1 view .LVU302
 258:Core/Src/menu.cpp ****     {
 1273              		.loc 1 258 28 is_stmt 0 view .LVU303
 1274 0004 4069     		ldr	r0, [r0, #20]
 1275              	.LVL75:
 258:Core/Src/menu.cpp ****     {
 1276              		.loc 1 258 28 view .LVU304
 1277 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1278              	.LVL76:
 258:Core/Src/menu.cpp ****     {
 1279              		.loc 1 258 5 view .LVU305
 1280 000a 48B9     		cbnz	r0, .L95
 1281              	.L88:
 262:Core/Src/menu.cpp ****     {
 1282              		.loc 1 262 5 is_stmt 1 view .LVU306
 262:Core/Src/menu.cpp ****     {
 1283              		.loc 1 262 13 is_stmt 0 view .LVU307
 1284 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 262:Core/Src/menu.cpp ****     {
 1285              		.loc 1 262 5 view .LVU308
 1286 000e 082B     		cmp	r3, #8
 1287 0010 0AD0     		beq	.L89
 1288 0012 102B     		cmp	r3, #16
 1289 0014 0DD0     		beq	.L90
 276:Core/Src/menu.cpp ****         if(volVal > 0)
 1290              		.loc 1 276 5 is_stmt 1 view .LVU309
 277:Core/Src/menu.cpp ****         {
 1291              		.loc 1 277 9 view .LVU310
 277:Core/Src/menu.cpp ****         {
 1292              		.loc 1 277 12 is_stmt 0 view .LVU311
 1293 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 277:Core/Src/menu.cpp ****         {
ARM GAS  /tmp/cc565qAH.s 			page 38


 1294              		.loc 1 277 9 view .LVU312
 1295 0018 53B1     		cbz	r3, .L87
 279:Core/Src/menu.cpp ****         }
 1296              		.loc 1 279 13 is_stmt 1 view .LVU313
 279:Core/Src/menu.cpp ****         }
 1297              		.loc 1 279 19 is_stmt 0 view .LVU314
 1298 001a 013B     		subs	r3, r3, #1
 1299 001c 6373     		strb	r3, [r4, #13]
 284:Core/Src/menu.cpp **** 
 1300              		.loc 1 284 1 view .LVU315
 1301 001e 07E0     		b	.L87
 1302              	.L95:
 260:Core/Src/menu.cpp ****     }
 1303              		.loc 1 260 9 is_stmt 1 view .LVU316
 260:Core/Src/menu.cpp ****     }
 1304              		.loc 1 260 31 is_stmt 0 view .LVU317
 1305 0020 6069     		ldr	r0, [r4, #20]
 1306 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1307              	.LVL77:
 1308 0026 F1E7     		b	.L88
 1309              	.L89:
 264:Core/Src/menu.cpp ****         if(chVal > 0)
 1310              		.loc 1 264 5 is_stmt 1 view .LVU318
 265:Core/Src/menu.cpp ****         {
 1311              		.loc 1 265 9 view .LVU319
 265:Core/Src/menu.cpp ****         {
 1312              		.loc 1 265 12 is_stmt 0 view .LVU320
 1313 0028 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 265:Core/Src/menu.cpp ****         {
 1314              		.loc 1 265 9 view .LVU321
 1315 002a 0BB1     		cbz	r3, .L87
 267:Core/Src/menu.cpp ****         }
 1316              		.loc 1 267 9 is_stmt 1 view .LVU322
 267:Core/Src/menu.cpp ****         }
 1317              		.loc 1 267 14 is_stmt 0 view .LVU323
 1318 002c 013B     		subs	r3, r3, #1
 1319 002e 6372     		strb	r3, [r4, #9]
 1320              	.L87:
 284:Core/Src/menu.cpp **** 
 1321              		.loc 1 284 1 view .LVU324
 1322 0030 10BD     		pop	{r4, pc}
 1323              	.LVL78:
 1324              	.L90:
 270:Core/Src/menu.cpp ****         if(sqVal > 0)
 1325              		.loc 1 270 5 is_stmt 1 view .LVU325
 271:Core/Src/menu.cpp ****         {
 1326              		.loc 1 271 9 view .LVU326
 271:Core/Src/menu.cpp ****         {
 1327              		.loc 1 271 12 is_stmt 0 view .LVU327
 1328 0032 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 271:Core/Src/menu.cpp ****         {
 1329              		.loc 1 271 9 view .LVU328
 1330 0034 002B     		cmp	r3, #0
 1331 0036 FBD0     		beq	.L87
 273:Core/Src/menu.cpp ****         }
 1332              		.loc 1 273 9 is_stmt 1 view .LVU329
 273:Core/Src/menu.cpp ****         }
ARM GAS  /tmp/cc565qAH.s 			page 39


 1333              		.loc 1 273 14 is_stmt 0 view .LVU330
 1334 0038 013B     		subs	r3, r3, #1
 1335 003a 6371     		strb	r3, [r4, #5]
 1336 003c F8E7     		b	.L87
 1337              		.cfi_endproc
 1338              	.LFE1995:
 1339              		.fnend
 1341              		.section	.rodata._ZN4menu13keyboard_pollEv.str1.4,"aMS",%progbits,1
 1342              		.align	2
 1343              	.LC9:
 1344 0000 6E657874 		.ascii	"next\000"
 1344      00
 1345 0005 000000   		.align	2
 1346              	.LC10:
 1347 0008 3600     		.ascii	"6\000"
 1348 000a 0000     		.align	2
 1349              	.LC11:
 1350 000c 3500     		.ascii	"5\000"
 1351 000e 0000     		.align	2
 1352              	.LC12:
 1353 0010 3400     		.ascii	"4\000"
 1354 0012 0000     		.align	2
 1355              	.LC13:
 1356 0014 70726576 		.ascii	"prev\000"
 1356      00
 1357 0019 000000   		.align	2
 1358              	.LC14:
 1359 001c 3800     		.ascii	"8\000"
 1360 001e 0000     		.align	2
 1361              	.LC15:
 1362 0020 3700     		.ascii	"7\000"
 1363 0022 0000     		.align	2
 1364              	.LC16:
 1365 0024 3900     		.ascii	"9\000"
 1366 0026 0000     		.align	2
 1367              	.LC17:
 1368 0028 646F776E 		.ascii	"down\000"
 1368      00
 1369 002d 000000   		.align	2
 1370              	.LC18:
 1371 0030 4D454E55 		.ascii	"MENUs\000"
 1371      7300
 1372 0036 0000     		.align	2
 1373              	.LC19:
 1374 0038 4D454E55 		.ascii	"MENU\000"
 1374      00
 1375 003d 000000   		.align	2
 1376              	.LC20:
 1377 0040 3000     		.ascii	"0\000"
 1378 0042 0000     		.align	2
 1379              	.LC21:
 1380 0044 4261636B 		.ascii	"Back\000"
 1380      00
 1381 0049 000000   		.align	2
 1382              	.LC22:
 1383 004c 757000   		.ascii	"up\000"
 1384 004f 00       		.align	2
ARM GAS  /tmp/cc565qAH.s 			page 40


 1385              	.LC23:
 1386 0050 3300     		.ascii	"3\000"
 1387 0052 0000     		.align	2
 1388              	.LC24:
 1389 0054 3200     		.ascii	"2\000"
 1390 0056 0000     		.align	2
 1391              	.LC25:
 1392 0058 3100     		.ascii	"1\000"
 1393              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1394              		.align	1
 1395              		.global	_ZN4menu13keyboard_pollEv
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv4-sp-d16
 1401              	_ZN4menu13keyboard_pollEv:
 1402              		.fnstart
 1403              	.LVL79:
 1404              	.LFB1996:
 289:Core/Src/menu.cpp ****     int sds=0;
 1405              		.loc 1 289 1 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 24
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 289:Core/Src/menu.cpp ****     int sds=0;
 1409              		.loc 1 289 1 is_stmt 0 view .LVU332
 1410 0000 30B5     		push	{r4, r5, lr}
 1411              		.save {r4, r5, lr}
 1412              	.LCFI15:
 1413              		.cfi_def_cfa_offset 12
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 5, -8
 1416              		.cfi_offset 14, -4
 1417              		.pad #28
 1418 0002 87B0     		sub	sp, sp, #28
 1419              	.LCFI16:
 1420              		.cfi_def_cfa_offset 40
 1421 0004 0546     		mov	r5, r0
 290:Core/Src/menu.cpp ****     char x[20];
 1422              		.loc 1 290 5 is_stmt 1 view .LVU333
 1423              	.LVL80:
 291:Core/Src/menu.cpp **** 
 1424              		.loc 1 291 5 view .LVU334
 293:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 1425              		.loc 1 293 5 view .LVU335
 296:Core/Src/menu.cpp ****     while(sds<10)
 1426              		.loc 1 296 5 view .LVU336
 296:Core/Src/menu.cpp ****     while(sds<10)
 1427              		.loc 1 296 15 is_stmt 0 view .LVU337
 1428 0006 A94A     		ldr	r2, .L127
 1429 0008 5369     		ldr	r3, [r2, #20]
 1430 000a 43F40063 		orr	r3, r3, #2048
 1431 000e 5361     		str	r3, [r2, #20]
 290:Core/Src/menu.cpp ****     char x[20];
 1432              		.loc 1 290 9 view .LVU338
 1433 0010 0023     		movs	r3, #0
 1434              	.LVL81:
ARM GAS  /tmp/cc565qAH.s 			page 41


 1435              	.L98:
 297:Core/Src/menu.cpp ****     {
 1436              		.loc 1 297 5 is_stmt 1 view .LVU339
 297:Core/Src/menu.cpp ****     {
 1437              		.loc 1 297 14 view .LVU340
 1438 0012 092B     		cmp	r3, #9
 1439 0014 01DC     		bgt	.L97
 299:Core/Src/menu.cpp ****     }
 1440              		.loc 1 299 9 view .LVU341
 299:Core/Src/menu.cpp ****     }
 1441              		.loc 1 299 12 is_stmt 0 view .LVU342
 1442 0016 0133     		adds	r3, r3, #1
 1443              	.LVL82:
 297:Core/Src/menu.cpp ****     {
 1444              		.loc 1 297 5 view .LVU343
 1445 0018 FBE7     		b	.L98
 1446              	.L97:
 301:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1447              		.loc 1 301 5 is_stmt 1 view .LVU344
 1448              	.LVL83:
 303:Core/Src/menu.cpp ****     {
 1449              		.loc 1 303 5 view .LVU345
 303:Core/Src/menu.cpp ****     {
 1450              		.loc 1 303 20 is_stmt 0 view .LVU346
 1451 001a A44B     		ldr	r3, .L127
 1452 001c 1B69     		ldr	r3, [r3, #16]
 303:Core/Src/menu.cpp ****     {
 1453              		.loc 1 303 23 view .LVU347
 1454 001e 03F40743 		and	r3, r3, #34560
 303:Core/Src/menu.cpp ****     {
 1455              		.loc 1 303 5 view .LVU348
 1456 0022 B3F5806F 		cmp	r3, #1024
 1457 0026 31D0     		beq	.L99
 1458 0028 12D8     		bhi	.L100
 1459 002a B3F5807F 		cmp	r3, #256
 1460 002e 3AD0     		beq	.L101
 1461 0030 B3F5007F 		cmp	r3, #512
 1462 0034 1CD1     		bne	.L103
 315:Core/Src/menu.cpp ****             menu_number('5');
 1463              		.loc 1 315 9 is_stmt 1 view .LVU349
 316:Core/Src/menu.cpp ****             sprintf(x,"5");
 1464              		.loc 1 316 13 view .LVU350
 316:Core/Src/menu.cpp ****             sprintf(x,"5");
 1465              		.loc 1 316 24 is_stmt 0 view .LVU351
 1466 0036 3521     		movs	r1, #53
 1467 0038 2846     		mov	r0, r5
 1468              	.LVL84:
 316:Core/Src/menu.cpp ****             sprintf(x,"5");
 1469              		.loc 1 316 24 view .LVU352
 1470 003a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1471              	.LVL85:
 317:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1472              		.loc 1 317 13 is_stmt 1 view .LVU353
 317:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1473              		.loc 1 317 20 is_stmt 0 view .LVU354
 1474 003e 3523     		movs	r3, #53
 1475 0040 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/cc565qAH.s 			page 42


 318:Core/Src/menu.cpp ****             break;
 1476              		.loc 1 318 13 is_stmt 1 view .LVU355
 318:Core/Src/menu.cpp ****             break;
 1477              		.loc 1 318 31 is_stmt 0 view .LVU356
 1478 0044 9A4A     		ldr	r2, .L127+4
 1479 0046 01A9     		add	r1, sp, #4
 1480 0048 A869     		ldr	r0, [r5, #24]
 1481 004a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1482              	.LVL86:
 1483 004e 0FE0     		b	.L103
 1484              	.LVL87:
 1485              	.L100:
 303:Core/Src/menu.cpp ****     {
 1486              		.loc 1 303 5 view .LVU357
 1487 0050 B3F5004F 		cmp	r3, #32768
 1488 0054 0CD1     		bne	.L103
 305:Core/Src/menu.cpp ****             menu_next();//R
 1489              		.loc 1 305 9 is_stmt 1 view .LVU358
 306:Core/Src/menu.cpp ****             sprintf(x,"next");
 1490              		.loc 1 306 13 view .LVU359
 306:Core/Src/menu.cpp ****             sprintf(x,"next");
 1491              		.loc 1 306 22 is_stmt 0 view .LVU360
 1492 0056 2846     		mov	r0, r5
 1493              	.LVL88:
 306:Core/Src/menu.cpp ****             sprintf(x,"next");
 1494              		.loc 1 306 22 view .LVU361
 1495 0058 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1496              	.LVL89:
 307:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1497              		.loc 1 307 13 is_stmt 1 view .LVU362
 307:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1498              		.loc 1 307 20 is_stmt 0 view .LVU363
 1499 005c 954A     		ldr	r2, .L127+8
 1500 005e 92E80300 		ldm	r2, {r0, r1}
 1501 0062 0190     		str	r0, [sp, #4]
 1502 0064 8DF80810 		strb	r1, [sp, #8]
 308:Core/Src/menu.cpp ****             break;
 1503              		.loc 1 308 13 is_stmt 1 view .LVU364
 308:Core/Src/menu.cpp ****             break;
 1504              		.loc 1 308 31 is_stmt 0 view .LVU365
 1505 0068 01A9     		add	r1, sp, #4
 1506 006a A869     		ldr	r0, [r5, #24]
 1507 006c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1508              	.LVL90:
 1509              	.L103:
 328:Core/Src/menu.cpp **** 
 1510              		.loc 1 328 5 is_stmt 1 view .LVU366
 328:Core/Src/menu.cpp **** 
 1511              		.loc 1 328 15 is_stmt 0 view .LVU367
 1512 0070 8E4B     		ldr	r3, .L127
 1513 0072 5A69     		ldr	r2, [r3, #20]
 1514 0074 22F40062 		bic	r2, r2, #2048
 1515 0078 5A61     		str	r2, [r3, #20]
 330:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1516              		.loc 1 330 5 is_stmt 1 view .LVU368
 1517              	.LVL91:
 331:Core/Src/menu.cpp ****     
ARM GAS  /tmp/cc565qAH.s 			page 43


 1518              		.loc 1 331 5 view .LVU369
 331:Core/Src/menu.cpp ****     
 1519              		.loc 1 331 15 is_stmt 0 view .LVU370
 1520 007a 5A69     		ldr	r2, [r3, #20]
 1521 007c 42F48052 		orr	r2, r2, #4096
 1522 0080 5A61     		str	r2, [r3, #20]
 301:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1523              		.loc 1 301 8 view .LVU371
 1524 0082 0023     		movs	r3, #0
 1525              	.LVL92:
 1526              	.L105:
 333:Core/Src/menu.cpp ****     {
 1527              		.loc 1 333 5 is_stmt 1 view .LVU372
 333:Core/Src/menu.cpp ****     {
 1528              		.loc 1 333 14 view .LVU373
 1529 0084 092B     		cmp	r3, #9
 1530 0086 1BDC     		bgt	.L104
 335:Core/Src/menu.cpp ****     }
 1531              		.loc 1 335 9 view .LVU374
 335:Core/Src/menu.cpp ****     }
 1532              		.loc 1 335 12 is_stmt 0 view .LVU375
 1533 0088 0133     		adds	r3, r3, #1
 1534              	.LVL93:
 333:Core/Src/menu.cpp ****     {
 1535              		.loc 1 333 5 view .LVU376
 1536 008a FBE7     		b	.L105
 1537              	.LVL94:
 1538              	.L99:
 310:Core/Src/menu.cpp ****             menu_number('6');
 1539              		.loc 1 310 9 is_stmt 1 view .LVU377
 311:Core/Src/menu.cpp ****             sprintf(x,"6");
 1540              		.loc 1 311 13 view .LVU378
 311:Core/Src/menu.cpp ****             sprintf(x,"6");
 1541              		.loc 1 311 24 is_stmt 0 view .LVU379
 1542 008c 3621     		movs	r1, #54
 1543 008e 2846     		mov	r0, r5
 1544              	.LVL95:
 311:Core/Src/menu.cpp ****             sprintf(x,"6");
 1545              		.loc 1 311 24 view .LVU380
 1546 0090 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1547              	.LVL96:
 312:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1548              		.loc 1 312 13 is_stmt 1 view .LVU381
 312:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1549              		.loc 1 312 20 is_stmt 0 view .LVU382
 1550 0094 3623     		movs	r3, #54
 1551 0096 ADF80430 		strh	r3, [sp, #4]	@ movhi
 313:Core/Src/menu.cpp ****             break;
 1552              		.loc 1 313 13 is_stmt 1 view .LVU383
 313:Core/Src/menu.cpp ****             break;
 1553              		.loc 1 313 31 is_stmt 0 view .LVU384
 1554 009a 874A     		ldr	r2, .L127+12
 1555 009c 01A9     		add	r1, sp, #4
 1556 009e A869     		ldr	r0, [r5, #24]
 1557 00a0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1558              	.LVL97:
 1559 00a4 E4E7     		b	.L103
ARM GAS  /tmp/cc565qAH.s 			page 44


 1560              	.LVL98:
 1561              	.L101:
 320:Core/Src/menu.cpp ****             menu_number('4');
 1562              		.loc 1 320 9 is_stmt 1 view .LVU385
 321:Core/Src/menu.cpp ****             sprintf(x,"4");
 1563              		.loc 1 321 13 view .LVU386
 321:Core/Src/menu.cpp ****             sprintf(x,"4");
 1564              		.loc 1 321 24 is_stmt 0 view .LVU387
 1565 00a6 3421     		movs	r1, #52
 1566 00a8 2846     		mov	r0, r5
 1567              	.LVL99:
 321:Core/Src/menu.cpp ****             sprintf(x,"4");
 1568              		.loc 1 321 24 view .LVU388
 1569 00aa FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1570              	.LVL100:
 322:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1571              		.loc 1 322 13 is_stmt 1 view .LVU389
 322:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1572              		.loc 1 322 20 is_stmt 0 view .LVU390
 1573 00ae 3423     		movs	r3, #52
 1574 00b0 ADF80430 		strh	r3, [sp, #4]	@ movhi
 323:Core/Src/menu.cpp ****             break;
 1575              		.loc 1 323 13 is_stmt 1 view .LVU391
 323:Core/Src/menu.cpp ****             break;
 1576              		.loc 1 323 31 is_stmt 0 view .LVU392
 1577 00b4 814A     		ldr	r2, .L127+16
 1578 00b6 01A9     		add	r1, sp, #4
 1579 00b8 A869     		ldr	r0, [r5, #24]
 1580 00ba FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1581              	.LVL101:
 1582 00be D7E7     		b	.L103
 1583              	.LVL102:
 1584              	.L104:
 337:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1585              		.loc 1 337 5 is_stmt 1 view .LVU393
 339:Core/Src/menu.cpp ****     {
 1586              		.loc 1 339 5 view .LVU394
 339:Core/Src/menu.cpp ****     {
 1587              		.loc 1 339 20 is_stmt 0 view .LVU395
 1588 00c0 7A4B     		ldr	r3, .L127
 1589 00c2 1B69     		ldr	r3, [r3, #16]
 339:Core/Src/menu.cpp ****     {
 1590              		.loc 1 339 23 view .LVU396
 1591 00c4 03F40743 		and	r3, r3, #34560
 339:Core/Src/menu.cpp ****     {
 1592              		.loc 1 339 5 view .LVU397
 1593 00c8 B3F5806F 		cmp	r3, #1024
 1594 00cc 31D0     		beq	.L106
 1595 00ce 12D8     		bhi	.L107
 1596 00d0 B3F5807F 		cmp	r3, #256
 1597 00d4 3AD0     		beq	.L108
 1598 00d6 B3F5007F 		cmp	r3, #512
 1599 00da 1CD1     		bne	.L110
 351:Core/Src/menu.cpp ****             menu_number('7');
 1600              		.loc 1 351 9 is_stmt 1 view .LVU398
 352:Core/Src/menu.cpp ****             sprintf(x,"7");
 1601              		.loc 1 352 13 view .LVU399
ARM GAS  /tmp/cc565qAH.s 			page 45


 352:Core/Src/menu.cpp ****             sprintf(x,"7");
 1602              		.loc 1 352 24 is_stmt 0 view .LVU400
 1603 00dc 3721     		movs	r1, #55
 1604 00de 2846     		mov	r0, r5
 1605 00e0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1606              	.LVL103:
 353:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1607              		.loc 1 353 13 is_stmt 1 view .LVU401
 353:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1608              		.loc 1 353 20 is_stmt 0 view .LVU402
 1609 00e4 3723     		movs	r3, #55
 1610 00e6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 354:Core/Src/menu.cpp ****             break;
 1611              		.loc 1 354 13 is_stmt 1 view .LVU403
 354:Core/Src/menu.cpp ****             break;
 1612              		.loc 1 354 31 is_stmt 0 view .LVU404
 1613 00ea 754A     		ldr	r2, .L127+20
 1614 00ec 01A9     		add	r1, sp, #4
 1615 00ee A869     		ldr	r0, [r5, #24]
 1616 00f0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1617              	.LVL104:
 1618 00f4 0FE0     		b	.L110
 1619              	.L107:
 339:Core/Src/menu.cpp ****     {
 1620              		.loc 1 339 5 view .LVU405
 1621 00f6 B3F5004F 		cmp	r3, #32768
 1622 00fa 0CD1     		bne	.L110
 341:Core/Src/menu.cpp ****             menu_prev();//L
 1623              		.loc 1 341 9 is_stmt 1 view .LVU406
 342:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1624              		.loc 1 342 13 view .LVU407
 342:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1625              		.loc 1 342 22 is_stmt 0 view .LVU408
 1626 00fc 2846     		mov	r0, r5
 1627 00fe FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1628              	.LVL105:
 343:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1629              		.loc 1 343 13 is_stmt 1 view .LVU409
 343:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1630              		.loc 1 343 20 is_stmt 0 view .LVU410
 1631 0102 704A     		ldr	r2, .L127+24
 1632 0104 92E80300 		ldm	r2, {r0, r1}
 1633 0108 0190     		str	r0, [sp, #4]
 1634 010a 8DF80810 		strb	r1, [sp, #8]
 344:Core/Src/menu.cpp ****             break;
 1635              		.loc 1 344 13 is_stmt 1 view .LVU411
 344:Core/Src/menu.cpp ****             break;
 1636              		.loc 1 344 31 is_stmt 0 view .LVU412
 1637 010e 01A9     		add	r1, sp, #4
 1638 0110 A869     		ldr	r0, [r5, #24]
 1639 0112 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1640              	.LVL106:
 1641              	.L110:
 365:Core/Src/menu.cpp **** 
 1642              		.loc 1 365 5 is_stmt 1 view .LVU413
 365:Core/Src/menu.cpp **** 
 1643              		.loc 1 365 15 is_stmt 0 view .LVU414
ARM GAS  /tmp/cc565qAH.s 			page 46


 1644 0116 654B     		ldr	r3, .L127
 1645 0118 5A69     		ldr	r2, [r3, #20]
 1646 011a 22F48052 		bic	r2, r2, #4096
 1647 011e 5A61     		str	r2, [r3, #20]
 368:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1648              		.loc 1 368 5 is_stmt 1 view .LVU415
 1649              	.LVL107:
 369:Core/Src/menu.cpp ****     while(sds<10)
 1650              		.loc 1 369 5 view .LVU416
 369:Core/Src/menu.cpp ****     while(sds<10)
 1651              		.loc 1 369 15 is_stmt 0 view .LVU417
 1652 0120 5A69     		ldr	r2, [r3, #20]
 1653 0122 42F40052 		orr	r2, r2, #8192
 1654 0126 5A61     		str	r2, [r3, #20]
 337:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1655              		.loc 1 337 8 view .LVU418
 1656 0128 0024     		movs	r4, #0
 1657              	.LVL108:
 1658              	.L112:
 370:Core/Src/menu.cpp ****     {
 1659              		.loc 1 370 5 is_stmt 1 view .LVU419
 370:Core/Src/menu.cpp ****     {
 1660              		.loc 1 370 14 view .LVU420
 1661 012a 092C     		cmp	r4, #9
 1662 012c 1BDC     		bgt	.L111
 372:Core/Src/menu.cpp ****     }
 1663              		.loc 1 372 9 view .LVU421
 372:Core/Src/menu.cpp ****     }
 1664              		.loc 1 372 12 is_stmt 0 view .LVU422
 1665 012e 0134     		adds	r4, r4, #1
 1666              	.LVL109:
 370:Core/Src/menu.cpp ****     {
 1667              		.loc 1 370 5 view .LVU423
 1668 0130 FBE7     		b	.L112
 1669              	.LVL110:
 1670              	.L106:
 346:Core/Src/menu.cpp ****             menu_number('8');
 1671              		.loc 1 346 9 is_stmt 1 view .LVU424
 347:Core/Src/menu.cpp ****             sprintf(x,"8");
 1672              		.loc 1 347 13 view .LVU425
 347:Core/Src/menu.cpp ****             sprintf(x,"8");
 1673              		.loc 1 347 24 is_stmt 0 view .LVU426
 1674 0132 3821     		movs	r1, #56
 1675 0134 2846     		mov	r0, r5
 1676 0136 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1677              	.LVL111:
 348:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1678              		.loc 1 348 13 is_stmt 1 view .LVU427
 348:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1679              		.loc 1 348 20 is_stmt 0 view .LVU428
 1680 013a 3823     		movs	r3, #56
 1681 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 349:Core/Src/menu.cpp ****             break;
 1682              		.loc 1 349 13 is_stmt 1 view .LVU429
 349:Core/Src/menu.cpp ****             break;
 1683              		.loc 1 349 31 is_stmt 0 view .LVU430
 1684 0140 614A     		ldr	r2, .L127+28
ARM GAS  /tmp/cc565qAH.s 			page 47


 1685 0142 01A9     		add	r1, sp, #4
 1686 0144 A869     		ldr	r0, [r5, #24]
 1687 0146 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1688              	.LVL112:
 1689 014a E4E7     		b	.L110
 1690              	.L108:
 356:Core/Src/menu.cpp ****             menu_number('9');
 1691              		.loc 1 356 9 is_stmt 1 view .LVU431
 357:Core/Src/menu.cpp ****             sprintf(x,"9");
 1692              		.loc 1 357 13 view .LVU432
 357:Core/Src/menu.cpp ****             sprintf(x,"9");
 1693              		.loc 1 357 24 is_stmt 0 view .LVU433
 1694 014c 3921     		movs	r1, #57
 1695 014e 2846     		mov	r0, r5
 1696 0150 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1697              	.LVL113:
 358:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1698              		.loc 1 358 13 is_stmt 1 view .LVU434
 358:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1699              		.loc 1 358 20 is_stmt 0 view .LVU435
 1700 0154 3923     		movs	r3, #57
 1701 0156 ADF80430 		strh	r3, [sp, #4]	@ movhi
 359:Core/Src/menu.cpp ****             break;
 1702              		.loc 1 359 13 is_stmt 1 view .LVU436
 359:Core/Src/menu.cpp ****             break;
 1703              		.loc 1 359 31 is_stmt 0 view .LVU437
 1704 015a 5C4A     		ldr	r2, .L127+32
 1705 015c 01A9     		add	r1, sp, #4
 1706 015e A869     		ldr	r0, [r5, #24]
 1707 0160 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1708              	.LVL114:
 1709 0164 D7E7     		b	.L110
 1710              	.LVL115:
 1711              	.L111:
 376:Core/Src/menu.cpp ****     {
 1712              		.loc 1 376 5 is_stmt 1 view .LVU438
 376:Core/Src/menu.cpp ****     {
 1713              		.loc 1 376 20 is_stmt 0 view .LVU439
 1714 0166 514B     		ldr	r3, .L127
 1715 0168 1B69     		ldr	r3, [r3, #16]
 376:Core/Src/menu.cpp ****     {
 1716              		.loc 1 376 23 view .LVU440
 1717 016a 03F40743 		and	r3, r3, #34560
 376:Core/Src/menu.cpp ****     {
 1718              		.loc 1 376 5 view .LVU441
 1719 016e B3F5806F 		cmp	r3, #1024
 1720 0172 49D0     		beq	.L113
 1721 0174 12D8     		bhi	.L114
 1722 0176 B3F5807F 		cmp	r3, #256
 1723 017a 54D0     		beq	.L115
 1724 017c B3F5007F 		cmp	r3, #512
 1725 0180 1CD1     		bne	.L117
 388:Core/Src/menu.cpp ****             menu_number('0');
 1726              		.loc 1 388 9 is_stmt 1 view .LVU442
 389:Core/Src/menu.cpp ****             sprintf(x,"0");
 1727              		.loc 1 389 13 view .LVU443
 389:Core/Src/menu.cpp ****             sprintf(x,"0");
ARM GAS  /tmp/cc565qAH.s 			page 48


 1728              		.loc 1 389 24 is_stmt 0 view .LVU444
 1729 0182 3021     		movs	r1, #48
 1730 0184 2846     		mov	r0, r5
 1731 0186 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1732              	.LVL116:
 390:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1733              		.loc 1 390 13 is_stmt 1 view .LVU445
 390:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1734              		.loc 1 390 20 is_stmt 0 view .LVU446
 1735 018a 3023     		movs	r3, #48
 1736 018c ADF80430 		strh	r3, [sp, #4]	@ movhi
 391:Core/Src/menu.cpp ****             break;
 1737              		.loc 1 391 13 is_stmt 1 view .LVU447
 391:Core/Src/menu.cpp ****             break;
 1738              		.loc 1 391 31 is_stmt 0 view .LVU448
 1739 0190 4F4A     		ldr	r2, .L127+36
 1740 0192 01A9     		add	r1, sp, #4
 1741 0194 A869     		ldr	r0, [r5, #24]
 1742 0196 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1743              	.LVL117:
 1744 019a 0FE0     		b	.L117
 1745              	.L114:
 376:Core/Src/menu.cpp ****     {
 1746              		.loc 1 376 5 view .LVU449
 1747 019c B3F5004F 		cmp	r3, #32768
 1748 01a0 0CD1     		bne	.L117
 378:Core/Src/menu.cpp ****             menu_down();//D
 1749              		.loc 1 378 9 is_stmt 1 view .LVU450
 379:Core/Src/menu.cpp ****             sprintf(x,"down");
 1750              		.loc 1 379 13 view .LVU451
 379:Core/Src/menu.cpp ****             sprintf(x,"down");
 1751              		.loc 1 379 22 is_stmt 0 view .LVU452
 1752 01a2 2846     		mov	r0, r5
 1753 01a4 FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1754              	.LVL118:
 380:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1755              		.loc 1 380 13 is_stmt 1 view .LVU453
 380:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1756              		.loc 1 380 20 is_stmt 0 view .LVU454
 1757 01a8 4A4A     		ldr	r2, .L127+40
 1758 01aa 92E80300 		ldm	r2, {r0, r1}
 1759 01ae 0190     		str	r0, [sp, #4]
 1760 01b0 8DF80810 		strb	r1, [sp, #8]
 381:Core/Src/menu.cpp ****             break;
 1761              		.loc 1 381 13 is_stmt 1 view .LVU455
 381:Core/Src/menu.cpp ****             break;
 1762              		.loc 1 381 31 is_stmt 0 view .LVU456
 1763 01b4 01A9     		add	r1, sp, #4
 1764 01b6 A869     		ldr	r0, [r5, #24]
 1765 01b8 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1766              	.LVL119:
 1767              	.L117:
 402:Core/Src/menu.cpp **** 
 1768              		.loc 1 402 5 is_stmt 1 view .LVU457
 402:Core/Src/menu.cpp **** 
 1769              		.loc 1 402 15 is_stmt 0 view .LVU458
 1770 01bc 3B4B     		ldr	r3, .L127
ARM GAS  /tmp/cc565qAH.s 			page 49


 1771 01be 5A69     		ldr	r2, [r3, #20]
 1772 01c0 22F40052 		bic	r2, r2, #8192
 1773 01c4 5A61     		str	r2, [r3, #20]
 404:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1774              		.loc 1 404 5 is_stmt 1 view .LVU459
 1775              	.LVL120:
 405:Core/Src/menu.cpp ****     while(sds<10)
 1776              		.loc 1 405 5 view .LVU460
 405:Core/Src/menu.cpp ****     while(sds<10)
 1777              		.loc 1 405 15 is_stmt 0 view .LVU461
 1778 01c6 5A69     		ldr	r2, [r3, #20]
 1779 01c8 42F48042 		orr	r2, r2, #16384
 1780 01cc 5A61     		str	r2, [r3, #20]
 1781              	.L119:
 406:Core/Src/menu.cpp ****     {
 1782              		.loc 1 406 5 is_stmt 1 view .LVU462
 406:Core/Src/menu.cpp ****     {
 1783              		.loc 1 406 14 view .LVU463
 1784 01ce 092C     		cmp	r4, #9
 1785 01d0 37DD     		ble	.L126
 410:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1786              		.loc 1 410 5 view .LVU464
 1787              	.LVL121:
 412:Core/Src/menu.cpp ****     {
 1788              		.loc 1 412 5 view .LVU465
 412:Core/Src/menu.cpp ****     {
 1789              		.loc 1 412 20 is_stmt 0 view .LVU466
 1790 01d2 364B     		ldr	r3, .L127
 1791 01d4 1B69     		ldr	r3, [r3, #16]
 412:Core/Src/menu.cpp ****     {
 1792              		.loc 1 412 23 view .LVU467
 1793 01d6 03F40743 		and	r3, r3, #34560
 412:Core/Src/menu.cpp ****     {
 1794              		.loc 1 412 5 view .LVU468
 1795 01da B3F5806F 		cmp	r3, #1024
 1796 01de 4AD0     		beq	.L120
 1797 01e0 31D8     		bhi	.L121
 1798 01e2 B3F5807F 		cmp	r3, #256
 1799 01e6 53D0     		beq	.L122
 1800 01e8 B3F5007F 		cmp	r3, #512
 1801 01ec 3CD1     		bne	.L124
 424:Core/Src/menu.cpp ****             menu_number('2');
 1802              		.loc 1 424 9 is_stmt 1 view .LVU469
 425:Core/Src/menu.cpp ****             sprintf(x,"2");
 1803              		.loc 1 425 13 view .LVU470
 425:Core/Src/menu.cpp ****             sprintf(x,"2");
 1804              		.loc 1 425 24 is_stmt 0 view .LVU471
 1805 01ee 3221     		movs	r1, #50
 1806 01f0 2846     		mov	r0, r5
 1807 01f2 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1808              	.LVL122:
 426:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1809              		.loc 1 426 13 is_stmt 1 view .LVU472
 426:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1810              		.loc 1 426 20 is_stmt 0 view .LVU473
 1811 01f6 3223     		movs	r3, #50
 1812 01f8 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/cc565qAH.s 			page 50


 427:Core/Src/menu.cpp ****             break;
 1813              		.loc 1 427 13 is_stmt 1 view .LVU474
 427:Core/Src/menu.cpp ****             break;
 1814              		.loc 1 427 31 is_stmt 0 view .LVU475
 1815 01fc 364A     		ldr	r2, .L127+44
 1816 01fe 01A9     		add	r1, sp, #4
 1817 0200 A869     		ldr	r0, [r5, #24]
 1818 0202 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1819              	.LVL123:
 1820 0206 2FE0     		b	.L124
 1821              	.LVL124:
 1822              	.L113:
 383:Core/Src/menu.cpp ****             menu_menu();//M
 1823              		.loc 1 383 9 is_stmt 1 view .LVU476
 384:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1824              		.loc 1 384 13 view .LVU477
 384:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1825              		.loc 1 384 22 is_stmt 0 view .LVU478
 1826 0208 2846     		mov	r0, r5
 1827 020a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1828              	.LVL125:
 385:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1829              		.loc 1 385 13 is_stmt 1 view .LVU479
 385:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1830              		.loc 1 385 20 is_stmt 0 view .LVU480
 1831 020e 334B     		ldr	r3, .L127+48
 1832 0210 93E80300 		ldm	r3, {r0, r1}
 1833 0214 0190     		str	r0, [sp, #4]
 1834 0216 ADF80810 		strh	r1, [sp, #8]	@ movhi
 386:Core/Src/menu.cpp ****             break;
 1835              		.loc 1 386 13 is_stmt 1 view .LVU481
 386:Core/Src/menu.cpp ****             break;
 1836              		.loc 1 386 31 is_stmt 0 view .LVU482
 1837 021a 314A     		ldr	r2, .L127+52
 1838 021c 01A9     		add	r1, sp, #4
 1839 021e A869     		ldr	r0, [r5, #24]
 1840 0220 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1841              	.LVL126:
 1842 0224 CAE7     		b	.L117
 1843              	.L115:
 393:Core/Src/menu.cpp ****             menu_back();//B
 1844              		.loc 1 393 9 is_stmt 1 view .LVU483
 394:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1845              		.loc 1 394 13 view .LVU484
 394:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1846              		.loc 1 394 22 is_stmt 0 view .LVU485
 1847 0226 2846     		mov	r0, r5
 1848 0228 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1849              	.LVL127:
 395:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1850              		.loc 1 395 13 is_stmt 1 view .LVU486
 395:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1851              		.loc 1 395 20 is_stmt 0 view .LVU487
 1852 022c 2D4A     		ldr	r2, .L127+56
 1853 022e 92E80300 		ldm	r2, {r0, r1}
 1854 0232 0190     		str	r0, [sp, #4]
 1855 0234 8DF80810 		strb	r1, [sp, #8]
ARM GAS  /tmp/cc565qAH.s 			page 51


 396:Core/Src/menu.cpp ****             break;
 1856              		.loc 1 396 13 is_stmt 1 view .LVU488
 396:Core/Src/menu.cpp ****             break;
 1857              		.loc 1 396 31 is_stmt 0 view .LVU489
 1858 0238 01A9     		add	r1, sp, #4
 1859 023a A869     		ldr	r0, [r5, #24]
 1860 023c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1861              	.LVL128:
 1862 0240 BCE7     		b	.L117
 1863              	.LVL129:
 1864              	.L126:
 408:Core/Src/menu.cpp ****     }
 1865              		.loc 1 408 9 is_stmt 1 view .LVU490
 408:Core/Src/menu.cpp ****     }
 1866              		.loc 1 408 12 is_stmt 0 view .LVU491
 1867 0242 0134     		adds	r4, r4, #1
 1868              	.LVL130:
 406:Core/Src/menu.cpp ****     {
 1869              		.loc 1 406 5 view .LVU492
 1870 0244 C3E7     		b	.L119
 1871              	.LVL131:
 1872              	.L121:
 412:Core/Src/menu.cpp ****     {
 1873              		.loc 1 412 5 view .LVU493
 1874 0246 B3F5004F 		cmp	r3, #32768
 1875 024a 0DD1     		bne	.L124
 414:Core/Src/menu.cpp ****             menu_up();//U
 1876              		.loc 1 414 9 is_stmt 1 view .LVU494
 415:Core/Src/menu.cpp ****             sprintf(x,"up");
 1877              		.loc 1 415 13 view .LVU495
 415:Core/Src/menu.cpp ****             sprintf(x,"up");
 1878              		.loc 1 415 20 is_stmt 0 view .LVU496
 1879 024c 2846     		mov	r0, r5
 1880 024e FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1881              	.LVL132:
 416:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1882              		.loc 1 416 13 is_stmt 1 view .LVU497
 416:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1883              		.loc 1 416 20 is_stmt 0 view .LVU498
 1884 0252 254A     		ldr	r2, .L127+60
 1885 0254 1368     		ldr	r3, [r2]
 1886 0256 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1887 025a 1B0C     		lsrs	r3, r3, #16
 1888 025c 8DF80630 		strb	r3, [sp, #6]
 417:Core/Src/menu.cpp ****             break;
 1889              		.loc 1 417 13 is_stmt 1 view .LVU499
 417:Core/Src/menu.cpp ****             break;
 1890              		.loc 1 417 31 is_stmt 0 view .LVU500
 1891 0260 01A9     		add	r1, sp, #4
 1892 0262 A869     		ldr	r0, [r5, #24]
 1893 0264 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1894              	.LVL133:
 1895              	.L124:
 438:Core/Src/menu.cpp **** 
 1896              		.loc 1 438 5 is_stmt 1 view .LVU501
 438:Core/Src/menu.cpp **** 
 1897              		.loc 1 438 15 is_stmt 0 view .LVU502
ARM GAS  /tmp/cc565qAH.s 			page 52


 1898 0268 104A     		ldr	r2, .L127
 1899 026a 5369     		ldr	r3, [r2, #20]
 1900 026c 23F48043 		bic	r3, r3, #16384
 1901 0270 5361     		str	r3, [r2, #20]
 1902              		.loc 1 440 1 view .LVU503
 1903 0272 07B0     		add	sp, sp, #28
 1904              	.LCFI17:
 1905              		.cfi_remember_state
 1906              		.cfi_def_cfa_offset 12
 1907              		@ sp needed
 1908 0274 30BD     		pop	{r4, r5, pc}
 1909              	.LVL134:
 1910              	.L120:
 1911              	.LCFI18:
 1912              		.cfi_restore_state
 419:Core/Src/menu.cpp ****             menu_number('3');
 1913              		.loc 1 419 9 is_stmt 1 view .LVU504
 420:Core/Src/menu.cpp ****             sprintf(x,"3");
 1914              		.loc 1 420 13 view .LVU505
 420:Core/Src/menu.cpp ****             sprintf(x,"3");
 1915              		.loc 1 420 24 is_stmt 0 view .LVU506
 1916 0276 3321     		movs	r1, #51
 1917 0278 2846     		mov	r0, r5
 1918 027a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1919              	.LVL135:
 421:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1920              		.loc 1 421 13 is_stmt 1 view .LVU507
 421:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1921              		.loc 1 421 20 is_stmt 0 view .LVU508
 1922 027e 3323     		movs	r3, #51
 1923 0280 ADF80430 		strh	r3, [sp, #4]	@ movhi
 422:Core/Src/menu.cpp ****             break;
 1924              		.loc 1 422 13 is_stmt 1 view .LVU509
 422:Core/Src/menu.cpp ****             break;
 1925              		.loc 1 422 31 is_stmt 0 view .LVU510
 1926 0284 194A     		ldr	r2, .L127+64
 1927 0286 01A9     		add	r1, sp, #4
 1928 0288 A869     		ldr	r0, [r5, #24]
 1929 028a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1930              	.LVL136:
 1931 028e EBE7     		b	.L124
 1932              	.L122:
 429:Core/Src/menu.cpp ****             menu_number('1');
 1933              		.loc 1 429 9 is_stmt 1 view .LVU511
 430:Core/Src/menu.cpp ****             sprintf(x,"1");
 1934              		.loc 1 430 13 view .LVU512
 430:Core/Src/menu.cpp ****             sprintf(x,"1");
 1935              		.loc 1 430 24 is_stmt 0 view .LVU513
 1936 0290 3121     		movs	r1, #49
 1937 0292 2846     		mov	r0, r5
 1938 0294 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1939              	.LVL137:
 431:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1940              		.loc 1 431 13 is_stmt 1 view .LVU514
 431:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1941              		.loc 1 431 20 is_stmt 0 view .LVU515
 1942 0298 3123     		movs	r3, #49
ARM GAS  /tmp/cc565qAH.s 			page 53


 1943 029a ADF80430 		strh	r3, [sp, #4]	@ movhi
 432:Core/Src/menu.cpp ****             break;
 1944              		.loc 1 432 13 is_stmt 1 view .LVU516
 432:Core/Src/menu.cpp ****             break;
 1945              		.loc 1 432 31 is_stmt 0 view .LVU517
 1946 029e 144A     		ldr	r2, .L127+68
 1947 02a0 01A9     		add	r1, sp, #4
 1948 02a2 A869     		ldr	r0, [r5, #24]
 1949 02a4 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1950              	.LVL138:
 1951 02a8 DEE7     		b	.L124
 1952              	.L128:
 1953 02aa 00BF     		.align	2
 1954              	.L127:
 1955 02ac 000C0240 		.word	1073875968
 1956 02b0 0C000000 		.word	.LC11
 1957 02b4 00000000 		.word	.LC9
 1958 02b8 08000000 		.word	.LC10
 1959 02bc 10000000 		.word	.LC12
 1960 02c0 20000000 		.word	.LC15
 1961 02c4 14000000 		.word	.LC13
 1962 02c8 1C000000 		.word	.LC14
 1963 02cc 24000000 		.word	.LC16
 1964 02d0 40000000 		.word	.LC20
 1965 02d4 28000000 		.word	.LC17
 1966 02d8 54000000 		.word	.LC24
 1967 02dc 30000000 		.word	.LC18
 1968 02e0 38000000 		.word	.LC19
 1969 02e4 44000000 		.word	.LC21
 1970 02e8 4C000000 		.word	.LC22
 1971 02ec 50000000 		.word	.LC23
 1972 02f0 58000000 		.word	.LC25
 1973              		.cfi_endproc
 1974              	.LFE1996:
 1975              		.fnend
 1977              		.section	.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart,"ax",%progbits
 1978              		.align	1
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv4-sp-d16
 1984              	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:
 1985              		.fnstart
 1986              	.LFB2477:
 1987              		.loc 1 440 1 is_stmt 1 view -0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991 0000 08B5     		push	{r3, lr}
 1992              	.LCFI19:
 1993              		.cfi_def_cfa_offset 8
 1994              		.cfi_offset 3, -8
 1995              		.cfi_offset 14, -4
 1996              		.loc 1 440 1 is_stmt 0 view .LVU519
 1997 0002 4FF6FF71 		movw	r1, #65535
 1998 0006 0120     		movs	r0, #1
 1999 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
ARM GAS  /tmp/cc565qAH.s 			page 54


 2000              	.LVL139:
 2001 000c 08BD     		pop	{r3, pc}
 2002              		.cfi_endproc
 2003              	.LFE2477:
 2004              		.cantunwind
 2005              		.fnend
 2007              		.section	.init_array,"aw",%init_array
 2008              		.align	2
 2009 0000 00000000 		.word	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart(target1)
 2010              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 2011              		.align	2
 2012              		.set	.LANCHOR0,. + 0
 2015              	_ZStL8__ioinit:
 2016 0000 00       		.space	1
 2017              		.text
 2018              	.Letext0:
 2019              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2020              		.file 4 "/usr/include/newlib/c++/9.2.1/cstdlib"
 2021              		.file 5 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 2022              		.file 6 "/usr/include/newlib/c++/9.2.1/cwchar"
 2023              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 2024              		.file 8 "/usr/include/newlib/c++/9.2.1/new"
 2025              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 2026              		.file 10 "/usr/include/newlib/c++/9.2.1/type_traits"
 2027              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 2028              		.file 12 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 2029              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 2030              		.file 14 "/usr/include/newlib/c++/9.2.1/cstdint"
 2031              		.file 15 "/usr/include/newlib/c++/9.2.1/clocale"
 2032              		.file 16 "/usr/include/newlib/c++/9.2.1/cstdio"
 2033              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 2034              		.file 18 "/usr/include/newlib/c++/9.2.1/system_error"
 2035              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 2036              		.file 20 "/usr/include/newlib/c++/9.2.1/cwctype"
 2037              		.file 21 "/usr/include/newlib/c++/9.2.1/iosfwd"
 2038              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 2039              		.file 23 "/usr/include/newlib/c++/9.2.1/tuple"
 2040              		.file 24 "/usr/include/newlib/c++/9.2.1/functional"
 2041              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2042              		.file 26 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2043              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2044              		.file 28 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2045              		.file 29 "/usr/include/newlib/sys/_types.h"
 2046              		.file 30 "<built-in>"
 2047              		.file 31 "/usr/include/newlib/sys/reent.h"
 2048              		.file 32 "/usr/include/newlib/sys/lock.h"
 2049              		.file 33 "/usr/include/newlib/stdlib.h"
 2050              		.file 34 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2051              		.file 35 "Drivers/CMSIS/Include/core_cm4.h"
 2052              		.file 36 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2053              		.file 37 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2054              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2055              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2056              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2057              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2058              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2059              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc565qAH.s 			page 55


 2060              		.file 44 "Core/Inc/fonts.h"
 2061              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2062              		.file 46 "/usr/include/newlib/stdio.h"
 2063              		.file 47 "Core/Inc/oled.h"
 2064              		.file 48 "/usr/include/newlib/wchar.h"
 2065              		.file 49 "/usr/include/newlib/locale.h"
 2066              		.file 50 "/usr/include/newlib/ctype.h"
 2067              		.file 51 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
 2068              		.file 52 "/usr/include/newlib/sys/errno.h"
 2069              		.file 53 "/usr/include/newlib/wctype.h"
 2070              		.file 54 "Core/Inc/uart.hpp"
 2071              		.file 55 "Core/Inc/menu.hpp"
ARM GAS  /tmp/cc565qAH.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
     /tmp/cc565qAH.s:18     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/cc565qAH.s:25     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/cc565qAH.s:69     .text._Z41__static_initialization_and_destruction_0ii:0000000000000024 $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/cc565qAH.s:78     .rodata._ZN4menuC2EP4oledP4uart.str1.4:0000000000000000 $d
     /tmp/cc565qAH.s:82     .text._ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc565qAH.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC2EP4oledP4uart
     /tmp/cc565qAH.s:142    .text._ZN4menuC2EP4oledP4uart:000000000000002c $d
.ARM.exidx.text._ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc565qAH.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC1EP4oledP4uart
     /tmp/cc565qAH.s:151    .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/cc565qAH.s:176    .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/cc565qAH.s:183    .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/cc565qAH.s:211    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/cc565qAH.s:450    .text._ZN4menu10menu_printEv:0000000000000138 $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/cc565qAH.s:465    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/cc565qAH.s:472    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/cc565qAH.s:511    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/cc565qAH.s:535    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/cc565qAH.s:653    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/cc565qAH.s:660    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/cc565qAH.s:694    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/cc565qAH.s:718    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/cc565qAH.s:782    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/cc565qAH.s:789    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/cc565qAH.s:834    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/cc565qAH.s:841    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/cc565qAH.s:889    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/cc565qAH.s:896    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/cc565qAH.s:930    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/cc565qAH.s:954    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/cc565qAH.s:1028   .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/cc565qAH.s:1035   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/cc565qAH.s:1154   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/cc565qAH.s:1161   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/cc565qAH.s:1249   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/cc565qAH.s:1256   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/cc565qAH.s:1342   .rodata._ZN4menu13keyboard_pollEv.str1.4:0000000000000000 $d
     /tmp/cc565qAH.s:1394   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/cc565qAH.s:1401   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/cc565qAH.s:1955   .text._ZN4menu13keyboard_pollEv:00000000000002ac $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/cc565qAH.s:1978   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc565qAH.s:1984   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 _GLOBAL__sub_I__ZN4menuC2EP4oledP4uart
.ARM.exidx.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc565qAH.s:2008   .init_array:0000000000000000 $d
ARM GAS  /tmp/cc565qAH.s 			page 57


     /tmp/cc565qAH.s:2011   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/cc565qAH.s:2015   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/cc565qAH.s:236    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/cc565qAH.s:236    .text._ZN4menu10menu_printEv:000000000000002a $t

UNDEFINED SYMBOLS
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
__dso_handle
_ZNSt8ios_base4InitD1Ev
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
_ZN4oled7oled_onEv
atoi
_ZN4oled13oled_setTimerEm
_ZN4uart11send_reciveEPcPKc
