<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 1
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 1
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN4menuC2EP4oled,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN4menuC2EP4oled
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN4menuC2EP4oled:
  27              		.fnstart
  28              	.LVL0:
  29              	.LFB139:
  30              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_)
  31              		.loc 1 3 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              		.loc 1 3 1 is_stmt 0 view .LVU1
  37 0000 10B4     		push	{r4}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 4, -4
  41              	.LBB2:
  42              		.loc 1 3 23 view .LVU2
  43 0002 0022     		movs	r2, #0
  44 0004 8272     		strb	r2, [r0, #10]
  45 0006 1E24     		movs	r4, #30
  46 0008 4473     		strb	r4, [r0, #13]
  47 000a 8273     		strb	r2, [r0, #14]
  48 000c C273     		strb	r2, [r0, #15]
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
  49              		.loc 1 5 5 is_stmt 1 view .LVU3
  50              		.loc 1 5 10 is_stmt 0 view .LVU4
  51 000e 0161     		str	r1, [r0, #16]
  52              	.LBE2:
   6:Core/Src/menu.cpp **** }
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 2
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 2
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


  53              		.loc 1 6 1 view .LVU5
  54 0010 5DF8044B 		ldr	r4, [sp], #4
  55              	.LCFI1:
  56              		.cfi_restore 4
  57              		.cfi_def_cfa_offset 0
  58 0014 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE139:
  61              		.cantunwind
  62              		.fnend
  64              		.global	_ZN4menuC1EP4oled
  65              		.thumb_set _ZN4menuC1EP4oled,_ZN4menuC2EP4oled
  66              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 433A252E 		.ascii	"C:%.2s SQ:%.2s\000"
  69      32732053 
  69      513A252E 
  69      327300
  70 000f 00       		.align	2
  71              	.LC1:
  72 0010 20202020 		.ascii	"    CHAN    \000"
  72      4348414E 
  72      20202020 
  72      00
  73 001d 000000   		.align	2
  74              	.LC2:
  75 0020 20202053 		.ascii	"   SQUASH   \000"
  75      51554153 
  75      48202020 
  75      00
  76 002d 000000   		.align	2
  77              	.LC3:
  78 0030 20446973 		.ascii	" Disp TMO \000"
  78      7020544D 
  78      4F2000
  79 003b 00       		.align	2
  80              	.LC4:
  81 003c 20202043 		.ascii	"   CH:%.2s   \000"
  81      483A252E 
  81      32732020 
  81      2000
  82 004a 0000     		.align	2
  83              	.LC5:
  84 004c 20202053 		.ascii	"   SQ:%.2s   \000"
  84      513A252E 
  84      32732020 
  84      2000
  85 005a 0000     		.align	2
  86              	.LC6:
  87 005c 20202044 		.ascii	"   DS:%.2s   \000"
  87      533A252E 
  87      32732020 
  87      2000
  88 006a 0000     		.align	2
  89              	.LC7:
  90 006c 6D656E75 		.ascii	"menu  back\000"
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 3
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 3
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


  90      20206261 
  90      636B00
  91              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
  92              		.align	1
  93              		.global	_ZN4menu10menu_printEv
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	_ZN4menu10menu_printEv:
 100              		.fnstart
 101              	.LVL1:
 102              	.LFB141:
   7:Core/Src/menu.cpp **** 
   8:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
   9:Core/Src/menu.cpp **** {
 103              		.loc 1 9 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 16
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		.loc 1 9 1 is_stmt 0 view .LVU7
 108 0000 30B5     		push	{r4, r5, lr}
 109              		.save {r4, r5, lr}
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		.cfi_offset 4, -12
 113              		.cfi_offset 5, -8
 114              		.cfi_offset 14, -4
 115              		.pad #28
 116 0002 87B0     		sub	sp, sp, #28
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 40
 119 0004 0446     		mov	r4, r0
  10:Core/Src/menu.cpp ****     char temp [13];
 120              		.loc 1 10 5 is_stmt 1 view .LVU8
  11:Core/Src/menu.cpp **** 
  12:Core/Src/menu.cpp ****     switch (menu_value)
 121              		.loc 1 12 5 view .LVU9
 122              		.loc 1 12 13 is_stmt 0 view .LVU10
 123 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 124 0008 182B     		cmp	r3, #24
 125 000a 1ED8     		bhi	.L4
 126 000c DFE803F0 		tbb	[pc, r3]
 127              	.L6:
 128 0010 0D       		.byte	(.L12-.L6)/2
 129 0011 29       		.byte	(.L11-.L6)/2
 130 0012 39       		.byte	(.L10-.L6)/2
 131 0013 49       		.byte	(.L9-.L6)/2
 132 0014 1D       		.byte	(.L4-.L6)/2
 133 0015 1D       		.byte	(.L4-.L6)/2
 134 0016 1D       		.byte	(.L4-.L6)/2
 135 0017 1D       		.byte	(.L4-.L6)/2
 136 0018 5C       		.byte	(.L8-.L6)/2
 137 0019 1D       		.byte	(.L4-.L6)/2
 138 001a 1D       		.byte	(.L4-.L6)/2
 139 001b 1D       		.byte	(.L4-.L6)/2
 140 001c 1D       		.byte	(.L4-.L6)/2
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 4
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 4
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 141 001d 1D       		.byte	(.L4-.L6)/2
 142 001e 1D       		.byte	(.L4-.L6)/2
 143 001f 1D       		.byte	(.L4-.L6)/2
 144 0020 6C       		.byte	(.L7-.L6)/2
 145 0021 1D       		.byte	(.L4-.L6)/2
 146 0022 1D       		.byte	(.L4-.L6)/2
 147 0023 1D       		.byte	(.L4-.L6)/2
 148 0024 1D       		.byte	(.L4-.L6)/2
 149 0025 1D       		.byte	(.L4-.L6)/2
 150 0026 1D       		.byte	(.L4-.L6)/2
 151 0027 1D       		.byte	(.L4-.L6)/2
 152 0028 7C       		.byte	(.L5-.L6)/2
 153 0029 00       		.p2align 1
 154              	.L12:
  13:Core/Src/menu.cpp ****     {
  14:Core/Src/menu.cpp ****         case MENU_HOME:
 155              		.loc 1 14 9 is_stmt 1 view .LVU11
  15:Core/Src/menu.cpp ****             sprintf(temp, "C:%.2s SQ:%.2s", ch,sq);
 156              		.loc 1 15 13 view .LVU12
 157              		.loc 1 15 20 is_stmt 0 view .LVU13
 158 002a 831C     		adds	r3, r0, #2
 159 002c 421D     		adds	r2, r0, #5
 160 002e 3F49     		ldr	r1, .L14
 161 0030 02A8     		add	r0, sp, #8
 162              	.LVL2:
 163              		.loc 1 15 20 view .LVU14
 164 0032 FFF7FEFF 		bl	sprintf
 165              	.LVL3:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 166              		.loc 1 16 13 is_stmt 1 view .LVU15
 167              		.loc 1 16 30 is_stmt 0 view .LVU16
 168 0036 3E4B     		ldr	r3, .L14+4
 169 0038 1322     		movs	r2, #19
 170 003a 0192     		str	r2, [sp, #4]
 171 003c 0022     		movs	r2, #0
 172 003e 0092     		str	r2, [sp]
 173 0040 0CCB     		ldm	r3, {r2, r3}
 174 0042 02A9     		add	r1, sp, #8
 175 0044 2069     		ldr	r0, [r4, #16]
 176 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 177              	.LVL4:
 178              	.L4:
  17:Core/Src/menu.cpp ****             break; 
  18:Core/Src/menu.cpp ****         case MENU_CH:
  19:Core/Src/menu.cpp ****             sprintf(temp, "    CHAN    ");
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  21:Core/Src/menu.cpp ****             break;
  22:Core/Src/menu.cpp ****         case MENU_SQ:
  23:Core/Src/menu.cpp ****             sprintf(temp, "   SQUASH   ");
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  25:Core/Src/menu.cpp ****             break;
  26:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  27:Core/Src/menu.cpp ****             sprintf(temp, " Disp TMO "); 
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  29:Core/Src/menu.cpp ****             break;
  30:Core/Src/menu.cpp ****         case MENU_CH_IN:
  31:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 5
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 5
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  33:Core/Src/menu.cpp ****             break;
  34:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  35:Core/Src/menu.cpp ****             sprintf(temp, "   SQ:%.2s   ",sq);
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  37:Core/Src/menu.cpp ****             break;
  38:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  39:Core/Src/menu.cpp ****             sprintf(temp, "   DS:%.2s   ",tmo);
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  41:Core/Src/menu.cpp ****             break;
  42:Core/Src/menu.cpp ****         default:
  43:Core/Src/menu.cpp ****             break;
  44:Core/Src/menu.cpp ****     }
  45:Core/Src/menu.cpp ****     oled1->oled_print("menu  back", Font_11x18,0,46);   
 179              		.loc 1 45 5 is_stmt 1 view .LVU17
 180              		.loc 1 45 22 is_stmt 0 view .LVU18
 181 004a 3A4B     		ldr	r3, .L14+8
 182 004c 2E22     		movs	r2, #46
 183 004e 0192     		str	r2, [sp, #4]
 184 0050 0022     		movs	r2, #0
 185 0052 0092     		str	r2, [sp]
 186 0054 0CCB     		ldm	r3, {r2, r3}
 187 0056 3849     		ldr	r1, .L14+12
 188 0058 2069     		ldr	r0, [r4, #16]
 189 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 190              	.LVL5:
  46:Core/Src/menu.cpp **** 
  47:Core/Src/menu.cpp **** }
 191              		.loc 1 47 1 view .LVU19
 192 005e 07B0     		add	sp, sp, #28
 193              	.LCFI4:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 12
 196              		@ sp needed
 197 0060 30BD     		pop	{r4, r5, pc}
 198              	.LVL6:
 199              	.L11:
 200              	.LCFI5:
 201              		.cfi_restore_state
  18:Core/Src/menu.cpp ****             sprintf(temp, "    CHAN    ");
 202              		.loc 1 18 9 is_stmt 1 view .LVU20
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 203              		.loc 1 19 13 view .LVU21
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 204              		.loc 1 19 20 is_stmt 0 view .LVU22
 205 0062 364B     		ldr	r3, .L14+16
 206 0064 02AD     		add	r5, sp, #8
 207 0066 0FCB     		ldm	r3, {r0, r1, r2, r3}
 208              	.LVL7:
  19:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 209              		.loc 1 19 20 view .LVU23
 210 0068 07C5     		stmia	r5!, {r0, r1, r2}
 211 006a 2B70     		strb	r3, [r5]
  20:Core/Src/menu.cpp ****             break;
 212              		.loc 1 20 13 is_stmt 1 view .LVU24
  20:Core/Src/menu.cpp ****             break;
 213              		.loc 1 20 30 is_stmt 0 view .LVU25
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 6
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 6
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 214 006c 304B     		ldr	r3, .L14+4
 215 006e 1322     		movs	r2, #19
 216 0070 0192     		str	r2, [sp, #4]
 217 0072 0022     		movs	r2, #0
 218 0074 0092     		str	r2, [sp]
 219 0076 0CCB     		ldm	r3, {r2, r3}
 220 0078 02A9     		add	r1, sp, #8
 221 007a 2069     		ldr	r0, [r4, #16]
 222 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 223              	.LVL8:
 224 0080 E3E7     		b	.L4
 225              	.LVL9:
 226              	.L10:
  22:Core/Src/menu.cpp ****             sprintf(temp, "   SQUASH   ");
 227              		.loc 1 22 9 is_stmt 1 view .LVU26
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 228              		.loc 1 23 13 view .LVU27
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 229              		.loc 1 23 20 is_stmt 0 view .LVU28
 230 0082 2F4B     		ldr	r3, .L14+20
 231 0084 02AD     		add	r5, sp, #8
 232 0086 0FCB     		ldm	r3, {r0, r1, r2, r3}
 233              	.LVL10:
  23:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 234              		.loc 1 23 20 view .LVU29
 235 0088 07C5     		stmia	r5!, {r0, r1, r2}
 236 008a 2B70     		strb	r3, [r5]
  24:Core/Src/menu.cpp ****             break;
 237              		.loc 1 24 13 is_stmt 1 view .LVU30
  24:Core/Src/menu.cpp ****             break;
 238              		.loc 1 24 30 is_stmt 0 view .LVU31
 239 008c 284B     		ldr	r3, .L14+4
 240 008e 1322     		movs	r2, #19
 241 0090 0192     		str	r2, [sp, #4]
 242 0092 0022     		movs	r2, #0
 243 0094 0092     		str	r2, [sp]
 244 0096 0CCB     		ldm	r3, {r2, r3}
 245 0098 02A9     		add	r1, sp, #8
 246 009a 2069     		ldr	r0, [r4, #16]
 247 009c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 248              	.LVL11:
 249 00a0 D3E7     		b	.L4
 250              	.LVL12:
 251              	.L9:
  26:Core/Src/menu.cpp ****             sprintf(temp, " Disp TMO "); 
 252              		.loc 1 26 9 is_stmt 1 view .LVU32
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 253              		.loc 1 27 13 view .LVU33
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 254              		.loc 1 27 20 is_stmt 0 view .LVU34
 255 00a2 284A     		ldr	r2, .L14+24
 256 00a4 02AB     		add	r3, sp, #8
 257 00a6 07CA     		ldm	r2, {r0, r1, r2}
 258              	.LVL13:
  27:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 259              		.loc 1 27 20 view .LVU35
 260 00a8 03C3     		stmia	r3!, {r0, r1}
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 7
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 7
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 261 00aa 23F8022B 		strh	r2, [r3], #2	@ movhi
 262 00ae 120C     		lsrs	r2, r2, #16
 263 00b0 1A70     		strb	r2, [r3]
  28:Core/Src/menu.cpp ****             break;
 264              		.loc 1 28 13 is_stmt 1 view .LVU36
  28:Core/Src/menu.cpp ****             break;
 265              		.loc 1 28 30 is_stmt 0 view .LVU37
 266 00b2 1F4B     		ldr	r3, .L14+4
 267 00b4 1322     		movs	r2, #19
 268 00b6 0192     		str	r2, [sp, #4]
 269 00b8 0022     		movs	r2, #0
 270 00ba 0092     		str	r2, [sp]
 271 00bc 0CCB     		ldm	r3, {r2, r3}
 272 00be 02A9     		add	r1, sp, #8
 273 00c0 2069     		ldr	r0, [r4, #16]
 274 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 275              	.LVL14:
 276 00c6 C0E7     		b	.L4
 277              	.LVL15:
 278              	.L8:
  30:Core/Src/menu.cpp ****             sprintf(temp, "   CH:%.2s   ",ch);
 279              		.loc 1 30 9 is_stmt 1 view .LVU38
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 280              		.loc 1 31 13 view .LVU39
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 281              		.loc 1 31 20 is_stmt 0 view .LVU40
 282 00c8 421D     		adds	r2, r0, #5
 283 00ca 1F49     		ldr	r1, .L14+28
 284 00cc 02A8     		add	r0, sp, #8
 285              	.LVL16:
  31:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 286              		.loc 1 31 20 view .LVU41
 287 00ce FFF7FEFF 		bl	sprintf
 288              	.LVL17:
  32:Core/Src/menu.cpp ****             break;
 289              		.loc 1 32 13 is_stmt 1 view .LVU42
  32:Core/Src/menu.cpp ****             break;
 290              		.loc 1 32 30 is_stmt 0 view .LVU43
 291 00d2 174B     		ldr	r3, .L14+4
 292 00d4 1322     		movs	r2, #19
 293 00d6 0192     		str	r2, [sp, #4]
 294 00d8 0022     		movs	r2, #0
 295 00da 0092     		str	r2, [sp]
 296 00dc 0CCB     		ldm	r3, {r2, r3}
 297 00de 02A9     		add	r1, sp, #8
 298 00e0 2069     		ldr	r0, [r4, #16]
 299 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 300              	.LVL18:
 301 00e6 B0E7     		b	.L4
 302              	.LVL19:
 303              	.L7:
  34:Core/Src/menu.cpp ****             sprintf(temp, "   SQ:%.2s   ",sq);
 304              		.loc 1 34 9 is_stmt 1 view .LVU44
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 305              		.loc 1 35 13 view .LVU45
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 306              		.loc 1 35 20 is_stmt 0 view .LVU46
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 8
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 8
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 307 00e8 821C     		adds	r2, r0, #2
 308 00ea 1849     		ldr	r1, .L14+32
 309 00ec 02A8     		add	r0, sp, #8
 310              	.LVL20:
  35:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 35 20 view .LVU47
 312 00ee FFF7FEFF 		bl	sprintf
 313              	.LVL21:
  36:Core/Src/menu.cpp ****             break;
 314              		.loc 1 36 13 is_stmt 1 view .LVU48
  36:Core/Src/menu.cpp ****             break;
 315              		.loc 1 36 30 is_stmt 0 view .LVU49
 316 00f2 0F4B     		ldr	r3, .L14+4
 317 00f4 1322     		movs	r2, #19
 318 00f6 0192     		str	r2, [sp, #4]
 319 00f8 0022     		movs	r2, #0
 320 00fa 0092     		str	r2, [sp]
 321 00fc 0CCB     		ldm	r3, {r2, r3}
 322 00fe 02A9     		add	r1, sp, #8
 323 0100 2069     		ldr	r0, [r4, #16]
 324 0102 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 325              	.LVL22:
 326 0106 A0E7     		b	.L4
 327              	.LVL23:
 328              	.L5:
  38:Core/Src/menu.cpp ****             sprintf(temp, "   DS:%.2s   ",tmo);
 329              		.loc 1 38 9 is_stmt 1 view .LVU50
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 330              		.loc 1 39 13 view .LVU51
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 331              		.loc 1 39 20 is_stmt 0 view .LVU52
 332 0108 00F10B02 		add	r2, r0, #11
 333 010c 1049     		ldr	r1, .L14+36
 334 010e 02A8     		add	r0, sp, #8
 335              	.LVL24:
  39:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 336              		.loc 1 39 20 view .LVU53
 337 0110 FFF7FEFF 		bl	sprintf
 338              	.LVL25:
  40:Core/Src/menu.cpp ****             break;
 339              		.loc 1 40 13 is_stmt 1 view .LVU54
  40:Core/Src/menu.cpp ****             break;
 340              		.loc 1 40 30 is_stmt 0 view .LVU55
 341 0114 064B     		ldr	r3, .L14+4
 342 0116 1322     		movs	r2, #19
 343 0118 0192     		str	r2, [sp, #4]
 344 011a 0022     		movs	r2, #0
 345 011c 0092     		str	r2, [sp]
 346 011e 0CCB     		ldm	r3, {r2, r3}
 347 0120 02A9     		add	r1, sp, #8
 348 0122 2069     		ldr	r0, [r4, #16]
 349 0124 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 350              	.LVL26:
 351 0128 8FE7     		b	.L4
 352              	.L15:
 353 012a 00BF     		.align	2
 354              	.L14:
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 9
=======
ARM GAS  /tmp/ccMEB0iu.s 			page 9
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


 355 012c 00000000 		.word	.LC0
 356 0130 00000000 		.word	Font_16x26
 357 0134 00000000 		.word	Font_11x18
 358 0138 6C000000 		.word	.LC7
 359 013c 10000000 		.word	.LC1
 360 0140 20000000 		.word	.LC2
 361 0144 30000000 		.word	.LC3
 362 0148 3C000000 		.word	.LC4
 363 014c 4C000000 		.word	.LC5
 364 0150 5C000000 		.word	.LC6
 365              		.cfi_endproc
 366              	.LFE141:
 367              		.fnend
 369              		.section	.rodata._ZN4menu7menu_okEv.str1.4,"aMS",%progbits,1
 370              		.align	2
 371              	.LC8:
 372 0000 50726573 		.ascii	"Press Okay to start recording\012\011Click again to"
 372      73204F6B 
 372      61792074 
 372      6F207374 
 372      61727420 
 373 002d 2073746F 		.ascii	" stop\000"
 373      7000
 374 0033 00       		.align	2
 375              	.LC9:
 376 0034 436C6963 		.ascii	"Click okay to play The track:\000"
 376      6B206F6B 
 376      61792074 
 376      6F20706C 
 376      61792054 
 377              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 378              		.align	1
 379              		.global	_ZN4menu7menu_okEv
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	_ZN4menu7menu_okEv:
 386              		.fnstart
 387              	.LVL27:
 388              	.LFB142:
  48:Core/Src/menu.cpp **** 
  49:Core/Src/menu.cpp **** void menu::menu_ok()
  50:Core/Src/menu.cpp **** {
 389              		.loc 1 50 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		.loc 1 50 1 is_stmt 0 view .LVU57
 394 0000 30B5     		push	{r4, r5, lr}
 395              		.save {r4, r5, lr}
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 12
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
 401              		.pad #12
ARM GAS  /tmp/cceDqxOT.s 			page 10


 402 0002 83B0     		sub	sp, sp, #12
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 24
 405 0004 0446     		mov	r4, r0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 406              		.loc 1 51 5 is_stmt 1 view .LVU58
 407              		.loc 1 51 28 is_stmt 0 view .LVU59
 408 0006 0069     		ldr	r0, [r0, #16]
 409              	.LVL28:
 410              		.loc 1 51 28 view .LVU60
 411 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 412              	.LVL29:
 413              		.loc 1 51 5 view .LVU61
 414 000c E0B1     		cbz	r0, .L17
  52:Core/Src/menu.cpp ****     {
  53:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
<<<<<<< HEAD
 415              		.loc 1 53 9 is_stmt 1 view .LVU62
 416              		.loc 1 53 31 is_stmt 0 view .LVU63
 417 000e 2069     		ldr	r0, [r4, #16]
 418 0010 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 419              	.LVL30:
 420              	.L18:
=======
 404              		.loc 1 53 9 is_stmt 1 view .LVU62
 405              		.loc 1 53 31 is_stmt 0 view .LVU63
 406 000c 2069     		ldr	r0, [r4, #16]
 407 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccMEB0iu.s 			page 10


 408              	.LVL30:
 409              	.L18:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
  54:Core/Src/menu.cpp ****     }
  55:Core/Src/menu.cpp ****     else
  56:Core/Src/menu.cpp ****     {
  57:Core/Src/menu.cpp ****         oled1->oled_on();
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  59:Core/Src/menu.cpp ****     }
  60:Core/Src/menu.cpp **** 
  61:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
 421              		.loc 1 61 5 is_stmt 1 view .LVU64
 422              		.loc 1 61 13 is_stmt 0 view .LVU65
 423 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 424 0016 013B     		subs	r3, r3, #1
 425 0018 272B     		cmp	r3, #39
 426 001a 1ED8     		bhi	.L16
 427 001c DFE803F0 		tbb	[pc, r3]
 428              	.L21:
 429 0020 1B       		.byte	(.L30-.L21)/2
 430 0021 1F       		.byte	(.L29-.L21)/2
 431 0022 22       		.byte	(.L28-.L21)/2
 432 0023 32       		.byte	(.L27-.L21)/2
 433 0024 35       		.byte	(.L26-.L21)/2
 434 0025 1D       		.byte	(.L16-.L21)/2
 435 0026 1D       		.byte	(.L16-.L21)/2
 436 0027 25       		.byte	(.L25-.L21)/2
 437 0028 1D       		.byte	(.L16-.L21)/2
 438 0029 1D       		.byte	(.L16-.L21)/2
 439 002a 1D       		.byte	(.L16-.L21)/2
 440 002b 1D       		.byte	(.L16-.L21)/2
 441 002c 1D       		.byte	(.L16-.L21)/2
 442 002d 1D       		.byte	(.L16-.L21)/2
 443 002e 1D       		.byte	(.L16-.L21)/2
 444 002f 38       		.byte	(.L24-.L21)/2
 445 0030 1D       		.byte	(.L16-.L21)/2
 446 0031 1D       		.byte	(.L16-.L21)/2
 447 0032 1D       		.byte	(.L16-.L21)/2
ARM GAS  /tmp/cceDqxOT.s 			page 11


 448 0033 1D       		.byte	(.L16-.L21)/2
 449 0034 1D       		.byte	(.L16-.L21)/2
 450 0035 1D       		.byte	(.L16-.L21)/2
 451 0036 1D       		.byte	(.L16-.L21)/2
 452 0037 45       		.byte	(.L23-.L21)/2
 453 0038 1D       		.byte	(.L16-.L21)/2
 454 0039 1D       		.byte	(.L16-.L21)/2
 455 003a 1D       		.byte	(.L16-.L21)/2
 456 003b 1D       		.byte	(.L16-.L21)/2
 457 003c 1D       		.byte	(.L16-.L21)/2
 458 003d 1D       		.byte	(.L16-.L21)/2
 459 003e 1D       		.byte	(.L16-.L21)/2
 460 003f 4E       		.byte	(.L22-.L21)/2
 461 0040 1D       		.byte	(.L16-.L21)/2
 462 0041 1D       		.byte	(.L16-.L21)/2
 463 0042 1D       		.byte	(.L16-.L21)/2
 464 0043 1D       		.byte	(.L16-.L21)/2
 465 0044 1D       		.byte	(.L16-.L21)/2
 466 0045 1D       		.byte	(.L16-.L21)/2
 467 0046 1D       		.byte	(.L16-.L21)/2
 468 0047 59       		.byte	(.L20-.L21)/2
 469              		.p2align 1
 470              	.L17:
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 471              		.loc 1 57 9 is_stmt 1 view .LVU66
  57:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 472              		.loc 1 57 23 is_stmt 0 view .LVU67
 473 0048 2069     		ldr	r0, [r4, #16]
 474 004a FFF7FEFF 		bl	_ZN4oled7oled_onEv
 475              	.LVL31:
  58:Core/Src/menu.cpp ****     }
 476              		.loc 1 58 9 is_stmt 1 view .LVU68
  58:Core/Src/menu.cpp ****     }
<<<<<<< HEAD
 477              		.loc 1 58 31 is_stmt 0 view .LVU69
 478 004e 2069     		ldr	r0, [r4, #16]
 479 0050 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 480              	.LVL32:
 481 0054 DEE7     		b	.L18
 482              	.L30:
=======
 450              		.loc 1 58 31 is_stmt 0 view .LVU69
 451 003c 2069     		ldr	r0, [r4, #16]
 452 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccMEB0iu.s 			page 11


 453              	.LVL32:
 454 0042 E6E7     		b	.L18
 455              	.L26:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
  62:Core/Src/menu.cpp ****     {
  63:Core/Src/menu.cpp ****     case MENU_HOME:
  64:Core/Src/menu.cpp ****         break;
  65:Core/Src/menu.cpp ****     case MENU_CH:
 483              		.loc 1 65 5 is_stmt 1 view .LVU70
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 484              		.loc 1 66 9 view .LVU71
 485              		.loc 1 66 19 is_stmt 0 view .LVU72
 486 0056 0823     		movs	r3, #8
 487 0058 2370     		strb	r3, [r4]
  67:Core/Src/menu.cpp ****         break;
 488              		.loc 1 67 9 is_stmt 1 view .LVU73
 489              	.L16:
  68:Core/Src/menu.cpp ****     case MENU_SQ:
  69:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  70:Core/Src/menu.cpp ****         break;
  71:Core/Src/menu.cpp ****     case MENU_TMO:
  72:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
ARM GAS  /tmp/cceDqxOT.s 			page 12


  73:Core/Src/menu.cpp ****         break;
  74:Core/Src/menu.cpp ****     case MENU_CH_IN:
  75:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  76:Core/Src/menu.cpp ****         if(!cursorOn)
  77:Core/Src/menu.cpp ****         {
  78:Core/Src/menu.cpp ****             chVal=atoi(ch);
  79:Core/Src/menu.cpp ****             cursorPos=0;
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  81:Core/Src/menu.cpp ****         }
  82:Core/Src/menu.cpp ****         break;
<<<<<<< HEAD
  83:Core/Src/menu.cpp ****     case MENU_MIC_REC:
  84:Core/Src/menu.cpp ****         menu_value = MENU_MIC_REC_IN;
  85:Core/Src/menu.cpp ****         break;
  86:Core/Src/menu.cpp ****     case MENU_MIC_PLAY:
  87:Core/Src/menu.cpp ****         menu_value = MENU_MIC_PLAY_IN;
  88:Core/Src/menu.cpp ****         break;
  89:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  90:Core/Src/menu.cpp ****         cursorOn^=1;
  91:Core/Src/menu.cpp ****         if(!cursorOn)
  92:Core/Src/menu.cpp ****         {
  93:Core/Src/menu.cpp ****             chVal=atoi(sq);
  94:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  95:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  96:Core/Src/menu.cpp ****         }
  97:Core/Src/menu.cpp ****         break;
  98:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  99:Core/Src/menu.cpp ****         cursorOn%=1;
 100:Core/Src/menu.cpp ****         if(!cursorOn)
 101:Core/Src/menu.cpp ****         {
 102:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
 103:Core/Src/menu.cpp ****             cursorPos=0;
 104:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 105:Core/Src/menu.cpp ****         }
 106:Core/Src/menu.cpp ****         break;
 107:Core/Src/menu.cpp ****     case MENU_MIC_REC_IN:
 108:Core/Src/menu.cpp ****         oled1->oled_print("Press Okay to start recording\n\tClick again to stop",Font_16x26,0,19);
 109:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 110:Core/Src/menu.cpp ****         break;
 111:Core/Src/menu.cpp ****     case MENU_MIC_PLAY_IN:
 112:Core/Src/menu.cpp ****          oled1->oled_print("Click okay to play The track:", Font_16x26, 0,19);
 113:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 114:Core/Src/menu.cpp ****          break;
 115:Core/Src/menu.cpp ****         
 116:Core/Src/menu.cpp ****     default:
 117:Core/Src/menu.cpp ****         break;
 118:Core/Src/menu.cpp ****     }
 119:Core/Src/menu.cpp **** 
 120:Core/Src/menu.cpp ****     
 121:Core/Src/menu.cpp **** }
 490              		.loc 1 121 1 is_stmt 0 view .LVU74
 491 005a 03B0     		add	sp, sp, #12
 492              	.LCFI8:
 493              		.cfi_remember_state
 494              		.cfi_def_cfa_offset 12
 495              		@ sp needed
 496 005c 30BD     		pop	{r4, r5, pc}
 497              	.LVL33:
ARM GAS  /tmp/cceDqxOT.s 			page 13


 498              	.L29:
 499              	.LCFI9:
 500              		.cfi_restore_state
=======
  83:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  84:Core/Src/menu.cpp ****         cursorOn^=1;
  85:Core/Src/menu.cpp ****         if(!cursorOn)
  86:Core/Src/menu.cpp ****         {
  87:Core/Src/menu.cpp ****             chVal=atoi(sq);
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  90:Core/Src/menu.cpp ****         }
  91:Core/Src/menu.cpp ****         break;
  92:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  93:Core/Src/menu.cpp ****         cursorOn%=1;
  94:Core/Src/menu.cpp ****         if(!cursorOn)
  95:Core/Src/menu.cpp ****         {
  96:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  97:Core/Src/menu.cpp ****             cursorPos=0;
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
  99:Core/Src/menu.cpp ****         }
 100:Core/Src/menu.cpp ****         break;
 101:Core/Src/menu.cpp **** 
 102:Core/Src/menu.cpp ****     default:
 103:Core/Src/menu.cpp ****         break;
 104:Core/Src/menu.cpp ****     }
 105:Core/Src/menu.cpp **** 
 106:Core/Src/menu.cpp ****     
 107:Core/Src/menu.cpp **** }
 463              		.loc 1 107 1 is_stmt 0 view .LVU74
ARM GAS  /tmp/ccMEB0iu.s 			page 12


 464 0048 38BD     		pop	{r3, r4, r5, pc}
 465              	.LVL33:
 466              	.L25:
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 501              		.loc 1 68 5 is_stmt 1 view .LVU75
  69:Core/Src/menu.cpp ****         break;
 502              		.loc 1 69 9 view .LVU76
  69:Core/Src/menu.cpp ****         break;
 503              		.loc 1 69 19 is_stmt 0 view .LVU77
 504 005e 1023     		movs	r3, #16
 505 0060 2370     		strb	r3, [r4]
  70:Core/Src/menu.cpp ****     case MENU_TMO:
 506              		.loc 1 70 9 is_stmt 1 view .LVU78
 507 0062 FAE7     		b	.L16
 508              	.L28:
  71:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 509              		.loc 1 71 5 view .LVU79
  72:Core/Src/menu.cpp ****         break;
 510              		.loc 1 72 9 view .LVU80
  72:Core/Src/menu.cpp ****         break;
 511              		.loc 1 72 19 is_stmt 0 view .LVU81
 512 0064 1823     		movs	r3, #24
 513 0066 2370     		strb	r3, [r4]
  73:Core/Src/menu.cpp ****     case MENU_CH_IN:
 514              		.loc 1 73 9 is_stmt 1 view .LVU82
 515 0068 F7E7     		b	.L16
 516              	.L25:
  74:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 517              		.loc 1 74 5 view .LVU83
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 518              		.loc 1 75 9 view .LVU84
  75:Core/Src/menu.cpp ****         if(!cursorOn)
 519              		.loc 1 75 17 is_stmt 0 view .LVU85
 520 006a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 521 006c 83F00103 		eor	r3, r3, #1
 522 0070 E373     		strb	r3, [r4, #15]
  76:Core/Src/menu.cpp ****         {
 523              		.loc 1 76 9 is_stmt 1 view .LVU86
 524 0072 002B     		cmp	r3, #0
 525 0074 F1D1     		bne	.L16
  78:Core/Src/menu.cpp ****             cursorPos=0;
 526              		.loc 1 78 13 view .LVU87
  78:Core/Src/menu.cpp ****             cursorPos=0;
 527              		.loc 1 78 23 is_stmt 0 view .LVU88
 528 0076 601D     		adds	r0, r4, #5
 529 0078 FFF7FEFF 		bl	atoi
 530              	.LVL34:
  78:Core/Src/menu.cpp ****             cursorPos=0;
 531              		.loc 1 78 18 view .LVU89
 532 007c E071     		strb	r0, [r4, #7]
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 533              		.loc 1 79 13 is_stmt 1 view .LVU90
  79:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
<<<<<<< HEAD
 534              		.loc 1 79 22 is_stmt 0 view .LVU91
 535 007e 0023     		movs	r3, #0
 536 0080 A373     		strb	r3, [r4, #14]
 537 0082 EAE7     		b	.L16
ARM GAS  /tmp/cceDqxOT.s 			page 14


 538              	.L27:
  83:Core/Src/menu.cpp ****         menu_value = MENU_MIC_REC_IN;
 539              		.loc 1 83 5 is_stmt 1 view .LVU92
  84:Core/Src/menu.cpp ****         break;
 540              		.loc 1 84 9 view .LVU93
  84:Core/Src/menu.cpp ****         break;
 541              		.loc 1 84 20 is_stmt 0 view .LVU94
 542 0084 2023     		movs	r3, #32
 543 0086 2370     		strb	r3, [r4]
  85:Core/Src/menu.cpp ****     case MENU_MIC_PLAY:
 544              		.loc 1 85 9 is_stmt 1 view .LVU95
 545 0088 E7E7     		b	.L16
 546              	.L26:
  86:Core/Src/menu.cpp ****         menu_value = MENU_MIC_PLAY_IN;
 547              		.loc 1 86 5 view .LVU96
  87:Core/Src/menu.cpp ****         break;
 548              		.loc 1 87 9 view .LVU97
  87:Core/Src/menu.cpp ****         break;
 549              		.loc 1 87 20 is_stmt 0 view .LVU98
 550 008a 2823     		movs	r3, #40
 551 008c 2370     		strb	r3, [r4]
  88:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 552              		.loc 1 88 9 is_stmt 1 view .LVU99
 553 008e E4E7     		b	.L16
 554              	.L24:
  89:Core/Src/menu.cpp ****         cursorOn^=1;
 555              		.loc 1 89 5 view .LVU100
  90:Core/Src/menu.cpp ****         if(!cursorOn)
 556              		.loc 1 90 9 view .LVU101
  90:Core/Src/menu.cpp ****         if(!cursorOn)
 557              		.loc 1 90 17 is_stmt 0 view .LVU102
 558 0090 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 559 0092 83F00103 		eor	r3, r3, #1
 560 0096 E373     		strb	r3, [r4, #15]
  91:Core/Src/menu.cpp ****         {
 561              		.loc 1 91 9 is_stmt 1 view .LVU103
 562 0098 002B     		cmp	r3, #0
 563 009a DED1     		bne	.L16
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 564              		.loc 1 93 13 view .LVU104
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 565              		.loc 1 93 23 is_stmt 0 view .LVU105
 566 009c A01C     		adds	r0, r4, #2
 567 009e FFF7FEFF 		bl	atoi
 568              	.LVL35:
  93:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 569              		.loc 1 93 18 view .LVU106
 570 00a2 E071     		strb	r0, [r4, #7]
  94:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 571              		.loc 1 94 13 is_stmt 1 view .LVU107
  94:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 572              		.loc 1 94 22 is_stmt 0 view .LVU108
 573 00a4 0023     		movs	r3, #0
 574 00a6 A373     		strb	r3, [r4, #14]
 575 00a8 D7E7     		b	.L16
 576              	.L23:
  98:Core/Src/menu.cpp ****         cursorOn%=1;
ARM GAS  /tmp/cceDqxOT.s 			page 15


 577              		.loc 1 98 5 is_stmt 1 view .LVU109
  99:Core/Src/menu.cpp ****         if(!cursorOn)
 578              		.loc 1 99 9 view .LVU110
  99:Core/Src/menu.cpp ****         if(!cursorOn)
 579              		.loc 1 99 17 is_stmt 0 view .LVU111
 580 00aa 0025     		movs	r5, #0
 581 00ac E573     		strb	r5, [r4, #15]
 100:Core/Src/menu.cpp ****         {
 582              		.loc 1 100 9 is_stmt 1 view .LVU112
 102:Core/Src/menu.cpp ****             cursorPos=0;
 583              		.loc 1 102 13 view .LVU113
 102:Core/Src/menu.cpp ****             cursorPos=0;
 584              		.loc 1 102 24 is_stmt 0 view .LVU114
 585 00ae 04F10B00 		add	r0, r4, #11
 586 00b2 FFF7FEFF 		bl	atoi
 587              	.LVL36:
 102:Core/Src/menu.cpp ****             cursorPos=0;
 588              		.loc 1 102 19 view .LVU115
 589 00b6 6073     		strb	r0, [r4, #13]
 103:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 590              		.loc 1 103 13 is_stmt 1 view .LVU116
 103:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 591              		.loc 1 103 22 is_stmt 0 view .LVU117
 592 00b8 A573     		strb	r5, [r4, #14]
 593 00ba CEE7     		b	.L16
 594              	.L22:
 107:Core/Src/menu.cpp ****         oled1->oled_print("Press Okay to start recording\n\tClick again to stop",Font_16x26,0,19);
 595              		.loc 1 107 5 is_stmt 1 view .LVU118
 108:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 596              		.loc 1 108 9 view .LVU119
 108:Core/Src/menu.cpp ****         //TODO : call record function to start recording
 597              		.loc 1 108 26 is_stmt 0 view .LVU120
 598 00bc 0A4B     		ldr	r3, .L32
 599 00be 1322     		movs	r2, #19
 600 00c0 0192     		str	r2, [sp, #4]
 601 00c2 0022     		movs	r2, #0
 602 00c4 0092     		str	r2, [sp]
 603 00c6 0CCB     		ldm	r3, {r2, r3}
 604 00c8 0849     		ldr	r1, .L32+4
 605 00ca 2069     		ldr	r0, [r4, #16]
 606 00cc FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 607              	.LVL37:
 110:Core/Src/menu.cpp ****     case MENU_MIC_PLAY_IN:
 608              		.loc 1 110 9 is_stmt 1 view .LVU121
 609 00d0 C3E7     		b	.L16
 610              	.L20:
 111:Core/Src/menu.cpp ****          oled1->oled_print("Click okay to play The track:", Font_16x26, 0,19);
 611              		.loc 1 111 5 view .LVU122
 112:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 612              		.loc 1 112 10 view .LVU123
 112:Core/Src/menu.cpp ****          //TODO: call track list from SD card
 613              		.loc 1 112 27 is_stmt 0 view .LVU124
 614 00d2 054B     		ldr	r3, .L32
 615 00d4 1322     		movs	r2, #19
 616 00d6 0192     		str	r2, [sp, #4]
 617 00d8 0022     		movs	r2, #0
 618 00da 0092     		str	r2, [sp]
ARM GAS  /tmp/cceDqxOT.s 			page 16


 619 00dc 0CCB     		ldm	r3, {r2, r3}
 620 00de 0449     		ldr	r1, .L32+8
 621 00e0 2069     		ldr	r0, [r4, #16]
 622 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 623              	.LVL38:
 114:Core/Src/menu.cpp ****         
 624              		.loc 1 114 10 is_stmt 1 view .LVU125
 625              		.loc 1 121 1 is_stmt 0 view .LVU126
 626 00e6 B8E7     		b	.L16
 627              	.L33:
 628              		.align	2
 629              	.L32:
 630 00e8 00000000 		.word	Font_16x26
 631 00ec 00000000 		.word	.LC8
 632 00f0 34000000 		.word	.LC9
 633              		.cfi_endproc
 634              	.LFE142:
 635              		.fnend
 637              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 638              		.align	1
 639              		.global	_ZN4menu9menu_nextEv
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 643              		.fpu fpv4-sp-d16
 645              	_ZN4menu9menu_nextEv:
 646              		.fnstart
 647              	.LVL39:
 648              	.LFB143:
 122:Core/Src/menu.cpp **** 
 123:Core/Src/menu.cpp **** void menu::menu_next()
 124:Core/Src/menu.cpp **** {
 649              		.loc 1 124 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		.loc 1 124 1 is_stmt 0 view .LVU128
 654 0000 10B5     		push	{r4, lr}
 655              		.save {r4, lr}
 656              	.LCFI10:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660 0002 0446     		mov	r4, r0
 125:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 661              		.loc 1 125 5 is_stmt 1 view .LVU129
 662              		.loc 1 125 28 is_stmt 0 view .LVU130
 663 0004 0069     		ldr	r0, [r0, #16]
 664              	.LVL40:
 665              		.loc 1 125 28 view .LVU131
 666 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 667              	.LVL41:
 668              		.loc 1 125 5 view .LVU132
 669 000a 88B9     		cbnz	r0, .L44
 670              	.L35:
 126:Core/Src/menu.cpp ****     {
 127:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
ARM GAS  /tmp/cceDqxOT.s 			page 17


 128:Core/Src/menu.cpp ****     }
 129:Core/Src/menu.cpp ****     switch (menu_value)
 671              		.loc 1 129 5 is_stmt 1 view .LVU133
 672              		.loc 1 129 13 is_stmt 0 view .LVU134
 673 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 674 000e 013B     		subs	r3, r3, #1
 675 0010 172B     		cmp	r3, #23
 676 0012 1AD8     		bhi	.L34
 677 0014 DFE803F0 		tbb	[pc, r3]
 678              	.L38:
 679 0018 10       		.byte	(.L42-.L38)/2
 680 0019 13       		.byte	(.L41-.L38)/2
 681 001a 13       		.byte	(.L41-.L38)/2
 682 001b 19       		.byte	(.L34-.L38)/2
 683 001c 19       		.byte	(.L34-.L38)/2
 684 001d 19       		.byte	(.L34-.L38)/2
 685 001e 19       		.byte	(.L34-.L38)/2
 686 001f 15       		.byte	(.L40-.L38)/2
 687 0020 19       		.byte	(.L34-.L38)/2
 688 0021 19       		.byte	(.L34-.L38)/2
 689 0022 19       		.byte	(.L34-.L38)/2
 690 0023 19       		.byte	(.L34-.L38)/2
 691 0024 19       		.byte	(.L34-.L38)/2
 692 0025 19       		.byte	(.L34-.L38)/2
 693 0026 19       		.byte	(.L34-.L38)/2
 694 0027 1A       		.byte	(.L39-.L38)/2
 695 0028 19       		.byte	(.L34-.L38)/2
 696 0029 19       		.byte	(.L34-.L38)/2
 697 002a 19       		.byte	(.L34-.L38)/2
 698 002b 19       		.byte	(.L34-.L38)/2
 699 002c 19       		.byte	(.L34-.L38)/2
 700 002d 19       		.byte	(.L34-.L38)/2
 701 002e 19       		.byte	(.L34-.L38)/2
 702 002f 1F       		.byte	(.L37-.L38)/2
 703              		.p2align 1
 704              	.L44:
 127:Core/Src/menu.cpp ****     }
 705              		.loc 1 127 9 is_stmt 1 view .LVU135
 127:Core/Src/menu.cpp ****     }
 706              		.loc 1 127 31 is_stmt 0 view .LVU136
 707 0030 2069     		ldr	r0, [r4, #16]
 708 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 709              	.LVL42:
 710 0036 E9E7     		b	.L35
 711              	.L42:
 130:Core/Src/menu.cpp ****     {
 131:Core/Src/menu.cpp ****     case MENU_HOME:
 132:Core/Src/menu.cpp ****         break;
 133:Core/Src/menu.cpp ****     case MENU_CH:
 712              		.loc 1 133 5 is_stmt 1 view .LVU137
 134:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 713              		.loc 1 134 9 view .LVU138
 714              		.loc 1 134 19 is_stmt 0 view .LVU139
 715 0038 0223     		movs	r3, #2
 716 003a 2370     		strb	r3, [r4]
 135:Core/Src/menu.cpp ****         break;
 717              		.loc 1 135 9 is_stmt 1 view .LVU140
ARM GAS  /tmp/cceDqxOT.s 			page 18


 718 003c 05E0     		b	.L34
 719              	.L41:
 136:Core/Src/menu.cpp ****     case MENU_SQ:
 137:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 138:Core/Src/menu.cpp ****     case MENU_TMO:
 720              		.loc 1 138 5 view .LVU141
 139:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 721              		.loc 1 139 9 view .LVU142
 722              		.loc 1 139 19 is_stmt 0 view .LVU143
 723 003e 0123     		movs	r3, #1
 724 0040 2370     		strb	r3, [r4]
 725              	.L40:
 140:Core/Src/menu.cpp ****     case MENU_CH_IN:
 726              		.loc 1 140 5 is_stmt 1 view .LVU144
 141:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 727              		.loc 1 141 9 view .LVU145
 728              		.loc 1 141 20 is_stmt 0 view .LVU146
 729 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 730              		.loc 1 141 18 view .LVU147
 731 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 732 0046 5340     		eors	r3, r3, r2
 733 0048 A373     		strb	r3, [r4, #14]
 142:Core/Src/menu.cpp ****         break;
 734              		.loc 1 142 9 is_stmt 1 view .LVU148
 735              	.L34:
 143:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 144:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 145:Core/Src/menu.cpp ****         break;
 146:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 147:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 148:Core/Src/menu.cpp ****         break;
 149:Core/Src/menu.cpp **** 
 150:Core/Src/menu.cpp ****     default:
 151:Core/Src/menu.cpp ****         break;
 152:Core/Src/menu.cpp ****     }
 153:Core/Src/menu.cpp **** }
 736              		.loc 1 153 1 is_stmt 0 view .LVU149
 737 004a 10BD     		pop	{r4, pc}
 738              	.LVL43:
 739              	.L39:
 143:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 740              		.loc 1 143 5 is_stmt 1 view .LVU150
 144:Core/Src/menu.cpp ****         break;
 741              		.loc 1 144 9 view .LVU151
 144:Core/Src/menu.cpp ****         break;
 742              		.loc 1 144 20 is_stmt 0 view .LVU152
 743 004c E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 144:Core/Src/menu.cpp ****         break;
 744              		.loc 1 144 18 view .LVU153
 745 004e A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 746 0050 5340     		eors	r3, r3, r2
 747 0052 A373     		strb	r3, [r4, #14]
 145:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 748              		.loc 1 145 9 is_stmt 1 view .LVU154
 749 0054 F9E7     		b	.L34
 750              	.L37:
 146:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
ARM GAS  /tmp/cceDqxOT.s 			page 19


 751              		.loc 1 146 5 view .LVU155
 147:Core/Src/menu.cpp ****         break;
 752              		.loc 1 147 9 view .LVU156
 147:Core/Src/menu.cpp ****         break;
 753              		.loc 1 147 20 is_stmt 0 view .LVU157
 754 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 147:Core/Src/menu.cpp ****         break;
 755              		.loc 1 147 18 view .LVU158
 756 0058 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 757 005a 5340     		eors	r3, r3, r2
 758 005c A373     		strb	r3, [r4, #14]
 148:Core/Src/menu.cpp **** 
 759              		.loc 1 148 9 is_stmt 1 view .LVU159
 760              		.loc 1 153 1 is_stmt 0 view .LVU160
 761 005e F4E7     		b	.L34
 762              		.cfi_endproc
 763              	.LFE143:
 764              		.fnend
 766              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 767              		.align	1
 768              		.global	_ZN4menu9menu_menuEv
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	_ZN4menu9menu_menuEv:
 775              		.fnstart
 776              	.LVL44:
 777              	.LFB144:
 154:Core/Src/menu.cpp **** 
 155:Core/Src/menu.cpp **** void menu::menu_menu()
 156:Core/Src/menu.cpp **** {
 778              		.loc 1 156 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		.loc 1 156 1 is_stmt 0 view .LVU162
 783 0000 10B5     		push	{r4, lr}
 784              		.save {r4, lr}
 785              	.LCFI11:
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 4, -8
 788              		.cfi_offset 14, -4
 789 0002 0446     		mov	r4, r0
 157:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 790              		.loc 1 157 5 is_stmt 1 view .LVU163
 791              		.loc 1 157 28 is_stmt 0 view .LVU164
 792 0004 0069     		ldr	r0, [r0, #16]
 793              	.LVL45:
 794              		.loc 1 157 28 view .LVU165
 795 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 796              	.LVL46:
 797              		.loc 1 157 5 view .LVU166
 798 000a 10B9     		cbnz	r0, .L48
 799              	.L46:
 158:Core/Src/menu.cpp ****     {
 159:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
ARM GAS  /tmp/cceDqxOT.s 			page 20


 160:Core/Src/menu.cpp ****     }
 161:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 800              		.loc 1 161 5 is_stmt 1 view .LVU167
 801              		.loc 1 161 16 is_stmt 0 view .LVU168
 802 000c 0123     		movs	r3, #1
 803 000e 2370     		strb	r3, [r4]
 162:Core/Src/menu.cpp **** }
 804              		.loc 1 162 1 view .LVU169
 805 0010 10BD     		pop	{r4, pc}
 806              	.LVL47:
 807              	.L48:
 159:Core/Src/menu.cpp ****     }
 808              		.loc 1 159 9 is_stmt 1 view .LVU170
 159:Core/Src/menu.cpp ****     }
 809              		.loc 1 159 31 is_stmt 0 view .LVU171
 810 0012 2069     		ldr	r0, [r4, #16]
 811 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 812              	.LVL48:
 813 0018 F8E7     		b	.L46
 814              		.cfi_endproc
 815              	.LFE144:
 816              		.fnend
 818              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 819              		.align	1
 820              		.global	_ZN4menu9menu_backEv
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	_ZN4menu9menu_backEv:
 827              		.fnstart
 828              	.LVL49:
 829              	.LFB145:
 163:Core/Src/menu.cpp **** 
 164:Core/Src/menu.cpp **** void menu::menu_back()
 165:Core/Src/menu.cpp **** {
 830              		.loc 1 165 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 165 1 is_stmt 0 view .LVU173
 835 0000 10B5     		push	{r4, lr}
 836              		.save {r4, lr}
 837              	.LCFI12:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 4, -8
 840              		.cfi_offset 14, -4
 841 0002 0446     		mov	r4, r0
 166:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 842              		.loc 1 166 5 is_stmt 1 view .LVU174
 843              		.loc 1 166 28 is_stmt 0 view .LVU175
 844 0004 0069     		ldr	r0, [r0, #16]
 845              	.LVL50:
 846              		.loc 1 166 28 view .LVU176
 847 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 848              	.LVL51:
 849              		.loc 1 166 5 view .LVU177
ARM GAS  /tmp/cceDqxOT.s 			page 21


 850 000a 18B9     		cbnz	r0, .L52
 851              	.L50:
 167:Core/Src/menu.cpp ****     {
 168:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 169:Core/Src/menu.cpp ****     }
 170:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 852              		.loc 1 170 5 is_stmt 1 view .LVU178
 853              		.loc 1 170 36 is_stmt 0 view .LVU179
 854 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 855              		.loc 1 170 18 view .LVU180
 856 000e DB08     		lsrs	r3, r3, #3
 857              		.loc 1 170 16 view .LVU181
 858 0010 2370     		strb	r3, [r4]
 171:Core/Src/menu.cpp **** }
 859              		.loc 1 171 1 view .LVU182
 860 0012 10BD     		pop	{r4, pc}
 861              	.LVL52:
 862              	.L52:
 168:Core/Src/menu.cpp ****     }
 863              		.loc 1 168 9 is_stmt 1 view .LVU183
 168:Core/Src/menu.cpp ****     }
 864              		.loc 1 168 31 is_stmt 0 view .LVU184
 865 0014 2069     		ldr	r0, [r4, #16]
 866 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 867              	.LVL53:
 868 001a F7E7     		b	.L50
 869              		.cfi_endproc
 870              	.LFE145:
 871              		.fnend
 873              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 874              		.align	1
 875              		.global	_ZN4menu9menu_prevEv
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 879              		.fpu fpv4-sp-d16
 881              	_ZN4menu9menu_prevEv:
 882              		.fnstart
 883              	.LVL54:
 884              	.LFB146:
 172:Core/Src/menu.cpp **** 
 173:Core/Src/menu.cpp **** void menu::menu_prev()
 174:Core/Src/menu.cpp **** {
 885              		.loc 1 174 1 is_stmt 1 view -0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		.loc 1 174 1 is_stmt 0 view .LVU186
 890 0000 10B5     		push	{r4, lr}
 891              		.save {r4, lr}
 892              	.LCFI13:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 0446     		mov	r4, r0
 175:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 897              		.loc 1 175 5 is_stmt 1 view .LVU187
ARM GAS  /tmp/cceDqxOT.s 			page 22


 898              		.loc 1 175 28 is_stmt 0 view .LVU188
 899 0004 0069     		ldr	r0, [r0, #16]
 900              	.LVL55:
 901              		.loc 1 175 28 view .LVU189
 902 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 903              	.LVL56:
 904              		.loc 1 175 5 view .LVU190
 905 000a 88B9     		cbnz	r0, .L64
 906              	.L54:
 176:Core/Src/menu.cpp ****     {
 177:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 178:Core/Src/menu.cpp ****     }
 179:Core/Src/menu.cpp ****     switch (menu_value)
 907              		.loc 1 179 5 is_stmt 1 view .LVU191
 908              		.loc 1 179 13 is_stmt 0 view .LVU192
 909 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 910 000e 013B     		subs	r3, r3, #1
 911 0010 172B     		cmp	r3, #23
 912 0012 13D8     		bhi	.L53
 913 0014 DFE803F0 		tbb	[pc, r3]
 914              	.L57:
 915 0018 10       		.byte	(.L62-.L57)/2
 916 0019 13       		.byte	(.L61-.L57)/2
 917 001a 16       		.byte	(.L60-.L57)/2
 918 001b 12       		.byte	(.L53-.L57)/2
 919 001c 12       		.byte	(.L53-.L57)/2
 920 001d 12       		.byte	(.L53-.L57)/2
 921 001e 12       		.byte	(.L53-.L57)/2
 922 001f 19       		.byte	(.L59-.L57)/2
 923 0020 12       		.byte	(.L53-.L57)/2
 924 0021 12       		.byte	(.L53-.L57)/2
 925 0022 12       		.byte	(.L53-.L57)/2
 926 0023 12       		.byte	(.L53-.L57)/2
 927 0024 12       		.byte	(.L53-.L57)/2
 928 0025 12       		.byte	(.L53-.L57)/2
 929 0026 12       		.byte	(.L53-.L57)/2
 930 0027 1E       		.byte	(.L58-.L57)/2
 931 0028 12       		.byte	(.L53-.L57)/2
 932 0029 12       		.byte	(.L53-.L57)/2
 933 002a 12       		.byte	(.L53-.L57)/2
 934 002b 12       		.byte	(.L53-.L57)/2
 935 002c 12       		.byte	(.L53-.L57)/2
 936 002d 12       		.byte	(.L53-.L57)/2
 937 002e 12       		.byte	(.L53-.L57)/2
 938 002f 23       		.byte	(.L56-.L57)/2
 939              		.p2align 1
 940              	.L64:
 177:Core/Src/menu.cpp ****     }
 941              		.loc 1 177 9 is_stmt 1 view .LVU193
 177:Core/Src/menu.cpp ****     }
 942              		.loc 1 177 31 is_stmt 0 view .LVU194
 943 0030 2069     		ldr	r0, [r4, #16]
 944 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 945              	.LVL57:
 946 0036 E9E7     		b	.L54
 947              	.L62:
 180:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cceDqxOT.s 			page 23


 181:Core/Src/menu.cpp ****     case MENU_HOME:
=======
 500              		.loc 1 79 22 is_stmt 0 view .LVU91
 501 006a 0023     		movs	r3, #0
 502 006c A373     		strb	r3, [r4, #14]
 503 006e EBE7     		b	.L16
ARM GAS  /tmp/ccMEB0iu.s 			page 13


 504              	.L22:
  83:Core/Src/menu.cpp ****         cursorOn^=1;
 505              		.loc 1 83 5 is_stmt 1 view .LVU92
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 506              		.loc 1 84 9 view .LVU93
  84:Core/Src/menu.cpp ****         if(!cursorOn)
 507              		.loc 1 84 17 is_stmt 0 view .LVU94
 508 0070 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 509 0072 83F00103 		eor	r3, r3, #1
 510 0076 E373     		strb	r3, [r4, #15]
  85:Core/Src/menu.cpp ****         {
 511              		.loc 1 85 9 is_stmt 1 view .LVU95
 512 0078 002B     		cmp	r3, #0
 513 007a E5D1     		bne	.L16
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 514              		.loc 1 87 13 view .LVU96
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 515              		.loc 1 87 23 is_stmt 0 view .LVU97
 516 007c A01C     		adds	r0, r4, #2
 517 007e FFF7FEFF 		bl	atoi
 518              	.LVL35:
  87:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 519              		.loc 1 87 18 view .LVU98
 520 0082 E071     		strb	r0, [r4, #7]
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 521              		.loc 1 88 13 is_stmt 1 view .LVU99
  88:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 522              		.loc 1 88 22 is_stmt 0 view .LVU100
 523 0084 0023     		movs	r3, #0
 524 0086 A373     		strb	r3, [r4, #14]
 525 0088 DEE7     		b	.L16
 526              	.L20:
  92:Core/Src/menu.cpp ****         cursorOn%=1;
 527              		.loc 1 92 5 is_stmt 1 view .LVU101
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 528              		.loc 1 93 9 view .LVU102
  93:Core/Src/menu.cpp ****         if(!cursorOn)
 529              		.loc 1 93 17 is_stmt 0 view .LVU103
 530 008a 0025     		movs	r5, #0
 531 008c E573     		strb	r5, [r4, #15]
  94:Core/Src/menu.cpp ****         {
 532              		.loc 1 94 9 is_stmt 1 view .LVU104
  96:Core/Src/menu.cpp ****             cursorPos=0;
 533              		.loc 1 96 13 view .LVU105
  96:Core/Src/menu.cpp ****             cursorPos=0;
 534              		.loc 1 96 24 is_stmt 0 view .LVU106
 535 008e 04F10B00 		add	r0, r4, #11
 536 0092 FFF7FEFF 		bl	atoi
 537              	.LVL36:
  96:Core/Src/menu.cpp ****             cursorPos=0;
 538              		.loc 1 96 19 view .LVU107
 539 0096 6073     		strb	r0, [r4, #13]
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 540              		.loc 1 97 13 is_stmt 1 view .LVU108
  97:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 541              		.loc 1 97 22 is_stmt 0 view .LVU109
 542 0098 A573     		strb	r5, [r4, #14]
ARM GAS  /tmp/ccMEB0iu.s 			page 14


 543              		.loc 1 107 1 view .LVU110
 544 009a D5E7     		b	.L16
 545              		.cfi_endproc
 546              	.LFE142:
 547              		.fnend
 549              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 550              		.align	1
 551              		.global	_ZN4menu9menu_nextEv
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	_ZN4menu9menu_nextEv:
 558              		.fnstart
 559              	.LVL37:
 560              	.LFB143:
 108:Core/Src/menu.cpp **** 
 109:Core/Src/menu.cpp **** void menu::menu_next()
 110:Core/Src/menu.cpp **** {
 561              		.loc 1 110 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		.loc 1 110 1 is_stmt 0 view .LVU112
 566 0000 10B5     		push	{r4, lr}
 567              		.save {r4, lr}
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 14, -4
 572 0002 0446     		mov	r4, r0
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 573              		.loc 1 111 5 is_stmt 1 view .LVU113
 574              		.loc 1 111 28 is_stmt 0 view .LVU114
 575 0004 0069     		ldr	r0, [r0, #16]
 576              	.LVL38:
 577              		.loc 1 111 28 view .LVU115
 578 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 579              	.LVL39:
 580              		.loc 1 111 5 view .LVU116
 581 000a 88B9     		cbnz	r0, .L38
 582              	.L29:
 112:Core/Src/menu.cpp ****     {
 113:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 114:Core/Src/menu.cpp ****     }
 115:Core/Src/menu.cpp ****     switch (menu_value)
 583              		.loc 1 115 5 is_stmt 1 view .LVU117
 584              		.loc 1 115 13 is_stmt 0 view .LVU118
 585 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 586 000e 013B     		subs	r3, r3, #1
 587 0010 172B     		cmp	r3, #23
 588 0012 1AD8     		bhi	.L28
 589 0014 DFE803F0 		tbb	[pc, r3]
 590              	.L32:
 591 0018 10       		.byte	(.L36-.L32)/2
 592 0019 13       		.byte	(.L35-.L32)/2
 593 001a 13       		.byte	(.L35-.L32)/2
ARM GAS  /tmp/ccMEB0iu.s 			page 15


 594 001b 19       		.byte	(.L28-.L32)/2
 595 001c 19       		.byte	(.L28-.L32)/2
 596 001d 19       		.byte	(.L28-.L32)/2
 597 001e 19       		.byte	(.L28-.L32)/2
 598 001f 15       		.byte	(.L34-.L32)/2
 599 0020 19       		.byte	(.L28-.L32)/2
 600 0021 19       		.byte	(.L28-.L32)/2
 601 0022 19       		.byte	(.L28-.L32)/2
 602 0023 19       		.byte	(.L28-.L32)/2
 603 0024 19       		.byte	(.L28-.L32)/2
 604 0025 19       		.byte	(.L28-.L32)/2
 605 0026 19       		.byte	(.L28-.L32)/2
 606 0027 1A       		.byte	(.L33-.L32)/2
 607 0028 19       		.byte	(.L28-.L32)/2
 608 0029 19       		.byte	(.L28-.L32)/2
 609 002a 19       		.byte	(.L28-.L32)/2
 610 002b 19       		.byte	(.L28-.L32)/2
 611 002c 19       		.byte	(.L28-.L32)/2
 612 002d 19       		.byte	(.L28-.L32)/2
 613 002e 19       		.byte	(.L28-.L32)/2
 614 002f 1F       		.byte	(.L31-.L32)/2
 615              		.p2align 1
 616              	.L38:
 113:Core/Src/menu.cpp ****     }
 617              		.loc 1 113 9 is_stmt 1 view .LVU119
 113:Core/Src/menu.cpp ****     }
 618              		.loc 1 113 31 is_stmt 0 view .LVU120
 619 0030 2069     		ldr	r0, [r4, #16]
 620 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 621              	.LVL40:
 622 0036 E9E7     		b	.L29
 623              	.L36:
 116:Core/Src/menu.cpp ****     {
 117:Core/Src/menu.cpp ****     case MENU_HOME:
 118:Core/Src/menu.cpp ****         break;
 119:Core/Src/menu.cpp ****     case MENU_CH:
 624              		.loc 1 119 5 is_stmt 1 view .LVU121
 120:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 625              		.loc 1 120 9 view .LVU122
 626              		.loc 1 120 19 is_stmt 0 view .LVU123
 627 0038 0223     		movs	r3, #2
 628 003a 2370     		strb	r3, [r4]
 121:Core/Src/menu.cpp ****         break;
 629              		.loc 1 121 9 is_stmt 1 view .LVU124
 630 003c 05E0     		b	.L28
 631              	.L35:
 122:Core/Src/menu.cpp ****     case MENU_SQ:
 123:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 124:Core/Src/menu.cpp ****     case MENU_TMO:
 632              		.loc 1 124 5 view .LVU125
 125:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 633              		.loc 1 125 9 view .LVU126
 634              		.loc 1 125 19 is_stmt 0 view .LVU127
 635 003e 0123     		movs	r3, #1
 636 0040 2370     		strb	r3, [r4]
 637              	.L34:
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/ccMEB0iu.s 			page 16


 638              		.loc 1 126 5 is_stmt 1 view .LVU128
 127:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 639              		.loc 1 127 9 view .LVU129
 640              		.loc 1 127 20 is_stmt 0 view .LVU130
 641 0042 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 642              		.loc 1 127 18 view .LVU131
 643 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 644 0046 5340     		eors	r3, r3, r2
 645 0048 A373     		strb	r3, [r4, #14]
 128:Core/Src/menu.cpp ****         break;
 646              		.loc 1 128 9 is_stmt 1 view .LVU132
 647              	.L28:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 130:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 131:Core/Src/menu.cpp ****         break;
 132:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 133:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 134:Core/Src/menu.cpp ****         break;
 135:Core/Src/menu.cpp **** 
 136:Core/Src/menu.cpp ****     default:
 137:Core/Src/menu.cpp ****         break;
 138:Core/Src/menu.cpp ****     }
 139:Core/Src/menu.cpp **** }
 648              		.loc 1 139 1 is_stmt 0 view .LVU133
 649 004a 10BD     		pop	{r4, pc}
 650              	.LVL41:
 651              	.L33:
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 652              		.loc 1 129 5 is_stmt 1 view .LVU134
 130:Core/Src/menu.cpp ****         break;
 653              		.loc 1 130 9 view .LVU135
 130:Core/Src/menu.cpp ****         break;
 654              		.loc 1 130 20 is_stmt 0 view .LVU136
 655 004c E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 130:Core/Src/menu.cpp ****         break;
 656              		.loc 1 130 18 view .LVU137
 657 004e A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 658 0050 5340     		eors	r3, r3, r2
 659 0052 A373     		strb	r3, [r4, #14]
 131:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 660              		.loc 1 131 9 is_stmt 1 view .LVU138
 661 0054 F9E7     		b	.L28
 662              	.L31:
 132:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 663              		.loc 1 132 5 view .LVU139
 133:Core/Src/menu.cpp ****         break;
 664              		.loc 1 133 9 view .LVU140
 133:Core/Src/menu.cpp ****         break;
 665              		.loc 1 133 20 is_stmt 0 view .LVU141
 666 0056 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 133:Core/Src/menu.cpp ****         break;
 667              		.loc 1 133 18 view .LVU142
 668 0058 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 669 005a 5340     		eors	r3, r3, r2
 670 005c A373     		strb	r3, [r4, #14]
 134:Core/Src/menu.cpp **** 
 671              		.loc 1 134 9 is_stmt 1 view .LVU143
ARM GAS  /tmp/ccMEB0iu.s 			page 17


 672              		.loc 1 139 1 is_stmt 0 view .LVU144
 673 005e F4E7     		b	.L28
 674              		.cfi_endproc
 675              	.LFE143:
 676              		.fnend
 678              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 679              		.align	1
 680              		.global	_ZN4menu9menu_menuEv
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	_ZN4menu9menu_menuEv:
 687              		.fnstart
 688              	.LVL42:
 689              	.LFB144:
 140:Core/Src/menu.cpp **** 
 141:Core/Src/menu.cpp **** void menu::menu_menu()
 142:Core/Src/menu.cpp **** {
 690              		.loc 1 142 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		.loc 1 142 1 is_stmt 0 view .LVU146
 695 0000 10B5     		push	{r4, lr}
 696              		.save {r4, lr}
 697              	.LCFI8:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 0446     		mov	r4, r0
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 702              		.loc 1 143 5 is_stmt 1 view .LVU147
 703              		.loc 1 143 28 is_stmt 0 view .LVU148
 704 0004 0069     		ldr	r0, [r0, #16]
 705              	.LVL43:
 706              		.loc 1 143 28 view .LVU149
 707 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 708              	.LVL44:
 709              		.loc 1 143 5 view .LVU150
 710 000a 10B9     		cbnz	r0, .L42
 711              	.L40:
 144:Core/Src/menu.cpp ****     {
 145:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 146:Core/Src/menu.cpp ****     }
 147:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 712              		.loc 1 147 5 is_stmt 1 view .LVU151
 713              		.loc 1 147 16 is_stmt 0 view .LVU152
 714 000c 0123     		movs	r3, #1
 715 000e 2370     		strb	r3, [r4]
 148:Core/Src/menu.cpp **** }
 716              		.loc 1 148 1 view .LVU153
 717 0010 10BD     		pop	{r4, pc}
 718              	.LVL45:
 719              	.L42:
 145:Core/Src/menu.cpp ****     }
 720              		.loc 1 145 9 is_stmt 1 view .LVU154
ARM GAS  /tmp/ccMEB0iu.s 			page 18


 145:Core/Src/menu.cpp ****     }
 721              		.loc 1 145 31 is_stmt 0 view .LVU155
 722 0012 2069     		ldr	r0, [r4, #16]
 723 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 724              	.LVL46:
 725 0018 F8E7     		b	.L40
 726              		.cfi_endproc
 727              	.LFE144:
 728              		.fnend
 730              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 731              		.align	1
 732              		.global	_ZN4menu9menu_backEv
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 736              		.fpu fpv4-sp-d16
 738              	_ZN4menu9menu_backEv:
 739              		.fnstart
 740              	.LVL47:
 741              	.LFB145:
 149:Core/Src/menu.cpp **** 
 150:Core/Src/menu.cpp **** void menu::menu_back()
 151:Core/Src/menu.cpp **** {
 742              		.loc 1 151 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		.loc 1 151 1 is_stmt 0 view .LVU157
 747 0000 10B5     		push	{r4, lr}
 748              		.save {r4, lr}
 749              	.LCFI9:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 4, -8
 752              		.cfi_offset 14, -4
 753 0002 0446     		mov	r4, r0
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 754              		.loc 1 152 5 is_stmt 1 view .LVU158
 755              		.loc 1 152 28 is_stmt 0 view .LVU159
 756 0004 0069     		ldr	r0, [r0, #16]
 757              	.LVL48:
 758              		.loc 1 152 28 view .LVU160
 759 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 760              	.LVL49:
 761              		.loc 1 152 5 view .LVU161
 762 000a 18B9     		cbnz	r0, .L46
 763              	.L44:
 153:Core/Src/menu.cpp ****     {
 154:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 155:Core/Src/menu.cpp ****     }
 156:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 764              		.loc 1 156 5 is_stmt 1 view .LVU162
 765              		.loc 1 156 36 is_stmt 0 view .LVU163
 766 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 767              		.loc 1 156 18 view .LVU164
 768 000e DB08     		lsrs	r3, r3, #3
 769              		.loc 1 156 16 view .LVU165
 770 0010 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccMEB0iu.s 			page 19


 157:Core/Src/menu.cpp **** }
 771              		.loc 1 157 1 view .LVU166
 772 0012 10BD     		pop	{r4, pc}
 773              	.LVL50:
 774              	.L46:
 154:Core/Src/menu.cpp ****     }
 775              		.loc 1 154 9 is_stmt 1 view .LVU167
 154:Core/Src/menu.cpp ****     }
 776              		.loc 1 154 31 is_stmt 0 view .LVU168
 777 0014 2069     		ldr	r0, [r4, #16]
 778 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 779              	.LVL51:
 780 001a F7E7     		b	.L44
 781              		.cfi_endproc
 782              	.LFE145:
 783              		.fnend
 785              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 786              		.align	1
 787              		.global	_ZN4menu9menu_prevEv
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 793              	_ZN4menu9menu_prevEv:
 794              		.fnstart
 795              	.LVL52:
 796              	.LFB146:
 158:Core/Src/menu.cpp **** 
 159:Core/Src/menu.cpp **** void menu::menu_prev()
 160:Core/Src/menu.cpp **** {
 797              		.loc 1 160 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		.loc 1 160 1 is_stmt 0 view .LVU170
 802 0000 10B5     		push	{r4, lr}
 803              		.save {r4, lr}
 804              	.LCFI10:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 808 0002 0446     		mov	r4, r0
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 809              		.loc 1 161 5 is_stmt 1 view .LVU171
 810              		.loc 1 161 28 is_stmt 0 view .LVU172
 811 0004 0069     		ldr	r0, [r0, #16]
 812              	.LVL53:
 813              		.loc 1 161 28 view .LVU173
 814 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 815              	.LVL54:
 816              		.loc 1 161 5 view .LVU174
 817 000a 88B9     		cbnz	r0, .L58
 818              	.L48:
 162:Core/Src/menu.cpp ****     {
 163:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 164:Core/Src/menu.cpp ****     }
 165:Core/Src/menu.cpp ****     switch (menu_value)
ARM GAS  /tmp/ccMEB0iu.s 			page 20


 819              		.loc 1 165 5 is_stmt 1 view .LVU175
 820              		.loc 1 165 13 is_stmt 0 view .LVU176
 821 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 822 000e 013B     		subs	r3, r3, #1
 823 0010 172B     		cmp	r3, #23
 824 0012 13D8     		bhi	.L47
 825 0014 DFE803F0 		tbb	[pc, r3]
 826              	.L51:
 827 0018 10       		.byte	(.L56-.L51)/2
 828 0019 13       		.byte	(.L55-.L51)/2
 829 001a 16       		.byte	(.L54-.L51)/2
 830 001b 12       		.byte	(.L47-.L51)/2
 831 001c 12       		.byte	(.L47-.L51)/2
 832 001d 12       		.byte	(.L47-.L51)/2
 833 001e 12       		.byte	(.L47-.L51)/2
 834 001f 19       		.byte	(.L53-.L51)/2
 835 0020 12       		.byte	(.L47-.L51)/2
 836 0021 12       		.byte	(.L47-.L51)/2
 837 0022 12       		.byte	(.L47-.L51)/2
 838 0023 12       		.byte	(.L47-.L51)/2
 839 0024 12       		.byte	(.L47-.L51)/2
 840 0025 12       		.byte	(.L47-.L51)/2
 841 0026 12       		.byte	(.L47-.L51)/2
 842 0027 1E       		.byte	(.L52-.L51)/2
 843 0028 12       		.byte	(.L47-.L51)/2
 844 0029 12       		.byte	(.L47-.L51)/2
 845 002a 12       		.byte	(.L47-.L51)/2
 846 002b 12       		.byte	(.L47-.L51)/2
 847 002c 12       		.byte	(.L47-.L51)/2
 848 002d 12       		.byte	(.L47-.L51)/2
 849 002e 12       		.byte	(.L47-.L51)/2
 850 002f 23       		.byte	(.L50-.L51)/2
 851              		.p2align 1
 852              	.L58:
 163:Core/Src/menu.cpp ****     }
 853              		.loc 1 163 9 is_stmt 1 view .LVU177
 163:Core/Src/menu.cpp ****     }
 854              		.loc 1 163 31 is_stmt 0 view .LVU178
 855 0030 2069     		ldr	r0, [r4, #16]
 856 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 857              	.LVL55:
 858 0036 E9E7     		b	.L48
 859              	.L56:
 166:Core/Src/menu.cpp ****     {
 167:Core/Src/menu.cpp ****     case MENU_HOME:
 168:Core/Src/menu.cpp ****         break;
 169:Core/Src/menu.cpp ****     case MENU_CH:
 860              		.loc 1 169 5 is_stmt 1 view .LVU179
 170:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 861              		.loc 1 170 9 view .LVU180
 862              		.loc 1 170 19 is_stmt 0 view .LVU181
 863 0038 0323     		movs	r3, #3
 864 003a 2370     		strb	r3, [r4]
 171:Core/Src/menu.cpp ****         break;
 865              		.loc 1 171 9 is_stmt 1 view .LVU182
 866              	.L47:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
ARM GAS  /tmp/ccMEB0iu.s 			page 21


 173:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 174:Core/Src/menu.cpp ****         break;
 175:Core/Src/menu.cpp ****     case MENU_TMO:
 176:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 177:Core/Src/menu.cpp ****         break;
 178:Core/Src/menu.cpp ****     case MENU_CH_IN:
 179:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 180:Core/Src/menu.cpp ****         break;
 181:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 182:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 183:Core/Src/menu.cpp ****         break;
 184:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 185:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 186:Core/Src/menu.cpp ****         break;
 187:Core/Src/menu.cpp **** 
 188:Core/Src/menu.cpp ****     default:
 189:Core/Src/menu.cpp ****         break;
 190:Core/Src/menu.cpp ****     }
 191:Core/Src/menu.cpp **** }
 867              		.loc 1 191 1 is_stmt 0 view .LVU183
 868 003c 10BD     		pop	{r4, pc}
 869              	.LVL56:
 870              	.L55:
 172:Core/Src/menu.cpp ****     case MENU_SQ:
 871              		.loc 1 172 5 is_stmt 1 view .LVU184
 173:Core/Src/menu.cpp ****         break;
 872              		.loc 1 173 9 view .LVU185
 173:Core/Src/menu.cpp ****         break;
 873              		.loc 1 173 19 is_stmt 0 view .LVU186
 874 003e 0123     		movs	r3, #1
 875 0040 2370     		strb	r3, [r4]
 174:Core/Src/menu.cpp ****     case MENU_TMO:
 876              		.loc 1 174 9 is_stmt 1 view .LVU187
 877 0042 FBE7     		b	.L47
 878              	.L54:
 175:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 879              		.loc 1 175 5 view .LVU188
 176:Core/Src/menu.cpp ****         break;
 880              		.loc 1 176 9 view .LVU189
 176:Core/Src/menu.cpp ****         break;
 881              		.loc 1 176 19 is_stmt 0 view .LVU190
 882 0044 0223     		movs	r3, #2
 883 0046 2370     		strb	r3, [r4]
 177:Core/Src/menu.cpp ****     case MENU_CH_IN:
 884              		.loc 1 177 9 is_stmt 1 view .LVU191
 885 0048 F8E7     		b	.L47
 886              	.L53:
 178:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 887              		.loc 1 178 5 view .LVU192
 179:Core/Src/menu.cpp ****         break;
 888              		.loc 1 179 9 view .LVU193
 179:Core/Src/menu.cpp ****         break;
 889              		.loc 1 179 20 is_stmt 0 view .LVU194
 890 004a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 179:Core/Src/menu.cpp ****         break;
 891              		.loc 1 179 18 view .LVU195
 892 004c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
ARM GAS  /tmp/ccMEB0iu.s 			page 22


 893 004e 5340     		eors	r3, r3, r2
 894 0050 A373     		strb	r3, [r4, #14]
 180:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 895              		.loc 1 180 9 is_stmt 1 view .LVU196
 896 0052 F3E7     		b	.L47
 897              	.L52:
 181:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 898              		.loc 1 181 5 view .LVU197
 182:Core/Src/menu.cpp ****         break;
 899              		.loc 1 182 9 view .LVU198
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
 182:Core/Src/menu.cpp ****         break;
 183:Core/Src/menu.cpp ****     case MENU_CH:
 948              		.loc 1 183 5 is_stmt 1 view .LVU195
 184:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 949              		.loc 1 184 9 view .LVU196
 950              		.loc 1 184 19 is_stmt 0 view .LVU197
 951 0038 0323     		movs	r3, #3
 952 003a 2370     		strb	r3, [r4]
 185:Core/Src/menu.cpp ****         break;
<<<<<<< HEAD
 953              		.loc 1 185 9 is_stmt 1 view .LVU198
 954              	.L53:
 186:Core/Src/menu.cpp ****     case MENU_SQ:
 187:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 188:Core/Src/menu.cpp ****         break;
 189:Core/Src/menu.cpp ****     case MENU_TMO:
 190:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 191:Core/Src/menu.cpp ****         break;
 192:Core/Src/menu.cpp ****     case MENU_CH_IN:
 193:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 194:Core/Src/menu.cpp ****         break;
 195:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 196:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 197:Core/Src/menu.cpp ****         break;
 198:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 199:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 200:Core/Src/menu.cpp ****         break;
 201:Core/Src/menu.cpp **** 
 202:Core/Src/menu.cpp ****     default:
 203:Core/Src/menu.cpp ****         break;
 204:Core/Src/menu.cpp ****     }
 205:Core/Src/menu.cpp **** }
 955              		.loc 1 205 1 is_stmt 0 view .LVU199
 956 003c 10BD     		pop	{r4, pc}
 957              	.LVL58:
 958              	.L61:
 186:Core/Src/menu.cpp ****     case MENU_SQ:
 959              		.loc 1 186 5 is_stmt 1 view .LVU200
 187:Core/Src/menu.cpp ****         break;
 960              		.loc 1 187 9 view .LVU201
 187:Core/Src/menu.cpp ****         break;
 961              		.loc 1 187 19 is_stmt 0 view .LVU202
 962 003e 0123     		movs	r3, #1
 963 0040 2370     		strb	r3, [r4]
 188:Core/Src/menu.cpp ****     case MENU_TMO:
 964              		.loc 1 188 9 is_stmt 1 view .LVU203
 965 0042 FBE7     		b	.L53
 966              	.L60:
 189:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 967              		.loc 1 189 5 view .LVU204
 190:Core/Src/menu.cpp ****         break;
 968              		.loc 1 190 9 view .LVU205
 190:Core/Src/menu.cpp ****         break;
 969              		.loc 1 190 19 is_stmt 0 view .LVU206
 970 0044 0223     		movs	r3, #2
 971 0046 2370     		strb	r3, [r4]
 191:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/cceDqxOT.s 			page 24


 972              		.loc 1 191 9 is_stmt 1 view .LVU207
 973 0048 F8E7     		b	.L53
 974              	.L59:
 192:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 975              		.loc 1 192 5 view .LVU208
 193:Core/Src/menu.cpp ****         break;
 976              		.loc 1 193 9 view .LVU209
 193:Core/Src/menu.cpp ****         break;
 977              		.loc 1 193 20 is_stmt 0 view .LVU210
 978 004a E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 193:Core/Src/menu.cpp ****         break;
 979              		.loc 1 193 18 view .LVU211
 980 004c A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 981 004e 5340     		eors	r3, r3, r2
 982 0050 A373     		strb	r3, [r4, #14]
 194:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 983              		.loc 1 194 9 is_stmt 1 view .LVU212
 984 0052 F3E7     		b	.L53
 985              	.L58:
 195:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 986              		.loc 1 195 5 view .LVU213
 196:Core/Src/menu.cpp ****         break;
 987              		.loc 1 196 9 view .LVU214
 196:Core/Src/menu.cpp ****         break;
 988              		.loc 1 196 20 is_stmt 0 view .LVU215
 989 0054 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 196:Core/Src/menu.cpp ****         break;
 990              		.loc 1 196 18 view .LVU216
 991 0056 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 992 0058 5340     		eors	r3, r3, r2
 993 005a A373     		strb	r3, [r4, #14]
 197:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 994              		.loc 1 197 9 is_stmt 1 view .LVU217
 995 005c EEE7     		b	.L53
 996              	.L56:
 198:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 997              		.loc 1 198 5 view .LVU218
 199:Core/Src/menu.cpp ****         break;
 998              		.loc 1 199 9 view .LVU219
 199:Core/Src/menu.cpp ****         break;
 999              		.loc 1 199 20 is_stmt 0 view .LVU220
 1000 005e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 199:Core/Src/menu.cpp ****         break;
 1001              		.loc 1 199 18 view .LVU221
 1002 0060 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1003 0062 5340     		eors	r3, r3, r2
 1004 0064 A373     		strb	r3, [r4, #14]
 200:Core/Src/menu.cpp **** 
 1005              		.loc 1 200 9 is_stmt 1 view .LVU222
 1006              		.loc 1 205 1 is_stmt 0 view .LVU223
 1007 0066 E9E7     		b	.L53
 1008              		.cfi_endproc
 1009              	.LFE146:
 1010              		.fnend
 1012              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 1013              		.align	1
 1014              		.global	_ZN4menu11menu_numberEc
ARM GAS  /tmp/cceDqxOT.s 			page 25


 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv4-sp-d16
 1020              	_ZN4menu11menu_numberEc:
 1021              		.fnstart
 1022              	.LVL59:
 1023              	.LFB147:
 206:Core/Src/menu.cpp **** void menu::menu_number(char num)
 207:Core/Src/menu.cpp **** {
 1024              		.loc 1 207 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		.loc 1 207 1 is_stmt 0 view .LVU225
 1029 0000 38B5     		push	{r3, r4, r5, lr}
 1030              		.save {r3, r4, r5, lr}
 1031              	.LCFI14:
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 3, -16
 1034              		.cfi_offset 4, -12
 1035              		.cfi_offset 5, -8
 1036              		.cfi_offset 14, -4
 1037 0002 0446     		mov	r4, r0
 1038 0004 0D46     		mov	r5, r1
 208:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1039              		.loc 1 208 5 is_stmt 1 view .LVU226
 1040              		.loc 1 208 28 is_stmt 0 view .LVU227
 1041 0006 0069     		ldr	r0, [r0, #16]
 1042              	.LVL60:
 1043              		.loc 1 208 28 view .LVU228
 1044 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1045              	.LVL61:
 1046              		.loc 1 208 5 view .LVU229
 1047 000c 48B9     		cbnz	r0, .L71
 1048              	.L66:
 209:Core/Src/menu.cpp ****     {
 210:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 211:Core/Src/menu.cpp ****     }
 212:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 1049              		.loc 1 212 5 is_stmt 1 view .LVU230
 1050              		.loc 1 212 8 is_stmt 0 view .LVU231
 1051 000e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 1052              		.loc 1 212 5 view .LVU232
 1053 0010 33B1     		cbz	r3, .L65
 213:Core/Src/menu.cpp ****     {
 214:Core/Src/menu.cpp ****         switch (menu_value)
 1054              		.loc 1 214 9 is_stmt 1 view .LVU233
 1055              		.loc 1 214 17 is_stmt 0 view .LVU234
 1056 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1057              		.loc 1 214 9 view .LVU235
 1058 0014 102A     		cmp	r2, #16
 1059 0016 0ED0     		beq	.L68
 1060 0018 182A     		cmp	r2, #24
 1061 001a 12D0     		beq	.L69
 1062 001c 082A     		cmp	r2, #8
 1063 001e 04D0     		beq	.L72
ARM GAS  /tmp/cceDqxOT.s 			page 26


 1064              	.L65:
 215:Core/Src/menu.cpp ****         {
 216:Core/Src/menu.cpp ****         case MENU_CH_IN:
 217:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 218:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 219:Core/Src/menu.cpp ****             break;
 220:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 221:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 222:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 223:Core/Src/menu.cpp ****             break;
 224:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 225:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 226:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 227:Core/Src/menu.cpp ****             break;
 228:Core/Src/menu.cpp **** 
 229:Core/Src/menu.cpp ****         default:
 230:Core/Src/menu.cpp ****             break;
 231:Core/Src/menu.cpp ****         }
 232:Core/Src/menu.cpp ****     }
 233:Core/Src/menu.cpp **** }
 1065              		.loc 1 233 1 view .LVU236
 1066 0020 38BD     		pop	{r3, r4, r5, pc}
 1067              	.LVL62:
 1068              	.L71:
 210:Core/Src/menu.cpp ****     }
 1069              		.loc 1 210 9 is_stmt 1 view .LVU237
 210:Core/Src/menu.cpp ****     }
 1070              		.loc 1 210 31 is_stmt 0 view .LVU238
 1071 0022 2069     		ldr	r0, [r4, #16]
 1072 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1073              	.LVL63:
 1074 0028 F1E7     		b	.L66
 1075              	.L72:
 216:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1076              		.loc 1 216 9 is_stmt 1 view .LVU239
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1077              		.loc 1 217 13 view .LVU240
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1078              		.loc 1 217 16 is_stmt 0 view .LVU241
 1079 002a A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 217:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1080              		.loc 1 217 26 view .LVU242
 1081 002c A118     		adds	r1, r4, r2
 1082 002e 4D71     		strb	r5, [r1, #5]
 218:Core/Src/menu.cpp ****             break;
 1083              		.loc 1 218 13 is_stmt 1 view .LVU243
 218:Core/Src/menu.cpp ****             break;
 1084              		.loc 1 218 22 is_stmt 0 view .LVU244
 1085 0030 5340     		eors	r3, r3, r2
 1086 0032 A373     		strb	r3, [r4, #14]
 219:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1087              		.loc 1 219 13 is_stmt 1 view .LVU245
 1088 0034 F4E7     		b	.L65
 1089              	.L68:
 220:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1090              		.loc 1 220 9 view .LVU246
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
ARM GAS  /tmp/cceDqxOT.s 			page 27


 1091              		.loc 1 221 13 view .LVU247
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1092              		.loc 1 221 16 is_stmt 0 view .LVU248
 1093 0036 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 221:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1094              		.loc 1 221 26 view .LVU249
 1095 0038 A118     		adds	r1, r4, r2
 1096 003a 8D70     		strb	r5, [r1, #2]
 222:Core/Src/menu.cpp ****             break;
 1097              		.loc 1 222 13 is_stmt 1 view .LVU250
 222:Core/Src/menu.cpp ****             break;
 1098              		.loc 1 222 22 is_stmt 0 view .LVU251
 1099 003c 5340     		eors	r3, r3, r2
 1100 003e A373     		strb	r3, [r4, #14]
 223:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1101              		.loc 1 223 13 is_stmt 1 view .LVU252
 1102 0040 EEE7     		b	.L65
 1103              	.L69:
 224:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1104              		.loc 1 224 9 view .LVU253
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1105              		.loc 1 225 13 view .LVU254
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1106              		.loc 1 225 17 is_stmt 0 view .LVU255
 1107 0042 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 225:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1108              		.loc 1 225 27 view .LVU256
 1109 0044 A118     		adds	r1, r4, r2
 1110 0046 CD72     		strb	r5, [r1, #11]
 226:Core/Src/menu.cpp ****             break;
 1111              		.loc 1 226 13 is_stmt 1 view .LVU257
 226:Core/Src/menu.cpp ****             break;
 1112              		.loc 1 226 22 is_stmt 0 view .LVU258
 1113 0048 5340     		eors	r3, r3, r2
 1114 004a A373     		strb	r3, [r4, #14]
 227:Core/Src/menu.cpp **** 
 1115              		.loc 1 227 13 is_stmt 1 view .LVU259
 1116              		.loc 1 233 1 is_stmt 0 view .LVU260
 1117 004c E8E7     		b	.L65
 1118              		.cfi_endproc
 1119              	.LFE147:
 1120              		.fnend
 1122              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1123              		.align	1
 1124              		.global	_ZN4menu7menu_upEv
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	_ZN4menu7menu_upEv:
 1131              		.fnstart
 1132              	.LVL64:
 1133              	.LFB148:
 234:Core/Src/menu.cpp **** void menu::menu_up()
 235:Core/Src/menu.cpp **** {
 1134              		.loc 1 235 1 is_stmt 1 view -0
 1135              		.cfi_startproc
ARM GAS  /tmp/cceDqxOT.s 			page 28


 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		.loc 1 235 1 is_stmt 0 view .LVU262
 1139 0000 10B5     		push	{r4, lr}
 1140              		.save {r4, lr}
 1141              	.LCFI15:
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 4, -8
 1144              		.cfi_offset 14, -4
 1145 0002 0446     		mov	r4, r0
 236:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1146              		.loc 1 236 5 is_stmt 1 view .LVU263
 1147              		.loc 1 236 28 is_stmt 0 view .LVU264
 1148 0004 0069     		ldr	r0, [r0, #16]
 1149              	.LVL65:
 1150              		.loc 1 236 28 view .LVU265
 1151 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1152              	.LVL66:
 1153              		.loc 1 236 5 view .LVU266
 1154 000a 50B9     		cbnz	r0, .L81
 1155              	.L74:
 237:Core/Src/menu.cpp ****     {
 238:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 239:Core/Src/menu.cpp ****     }
 240:Core/Src/menu.cpp ****     switch (menu_value)
 1156              		.loc 1 240 5 is_stmt 1 view .LVU267
 1157              		.loc 1 240 13 is_stmt 0 view .LVU268
 1158 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1159              		.loc 1 240 5 view .LVU269
 1160 000e 082B     		cmp	r3, #8
 1161 0010 0BD0     		beq	.L75
 1162 0012 102B     		cmp	r3, #16
 1163 0014 0FD0     		beq	.L76
 241:Core/Src/menu.cpp ****     {
 242:Core/Src/menu.cpp ****     case MENU_CH_IN:
 243:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 244:Core/Src/menu.cpp ****         {
 245:Core/Src/menu.cpp ****             chVal++;
 246:Core/Src/menu.cpp ****         }
 247:Core/Src/menu.cpp ****         break;
 248:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 249:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 250:Core/Src/menu.cpp ****         {
 251:Core/Src/menu.cpp ****             sqVal++;
 252:Core/Src/menu.cpp ****         }
 253:Core/Src/menu.cpp ****         break;   
 254:Core/Src/menu.cpp ****     default:
 1164              		.loc 1 254 5 is_stmt 1 view .LVU270
 255:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1165              		.loc 1 255 9 view .LVU271
 1166              		.loc 1 255 12 is_stmt 0 view .LVU272
 1167 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1168              		.loc 1 255 9 view .LVU273
 1169 0018 072B     		cmp	r3, #7
 1170 001a 0BD8     		bhi	.L73
 256:Core/Src/menu.cpp ****         {
 257:Core/Src/menu.cpp ****             volVal++;
ARM GAS  /tmp/cceDqxOT.s 			page 29


 1171              		.loc 1 257 13 is_stmt 1 view .LVU274
 1172              		.loc 1 257 19 is_stmt 0 view .LVU275
 1173 001c 0133     		adds	r3, r3, #1
 1174 001e A372     		strb	r3, [r4, #10]
 258:Core/Src/menu.cpp ****         }
 259:Core/Src/menu.cpp ****         break;
 260:Core/Src/menu.cpp ****     }
 261:Core/Src/menu.cpp **** }
 1175              		.loc 1 261 1 view .LVU276
 1176 0020 08E0     		b	.L73
 1177              	.L81:
 238:Core/Src/menu.cpp ****     }
 1178              		.loc 1 238 9 is_stmt 1 view .LVU277
 238:Core/Src/menu.cpp ****     }
 1179              		.loc 1 238 31 is_stmt 0 view .LVU278
 1180 0022 2069     		ldr	r0, [r4, #16]
 1181 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1182              	.LVL67:
 1183 0028 F0E7     		b	.L74
 1184              	.L75:
 242:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1185              		.loc 1 242 5 is_stmt 1 view .LVU279
 243:Core/Src/menu.cpp ****         {
 1186              		.loc 1 243 9 view .LVU280
 243:Core/Src/menu.cpp ****         {
 1187              		.loc 1 243 12 is_stmt 0 view .LVU281
 1188 002a E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 243:Core/Src/menu.cpp ****         {
 1189              		.loc 1 243 9 view .LVU282
 1190 002c 152B     		cmp	r3, #21
 1191 002e 01D8     		bhi	.L73
 245:Core/Src/menu.cpp ****         }
 1192              		.loc 1 245 13 is_stmt 1 view .LVU283
 245:Core/Src/menu.cpp ****         }
 1193              		.loc 1 245 18 is_stmt 0 view .LVU284
 1194 0030 0133     		adds	r3, r3, #1
 1195 0032 E371     		strb	r3, [r4, #7]
 1196              	.L73:
 1197              		.loc 1 261 1 view .LVU285
 1198 0034 10BD     		pop	{r4, pc}
 1199              	.LVL68:
 1200              	.L76:
 248:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1201              		.loc 1 248 5 is_stmt 1 view .LVU286
 249:Core/Src/menu.cpp ****         {
 1202              		.loc 1 249 9 view .LVU287
 249:Core/Src/menu.cpp ****         {
 1203              		.loc 1 249 12 is_stmt 0 view .LVU288
 1204 0036 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 249:Core/Src/menu.cpp ****         {
 1205              		.loc 1 249 9 view .LVU289
 1206 0038 082B     		cmp	r3, #8
 1207 003a FBD8     		bhi	.L73
 251:Core/Src/menu.cpp ****         }
 1208              		.loc 1 251 13 is_stmt 1 view .LVU290
 251:Core/Src/menu.cpp ****         }
 1209              		.loc 1 251 18 is_stmt 0 view .LVU291
ARM GAS  /tmp/cceDqxOT.s 			page 30


 1210 003c 0133     		adds	r3, r3, #1
 1211 003e 2371     		strb	r3, [r4, #4]
 1212 0040 F8E7     		b	.L73
 1213              		.cfi_endproc
 1214              	.LFE148:
 1215              		.fnend
 1217              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1218              		.align	1
 1219              		.global	_ZN4menu9menu_downEv
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu fpv4-sp-d16
 1225              	_ZN4menu9menu_downEv:
 1226              		.fnstart
 1227              	.LVL69:
 1228              	.LFB149:
 262:Core/Src/menu.cpp **** 
 263:Core/Src/menu.cpp **** void menu::menu_down()
 264:Core/Src/menu.cpp **** {
 1229              		.loc 1 264 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		.loc 1 264 1 is_stmt 0 view .LVU293
 1234 0000 10B5     		push	{r4, lr}
 1235              		.save {r4, lr}
 1236              	.LCFI16:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 4, -8
 1239              		.cfi_offset 14, -4
 1240 0002 0446     		mov	r4, r0
 265:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1241              		.loc 1 265 5 is_stmt 1 view .LVU294
 1242              		.loc 1 265 28 is_stmt 0 view .LVU295
 1243 0004 0069     		ldr	r0, [r0, #16]
 1244              	.LVL70:
 1245              		.loc 1 265 28 view .LVU296
 1246 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1247              	.LVL71:
 1248              		.loc 1 265 5 view .LVU297
 1249 000a 48B9     		cbnz	r0, .L90
 1250              	.L83:
 266:Core/Src/menu.cpp ****     {
 267:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 268:Core/Src/menu.cpp ****     }
 269:Core/Src/menu.cpp ****     switch (menu_value)
 1251              		.loc 1 269 5 is_stmt 1 view .LVU298
 1252              		.loc 1 269 13 is_stmt 0 view .LVU299
 1253 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1254              		.loc 1 269 5 view .LVU300
 1255 000e 082B     		cmp	r3, #8
 1256 0010 0AD0     		beq	.L84
 1257 0012 102B     		cmp	r3, #16
 1258 0014 0DD0     		beq	.L85
 270:Core/Src/menu.cpp ****     {
 271:Core/Src/menu.cpp ****     case MENU_CH_IN:
ARM GAS  /tmp/cceDqxOT.s 			page 31


 272:Core/Src/menu.cpp ****         if(chVal > 0)
 273:Core/Src/menu.cpp ****         {
 274:Core/Src/menu.cpp ****         chVal--;
 275:Core/Src/menu.cpp ****         }
 276:Core/Src/menu.cpp ****         break;
 277:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 278:Core/Src/menu.cpp ****         if(sqVal > 0)
 279:Core/Src/menu.cpp ****         {
 280:Core/Src/menu.cpp ****         sqVal--;
 281:Core/Src/menu.cpp ****         }
 282:Core/Src/menu.cpp ****         break;   
 283:Core/Src/menu.cpp ****     default:
 1259              		.loc 1 283 5 is_stmt 1 view .LVU301
 284:Core/Src/menu.cpp ****         if(volVal > 0)
 1260              		.loc 1 284 9 view .LVU302
 1261              		.loc 1 284 12 is_stmt 0 view .LVU303
 1262 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1263              		.loc 1 284 9 view .LVU304
 1264 0018 53B1     		cbz	r3, .L82
 285:Core/Src/menu.cpp ****         {
 286:Core/Src/menu.cpp ****             volVal--;
 1265              		.loc 1 286 13 is_stmt 1 view .LVU305
 1266              		.loc 1 286 19 is_stmt 0 view .LVU306
 1267 001a 013B     		subs	r3, r3, #1
 1268 001c A372     		strb	r3, [r4, #10]
 287:Core/Src/menu.cpp ****         }
 288:Core/Src/menu.cpp ****         break;
 289:Core/Src/menu.cpp ****     }
 290:Core/Src/menu.cpp **** 
 291:Core/Src/menu.cpp **** }
 1269              		.loc 1 291 1 view .LVU307
 1270 001e 07E0     		b	.L82
 1271              	.L90:
 267:Core/Src/menu.cpp ****     }
 1272              		.loc 1 267 9 is_stmt 1 view .LVU308
 267:Core/Src/menu.cpp ****     }
 1273              		.loc 1 267 31 is_stmt 0 view .LVU309
 1274 0020 2069     		ldr	r0, [r4, #16]
 1275 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1276              	.LVL72:
 1277 0026 F1E7     		b	.L83
 1278              	.L84:
 271:Core/Src/menu.cpp ****         if(chVal > 0)
 1279              		.loc 1 271 5 is_stmt 1 view .LVU310
 272:Core/Src/menu.cpp ****         {
 1280              		.loc 1 272 9 view .LVU311
 272:Core/Src/menu.cpp ****         {
 1281              		.loc 1 272 12 is_stmt 0 view .LVU312
 1282 0028 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 272:Core/Src/menu.cpp ****         {
 1283              		.loc 1 272 9 view .LVU313
 1284 002a 0BB1     		cbz	r3, .L82
 274:Core/Src/menu.cpp ****         }
 1285              		.loc 1 274 9 is_stmt 1 view .LVU314
 274:Core/Src/menu.cpp ****         }
 1286              		.loc 1 274 14 is_stmt 0 view .LVU315
 1287 002c 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cceDqxOT.s 			page 32


 1288 002e E371     		strb	r3, [r4, #7]
 1289              	.L82:
 1290              		.loc 1 291 1 view .LVU316
 1291 0030 10BD     		pop	{r4, pc}
 1292              	.LVL73:
 1293              	.L85:
 277:Core/Src/menu.cpp ****         if(sqVal > 0)
 1294              		.loc 1 277 5 is_stmt 1 view .LVU317
 278:Core/Src/menu.cpp ****         {
 1295              		.loc 1 278 9 view .LVU318
 278:Core/Src/menu.cpp ****         {
 1296              		.loc 1 278 12 is_stmt 0 view .LVU319
 1297 0032 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 278:Core/Src/menu.cpp ****         {
 1298              		.loc 1 278 9 view .LVU320
 1299 0034 002B     		cmp	r3, #0
 1300 0036 FBD0     		beq	.L82
 280:Core/Src/menu.cpp ****         }
 1301              		.loc 1 280 9 is_stmt 1 view .LVU321
 280:Core/Src/menu.cpp ****         }
 1302              		.loc 1 280 14 is_stmt 0 view .LVU322
 1303 0038 013B     		subs	r3, r3, #1
 1304 003a 2371     		strb	r3, [r4, #4]
 1305 003c F8E7     		b	.L82
 1306              		.cfi_endproc
 1307              	.LFE149:
 1308              		.fnend
 1310              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1311              		.align	1
 1312              		.global	_ZN4menu13keyboard_pollEv
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv4-sp-d16
 1318              	_ZN4menu13keyboard_pollEv:
 1319              		.fnstart
 1320              	.LVL74:
 1321              	.LFB150:
 292:Core/Src/menu.cpp **** 
 293:Core/Src/menu.cpp **** 
 294:Core/Src/menu.cpp **** void menu::keyboard_poll()
 295:Core/Src/menu.cpp **** {
 1322              		.loc 1 295 1 is_stmt 1 view -0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		.loc 1 295 1 is_stmt 0 view .LVU324
 1327 0000 10B5     		push	{r4, lr}
 1328              		.save {r4, lr}
 1329              	.LCFI17:
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 4, -8
 1332              		.cfi_offset 14, -4
 1333 0002 0446     		mov	r4, r0
 296:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 1334              		.loc 1 296 5 is_stmt 1 view .LVU325
 1335              	.LVL75:
ARM GAS  /tmp/cceDqxOT.s 			page 33


 297:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 298:Core/Src/menu.cpp **** 
 299:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1336              		.loc 1 299 5 view .LVU326
 1337              		.loc 1 299 15 is_stmt 0 view .LVU327
 1338 0004 534B     		ldr	r3, .L113
 1339 0006 5A69     		ldr	r2, [r3, #20]
 1340 0008 42F40062 		orr	r2, r2, #2048
 1341 000c 5A61     		str	r2, [r3, #20]
 300:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 301:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1342              		.loc 1 301 5 is_stmt 1 view .LVU328
 1343              		.loc 1 301 20 is_stmt 0 view .LVU329
 1344 000e 1B69     		ldr	r3, [r3, #16]
 1345              		.loc 1 301 23 view .LVU330
 1346 0010 03F40743 		and	r3, r3, #34560
 1347              		.loc 1 301 5 view .LVU331
 1348 0014 B3F5806F 		cmp	r3, #1024
 1349 0018 2AD0     		beq	.L92
 1350 001a 09D8     		bhi	.L93
 1351 001c B3F5807F 		cmp	r3, #256
 1352 0020 2AD0     		beq	.L94
 1353 0022 B3F5007F 		cmp	r3, #512
 1354 0026 08D1     		bne	.L96
 302:Core/Src/menu.cpp ****     {
 303:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 304:Core/Src/menu.cpp ****             menu_next();//R
 305:Core/Src/menu.cpp ****             break;
 306:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 307:Core/Src/menu.cpp ****             menu_number('6');
 308:Core/Src/menu.cpp ****             break;
 309:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1355              		.loc 1 309 9 is_stmt 1 view .LVU332
 310:Core/Src/menu.cpp ****             menu_number('5');
 1356              		.loc 1 310 13 view .LVU333
 1357              		.loc 1 310 24 is_stmt 0 view .LVU334
 1358 0028 3521     		movs	r1, #53
 1359 002a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1360              	.LVL76:
 311:Core/Src/menu.cpp ****             break;
 1361              		.loc 1 311 13 is_stmt 1 view .LVU335
 1362 002e 04E0     		b	.L96
 1363              	.LVL77:
 1364              	.L93:
 301:Core/Src/menu.cpp ****     {
 1365              		.loc 1 301 5 is_stmt 0 view .LVU336
 1366 0030 B3F5004F 		cmp	r3, #32768
 1367 0034 01D1     		bne	.L96
 303:Core/Src/menu.cpp ****             menu_next();//R
 1368              		.loc 1 303 9 is_stmt 1 view .LVU337
 304:Core/Src/menu.cpp ****             break;
 1369              		.loc 1 304 13 view .LVU338
 304:Core/Src/menu.cpp ****             break;
 1370              		.loc 1 304 22 is_stmt 0 view .LVU339
 1371 0036 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1372              	.LVL78:
 305:Core/Src/menu.cpp ****         case GPIO_PIN_10:
ARM GAS  /tmp/cceDqxOT.s 			page 34


 1373              		.loc 1 305 13 is_stmt 1 view .LVU340
 1374              	.L96:
 312:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 313:Core/Src/menu.cpp ****             menu_number('4');
 314:Core/Src/menu.cpp ****             break;
 315:Core/Src/menu.cpp ****         default:
 316:Core/Src/menu.cpp ****             break;
 317:Core/Src/menu.cpp ****     }
 318:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1375              		.loc 1 318 5 view .LVU341
 1376              		.loc 1 318 15 is_stmt 0 view .LVU342
 1377 003a 464B     		ldr	r3, .L113
 1378 003c 5A69     		ldr	r2, [r3, #20]
 1379 003e 22F40062 		bic	r2, r2, #2048
 1380 0042 5A61     		str	r2, [r3, #20]
 319:Core/Src/menu.cpp **** 
 320:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 1381              		.loc 1 320 5 is_stmt 1 view .LVU343
 1382              	.LVL79:
 321:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1383              		.loc 1 321 5 view .LVU344
 1384              		.loc 1 321 15 is_stmt 0 view .LVU345
 1385 0044 5A69     		ldr	r2, [r3, #20]
 1386 0046 42F48052 		orr	r2, r2, #4096
 1387 004a 5A61     		str	r2, [r3, #20]
 322:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 323:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1388              		.loc 1 323 5 is_stmt 1 view .LVU346
 1389              		.loc 1 323 20 is_stmt 0 view .LVU347
 1390 004c 1B69     		ldr	r3, [r3, #16]
 1391              		.loc 1 323 23 view .LVU348
 1392 004e 03F40743 		and	r3, r3, #34560
 1393              		.loc 1 323 5 view .LVU349
 1394 0052 B3F5806F 		cmp	r3, #1024
 1395 0056 34D0     		beq	.L97
 1396 0058 12D8     		bhi	.L98
 1397 005a B3F5807F 		cmp	r3, #256
 1398 005e 35D0     		beq	.L99
 1399 0060 B3F5007F 		cmp	r3, #512
 1400 0064 12D1     		bne	.L101
 324:Core/Src/menu.cpp ****     {
 325:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 326:Core/Src/menu.cpp ****             menu_prev();//L
 327:Core/Src/menu.cpp ****             break;
 328:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 329:Core/Src/menu.cpp ****             menu_number('8');
 330:Core/Src/menu.cpp ****             break;
 331:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1401              		.loc 1 331 9 is_stmt 1 view .LVU350
 332:Core/Src/menu.cpp ****             menu_number('7');
 1402              		.loc 1 332 13 view .LVU351
 1403              		.loc 1 332 24 is_stmt 0 view .LVU352
 1404 0066 3721     		movs	r1, #55
 1405 0068 2046     		mov	r0, r4
 1406 006a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1407              	.LVL80:
 333:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cceDqxOT.s 			page 35


 1408              		.loc 1 333 13 is_stmt 1 view .LVU353
 1409 006e 0DE0     		b	.L101
 1410              	.LVL81:
 1411              	.L92:
 306:Core/Src/menu.cpp ****             menu_number('6');
 1412              		.loc 1 306 9 view .LVU354
 307:Core/Src/menu.cpp ****             break;
 1413              		.loc 1 307 13 view .LVU355
 307:Core/Src/menu.cpp ****             break;
 1414              		.loc 1 307 24 is_stmt 0 view .LVU356
 1415 0070 3621     		movs	r1, #54
 1416 0072 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1417              	.LVL82:
 308:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1418              		.loc 1 308 13 is_stmt 1 view .LVU357
 1419 0076 E0E7     		b	.L96
 1420              	.LVL83:
 1421              	.L94:
 312:Core/Src/menu.cpp ****             menu_number('4');
 1422              		.loc 1 312 9 view .LVU358
 313:Core/Src/menu.cpp ****             break;
 1423              		.loc 1 313 13 view .LVU359
 313:Core/Src/menu.cpp ****             break;
 1424              		.loc 1 313 24 is_stmt 0 view .LVU360
 1425 0078 3421     		movs	r1, #52
 1426 007a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1427              	.LVL84:
 314:Core/Src/menu.cpp ****         default:
 1428              		.loc 1 314 13 is_stmt 1 view .LVU361
 1429 007e DCE7     		b	.L96
 1430              	.LVL85:
 1431              	.L98:
 323:Core/Src/menu.cpp ****     {
 1432              		.loc 1 323 5 is_stmt 0 view .LVU362
 1433 0080 B3F5004F 		cmp	r3, #32768
 1434 0084 02D1     		bne	.L101
 325:Core/Src/menu.cpp ****             menu_prev();//L
 1435              		.loc 1 325 9 is_stmt 1 view .LVU363
 326:Core/Src/menu.cpp ****             break;
 1436              		.loc 1 326 13 view .LVU364
 326:Core/Src/menu.cpp ****             break;
 1437              		.loc 1 326 22 is_stmt 0 view .LVU365
 1438 0086 2046     		mov	r0, r4
 1439 0088 FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1440              	.LVL86:
 327:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1441              		.loc 1 327 13 is_stmt 1 view .LVU366
 1442              	.L101:
 334:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 335:Core/Src/menu.cpp ****             menu_number('9');
 336:Core/Src/menu.cpp ****             break;
 337:Core/Src/menu.cpp ****         default:
 338:Core/Src/menu.cpp ****             break;
 339:Core/Src/menu.cpp **** 
 340:Core/Src/menu.cpp ****     }
 341:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1443              		.loc 1 341 5 view .LVU367
ARM GAS  /tmp/cceDqxOT.s 			page 36


 1444              		.loc 1 341 15 is_stmt 0 view .LVU368
 1445 008c 314B     		ldr	r3, .L113
 1446 008e 5A69     		ldr	r2, [r3, #20]
 1447 0090 22F48052 		bic	r2, r2, #4096
 1448 0094 5A61     		str	r2, [r3, #20]
 342:Core/Src/menu.cpp **** 
 343:Core/Src/menu.cpp **** 
 344:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 1449              		.loc 1 344 5 is_stmt 1 view .LVU369
 1450              	.LVL87:
 345:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1451              		.loc 1 345 5 view .LVU370
 1452              		.loc 1 345 15 is_stmt 0 view .LVU371
 1453 0096 5A69     		ldr	r2, [r3, #20]
 1454 0098 42F40052 		orr	r2, r2, #8192
 1455 009c 5A61     		str	r2, [r3, #20]
 346:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 347:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1456              		.loc 1 347 5 is_stmt 1 view .LVU372
 1457              		.loc 1 347 20 is_stmt 0 view .LVU373
 1458 009e 1B69     		ldr	r3, [r3, #16]
 1459              		.loc 1 347 23 view .LVU374
 1460 00a0 03F40743 		and	r3, r3, #34560
 1461              		.loc 1 347 5 view .LVU375
 1462 00a4 B3F5806F 		cmp	r3, #1024
 1463 00a8 36D0     		beq	.L102
 1464 00aa 14D8     		bhi	.L103
 1465 00ac B3F5807F 		cmp	r3, #256
 1466 00b0 36D0     		beq	.L104
 1467 00b2 B3F5007F 		cmp	r3, #512
 1468 00b6 14D1     		bne	.L106
 348:Core/Src/menu.cpp ****     {
 349:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 350:Core/Src/menu.cpp ****             menu_down();//D
 351:Core/Src/menu.cpp ****             break;
 352:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 353:Core/Src/menu.cpp ****             menu_menu();//M
 354:Core/Src/menu.cpp ****             break;
 355:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1469              		.loc 1 355 9 is_stmt 1 view .LVU376
 356:Core/Src/menu.cpp ****             menu_number('0');
 1470              		.loc 1 356 13 view .LVU377
 1471              		.loc 1 356 24 is_stmt 0 view .LVU378
 1472 00b8 3021     		movs	r1, #48
 1473 00ba 2046     		mov	r0, r4
 1474 00bc FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1475              	.LVL88:
 357:Core/Src/menu.cpp ****             break;
 1476              		.loc 1 357 13 is_stmt 1 view .LVU379
 1477 00c0 0FE0     		b	.L106
 1478              	.LVL89:
 1479              	.L97:
 328:Core/Src/menu.cpp ****             menu_number('8');
 1480              		.loc 1 328 9 view .LVU380
 329:Core/Src/menu.cpp ****             break;
 1481              		.loc 1 329 13 view .LVU381
 329:Core/Src/menu.cpp ****             break;
ARM GAS  /tmp/cceDqxOT.s 			page 37


 1482              		.loc 1 329 24 is_stmt 0 view .LVU382
 1483 00c2 3821     		movs	r1, #56
 1484 00c4 2046     		mov	r0, r4
 1485 00c6 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1486              	.LVL90:
 330:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1487              		.loc 1 330 13 is_stmt 1 view .LVU383
 1488 00ca DFE7     		b	.L101
 1489              	.L99:
 334:Core/Src/menu.cpp ****             menu_number('9');
 1490              		.loc 1 334 9 view .LVU384
 335:Core/Src/menu.cpp ****             break;
 1491              		.loc 1 335 13 view .LVU385
 335:Core/Src/menu.cpp ****             break;
 1492              		.loc 1 335 24 is_stmt 0 view .LVU386
 1493 00cc 3921     		movs	r1, #57
 1494 00ce 2046     		mov	r0, r4
 1495 00d0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1496              	.LVL91:
 336:Core/Src/menu.cpp ****         default:
 1497              		.loc 1 336 13 is_stmt 1 view .LVU387
 1498 00d4 DAE7     		b	.L101
 1499              	.LVL92:
 1500              	.L103:
 347:Core/Src/menu.cpp ****     {
 1501              		.loc 1 347 5 is_stmt 0 view .LVU388
 1502 00d6 B3F5004F 		cmp	r3, #32768
 1503 00da 02D1     		bne	.L106
 349:Core/Src/menu.cpp ****             menu_down();//D
 1504              		.loc 1 349 9 is_stmt 1 view .LVU389
 350:Core/Src/menu.cpp ****             break;
 1505              		.loc 1 350 13 view .LVU390
 350:Core/Src/menu.cpp ****             break;
 1506              		.loc 1 350 22 is_stmt 0 view .LVU391
 1507 00dc 2046     		mov	r0, r4
 1508 00de FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1509              	.LVL93:
 351:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1510              		.loc 1 351 13 is_stmt 1 view .LVU392
 1511              	.L106:
 358:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 359:Core/Src/menu.cpp ****             menu_back();//B
 360:Core/Src/menu.cpp ****             break;
 361:Core/Src/menu.cpp ****         default:
 362:Core/Src/menu.cpp ****             break;
 363:Core/Src/menu.cpp **** 
 364:Core/Src/menu.cpp ****     }
 365:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1512              		.loc 1 365 5 view .LVU393
 1513              		.loc 1 365 15 is_stmt 0 view .LVU394
 1514 00e2 1C4B     		ldr	r3, .L113
 1515 00e4 5A69     		ldr	r2, [r3, #20]
 1516 00e6 22F40052 		bic	r2, r2, #8192
 1517 00ea 5A61     		str	r2, [r3, #20]
 366:Core/Src/menu.cpp **** 
 367:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 1518              		.loc 1 367 5 is_stmt 1 view .LVU395
ARM GAS  /tmp/cceDqxOT.s 			page 38


 1519              	.LVL94:
 368:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1520              		.loc 1 368 5 view .LVU396
 1521              		.loc 1 368 15 is_stmt 0 view .LVU397
 1522 00ec 5A69     		ldr	r2, [r3, #20]
 1523 00ee 42F48042 		orr	r2, r2, #16384
 1524 00f2 5A61     		str	r2, [r3, #20]
 369:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 370:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1525              		.loc 1 370 5 is_stmt 1 view .LVU398
 1526              		.loc 1 370 20 is_stmt 0 view .LVU399
 1527 00f4 1B69     		ldr	r3, [r3, #16]
 1528              		.loc 1 370 23 view .LVU400
 1529 00f6 03F40743 		and	r3, r3, #34560
 1530              		.loc 1 370 5 view .LVU401
 1531 00fa B3F5806F 		cmp	r3, #1024
 1532 00fe 1FD0     		beq	.L107
 1533 0100 12D8     		bhi	.L108
 1534 0102 B3F5807F 		cmp	r3, #256
 1535 0106 20D0     		beq	.L109
 1536 0108 B3F5007F 		cmp	r3, #512
 1537 010c 12D1     		bne	.L111
 371:Core/Src/menu.cpp ****     {
 372:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 373:Core/Src/menu.cpp ****             menu_up();//U
 374:Core/Src/menu.cpp ****             break;
 375:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 376:Core/Src/menu.cpp ****             menu_number('3');
 377:Core/Src/menu.cpp ****             break;
 378:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1538              		.loc 1 378 9 is_stmt 1 view .LVU402
 379:Core/Src/menu.cpp ****             menu_number('2');
 1539              		.loc 1 379 13 view .LVU403
 1540              		.loc 1 379 24 is_stmt 0 view .LVU404
 1541 010e 3221     		movs	r1, #50
 1542 0110 2046     		mov	r0, r4
 1543 0112 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1544              	.LVL95:
 380:Core/Src/menu.cpp ****             break;
 1545              		.loc 1 380 13 is_stmt 1 view .LVU405
 1546 0116 0DE0     		b	.L111
 1547              	.LVL96:
 1548              	.L102:
 352:Core/Src/menu.cpp ****             menu_menu();//M
 1549              		.loc 1 352 9 view .LVU406
 353:Core/Src/menu.cpp ****             break;
 1550              		.loc 1 353 13 view .LVU407
 353:Core/Src/menu.cpp ****             break;
 1551              		.loc 1 353 22 is_stmt 0 view .LVU408
 1552 0118 2046     		mov	r0, r4
 1553 011a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1554              	.LVL97:
 354:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1555              		.loc 1 354 13 is_stmt 1 view .LVU409
 1556 011e E0E7     		b	.L106
 1557              	.L104:
 358:Core/Src/menu.cpp ****             menu_back();//B
ARM GAS  /tmp/cceDqxOT.s 			page 39


 1558              		.loc 1 358 9 view .LVU410
=======
 911              		.loc 1 185 20 is_stmt 0 view .LVU204
 912 005e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 185:Core/Src/menu.cpp ****         break;
 913              		.loc 1 185 18 view .LVU205
 914 0060 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 915 0062 5340     		eors	r3, r3, r2
 916 0064 A373     		strb	r3, [r4, #14]
 186:Core/Src/menu.cpp **** 
 917              		.loc 1 186 9 is_stmt 1 view .LVU206
 918              		.loc 1 191 1 is_stmt 0 view .LVU207
 919 0066 E9E7     		b	.L47
 920              		.cfi_endproc
 921              	.LFE146:
 922              		.fnend
 924              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 925              		.align	1
 926              		.global	_ZN4menu11menu_numberEc
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN4menu11menu_numberEc:
 933              		.fnstart
 934              	.LVL57:
 935              	.LFB147:
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 193:Core/Src/menu.cpp **** {
 936              		.loc 1 193 1 is_stmt 1 view -0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccMEB0iu.s 			page 23


 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		.loc 1 193 1 is_stmt 0 view .LVU209
 941 0000 38B5     		push	{r3, r4, r5, lr}
 942              		.save {r3, r4, r5, lr}
 943              	.LCFI11:
 944              		.cfi_def_cfa_offset 16
 945              		.cfi_offset 3, -16
 946              		.cfi_offset 4, -12
 947              		.cfi_offset 5, -8
 948              		.cfi_offset 14, -4
 949 0002 0446     		mov	r4, r0
 950 0004 0D46     		mov	r5, r1
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 951              		.loc 1 194 5 is_stmt 1 view .LVU210
 952              		.loc 1 194 28 is_stmt 0 view .LVU211
 953 0006 0069     		ldr	r0, [r0, #16]
 954              	.LVL58:
 955              		.loc 1 194 28 view .LVU212
 956 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 957              	.LVL59:
 958              		.loc 1 194 5 view .LVU213
 959 000c 48B9     		cbnz	r0, .L65
 960              	.L60:
 195:Core/Src/menu.cpp ****     {
 196:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 197:Core/Src/menu.cpp ****     }
 198:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 961              		.loc 1 198 5 is_stmt 1 view .LVU214
 962              		.loc 1 198 8 is_stmt 0 view .LVU215
 963 000e E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 964              		.loc 1 198 5 view .LVU216
 965 0010 33B1     		cbz	r3, .L59
 199:Core/Src/menu.cpp ****     {
 200:Core/Src/menu.cpp ****         switch (menu_value)
 966              		.loc 1 200 9 is_stmt 1 view .LVU217
 967              		.loc 1 200 17 is_stmt 0 view .LVU218
 968 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 969              		.loc 1 200 9 view .LVU219
 970 0014 102A     		cmp	r2, #16
 971 0016 0ED0     		beq	.L62
 972 0018 182A     		cmp	r2, #24
 973 001a 12D0     		beq	.L63
 974 001c 082A     		cmp	r2, #8
 975 001e 04D0     		beq	.L66
 976              	.L59:
 201:Core/Src/menu.cpp ****         {
 202:Core/Src/menu.cpp ****         case MENU_CH_IN:
 203:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 205:Core/Src/menu.cpp ****             break;
 206:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 207:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 209:Core/Src/menu.cpp ****             break;
 210:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 211:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
ARM GAS  /tmp/ccMEB0iu.s 			page 24


 213:Core/Src/menu.cpp ****             break;
 214:Core/Src/menu.cpp **** 
 215:Core/Src/menu.cpp ****         default:
 216:Core/Src/menu.cpp ****             break;
 217:Core/Src/menu.cpp ****         }
 218:Core/Src/menu.cpp ****     }
 219:Core/Src/menu.cpp **** }
 977              		.loc 1 219 1 view .LVU220
 978 0020 38BD     		pop	{r3, r4, r5, pc}
 979              	.LVL60:
 980              	.L65:
 196:Core/Src/menu.cpp ****     }
 981              		.loc 1 196 9 is_stmt 1 view .LVU221
 196:Core/Src/menu.cpp ****     }
 982              		.loc 1 196 31 is_stmt 0 view .LVU222
 983 0022 2069     		ldr	r0, [r4, #16]
 984 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 985              	.LVL61:
 986 0028 F1E7     		b	.L60
 987              	.L66:
 202:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 988              		.loc 1 202 9 is_stmt 1 view .LVU223
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 989              		.loc 1 203 13 view .LVU224
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 990              		.loc 1 203 16 is_stmt 0 view .LVU225
 991 002a A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 203:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 992              		.loc 1 203 26 view .LVU226
 993 002c A118     		adds	r1, r4, r2
 994 002e 4D71     		strb	r5, [r1, #5]
 204:Core/Src/menu.cpp ****             break;
 995              		.loc 1 204 13 is_stmt 1 view .LVU227
 204:Core/Src/menu.cpp ****             break;
 996              		.loc 1 204 22 is_stmt 0 view .LVU228
 997 0030 5340     		eors	r3, r3, r2
 998 0032 A373     		strb	r3, [r4, #14]
 205:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 999              		.loc 1 205 13 is_stmt 1 view .LVU229
 1000 0034 F4E7     		b	.L59
 1001              	.L62:
 206:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1002              		.loc 1 206 9 view .LVU230
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1003              		.loc 1 207 13 view .LVU231
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1004              		.loc 1 207 16 is_stmt 0 view .LVU232
 1005 0036 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 207:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1006              		.loc 1 207 26 view .LVU233
 1007 0038 A118     		adds	r1, r4, r2
 1008 003a 8D70     		strb	r5, [r1, #2]
 208:Core/Src/menu.cpp ****             break;
 1009              		.loc 1 208 13 is_stmt 1 view .LVU234
 208:Core/Src/menu.cpp ****             break;
 1010              		.loc 1 208 22 is_stmt 0 view .LVU235
 1011 003c 5340     		eors	r3, r3, r2
ARM GAS  /tmp/ccMEB0iu.s 			page 25


 1012 003e A373     		strb	r3, [r4, #14]
 209:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1013              		.loc 1 209 13 is_stmt 1 view .LVU236
 1014 0040 EEE7     		b	.L59
 1015              	.L63:
 210:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1016              		.loc 1 210 9 view .LVU237
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1017              		.loc 1 211 13 view .LVU238
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1018              		.loc 1 211 17 is_stmt 0 view .LVU239
 1019 0042 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 211:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1020              		.loc 1 211 27 view .LVU240
 1021 0044 A118     		adds	r1, r4, r2
 1022 0046 CD72     		strb	r5, [r1, #11]
 212:Core/Src/menu.cpp ****             break;
 1023              		.loc 1 212 13 is_stmt 1 view .LVU241
 212:Core/Src/menu.cpp ****             break;
 1024              		.loc 1 212 22 is_stmt 0 view .LVU242
 1025 0048 5340     		eors	r3, r3, r2
 1026 004a A373     		strb	r3, [r4, #14]
 213:Core/Src/menu.cpp **** 
 1027              		.loc 1 213 13 is_stmt 1 view .LVU243
 1028              		.loc 1 219 1 is_stmt 0 view .LVU244
 1029 004c E8E7     		b	.L59
 1030              		.cfi_endproc
 1031              	.LFE147:
 1032              		.fnend
 1034              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1035              		.align	1
 1036              		.global	_ZN4menu7menu_upEv
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	_ZN4menu7menu_upEv:
 1043              		.fnstart
 1044              	.LVL62:
 1045              	.LFB148:
 220:Core/Src/menu.cpp **** void menu::menu_up()
 221:Core/Src/menu.cpp **** {
 1046              		.loc 1 221 1 is_stmt 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		.loc 1 221 1 is_stmt 0 view .LVU246
 1051 0000 10B5     		push	{r4, lr}
 1052              		.save {r4, lr}
 1053              	.LCFI12:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 4, -8
 1056              		.cfi_offset 14, -4
 1057 0002 0446     		mov	r4, r0
 222:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1058              		.loc 1 222 5 is_stmt 1 view .LVU247
 1059              		.loc 1 222 28 is_stmt 0 view .LVU248
ARM GAS  /tmp/ccMEB0iu.s 			page 26


 1060 0004 0069     		ldr	r0, [r0, #16]
 1061              	.LVL63:
 1062              		.loc 1 222 28 view .LVU249
 1063 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1064              	.LVL64:
 1065              		.loc 1 222 5 view .LVU250
 1066 000a 50B9     		cbnz	r0, .L75
 1067              	.L68:
 223:Core/Src/menu.cpp ****     {
 224:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 225:Core/Src/menu.cpp ****     }
 226:Core/Src/menu.cpp ****     switch (menu_value)
 1068              		.loc 1 226 5 is_stmt 1 view .LVU251
 1069              		.loc 1 226 13 is_stmt 0 view .LVU252
 1070 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1071              		.loc 1 226 5 view .LVU253
 1072 000e 082B     		cmp	r3, #8
 1073 0010 0BD0     		beq	.L69
 1074 0012 102B     		cmp	r3, #16
 1075 0014 0FD0     		beq	.L70
 227:Core/Src/menu.cpp ****     {
 228:Core/Src/menu.cpp ****     case MENU_CH_IN:
 229:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 230:Core/Src/menu.cpp ****         {
 231:Core/Src/menu.cpp ****             chVal++;
 232:Core/Src/menu.cpp ****         }
 233:Core/Src/menu.cpp ****         break;
 234:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 235:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 236:Core/Src/menu.cpp ****         {
 237:Core/Src/menu.cpp ****             sqVal++;
 238:Core/Src/menu.cpp ****         }
 239:Core/Src/menu.cpp ****         break;   
 240:Core/Src/menu.cpp ****     default:
 1076              		.loc 1 240 5 is_stmt 1 view .LVU254
 241:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1077              		.loc 1 241 9 view .LVU255
 1078              		.loc 1 241 12 is_stmt 0 view .LVU256
 1079 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1080              		.loc 1 241 9 view .LVU257
 1081 0018 072B     		cmp	r3, #7
 1082 001a 0BD8     		bhi	.L67
 242:Core/Src/menu.cpp ****         {
 243:Core/Src/menu.cpp ****             volVal++;
 1083              		.loc 1 243 13 is_stmt 1 view .LVU258
 1084              		.loc 1 243 19 is_stmt 0 view .LVU259
 1085 001c 0133     		adds	r3, r3, #1
 1086 001e A372     		strb	r3, [r4, #10]
 244:Core/Src/menu.cpp ****         }
 245:Core/Src/menu.cpp ****         break;
 246:Core/Src/menu.cpp ****     }
 247:Core/Src/menu.cpp **** }
 1087              		.loc 1 247 1 view .LVU260
 1088 0020 08E0     		b	.L67
 1089              	.L75:
 224:Core/Src/menu.cpp ****     }
 1090              		.loc 1 224 9 is_stmt 1 view .LVU261
ARM GAS  /tmp/ccMEB0iu.s 			page 27


 224:Core/Src/menu.cpp ****     }
 1091              		.loc 1 224 31 is_stmt 0 view .LVU262
 1092 0022 2069     		ldr	r0, [r4, #16]
 1093 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1094              	.LVL65:
 1095 0028 F0E7     		b	.L68
 1096              	.L69:
 228:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1097              		.loc 1 228 5 is_stmt 1 view .LVU263
 229:Core/Src/menu.cpp ****         {
 1098              		.loc 1 229 9 view .LVU264
 229:Core/Src/menu.cpp ****         {
 1099              		.loc 1 229 12 is_stmt 0 view .LVU265
 1100 002a E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 229:Core/Src/menu.cpp ****         {
 1101              		.loc 1 229 9 view .LVU266
 1102 002c 152B     		cmp	r3, #21
 1103 002e 01D8     		bhi	.L67
 231:Core/Src/menu.cpp ****         }
 1104              		.loc 1 231 13 is_stmt 1 view .LVU267
 231:Core/Src/menu.cpp ****         }
 1105              		.loc 1 231 18 is_stmt 0 view .LVU268
 1106 0030 0133     		adds	r3, r3, #1
 1107 0032 E371     		strb	r3, [r4, #7]
 1108              	.L67:
 1109              		.loc 1 247 1 view .LVU269
 1110 0034 10BD     		pop	{r4, pc}
 1111              	.LVL66:
 1112              	.L70:
 234:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1113              		.loc 1 234 5 is_stmt 1 view .LVU270
 235:Core/Src/menu.cpp ****         {
 1114              		.loc 1 235 9 view .LVU271
 235:Core/Src/menu.cpp ****         {
 1115              		.loc 1 235 12 is_stmt 0 view .LVU272
 1116 0036 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 235:Core/Src/menu.cpp ****         {
 1117              		.loc 1 235 9 view .LVU273
 1118 0038 082B     		cmp	r3, #8
 1119 003a FBD8     		bhi	.L67
 237:Core/Src/menu.cpp ****         }
 1120              		.loc 1 237 13 is_stmt 1 view .LVU274
 237:Core/Src/menu.cpp ****         }
 1121              		.loc 1 237 18 is_stmt 0 view .LVU275
 1122 003c 0133     		adds	r3, r3, #1
 1123 003e 2371     		strb	r3, [r4, #4]
 1124 0040 F8E7     		b	.L67
 1125              		.cfi_endproc
 1126              	.LFE148:
 1127              		.fnend
 1129              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1130              		.align	1
 1131              		.global	_ZN4menu9menu_downEv
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccMEB0iu.s 			page 28


 1137              	_ZN4menu9menu_downEv:
 1138              		.fnstart
 1139              	.LVL67:
 1140              	.LFB149:
 248:Core/Src/menu.cpp **** 
 249:Core/Src/menu.cpp **** void menu::menu_down()
 250:Core/Src/menu.cpp **** {
 1141              		.loc 1 250 1 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              		.loc 1 250 1 is_stmt 0 view .LVU277
 1146 0000 10B5     		push	{r4, lr}
 1147              		.save {r4, lr}
 1148              	.LCFI13:
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
 1152 0002 0446     		mov	r4, r0
 251:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1153              		.loc 1 251 5 is_stmt 1 view .LVU278
 1154              		.loc 1 251 28 is_stmt 0 view .LVU279
 1155 0004 0069     		ldr	r0, [r0, #16]
 1156              	.LVL68:
 1157              		.loc 1 251 28 view .LVU280
 1158 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1159              	.LVL69:
 1160              		.loc 1 251 5 view .LVU281
 1161 000a 48B9     		cbnz	r0, .L84
 1162              	.L77:
 252:Core/Src/menu.cpp ****     {
 253:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 254:Core/Src/menu.cpp ****     }
 255:Core/Src/menu.cpp ****     switch (menu_value)
 1163              		.loc 1 255 5 is_stmt 1 view .LVU282
 1164              		.loc 1 255 13 is_stmt 0 view .LVU283
 1165 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1166              		.loc 1 255 5 view .LVU284
 1167 000e 082B     		cmp	r3, #8
 1168 0010 0AD0     		beq	.L78
 1169 0012 102B     		cmp	r3, #16
 1170 0014 0DD0     		beq	.L79
 256:Core/Src/menu.cpp ****     {
 257:Core/Src/menu.cpp ****     case MENU_CH_IN:
 258:Core/Src/menu.cpp ****         if(chVal > 0)
 259:Core/Src/menu.cpp ****         {
 260:Core/Src/menu.cpp ****         chVal--;
 261:Core/Src/menu.cpp ****         }
 262:Core/Src/menu.cpp ****         break;
 263:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 264:Core/Src/menu.cpp ****         if(sqVal > 0)
 265:Core/Src/menu.cpp ****         {
 266:Core/Src/menu.cpp ****         sqVal--;
 267:Core/Src/menu.cpp ****         }
 268:Core/Src/menu.cpp ****         break;   
 269:Core/Src/menu.cpp ****     default:
 1171              		.loc 1 269 5 is_stmt 1 view .LVU285
ARM GAS  /tmp/ccMEB0iu.s 			page 29


 270:Core/Src/menu.cpp ****         if(volVal > 0)
 1172              		.loc 1 270 9 view .LVU286
 1173              		.loc 1 270 12 is_stmt 0 view .LVU287
 1174 0016 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1175              		.loc 1 270 9 view .LVU288
 1176 0018 53B1     		cbz	r3, .L76
 271:Core/Src/menu.cpp ****         {
 272:Core/Src/menu.cpp ****             volVal--;
 1177              		.loc 1 272 13 is_stmt 1 view .LVU289
 1178              		.loc 1 272 19 is_stmt 0 view .LVU290
 1179 001a 013B     		subs	r3, r3, #1
 1180 001c A372     		strb	r3, [r4, #10]
 273:Core/Src/menu.cpp ****         }
 274:Core/Src/menu.cpp ****         break;
 275:Core/Src/menu.cpp ****     }
 276:Core/Src/menu.cpp **** 
 277:Core/Src/menu.cpp **** }
 1181              		.loc 1 277 1 view .LVU291
 1182 001e 07E0     		b	.L76
 1183              	.L84:
 253:Core/Src/menu.cpp ****     }
 1184              		.loc 1 253 9 is_stmt 1 view .LVU292
 253:Core/Src/menu.cpp ****     }
 1185              		.loc 1 253 31 is_stmt 0 view .LVU293
 1186 0020 2069     		ldr	r0, [r4, #16]
 1187 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1188              	.LVL70:
 1189 0026 F1E7     		b	.L77
 1190              	.L78:
 257:Core/Src/menu.cpp ****         if(chVal > 0)
 1191              		.loc 1 257 5 is_stmt 1 view .LVU294
 258:Core/Src/menu.cpp ****         {
 1192              		.loc 1 258 9 view .LVU295
 258:Core/Src/menu.cpp ****         {
 1193              		.loc 1 258 12 is_stmt 0 view .LVU296
 1194 0028 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 258:Core/Src/menu.cpp ****         {
 1195              		.loc 1 258 9 view .LVU297
 1196 002a 0BB1     		cbz	r3, .L76
 260:Core/Src/menu.cpp ****         }
 1197              		.loc 1 260 9 is_stmt 1 view .LVU298
 260:Core/Src/menu.cpp ****         }
 1198              		.loc 1 260 14 is_stmt 0 view .LVU299
 1199 002c 013B     		subs	r3, r3, #1
 1200 002e E371     		strb	r3, [r4, #7]
 1201              	.L76:
 1202              		.loc 1 277 1 view .LVU300
 1203 0030 10BD     		pop	{r4, pc}
 1204              	.LVL71:
 1205              	.L79:
 263:Core/Src/menu.cpp ****         if(sqVal > 0)
 1206              		.loc 1 263 5 is_stmt 1 view .LVU301
 264:Core/Src/menu.cpp ****         {
 1207              		.loc 1 264 9 view .LVU302
 264:Core/Src/menu.cpp ****         {
 1208              		.loc 1 264 12 is_stmt 0 view .LVU303
 1209 0032 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccMEB0iu.s 			page 30


 264:Core/Src/menu.cpp ****         {
 1210              		.loc 1 264 9 view .LVU304
 1211 0034 002B     		cmp	r3, #0
 1212 0036 FBD0     		beq	.L76
 266:Core/Src/menu.cpp ****         }
 1213              		.loc 1 266 9 is_stmt 1 view .LVU305
 266:Core/Src/menu.cpp ****         }
 1214              		.loc 1 266 14 is_stmt 0 view .LVU306
 1215 0038 013B     		subs	r3, r3, #1
 1216 003a 2371     		strb	r3, [r4, #4]
 1217 003c F8E7     		b	.L76
 1218              		.cfi_endproc
 1219              	.LFE149:
 1220              		.fnend
 1222              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1223              		.align	1
 1224              		.global	_ZN4menu13keyboard_pollEv
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	_ZN4menu13keyboard_pollEv:
 1231              		.fnstart
 1232              	.LVL72:
 1233              	.LFB150:
 278:Core/Src/menu.cpp **** 
 279:Core/Src/menu.cpp **** 
 280:Core/Src/menu.cpp **** void menu::keyboard_poll()
 281:Core/Src/menu.cpp **** {
 1234              		.loc 1 281 1 is_stmt 1 view -0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              		.loc 1 281 1 is_stmt 0 view .LVU308
 1239 0000 10B5     		push	{r4, lr}
 1240              		.save {r4, lr}
 1241              	.LCFI14:
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 4, -8
 1244              		.cfi_offset 14, -4
 1245 0002 0446     		mov	r4, r0
 282:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 1246              		.loc 1 282 5 is_stmt 1 view .LVU309
 1247              	.LVL73:
 283:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 284:Core/Src/menu.cpp **** 
 285:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1248              		.loc 1 285 5 view .LVU310
 1249              		.loc 1 285 15 is_stmt 0 view .LVU311
 1250 0004 534B     		ldr	r3, .L107
 1251 0006 5A69     		ldr	r2, [r3, #20]
 1252 0008 42F40062 		orr	r2, r2, #2048
 1253 000c 5A61     		str	r2, [r3, #20]
 286:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 287:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1254              		.loc 1 287 5 is_stmt 1 view .LVU312
 1255              		.loc 1 287 20 is_stmt 0 view .LVU313
ARM GAS  /tmp/ccMEB0iu.s 			page 31


 1256 000e 1B69     		ldr	r3, [r3, #16]
 1257              		.loc 1 287 23 view .LVU314
 1258 0010 03F40743 		and	r3, r3, #34560
 1259              		.loc 1 287 5 view .LVU315
 1260 0014 B3F5806F 		cmp	r3, #1024
 1261 0018 2AD0     		beq	.L86
 1262 001a 09D8     		bhi	.L87
 1263 001c B3F5807F 		cmp	r3, #256
 1264 0020 2AD0     		beq	.L88
 1265 0022 B3F5007F 		cmp	r3, #512
 1266 0026 08D1     		bne	.L90
 288:Core/Src/menu.cpp ****     {
 289:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 290:Core/Src/menu.cpp ****             menu_next();//R
 291:Core/Src/menu.cpp ****             break;
 292:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 293:Core/Src/menu.cpp ****             menu_number('6');
 294:Core/Src/menu.cpp ****             break;
 295:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1267              		.loc 1 295 9 is_stmt 1 view .LVU316
 296:Core/Src/menu.cpp ****             menu_number('5');
 1268              		.loc 1 296 13 view .LVU317
 1269              		.loc 1 296 24 is_stmt 0 view .LVU318
 1270 0028 3521     		movs	r1, #53
 1271 002a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1272              	.LVL74:
 297:Core/Src/menu.cpp ****             break;
 1273              		.loc 1 297 13 is_stmt 1 view .LVU319
 1274 002e 04E0     		b	.L90
 1275              	.LVL75:
 1276              	.L87:
 287:Core/Src/menu.cpp ****     {
 1277              		.loc 1 287 5 is_stmt 0 view .LVU320
 1278 0030 B3F5004F 		cmp	r3, #32768
 1279 0034 01D1     		bne	.L90
 289:Core/Src/menu.cpp ****             menu_next();//R
 1280              		.loc 1 289 9 is_stmt 1 view .LVU321
 290:Core/Src/menu.cpp ****             break;
 1281              		.loc 1 290 13 view .LVU322
 290:Core/Src/menu.cpp ****             break;
 1282              		.loc 1 290 22 is_stmt 0 view .LVU323
 1283 0036 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1284              	.LVL76:
 291:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1285              		.loc 1 291 13 is_stmt 1 view .LVU324
 1286              	.L90:
 298:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 299:Core/Src/menu.cpp ****             menu_number('4');
 300:Core/Src/menu.cpp ****             break;
 301:Core/Src/menu.cpp ****         default:
 302:Core/Src/menu.cpp ****             break;
 303:Core/Src/menu.cpp ****     }
 304:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1287              		.loc 1 304 5 view .LVU325
 1288              		.loc 1 304 15 is_stmt 0 view .LVU326
 1289 003a 464B     		ldr	r3, .L107
 1290 003c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccMEB0iu.s 			page 32


 1291 003e 22F40062 		bic	r2, r2, #2048
 1292 0042 5A61     		str	r2, [r3, #20]
 305:Core/Src/menu.cpp **** 
 306:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 1293              		.loc 1 306 5 is_stmt 1 view .LVU327
 1294              	.LVL77:
 307:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1295              		.loc 1 307 5 view .LVU328
 1296              		.loc 1 307 15 is_stmt 0 view .LVU329
 1297 0044 5A69     		ldr	r2, [r3, #20]
 1298 0046 42F48052 		orr	r2, r2, #4096
 1299 004a 5A61     		str	r2, [r3, #20]
 308:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 309:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1300              		.loc 1 309 5 is_stmt 1 view .LVU330
 1301              		.loc 1 309 20 is_stmt 0 view .LVU331
 1302 004c 1B69     		ldr	r3, [r3, #16]
 1303              		.loc 1 309 23 view .LVU332
 1304 004e 03F40743 		and	r3, r3, #34560
 1305              		.loc 1 309 5 view .LVU333
 1306 0052 B3F5806F 		cmp	r3, #1024
 1307 0056 34D0     		beq	.L91
 1308 0058 12D8     		bhi	.L92
 1309 005a B3F5807F 		cmp	r3, #256
 1310 005e 35D0     		beq	.L93
 1311 0060 B3F5007F 		cmp	r3, #512
 1312 0064 12D1     		bne	.L95
 310:Core/Src/menu.cpp ****     {
 311:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 312:Core/Src/menu.cpp ****             menu_prev();//L
 313:Core/Src/menu.cpp ****             break;
 314:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 315:Core/Src/menu.cpp ****             menu_number('8');
 316:Core/Src/menu.cpp ****             break;
 317:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1313              		.loc 1 317 9 is_stmt 1 view .LVU334
 318:Core/Src/menu.cpp ****             menu_number('7');
 1314              		.loc 1 318 13 view .LVU335
 1315              		.loc 1 318 24 is_stmt 0 view .LVU336
 1316 0066 3721     		movs	r1, #55
 1317 0068 2046     		mov	r0, r4
 1318 006a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1319              	.LVL78:
 319:Core/Src/menu.cpp ****             break;
 1320              		.loc 1 319 13 is_stmt 1 view .LVU337
 1321 006e 0DE0     		b	.L95
 1322              	.LVL79:
 1323              	.L86:
 292:Core/Src/menu.cpp ****             menu_number('6');
 1324              		.loc 1 292 9 view .LVU338
 293:Core/Src/menu.cpp ****             break;
 1325              		.loc 1 293 13 view .LVU339
 293:Core/Src/menu.cpp ****             break;
 1326              		.loc 1 293 24 is_stmt 0 view .LVU340
 1327 0070 3621     		movs	r1, #54
 1328 0072 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1329              	.LVL80:
ARM GAS  /tmp/ccMEB0iu.s 			page 33


 294:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1330              		.loc 1 294 13 is_stmt 1 view .LVU341
 1331 0076 E0E7     		b	.L90
 1332              	.LVL81:
 1333              	.L88:
 298:Core/Src/menu.cpp ****             menu_number('4');
 1334              		.loc 1 298 9 view .LVU342
 299:Core/Src/menu.cpp ****             break;
 1335              		.loc 1 299 13 view .LVU343
 299:Core/Src/menu.cpp ****             break;
 1336              		.loc 1 299 24 is_stmt 0 view .LVU344
 1337 0078 3421     		movs	r1, #52
 1338 007a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1339              	.LVL82:
 300:Core/Src/menu.cpp ****         default:
 1340              		.loc 1 300 13 is_stmt 1 view .LVU345
 1341 007e DCE7     		b	.L90
 1342              	.LVL83:
 1343              	.L92:
 309:Core/Src/menu.cpp ****     {
 1344              		.loc 1 309 5 is_stmt 0 view .LVU346
 1345 0080 B3F5004F 		cmp	r3, #32768
 1346 0084 02D1     		bne	.L95
 311:Core/Src/menu.cpp ****             menu_prev();//L
 1347              		.loc 1 311 9 is_stmt 1 view .LVU347
 312:Core/Src/menu.cpp ****             break;
 1348              		.loc 1 312 13 view .LVU348
 312:Core/Src/menu.cpp ****             break;
 1349              		.loc 1 312 22 is_stmt 0 view .LVU349
 1350 0086 2046     		mov	r0, r4
 1351 0088 FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1352              	.LVL84:
 313:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1353              		.loc 1 313 13 is_stmt 1 view .LVU350
 1354              	.L95:
 320:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 321:Core/Src/menu.cpp ****             menu_number('9');
 322:Core/Src/menu.cpp ****             break;
 323:Core/Src/menu.cpp ****         default:
 324:Core/Src/menu.cpp ****             break;
 325:Core/Src/menu.cpp **** 
 326:Core/Src/menu.cpp ****     }
 327:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1355              		.loc 1 327 5 view .LVU351
 1356              		.loc 1 327 15 is_stmt 0 view .LVU352
 1357 008c 314B     		ldr	r3, .L107
 1358 008e 5A69     		ldr	r2, [r3, #20]
 1359 0090 22F48052 		bic	r2, r2, #4096
 1360 0094 5A61     		str	r2, [r3, #20]
 328:Core/Src/menu.cpp **** 
 329:Core/Src/menu.cpp **** 
 330:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 1361              		.loc 1 330 5 is_stmt 1 view .LVU353
 1362              	.LVL85:
 331:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1363              		.loc 1 331 5 view .LVU354
 1364              		.loc 1 331 15 is_stmt 0 view .LVU355
ARM GAS  /tmp/ccMEB0iu.s 			page 34


 1365 0096 5A69     		ldr	r2, [r3, #20]
 1366 0098 42F40052 		orr	r2, r2, #8192
 1367 009c 5A61     		str	r2, [r3, #20]
 332:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 333:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1368              		.loc 1 333 5 is_stmt 1 view .LVU356
 1369              		.loc 1 333 20 is_stmt 0 view .LVU357
 1370 009e 1B69     		ldr	r3, [r3, #16]
 1371              		.loc 1 333 23 view .LVU358
 1372 00a0 03F40743 		and	r3, r3, #34560
 1373              		.loc 1 333 5 view .LVU359
 1374 00a4 B3F5806F 		cmp	r3, #1024
 1375 00a8 36D0     		beq	.L96
 1376 00aa 14D8     		bhi	.L97
 1377 00ac B3F5807F 		cmp	r3, #256
 1378 00b0 36D0     		beq	.L98
 1379 00b2 B3F5007F 		cmp	r3, #512
 1380 00b6 14D1     		bne	.L100
 334:Core/Src/menu.cpp ****     {
 335:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 336:Core/Src/menu.cpp ****             menu_down();//D
 337:Core/Src/menu.cpp ****             break;
 338:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 339:Core/Src/menu.cpp ****             menu_menu();//M
 340:Core/Src/menu.cpp ****             break;
 341:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1381              		.loc 1 341 9 is_stmt 1 view .LVU360
 342:Core/Src/menu.cpp ****             menu_number('0');
 1382              		.loc 1 342 13 view .LVU361
 1383              		.loc 1 342 24 is_stmt 0 view .LVU362
 1384 00b8 3021     		movs	r1, #48
 1385 00ba 2046     		mov	r0, r4
 1386 00bc FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1387              	.LVL86:
 343:Core/Src/menu.cpp ****             break;
 1388              		.loc 1 343 13 is_stmt 1 view .LVU363
 1389 00c0 0FE0     		b	.L100
 1390              	.LVL87:
 1391              	.L91:
 314:Core/Src/menu.cpp ****             menu_number('8');
 1392              		.loc 1 314 9 view .LVU364
 315:Core/Src/menu.cpp ****             break;
 1393              		.loc 1 315 13 view .LVU365
 315:Core/Src/menu.cpp ****             break;
 1394              		.loc 1 315 24 is_stmt 0 view .LVU366
 1395 00c2 3821     		movs	r1, #56
 1396 00c4 2046     		mov	r0, r4
 1397 00c6 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1398              	.LVL88:
 316:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1399              		.loc 1 316 13 is_stmt 1 view .LVU367
 1400 00ca DFE7     		b	.L95
 1401              	.L93:
 320:Core/Src/menu.cpp ****             menu_number('9');
 1402              		.loc 1 320 9 view .LVU368
 321:Core/Src/menu.cpp ****             break;
 1403              		.loc 1 321 13 view .LVU369
ARM GAS  /tmp/ccMEB0iu.s 			page 35


 321:Core/Src/menu.cpp ****             break;
 1404              		.loc 1 321 24 is_stmt 0 view .LVU370
 1405 00cc 3921     		movs	r1, #57
 1406 00ce 2046     		mov	r0, r4
 1407 00d0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1408              	.LVL89:
 322:Core/Src/menu.cpp ****         default:
 1409              		.loc 1 322 13 is_stmt 1 view .LVU371
 1410 00d4 DAE7     		b	.L95
 1411              	.LVL90:
 1412              	.L97:
 333:Core/Src/menu.cpp ****     {
 1413              		.loc 1 333 5 is_stmt 0 view .LVU372
 1414 00d6 B3F5004F 		cmp	r3, #32768
 1415 00da 02D1     		bne	.L100
 335:Core/Src/menu.cpp ****             menu_down();//D
 1416              		.loc 1 335 9 is_stmt 1 view .LVU373
 336:Core/Src/menu.cpp ****             break;
 1417              		.loc 1 336 13 view .LVU374
 336:Core/Src/menu.cpp ****             break;
 1418              		.loc 1 336 22 is_stmt 0 view .LVU375
 1419 00dc 2046     		mov	r0, r4
 1420 00de FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1421              	.LVL91:
 337:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1422              		.loc 1 337 13 is_stmt 1 view .LVU376
 1423              	.L100:
 344:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 345:Core/Src/menu.cpp ****             menu_back();//B
 346:Core/Src/menu.cpp ****             break;
 347:Core/Src/menu.cpp ****         default:
 348:Core/Src/menu.cpp ****             break;
 349:Core/Src/menu.cpp **** 
 350:Core/Src/menu.cpp ****     }
 351:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1424              		.loc 1 351 5 view .LVU377
 1425              		.loc 1 351 15 is_stmt 0 view .LVU378
 1426 00e2 1C4B     		ldr	r3, .L107
 1427 00e4 5A69     		ldr	r2, [r3, #20]
 1428 00e6 22F40052 		bic	r2, r2, #8192
 1429 00ea 5A61     		str	r2, [r3, #20]
 352:Core/Src/menu.cpp **** 
 353:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 1430              		.loc 1 353 5 is_stmt 1 view .LVU379
 1431              	.LVL92:
 354:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1432              		.loc 1 354 5 view .LVU380
 1433              		.loc 1 354 15 is_stmt 0 view .LVU381
 1434 00ec 5A69     		ldr	r2, [r3, #20]
 1435 00ee 42F48042 		orr	r2, r2, #16384
 1436 00f2 5A61     		str	r2, [r3, #20]
 355:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 356:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 1437              		.loc 1 356 5 is_stmt 1 view .LVU382
 1438              		.loc 1 356 20 is_stmt 0 view .LVU383
 1439 00f4 1B69     		ldr	r3, [r3, #16]
 1440              		.loc 1 356 23 view .LVU384
ARM GAS  /tmp/ccMEB0iu.s 			page 36


 1441 00f6 03F40743 		and	r3, r3, #34560
 1442              		.loc 1 356 5 view .LVU385
 1443 00fa B3F5806F 		cmp	r3, #1024
 1444 00fe 1FD0     		beq	.L101
 1445 0100 12D8     		bhi	.L102
 1446 0102 B3F5807F 		cmp	r3, #256
 1447 0106 20D0     		beq	.L103
 1448 0108 B3F5007F 		cmp	r3, #512
 1449 010c 12D1     		bne	.L105
 357:Core/Src/menu.cpp ****     {
 358:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 359:Core/Src/menu.cpp ****             menu_up();//U
 360:Core/Src/menu.cpp ****             break;
 361:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 362:Core/Src/menu.cpp ****             menu_number('3');
 363:Core/Src/menu.cpp ****             break;
 364:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1450              		.loc 1 364 9 is_stmt 1 view .LVU386
 365:Core/Src/menu.cpp ****             menu_number('2');
 1451              		.loc 1 365 13 view .LVU387
 1452              		.loc 1 365 24 is_stmt 0 view .LVU388
 1453 010e 3221     		movs	r1, #50
 1454 0110 2046     		mov	r0, r4
 1455 0112 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1456              	.LVL93:
 366:Core/Src/menu.cpp ****             break;
 1457              		.loc 1 366 13 is_stmt 1 view .LVU389
 1458 0116 0DE0     		b	.L105
 1459              	.LVL94:
 1460              	.L96:
 338:Core/Src/menu.cpp ****             menu_menu();//M
 1461              		.loc 1 338 9 view .LVU390
 339:Core/Src/menu.cpp ****             break;
 1462              		.loc 1 339 13 view .LVU391
 339:Core/Src/menu.cpp ****             break;
 1463              		.loc 1 339 22 is_stmt 0 view .LVU392
 1464 0118 2046     		mov	r0, r4
 1465 011a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1466              	.LVL95:
 340:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1467              		.loc 1 340 13 is_stmt 1 view .LVU393
 1468 011e E0E7     		b	.L100
 1469              	.L98:
 344:Core/Src/menu.cpp ****             menu_back();//B
 1470              		.loc 1 344 9 view .LVU394
 345:Core/Src/menu.cpp ****             break;
 1471              		.loc 1 345 13 view .LVU395
 345:Core/Src/menu.cpp ****             break;
 1472              		.loc 1 345 22 is_stmt 0 view .LVU396
 1473 0120 2046     		mov	r0, r4
 1474 0122 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1475              	.LVL96:
 346:Core/Src/menu.cpp ****         default:
 1476              		.loc 1 346 13 is_stmt 1 view .LVU397
 1477 0126 DCE7     		b	.L100
 1478              	.LVL97:
 1479              	.L102:
ARM GAS  /tmp/ccMEB0iu.s 			page 37


 356:Core/Src/menu.cpp ****     {
 1480              		.loc 1 356 5 is_stmt 0 view .LVU398
 1481 0128 B3F5004F 		cmp	r3, #32768
 1482 012c 02D1     		bne	.L105
 358:Core/Src/menu.cpp ****             menu_up();//U
 1483              		.loc 1 358 9 is_stmt 1 view .LVU399
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6
 359:Core/Src/menu.cpp ****             break;
 1559              		.loc 1 359 13 view .LVU411
 359:Core/Src/menu.cpp ****             break;
<<<<<<< HEAD
 1560              		.loc 1 359 22 is_stmt 0 view .LVU412
 1561 0120 2046     		mov	r0, r4
 1562 0122 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1563              	.LVL98:
 360:Core/Src/menu.cpp ****         default:
 1564              		.loc 1 360 13 is_stmt 1 view .LVU413
 1565 0126 DCE7     		b	.L106
 1566              	.LVL99:
 1567              	.L108:
 370:Core/Src/menu.cpp ****     {
 1568              		.loc 1 370 5 is_stmt 0 view .LVU414
 1569 0128 B3F5004F 		cmp	r3, #32768
 1570 012c 02D1     		bne	.L111
 372:Core/Src/menu.cpp ****             menu_up();//U
 1571              		.loc 1 372 9 is_stmt 1 view .LVU415
 373:Core/Src/menu.cpp ****             break;
 1572              		.loc 1 373 13 view .LVU416
 373:Core/Src/menu.cpp ****             break;
 1573              		.loc 1 373 20 is_stmt 0 view .LVU417
 1574 012e 2046     		mov	r0, r4
 1575 0130 FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1576              	.LVL100:
 374:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1577              		.loc 1 374 13 is_stmt 1 view .LVU418
 1578              	.L111:
 381:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 382:Core/Src/menu.cpp ****             menu_number('1');
 383:Core/Src/menu.cpp ****             break;
 384:Core/Src/menu.cpp ****         default:
 385:Core/Src/menu.cpp ****             break;
 386:Core/Src/menu.cpp **** 
 387:Core/Src/menu.cpp ****     }
 388:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1579              		.loc 1 388 5 view .LVU419
 1580              		.loc 1 388 15 is_stmt 0 view .LVU420
 1581 0134 074A     		ldr	r2, .L113
 1582 0136 5369     		ldr	r3, [r2, #20]
 1583 0138 23F48043 		bic	r3, r3, #16384
 1584 013c 5361     		str	r3, [r2, #20]
 389:Core/Src/menu.cpp **** 
 390:Core/Src/menu.cpp **** }
 1585              		.loc 1 390 1 view .LVU421
 1586 013e 10BD     		pop	{r4, pc}
 1587              	.LVL101:
 1588              	.L107:
 375:Core/Src/menu.cpp ****             menu_number('3');
 1589              		.loc 1 375 9 is_stmt 1 view .LVU422
 376:Core/Src/menu.cpp ****             break;
 1590              		.loc 1 376 13 view .LVU423
 376:Core/Src/menu.cpp ****             break;
 1591              		.loc 1 376 24 is_stmt 0 view .LVU424
 1592 0140 3321     		movs	r1, #51
 1593 0142 2046     		mov	r0, r4
ARM GAS  /tmp/cceDqxOT.s 			page 40


 1594 0144 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1595              	.LVL102:
 377:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1596              		.loc 1 377 13 is_stmt 1 view .LVU425
 1597 0148 F4E7     		b	.L111
 1598              	.L109:
 381:Core/Src/menu.cpp ****             menu_number('1');
 1599              		.loc 1 381 9 view .LVU426
 382:Core/Src/menu.cpp ****             break;
 1600              		.loc 1 382 13 view .LVU427
 382:Core/Src/menu.cpp ****             break;
 1601              		.loc 1 382 24 is_stmt 0 view .LVU428
 1602 014a 3121     		movs	r1, #49
 1603 014c 2046     		mov	r0, r4
 1604 014e FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1605              	.LVL103:
 383:Core/Src/menu.cpp ****         default:
 1606              		.loc 1 383 13 is_stmt 1 view .LVU429
 1607 0152 EFE7     		b	.L111
 1608              	.L114:
 1609              		.align	2
 1610              	.L113:
 1611 0154 000C0240 		.word	1073875968
 1612              		.cfi_endproc
 1613              	.LFE150:
 1614              		.fnend
 1616              		.text
 1617              	.Letext0:
 1618              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1619              		.file 3 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1620              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1621              		.file 5 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1622              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1623              		.file 7 "/usr/include/newlib/sys/_types.h"
 1624              		.file 8 "/usr/include/newlib/sys/reent.h"
 1625              		.file 9 "/usr/include/newlib/sys/lock.h"
 1626              		.file 10 "/usr/include/newlib/stdlib.h"
 1627              		.file 11 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1628              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1629              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1630              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1631              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1632              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1633              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1634              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1635              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1636              		.file 20 "Core/Inc/fonts.h"
 1637              		.file 21 "Core/Inc/oled.h"
 1638              		.file 22 "Core/Inc/menu.hpp"
 1639              		.file 23 "<built-in>"
 1640              		.file 24 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cceDqxOT.s 			page 41
=======
 1485              		.loc 1 359 20 is_stmt 0 view .LVU401
 1486 012e 2046     		mov	r0, r4
 1487 0130 FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1488              	.LVL98:
 360:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 1489              		.loc 1 360 13 is_stmt 1 view .LVU402
 1490              	.L105:
 367:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 368:Core/Src/menu.cpp ****             menu_number('1');
 369:Core/Src/menu.cpp ****             break;
 370:Core/Src/menu.cpp ****         default:
 371:Core/Src/menu.cpp ****             break;
 372:Core/Src/menu.cpp **** 
 373:Core/Src/menu.cpp ****     }
 374:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 1491              		.loc 1 374 5 view .LVU403
 1492              		.loc 1 374 15 is_stmt 0 view .LVU404
 1493 0134 074A     		ldr	r2, .L107
 1494 0136 5369     		ldr	r3, [r2, #20]
 1495 0138 23F48043 		bic	r3, r3, #16384
 1496 013c 5361     		str	r3, [r2, #20]
 375:Core/Src/menu.cpp **** 
 376:Core/Src/menu.cpp **** }
 1497              		.loc 1 376 1 view .LVU405
 1498 013e 10BD     		pop	{r4, pc}
 1499              	.LVL99:
 1500              	.L101:
 361:Core/Src/menu.cpp ****             menu_number('3');
 1501              		.loc 1 361 9 is_stmt 1 view .LVU406
 362:Core/Src/menu.cpp ****             break;
 1502              		.loc 1 362 13 view .LVU407
 362:Core/Src/menu.cpp ****             break;
 1503              		.loc 1 362 24 is_stmt 0 view .LVU408
 1504 0140 3321     		movs	r1, #51
 1505 0142 2046     		mov	r0, r4
 1506 0144 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1507              	.LVL100:
 363:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 1508              		.loc 1 363 13 is_stmt 1 view .LVU409
 1509 0148 F4E7     		b	.L105
 1510              	.L103:
 367:Core/Src/menu.cpp ****             menu_number('1');
 1511              		.loc 1 367 9 view .LVU410
 368:Core/Src/menu.cpp ****             break;
 1512              		.loc 1 368 13 view .LVU411
 368:Core/Src/menu.cpp ****             break;
 1513              		.loc 1 368 24 is_stmt 0 view .LVU412
 1514 014a 3121     		movs	r1, #49
ARM GAS  /tmp/ccMEB0iu.s 			page 38


 1515 014c 2046     		mov	r0, r4
 1516 014e FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1517              	.LVL101:
 369:Core/Src/menu.cpp ****         default:
 1518              		.loc 1 369 13 is_stmt 1 view .LVU413
 1519 0152 EFE7     		b	.L105
 1520              	.L108:
 1521              		.align	2
 1522              	.L107:
 1523 0154 000C0240 		.word	1073875968
 1524              		.cfi_endproc
 1525              	.LFE150:
 1526              		.fnend
 1528              		.text
 1529              	.Letext0:
 1530              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1531              		.file 3 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1532              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1533              		.file 5 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1534              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1535              		.file 7 "/usr/include/newlib/sys/_types.h"
 1536              		.file 8 "/usr/include/newlib/sys/reent.h"
 1537              		.file 9 "/usr/include/newlib/sys/lock.h"
 1538              		.file 10 "/usr/include/newlib/stdlib.h"
 1539              		.file 11 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1540              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1541              		.file 13 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1542              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1543              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1544              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1545              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1546              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1547              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1548              		.file 20 "Core/Inc/fonts.h"
 1549              		.file 21 "Core/Inc/oled.h"
 1550              		.file 22 "Core/Inc/menu.hpp"
 1551              		.file 23 "<built-in>"
 1552              		.file 24 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccMEB0iu.s 			page 39
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
<<<<<<< HEAD
     /tmp/cceDqxOT.s:18     .text._ZN4menuC2EP4oled:0000000000000000 $t
     /tmp/cceDqxOT.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC2EP4oled
.ARM.exidx.text._ZN4menuC2EP4oled:0000000000000000 $d
     /tmp/cceDqxOT.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC1EP4oled
     /tmp/cceDqxOT.s:67     .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/cceDqxOT.s:92     .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/cceDqxOT.s:99     .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/cceDqxOT.s:128    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/cceDqxOT.s:355    .text._ZN4menu10menu_printEv:000000000000012c $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/cceDqxOT.s:370    .rodata._ZN4menu7menu_okEv.str1.4:0000000000000000 $d
     /tmp/cceDqxOT.s:378    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/cceDqxOT.s:385    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/cceDqxOT.s:429    .text._ZN4menu7menu_okEv:0000000000000020 $d
     /tmp/cceDqxOT.s:469    .text._ZN4menu7menu_okEv:0000000000000048 $t
     /tmp/cceDqxOT.s:630    .text._ZN4menu7menu_okEv:00000000000000e8 $d
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/cceDqxOT.s:638    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/cceDqxOT.s:645    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/cceDqxOT.s:679    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/cceDqxOT.s:703    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/cceDqxOT.s:767    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/cceDqxOT.s:774    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/cceDqxOT.s:819    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/cceDqxOT.s:826    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/cceDqxOT.s:874    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/cceDqxOT.s:881    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/cceDqxOT.s:915    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/cceDqxOT.s:939    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1013   .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/cceDqxOT.s:1020   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/cceDqxOT.s:1123   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1130   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1218   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1225   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/cceDqxOT.s:1311   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/cceDqxOT.s:1318   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/cceDqxOT.s:1611   .text._ZN4menu13keyboard_pollEv:0000000000000154 $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/cceDqxOT.s:153    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/cceDqxOT.s:153    .text._ZN4menu10menu_printEv:000000000000002a $t
=======
     /tmp/ccMEB0iu.s:18     .text._ZN4menuC2EP4oled:0000000000000000 $t
     /tmp/ccMEB0iu.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC2EP4oled
.ARM.exidx.text._ZN4menuC2EP4oled:0000000000000000 $d
     /tmp/ccMEB0iu.s:26     .text._ZN4menuC2EP4oled:0000000000000000 _ZN4menuC1EP4oled
     /tmp/ccMEB0iu.s:67     .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/ccMEB0iu.s:92     .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:99     .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/ccMEB0iu.s:128    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/ccMEB0iu.s:355    .text._ZN4menu10menu_printEv:000000000000012c $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:370    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:377    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/ccMEB0iu.s:418    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/ccMEB0iu.s:442    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:550    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:557    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/ccMEB0iu.s:591    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/ccMEB0iu.s:615    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:679    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:686    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:731    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:738    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:786    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:793    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/ccMEB0iu.s:827    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/ccMEB0iu.s:851    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:925    .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/ccMEB0iu.s:932    .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/ccMEB0iu.s:1035   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:1042   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:1130   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:1137   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:1223   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/ccMEB0iu.s:1230   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/ccMEB0iu.s:1523   .text._ZN4menu13keyboard_pollEv:0000000000000154 $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/ccMEB0iu.s:153    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/ccMEB0iu.s:153    .text._ZN4menu10menu_printEv:000000000000002a $t
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6

UNDEFINED SYMBOLS
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
<<<<<<< HEAD
ARM GAS  /tmp/cceDqxOT.s 			page 42
=======
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
ARM GAS  /tmp/ccMEB0iu.s 			page 40
>>>>>>> 8c3342ba7dae04446312e2834acd3832612e2df6


_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
_ZN4oled7oled_onEv
atoi
