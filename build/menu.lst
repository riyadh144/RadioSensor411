ARM GAS  /tmp/cc2EeMC6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z41__static_initialization_and_destruction_0ii:
  26              		.fnstart
  27              	.LVL0:
  28              	.LFB2476:
  29              		.file 1 "Core/Src/menu.cpp"
   1:Core/Src/menu.cpp **** #include "menu.hpp"
   2:Core/Src/menu.cpp **** 
   3:Core/Src/menu.cpp **** menu::menu(oled* oled_, uart* uart_)
   4:Core/Src/menu.cpp **** {
   5:Core/Src/menu.cpp ****     oled1=oled_;
   6:Core/Src/menu.cpp ****     uart1=uart_;
   7:Core/Src/menu.cpp **** }
   8:Core/Src/menu.cpp **** 
   9:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
  10:Core/Src/menu.cpp **** {
  11:Core/Src/menu.cpp ****     char temp [22];
  12:Core/Src/menu.cpp **** 
  13:Core/Src/menu.cpp ****     switch (menu_value)
  14:Core/Src/menu.cpp ****     {
  15:Core/Src/menu.cpp ****         case MENU_HOME:
  16:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
  17:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  18:Core/Src/menu.cpp ****             break; 
  19:Core/Src/menu.cpp ****         case MENU_CH:
  20:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
  21:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  22:Core/Src/menu.cpp ****             break;
  23:Core/Src/menu.cpp ****         case MENU_SQ:
  24:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
  25:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  26:Core/Src/menu.cpp ****             break;
  27:Core/Src/menu.cpp ****         case MENU_TMO: //Display Timeout in seconds
  28:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
  29:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
ARM GAS  /tmp/cc2EeMC6.s 			page 2


  30:Core/Src/menu.cpp ****             break;
  31:Core/Src/menu.cpp ****         case MENU_CH_IN:
  32:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
  33:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
  34:Core/Src/menu.cpp ****             break;
  35:Core/Src/menu.cpp ****         case MENU_SQ_IN:
  36:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
  37:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  38:Core/Src/menu.cpp ****             break;
  39:Core/Src/menu.cpp ****         case MENU_TMO_IN:
  40:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
  41:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
  42:Core/Src/menu.cpp ****             break;
  43:Core/Src/menu.cpp ****         default:
  44:Core/Src/menu.cpp ****             break;
  45:Core/Src/menu.cpp ****     }
  46:Core/Src/menu.cpp ****     oled1->oled_print("menu backk   ", Font_11x18,0,46);   
  47:Core/Src/menu.cpp **** 
  48:Core/Src/menu.cpp **** }
  49:Core/Src/menu.cpp **** 
  50:Core/Src/menu.cpp **** void menu::menu_ok()
  51:Core/Src/menu.cpp **** {
  52:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
  53:Core/Src/menu.cpp ****     {
  54:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  55:Core/Src/menu.cpp ****     }
  56:Core/Src/menu.cpp ****     else
  57:Core/Src/menu.cpp ****     {
  58:Core/Src/menu.cpp ****         oled1->oled_on();
  59:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
  60:Core/Src/menu.cpp ****     }
  61:Core/Src/menu.cpp **** 
  62:Core/Src/menu.cpp ****     switch (menu_value) //TODO: Maybe we could optimize the performance on this but low priority 
  63:Core/Src/menu.cpp ****     {
  64:Core/Src/menu.cpp ****     case MENU_HOME:
  65:Core/Src/menu.cpp ****         break;
  66:Core/Src/menu.cpp ****     case MENU_CH:
  67:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
  68:Core/Src/menu.cpp ****         break;
  69:Core/Src/menu.cpp ****     case MENU_SQ:
  70:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
  71:Core/Src/menu.cpp ****         break;
  72:Core/Src/menu.cpp ****     case MENU_TMO:
  73:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
  74:Core/Src/menu.cpp ****         break;
  75:Core/Src/menu.cpp ****     case MENU_CH_IN:
  76:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
  77:Core/Src/menu.cpp ****         if(!cursorOn)
  78:Core/Src/menu.cpp ****         {
  79:Core/Src/menu.cpp ****             chVal=atoi(ch);
  80:Core/Src/menu.cpp ****             cursorPos=0;
  81:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
  82:Core/Src/menu.cpp ****         }
  83:Core/Src/menu.cpp ****         break;
  84:Core/Src/menu.cpp ****     case MENU_SQ_IN:
  85:Core/Src/menu.cpp ****         cursorOn^=1;
  86:Core/Src/menu.cpp ****         if(!cursorOn)
ARM GAS  /tmp/cc2EeMC6.s 			page 3


  87:Core/Src/menu.cpp ****         {
  88:Core/Src/menu.cpp ****             chVal=atoi(sq);
  89:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
  90:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
  91:Core/Src/menu.cpp ****         }
  92:Core/Src/menu.cpp ****         break;
  93:Core/Src/menu.cpp ****     case MENU_TMO_IN:
  94:Core/Src/menu.cpp ****         cursorOn%=1;
  95:Core/Src/menu.cpp ****         if(!cursorOn)
  96:Core/Src/menu.cpp ****         {
  97:Core/Src/menu.cpp ****             tmoVal=atoi(tmo); //OK is meant to set the value
  98:Core/Src/menu.cpp ****             cursorPos=0;
  99:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 100:Core/Src/menu.cpp ****         }
 101:Core/Src/menu.cpp ****         break;
 102:Core/Src/menu.cpp **** 
 103:Core/Src/menu.cpp ****     default:
 104:Core/Src/menu.cpp ****         break;
 105:Core/Src/menu.cpp ****     }
 106:Core/Src/menu.cpp **** 
 107:Core/Src/menu.cpp ****     
 108:Core/Src/menu.cpp **** }
 109:Core/Src/menu.cpp **** 
 110:Core/Src/menu.cpp **** void menu::menu_next()
 111:Core/Src/menu.cpp **** {
 112:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 113:Core/Src/menu.cpp ****     {
 114:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 115:Core/Src/menu.cpp ****     }
 116:Core/Src/menu.cpp ****     switch (menu_value)
 117:Core/Src/menu.cpp ****     {
 118:Core/Src/menu.cpp ****     case MENU_HOME:
 119:Core/Src/menu.cpp ****         break;
 120:Core/Src/menu.cpp ****     case MENU_CH:
 121:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 122:Core/Src/menu.cpp ****         break;
 123:Core/Src/menu.cpp ****     case MENU_SQ:
 124:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 125:Core/Src/menu.cpp ****     case MENU_TMO:
 126:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 127:Core/Src/menu.cpp ****     case MENU_CH_IN:
 128:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
 129:Core/Src/menu.cpp ****         break;
 130:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 131:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 132:Core/Src/menu.cpp ****         break;
 133:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 134:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 135:Core/Src/menu.cpp ****         break;
 136:Core/Src/menu.cpp **** 
 137:Core/Src/menu.cpp ****     default:
 138:Core/Src/menu.cpp ****         break;
 139:Core/Src/menu.cpp ****     }
 140:Core/Src/menu.cpp **** }
 141:Core/Src/menu.cpp **** 
 142:Core/Src/menu.cpp **** void menu::menu_menu()
 143:Core/Src/menu.cpp **** {
ARM GAS  /tmp/cc2EeMC6.s 			page 4


 144:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 145:Core/Src/menu.cpp ****     {
 146:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 147:Core/Src/menu.cpp ****     }
 148:Core/Src/menu.cpp ****     menu_value = MENU_CH;
 149:Core/Src/menu.cpp **** }
 150:Core/Src/menu.cpp **** 
 151:Core/Src/menu.cpp **** void menu::menu_back()
 152:Core/Src/menu.cpp **** {
 153:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 154:Core/Src/menu.cpp ****     {
 155:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 156:Core/Src/menu.cpp ****     }
 157:Core/Src/menu.cpp ****     menu_value = (enum menu_state)(menu_value >> 3);
 158:Core/Src/menu.cpp **** }
 159:Core/Src/menu.cpp **** 
 160:Core/Src/menu.cpp **** void menu::menu_prev()
 161:Core/Src/menu.cpp **** {
 162:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 163:Core/Src/menu.cpp ****     {
 164:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 165:Core/Src/menu.cpp ****     }
 166:Core/Src/menu.cpp ****     switch (menu_value)
 167:Core/Src/menu.cpp ****     {
 168:Core/Src/menu.cpp ****     case MENU_HOME:
 169:Core/Src/menu.cpp ****         break;
 170:Core/Src/menu.cpp ****     case MENU_CH:
 171:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 172:Core/Src/menu.cpp ****         break;
 173:Core/Src/menu.cpp ****     case MENU_SQ:
 174:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 175:Core/Src/menu.cpp ****         break;
 176:Core/Src/menu.cpp ****     case MENU_TMO:
 177:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 178:Core/Src/menu.cpp ****         break;
 179:Core/Src/menu.cpp ****     case MENU_CH_IN:
 180:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 181:Core/Src/menu.cpp ****         break;
 182:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 183:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 184:Core/Src/menu.cpp ****         break;
 185:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 186:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 187:Core/Src/menu.cpp ****         break;
 188:Core/Src/menu.cpp **** 
 189:Core/Src/menu.cpp ****     default:
 190:Core/Src/menu.cpp ****         break;
 191:Core/Src/menu.cpp ****     }
 192:Core/Src/menu.cpp **** }
 193:Core/Src/menu.cpp **** void menu::menu_number(char num)
 194:Core/Src/menu.cpp **** {
 195:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 196:Core/Src/menu.cpp ****     {
 197:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 198:Core/Src/menu.cpp ****     }
 199:Core/Src/menu.cpp ****     if(cursorOn) //Only accept an input when the cursor is on
 200:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc2EeMC6.s 			page 5


 201:Core/Src/menu.cpp ****         switch (menu_value)
 202:Core/Src/menu.cpp ****         {
 203:Core/Src/menu.cpp ****         case MENU_CH_IN:
 204:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 205:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 206:Core/Src/menu.cpp ****             break;
 207:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 208:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 209:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 210:Core/Src/menu.cpp ****             break;
 211:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 212:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 213:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 214:Core/Src/menu.cpp ****             break;
 215:Core/Src/menu.cpp **** 
 216:Core/Src/menu.cpp ****         default:
 217:Core/Src/menu.cpp ****             break;
 218:Core/Src/menu.cpp ****         }
 219:Core/Src/menu.cpp ****     }
 220:Core/Src/menu.cpp **** }
 221:Core/Src/menu.cpp **** void menu::menu_up()
 222:Core/Src/menu.cpp **** {
 223:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 224:Core/Src/menu.cpp ****     {
 225:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 226:Core/Src/menu.cpp ****     }
 227:Core/Src/menu.cpp ****     switch (menu_value)
 228:Core/Src/menu.cpp ****     {
 229:Core/Src/menu.cpp ****     case MENU_CH_IN:
 230:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 231:Core/Src/menu.cpp ****         {
 232:Core/Src/menu.cpp ****             chVal++;
 233:Core/Src/menu.cpp ****         }
 234:Core/Src/menu.cpp ****         break;
 235:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 236:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 237:Core/Src/menu.cpp ****         {
 238:Core/Src/menu.cpp ****             sqVal++;
 239:Core/Src/menu.cpp ****         }
 240:Core/Src/menu.cpp ****         break;   
 241:Core/Src/menu.cpp ****     default:
 242:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 243:Core/Src/menu.cpp ****         {
 244:Core/Src/menu.cpp ****             volVal++;
 245:Core/Src/menu.cpp ****         }
 246:Core/Src/menu.cpp ****         break;
 247:Core/Src/menu.cpp ****     }
 248:Core/Src/menu.cpp **** }
 249:Core/Src/menu.cpp **** 
 250:Core/Src/menu.cpp **** void menu::menu_down()
 251:Core/Src/menu.cpp **** {
 252:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 253:Core/Src/menu.cpp ****     {
 254:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 255:Core/Src/menu.cpp ****     }
 256:Core/Src/menu.cpp ****     switch (menu_value)
 257:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc2EeMC6.s 			page 6


 258:Core/Src/menu.cpp ****     case MENU_CH_IN:
 259:Core/Src/menu.cpp ****         if(chVal > 0)
 260:Core/Src/menu.cpp ****         {
 261:Core/Src/menu.cpp ****         chVal--;
 262:Core/Src/menu.cpp ****         }
 263:Core/Src/menu.cpp ****         break;
 264:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 265:Core/Src/menu.cpp ****         if(sqVal > 0)
 266:Core/Src/menu.cpp ****         {
 267:Core/Src/menu.cpp ****         sqVal--;
 268:Core/Src/menu.cpp ****         }
 269:Core/Src/menu.cpp ****         break;   
 270:Core/Src/menu.cpp ****     default:
 271:Core/Src/menu.cpp ****         if(volVal > 0)
 272:Core/Src/menu.cpp ****         {
 273:Core/Src/menu.cpp ****             volVal--;
 274:Core/Src/menu.cpp ****         }
 275:Core/Src/menu.cpp ****         break;
 276:Core/Src/menu.cpp ****     }
 277:Core/Src/menu.cpp **** 
 278:Core/Src/menu.cpp **** }
 279:Core/Src/menu.cpp **** 
 280:Core/Src/menu.cpp **** 
 281:Core/Src/menu.cpp **** 
 282:Core/Src/menu.cpp **** void menu::keyboard_poll()
 283:Core/Src/menu.cpp **** {
 284:Core/Src/menu.cpp ****     int sds=0;
 285:Core/Src/menu.cpp ****     char x[20];
 286:Core/Src/menu.cpp **** 
 287:Core/Src/menu.cpp ****     uint16_t pin = GPIO_PIN_11;
 288:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 289:Core/Src/menu.cpp **** 
 290:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 291:Core/Src/menu.cpp ****     while(sds<10)
 292:Core/Src/menu.cpp ****     {
 293:Core/Src/menu.cpp ****         sds++;
 294:Core/Src/menu.cpp ****     }
 295:Core/Src/menu.cpp ****     sds=0;
 296:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 297:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 298:Core/Src/menu.cpp ****     {
 299:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 300:Core/Src/menu.cpp ****             menu_next();//R
 301:Core/Src/menu.cpp ****             sprintf(x,"next");
 302:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 303:Core/Src/menu.cpp ****             break;
 304:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 305:Core/Src/menu.cpp ****             menu_number('6');
 306:Core/Src/menu.cpp ****             sprintf(x,"6");
 307:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 308:Core/Src/menu.cpp ****             break;
 309:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 310:Core/Src/menu.cpp ****             menu_number('5');
 311:Core/Src/menu.cpp ****             sprintf(x,"5");
 312:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 313:Core/Src/menu.cpp ****             break;
 314:Core/Src/menu.cpp ****         case GPIO_PIN_8:
ARM GAS  /tmp/cc2EeMC6.s 			page 7


 315:Core/Src/menu.cpp ****             menu_number('4');
 316:Core/Src/menu.cpp ****             sprintf(x,"4");
 317:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 318:Core/Src/menu.cpp ****             break;
 319:Core/Src/menu.cpp ****         default:
 320:Core/Src/menu.cpp ****             break;
 321:Core/Src/menu.cpp ****     }
 322:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 323:Core/Src/menu.cpp **** 
 324:Core/Src/menu.cpp ****     pin = GPIO_PIN_12;//PD12
 325:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 326:Core/Src/menu.cpp ****     
 327:Core/Src/menu.cpp ****     while(sds<10)
 328:Core/Src/menu.cpp ****     {
 329:Core/Src/menu.cpp ****         sds++;
 330:Core/Src/menu.cpp ****     }
 331:Core/Src/menu.cpp ****     sds=0;
 332:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 333:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 334:Core/Src/menu.cpp ****     {
 335:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 336:Core/Src/menu.cpp ****             menu_prev();//L
 337:Core/Src/menu.cpp ****             sprintf(x,"prev");
 338:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 339:Core/Src/menu.cpp ****             break;
 340:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 341:Core/Src/menu.cpp ****             menu_number('8');
 342:Core/Src/menu.cpp ****             sprintf(x,"8");
 343:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 344:Core/Src/menu.cpp ****             break;
 345:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 346:Core/Src/menu.cpp ****             menu_number('7');
 347:Core/Src/menu.cpp ****             sprintf(x,"7");
 348:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 349:Core/Src/menu.cpp ****             break;
 350:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 351:Core/Src/menu.cpp ****             menu_number('9');
 352:Core/Src/menu.cpp ****             sprintf(x,"9");
 353:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 354:Core/Src/menu.cpp ****             break;
 355:Core/Src/menu.cpp ****         default:
 356:Core/Src/menu.cpp ****             break;
 357:Core/Src/menu.cpp **** 
 358:Core/Src/menu.cpp ****     }
 359:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 360:Core/Src/menu.cpp **** 
 361:Core/Src/menu.cpp **** 
 362:Core/Src/menu.cpp ****     pin = GPIO_PIN_13;//PD13
 363:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 364:Core/Src/menu.cpp ****     while(sds<10)
 365:Core/Src/menu.cpp ****     {
 366:Core/Src/menu.cpp ****         sds++;
 367:Core/Src/menu.cpp ****     }
 368:Core/Src/menu.cpp ****     //uart1->send_recive("PD13","PD13");
 369:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 370:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 371:Core/Src/menu.cpp ****     {
ARM GAS  /tmp/cc2EeMC6.s 			page 8


 372:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 373:Core/Src/menu.cpp ****             menu_down();//D
 374:Core/Src/menu.cpp ****             sprintf(x,"down");
 375:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 376:Core/Src/menu.cpp ****             break;
 377:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 378:Core/Src/menu.cpp ****             menu_menu();//M
 379:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 380:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 381:Core/Src/menu.cpp ****             break;
 382:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 383:Core/Src/menu.cpp ****             menu_number('0');
 384:Core/Src/menu.cpp ****             sprintf(x,"0");
 385:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 386:Core/Src/menu.cpp ****             break;
 387:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 388:Core/Src/menu.cpp ****             menu_back();//B
 389:Core/Src/menu.cpp ****             sprintf(x,"Back");
 390:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 391:Core/Src/menu.cpp ****             break;
 392:Core/Src/menu.cpp ****         default:
 393:Core/Src/menu.cpp ****             break;
 394:Core/Src/menu.cpp **** 
 395:Core/Src/menu.cpp ****     }
 396:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 397:Core/Src/menu.cpp **** 
 398:Core/Src/menu.cpp ****     pin = GPIO_PIN_14;//PD14
 399:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 400:Core/Src/menu.cpp ****     while(sds<10)
 401:Core/Src/menu.cpp ****     {
 402:Core/Src/menu.cpp ****         sds++;
 403:Core/Src/menu.cpp ****     }
 404:Core/Src/menu.cpp ****     sds=0;
 405:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 406:Core/Src/menu.cpp ****     switch (GPIOD->IDR& (GPIO_PIN_15|GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_8))
 407:Core/Src/menu.cpp ****     {
 408:Core/Src/menu.cpp ****         case GPIO_PIN_15:
 409:Core/Src/menu.cpp ****             menu_up();//U
 410:Core/Src/menu.cpp ****             sprintf(x,"up");
 411:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 412:Core/Src/menu.cpp ****             break;
 413:Core/Src/menu.cpp ****         case GPIO_PIN_10:
 414:Core/Src/menu.cpp ****             menu_number('3');
 415:Core/Src/menu.cpp ****             sprintf(x,"3");
 416:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 417:Core/Src/menu.cpp ****             break;
 418:Core/Src/menu.cpp ****         case GPIO_PIN_9:
 419:Core/Src/menu.cpp ****             menu_number('2');
 420:Core/Src/menu.cpp ****             sprintf(x,"2");
 421:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 422:Core/Src/menu.cpp ****             break;
 423:Core/Src/menu.cpp ****         case GPIO_PIN_8:
 424:Core/Src/menu.cpp ****             menu_number('1');
 425:Core/Src/menu.cpp ****             sprintf(x,"1");
 426:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 427:Core/Src/menu.cpp ****             break;
 428:Core/Src/menu.cpp ****         default:
ARM GAS  /tmp/cc2EeMC6.s 			page 9


 429:Core/Src/menu.cpp ****             break;
 430:Core/Src/menu.cpp **** 
 431:Core/Src/menu.cpp ****     }
 432:Core/Src/menu.cpp ****     GPIOD->ODR&=(~pin);
 433:Core/Src/menu.cpp **** 
 434:Core/Src/menu.cpp **** }
  30              		.loc 1 434 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 434 1 is_stmt 0 view .LVU1
  35 0000 0128     		cmp	r0, #1
  36 0002 00D0     		beq	.L7
  37              	.L4:
  38 0004 7047     		bx	lr
  39              	.L7:
  40              		.loc 1 434 1 discriminator 1 view .LVU2
  41 0006 4FF6FF73 		movw	r3, #65535
  42 000a 9942     		cmp	r1, r3
  43 000c FAD1     		bne	.L4
  44              		.loc 1 434 1 view .LVU3
  45 000e 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  50              		.file 2 "/usr/include/newlib/c++/9.2.1/iostream"
   1:/usr/include/newlib/c++/9.2.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/iostream **** 
   3:/usr/include/newlib/c++/9.2.1/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/iostream **** //
   5:/usr/include/newlib/c++/9.2.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/iostream **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/iostream **** 
  11:/usr/include/newlib/c++/9.2.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/iostream **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/iostream **** 
  16:/usr/include/newlib/c++/9.2.1/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/iostream **** 
  20:/usr/include/newlib/c++/9.2.1/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/iostream **** 
  25:/usr/include/newlib/c++/9.2.1/iostream **** /** @file include/iostream
  26:/usr/include/newlib/c++/9.2.1/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/newlib/c++/9.2.1/iostream ****  */
  28:/usr/include/newlib/c++/9.2.1/iostream **** 
  29:/usr/include/newlib/c++/9.2.1/iostream **** //
  30:/usr/include/newlib/c++/9.2.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
ARM GAS  /tmp/cc2EeMC6.s 			page 10


  31:/usr/include/newlib/c++/9.2.1/iostream **** //
  32:/usr/include/newlib/c++/9.2.1/iostream **** 
  33:/usr/include/newlib/c++/9.2.1/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/newlib/c++/9.2.1/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/newlib/c++/9.2.1/iostream **** 
  36:/usr/include/newlib/c++/9.2.1/iostream **** #pragma GCC system_header
  37:/usr/include/newlib/c++/9.2.1/iostream **** 
  38:/usr/include/newlib/c++/9.2.1/iostream **** #include <bits/c++config.h>
  39:/usr/include/newlib/c++/9.2.1/iostream **** #include <ostream>
  40:/usr/include/newlib/c++/9.2.1/iostream **** #include <istream>
  41:/usr/include/newlib/c++/9.2.1/iostream **** 
  42:/usr/include/newlib/c++/9.2.1/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/newlib/c++/9.2.1/iostream **** {
  44:/usr/include/newlib/c++/9.2.1/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/newlib/c++/9.2.1/iostream **** 
  46:/usr/include/newlib/c++/9.2.1/iostream ****   /**
  47:/usr/include/newlib/c++/9.2.1/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/newlib/c++/9.2.1/iostream ****    *
  49:/usr/include/newlib/c++/9.2.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/newlib/c++/9.2.1/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/newlib/c++/9.2.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/newlib/c++/9.2.1/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/newlib/c++/9.2.1/iostream ****    *
  54:/usr/include/newlib/c++/9.2.1/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/newlib/c++/9.2.1/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/newlib/c++/9.2.1/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/newlib/c++/9.2.1/iostream ****    *  manual linked to above.
  58:/usr/include/newlib/c++/9.2.1/iostream ****   */
  59:/usr/include/newlib/c++/9.2.1/iostream ****   //@{
  60:/usr/include/newlib/c++/9.2.1/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/newlib/c++/9.2.1/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/newlib/c++/9.2.1/iostream **** 
  65:/usr/include/newlib/c++/9.2.1/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/newlib/c++/9.2.1/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/newlib/c++/9.2.1/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/newlib/c++/9.2.1/iostream **** #endif
  71:/usr/include/newlib/c++/9.2.1/iostream ****   //@}
  72:/usr/include/newlib/c++/9.2.1/iostream **** 
  73:/usr/include/newlib/c++/9.2.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/newlib/c++/9.2.1/iostream ****   static ios_base::Init __ioinit;
  51              		.loc 2 74 25 view .LVU4
  52 0010 044C     		ldr	r4, .L8
  53 0012 2046     		mov	r0, r4
  54              	.LVL1:
  55              		.loc 2 74 25 view .LVU5
  56 0014 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
  57              	.LVL2:
  58              		.loc 2 74 25 view .LVU6
  59 0018 034A     		ldr	r2, .L8+4
  60 001a 0449     		ldr	r1, .L8+8
  61 001c 2046     		mov	r0, r4
  62 001e FFF7FEFF 		bl	__aeabi_atexit
  63              	.LVL3:
ARM GAS  /tmp/cc2EeMC6.s 			page 11


  64              		.loc 1 434 1 view .LVU7
  65 0022 10BD     		pop	{r4, pc}
  66              	.L9:
  67              		.align	2
  68              	.L8:
  69 0024 00000000 		.word	.LANCHOR0
  70 0028 00000000 		.word	__dso_handle
  71 002c 00000000 		.word	_ZNSt8ios_base4InitD1Ev
  72              		.cfi_endproc
  73              	.LFE2476:
  74              		.cantunwind
  75              		.fnend
  77              		.section	.rodata._ZN4menuC2EP4oledP4uart.str1.4,"aMS",%progbits,1
  78              		.align	2
  79              	.LC0:
  80 0000 303000   		.ascii	"00\000"
  81              		.section	.text._ZN4menuC2EP4oledP4uart,"ax",%progbits
  82              		.align	1
  83              		.global	_ZN4menuC2EP4oledP4uart
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	_ZN4menuC2EP4oledP4uart:
  90              		.fnstart
  91              	.LVL4:
  92              	.LFB1985:
   3:Core/Src/menu.cpp **** }
  93              		.loc 1 3 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
   3:Core/Src/menu.cpp **** }
  98              		.loc 1 3 1 is_stmt 0 view .LVU9
  99 0000 70B4     		push	{r4, r5, r6}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 5, -8
 104              		.cfi_offset 6, -4
 105              	.LBB2:
   3:Core/Src/menu.cpp **** }
 106              		.loc 1 3 36 view .LVU10
 107 0002 0A4C     		ldr	r4, .L12
 108 0004 2588     		ldrh	r5, [r4]	@ unaligned
 109 0006 A478     		ldrb	r4, [r4, #2]	@ zero_extendqisi2
 110 0008 4580     		strh	r5, [r0, #2]	@ unaligned
 111 000a 0471     		strb	r4, [r0, #4]
 112 000c C580     		strh	r5, [r0, #6]	@ unaligned
 113 000e 0472     		strb	r4, [r0, #8]
 114 0010 4581     		strh	r5, [r0, #10]	@ unaligned
 115 0012 0473     		strb	r4, [r0, #12]
 116 0014 0026     		movs	r6, #0
 117 0016 4673     		strb	r6, [r0, #13]
 118 0018 C581     		strh	r5, [r0, #14]	@ unaligned
 119 001a 0474     		strb	r4, [r0, #16]
ARM GAS  /tmp/cc2EeMC6.s 			page 12


 120 001c 1E24     		movs	r4, #30
 121 001e 4474     		strb	r4, [r0, #17]
 122 0020 8674     		strb	r6, [r0, #18]
 123 0022 C674     		strb	r6, [r0, #19]
   5:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
 124              		.loc 1 5 5 is_stmt 1 view .LVU11
   5:Core/Src/menu.cpp **** void menu::menu_print() //Menu Print will be called every time the screen is updated in main via ti
 125              		.loc 1 5 10 is_stmt 0 view .LVU12
 126 0024 4161     		str	r1, [r0, #20]
   6:Core/Src/menu.cpp **** }
 127              		.loc 1 6 5 is_stmt 1 view .LVU13
   6:Core/Src/menu.cpp **** }
 128              		.loc 1 6 10 is_stmt 0 view .LVU14
 129 0026 8261     		str	r2, [r0, #24]
 130              	.LBE2:
   7:Core/Src/menu.cpp **** 
 131              		.loc 1 7 1 view .LVU15
 132 0028 70BC     		pop	{r4, r5, r6}
 133              	.LCFI2:
 134              		.cfi_restore 6
 135              		.cfi_restore 5
 136              		.cfi_restore 4
 137              		.cfi_def_cfa_offset 0
 138 002a 7047     		bx	lr
 139              	.L13:
 140              		.align	2
 141              	.L12:
 142 002c 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE1985:
 145              		.cantunwind
 146              		.fnend
 148              		.global	_ZN4menuC1EP4oledP4uart
 149              		.thumb_set _ZN4menuC1EP4oledP4uart,_ZN4menuC2EP4oledP4uart
 150              		.section	.rodata._ZN4menu10menu_printEv.str1.4,"aMS",%progbits,1
 151              		.align	2
 152              	.LC1:
 153 0000 43252E32 		.ascii	"C%.2s S%.2s  \000"
 153      73205325 
 153      2E327320 
 153      2000
 154 000e 0000     		.align	2
 155              	.LC2:
 156 0010 4348414E 		.ascii	"CHAN     \000"
 156      20202020 
 156      2000
 157 001a 0000     		.align	2
 158              	.LC3:
 159 001c 53515541 		.ascii	"SQUASH    \000"
 159      53482020 
 159      202000
 160 0027 00       		.align	2
 161              	.LC4:
 162 0028 44697370 		.ascii	"Disp TMO\000"
 162      20544D4F 
 162      00
 163 0031 000000   		.align	2
ARM GAS  /tmp/cc2EeMC6.s 			page 13


 164              	.LC5:
 165 0034 43483A25 		.ascii	"CH:%.2s    \000"
 165      2E327320 
 165      20202000 
 166              		.align	2
 167              	.LC6:
 168 0040 53513A25 		.ascii	"SQ:%.2s    \000"
 168      2E327320 
 168      20202000 
 169              		.align	2
 170              	.LC7:
 171 004c 44533A25 		.ascii	"DS:%.2s    \000"
 171      2E327320 
 171      20202000 
 172              		.align	2
 173              	.LC8:
 174 0058 6D656E75 		.ascii	"menu backk   \000"
 174      20626163 
 174      6B6B2020 
 174      2000
 175              		.section	.text._ZN4menu10menu_printEv,"ax",%progbits
 176              		.align	1
 177              		.global	_ZN4menu10menu_printEv
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	_ZN4menu10menu_printEv:
 184              		.fnstart
 185              	.LVL5:
 186              	.LFB1987:
  10:Core/Src/menu.cpp ****     char temp [22];
 187              		.loc 1 10 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 24
 190              		@ frame_needed = 0, uses_anonymous_args = 0
  10:Core/Src/menu.cpp ****     char temp [22];
 191              		.loc 1 10 1 is_stmt 0 view .LVU17
 192 0000 10B5     		push	{r4, lr}
 193              		.save {r4, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198              		.pad #32
 199 0002 88B0     		sub	sp, sp, #32
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 40
 202 0004 0446     		mov	r4, r0
  11:Core/Src/menu.cpp **** 
 203              		.loc 1 11 5 is_stmt 1 view .LVU18
  13:Core/Src/menu.cpp ****     {
 204              		.loc 1 13 5 view .LVU19
  13:Core/Src/menu.cpp ****     {
 205              		.loc 1 13 13 is_stmt 0 view .LVU20
 206 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 207 0008 182B     		cmp	r3, #24
ARM GAS  /tmp/cc2EeMC6.s 			page 14


 208 000a 1ED8     		bhi	.L15
 209 000c DFE803F0 		tbb	[pc, r3]
 210              	.L17:
 211 0010 0D       		.byte	(.L23-.L17)/2
 212 0011 29       		.byte	(.L22-.L17)/2
 213 0012 39       		.byte	(.L21-.L17)/2
 214 0013 4C       		.byte	(.L20-.L17)/2
 215 0014 1D       		.byte	(.L15-.L17)/2
 216 0015 1D       		.byte	(.L15-.L17)/2
 217 0016 1D       		.byte	(.L15-.L17)/2
 218 0017 1D       		.byte	(.L15-.L17)/2
 219 0018 5C       		.byte	(.L19-.L17)/2
 220 0019 1D       		.byte	(.L15-.L17)/2
 221 001a 1D       		.byte	(.L15-.L17)/2
 222 001b 1D       		.byte	(.L15-.L17)/2
 223 001c 1D       		.byte	(.L15-.L17)/2
 224 001d 1D       		.byte	(.L15-.L17)/2
 225 001e 1D       		.byte	(.L15-.L17)/2
 226 001f 1D       		.byte	(.L15-.L17)/2
 227 0020 6C       		.byte	(.L18-.L17)/2
 228 0021 1D       		.byte	(.L15-.L17)/2
 229 0022 1D       		.byte	(.L15-.L17)/2
 230 0023 1D       		.byte	(.L15-.L17)/2
 231 0024 1D       		.byte	(.L15-.L17)/2
 232 0025 1D       		.byte	(.L15-.L17)/2
 233 0026 1D       		.byte	(.L15-.L17)/2
 234 0027 1D       		.byte	(.L15-.L17)/2
 235 0028 7C       		.byte	(.L16-.L17)/2
 236 0029 00       		.p2align 1
 237              	.L23:
  15:Core/Src/menu.cpp ****             sprintf(temp, "C%.2s S%.2s  ", ch,sq);
 238              		.loc 1 15 9 is_stmt 1 view .LVU21
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 239              		.loc 1 16 13 view .LVU22
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 240              		.loc 1 16 20 is_stmt 0 view .LVU23
 241 002a 831C     		adds	r3, r0, #2
 242 002c 821D     		adds	r2, r0, #6
 243 002e 3F49     		ldr	r1, .L25
 244 0030 02A8     		add	r0, sp, #8
 245              	.LVL6:
  16:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 246              		.loc 1 16 20 view .LVU24
 247 0032 FFF7FEFF 		bl	sprintf
 248              	.LVL7:
  17:Core/Src/menu.cpp ****             break; 
 249              		.loc 1 17 13 is_stmt 1 view .LVU25
  17:Core/Src/menu.cpp ****             break; 
 250              		.loc 1 17 30 is_stmt 0 view .LVU26
 251 0036 3E4B     		ldr	r3, .L25+4
 252 0038 1322     		movs	r2, #19
 253 003a 0192     		str	r2, [sp, #4]
 254 003c 0022     		movs	r2, #0
 255 003e 0092     		str	r2, [sp]
 256 0040 0CCB     		ldm	r3, {r2, r3}
 257 0042 02A9     		add	r1, sp, #8
 258 0044 6069     		ldr	r0, [r4, #20]
ARM GAS  /tmp/cc2EeMC6.s 			page 15


 259 0046 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 260              	.LVL8:
 261              	.L15:
  46:Core/Src/menu.cpp **** 
 262              		.loc 1 46 5 is_stmt 1 view .LVU27
  46:Core/Src/menu.cpp **** 
 263              		.loc 1 46 22 is_stmt 0 view .LVU28
 264 004a 3A4B     		ldr	r3, .L25+8
 265 004c 2E22     		movs	r2, #46
 266 004e 0192     		str	r2, [sp, #4]
 267 0050 0022     		movs	r2, #0
 268 0052 0092     		str	r2, [sp]
 269 0054 0CCB     		ldm	r3, {r2, r3}
 270 0056 3849     		ldr	r1, .L25+12
 271 0058 6069     		ldr	r0, [r4, #20]
 272 005a FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 273              	.LVL9:
  48:Core/Src/menu.cpp **** 
 274              		.loc 1 48 1 view .LVU29
 275 005e 08B0     		add	sp, sp, #32
 276              	.LCFI5:
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 8
 279              		@ sp needed
 280 0060 10BD     		pop	{r4, pc}
 281              	.LVL10:
 282              	.L22:
 283              	.LCFI6:
 284              		.cfi_restore_state
  19:Core/Src/menu.cpp ****             sprintf(temp, "CHAN     ");
 285              		.loc 1 19 9 is_stmt 1 view .LVU30
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 286              		.loc 1 20 13 view .LVU31
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 287              		.loc 1 20 20 is_stmt 0 view .LVU32
 288 0062 364A     		ldr	r2, .L25+16
 289 0064 02AB     		add	r3, sp, #8
 290 0066 07CA     		ldm	r2, {r0, r1, r2}
 291              	.LVL11:
  20:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 292              		.loc 1 20 20 view .LVU33
 293 0068 03C3     		stmia	r3!, {r0, r1}
 294 006a 1A80     		strh	r2, [r3]	@ movhi
  21:Core/Src/menu.cpp ****             break;
 295              		.loc 1 21 13 is_stmt 1 view .LVU34
  21:Core/Src/menu.cpp ****             break;
 296              		.loc 1 21 30 is_stmt 0 view .LVU35
 297 006c 304B     		ldr	r3, .L25+4
 298 006e 1322     		movs	r2, #19
 299 0070 0192     		str	r2, [sp, #4]
 300 0072 0022     		movs	r2, #0
 301 0074 0092     		str	r2, [sp]
 302 0076 0CCB     		ldm	r3, {r2, r3}
 303 0078 02A9     		add	r1, sp, #8
 304 007a 6069     		ldr	r0, [r4, #20]
 305 007c FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 306              	.LVL12:
ARM GAS  /tmp/cc2EeMC6.s 			page 16


 307 0080 E3E7     		b	.L15
 308              	.LVL13:
 309              	.L21:
  23:Core/Src/menu.cpp ****             sprintf(temp, "SQUASH    ");
 310              		.loc 1 23 9 is_stmt 1 view .LVU36
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 311              		.loc 1 24 13 view .LVU37
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 312              		.loc 1 24 20 is_stmt 0 view .LVU38
 313 0082 2F4A     		ldr	r2, .L25+20
 314 0084 02AB     		add	r3, sp, #8
 315 0086 07CA     		ldm	r2, {r0, r1, r2}
 316              	.LVL14:
  24:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 317              		.loc 1 24 20 view .LVU39
 318 0088 03C3     		stmia	r3!, {r0, r1}
 319 008a 23F8022B 		strh	r2, [r3], #2	@ movhi
 320 008e 120C     		lsrs	r2, r2, #16
 321 0090 1A70     		strb	r2, [r3]
  25:Core/Src/menu.cpp ****             break;
 322              		.loc 1 25 13 is_stmt 1 view .LVU40
  25:Core/Src/menu.cpp ****             break;
 323              		.loc 1 25 30 is_stmt 0 view .LVU41
 324 0092 274B     		ldr	r3, .L25+4
 325 0094 1322     		movs	r2, #19
 326 0096 0192     		str	r2, [sp, #4]
 327 0098 0022     		movs	r2, #0
 328 009a 0092     		str	r2, [sp]
 329 009c 0CCB     		ldm	r3, {r2, r3}
 330 009e 02A9     		add	r1, sp, #8
 331 00a0 6069     		ldr	r0, [r4, #20]
 332 00a2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 333              	.LVL15:
 334 00a6 D0E7     		b	.L15
 335              	.LVL16:
 336              	.L20:
  27:Core/Src/menu.cpp ****             sprintf(temp, "Disp TMO"); 
 337              		.loc 1 27 9 is_stmt 1 view .LVU42
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 338              		.loc 1 28 13 view .LVU43
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 339              		.loc 1 28 20 is_stmt 0 view .LVU44
 340 00a8 264A     		ldr	r2, .L25+24
 341 00aa 02AB     		add	r3, sp, #8
 342 00ac 07CA     		ldm	r2, {r0, r1, r2}
 343              	.LVL17:
  28:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 344              		.loc 1 28 20 view .LVU45
 345 00ae 03C3     		stmia	r3!, {r0, r1}
 346 00b0 1A70     		strb	r2, [r3]
  29:Core/Src/menu.cpp ****             break;
 347              		.loc 1 29 13 is_stmt 1 view .LVU46
  29:Core/Src/menu.cpp ****             break;
 348              		.loc 1 29 30 is_stmt 0 view .LVU47
 349 00b2 1F4B     		ldr	r3, .L25+4
 350 00b4 1322     		movs	r2, #19
 351 00b6 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cc2EeMC6.s 			page 17


 352 00b8 0022     		movs	r2, #0
 353 00ba 0092     		str	r2, [sp]
 354 00bc 0CCB     		ldm	r3, {r2, r3}
 355 00be 02A9     		add	r1, sp, #8
 356 00c0 6069     		ldr	r0, [r4, #20]
 357 00c2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 358              	.LVL18:
 359 00c6 C0E7     		b	.L15
 360              	.LVL19:
 361              	.L19:
  31:Core/Src/menu.cpp ****             sprintf(temp, "CH:%.2s    ",ch);
 362              		.loc 1 31 9 is_stmt 1 view .LVU48
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 363              		.loc 1 32 13 view .LVU49
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 364              		.loc 1 32 20 is_stmt 0 view .LVU50
 365 00c8 821D     		adds	r2, r0, #6
 366 00ca 1F49     		ldr	r1, .L25+28
 367 00cc 02A8     		add	r0, sp, #8
 368              	.LVL20:
  32:Core/Src/menu.cpp ****             oled1->oled_print(temp,Font_16x26, 0,19);
 369              		.loc 1 32 20 view .LVU51
 370 00ce FFF7FEFF 		bl	sprintf
 371              	.LVL21:
  33:Core/Src/menu.cpp ****             break;
 372              		.loc 1 33 13 is_stmt 1 view .LVU52
  33:Core/Src/menu.cpp ****             break;
 373              		.loc 1 33 30 is_stmt 0 view .LVU53
 374 00d2 174B     		ldr	r3, .L25+4
 375 00d4 1322     		movs	r2, #19
 376 00d6 0192     		str	r2, [sp, #4]
 377 00d8 0022     		movs	r2, #0
 378 00da 0092     		str	r2, [sp]
 379 00dc 0CCB     		ldm	r3, {r2, r3}
 380 00de 02A9     		add	r1, sp, #8
 381 00e0 6069     		ldr	r0, [r4, #20]
 382 00e2 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 383              	.LVL22:
 384 00e6 B0E7     		b	.L15
 385              	.LVL23:
 386              	.L18:
  35:Core/Src/menu.cpp ****             sprintf(temp, "SQ:%.2s    ",sq);
 387              		.loc 1 35 9 is_stmt 1 view .LVU54
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 388              		.loc 1 36 13 view .LVU55
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 389              		.loc 1 36 20 is_stmt 0 view .LVU56
 390 00e8 821C     		adds	r2, r0, #2
 391 00ea 1849     		ldr	r1, .L25+32
 392 00ec 02A8     		add	r0, sp, #8
 393              	.LVL24:
  36:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 394              		.loc 1 36 20 view .LVU57
 395 00ee FFF7FEFF 		bl	sprintf
 396              	.LVL25:
  37:Core/Src/menu.cpp ****             break;
 397              		.loc 1 37 13 is_stmt 1 view .LVU58
ARM GAS  /tmp/cc2EeMC6.s 			page 18


  37:Core/Src/menu.cpp ****             break;
 398              		.loc 1 37 30 is_stmt 0 view .LVU59
 399 00f2 0F4B     		ldr	r3, .L25+4
 400 00f4 1322     		movs	r2, #19
 401 00f6 0192     		str	r2, [sp, #4]
 402 00f8 0022     		movs	r2, #0
 403 00fa 0092     		str	r2, [sp]
 404 00fc 0CCB     		ldm	r3, {r2, r3}
 405 00fe 02A9     		add	r1, sp, #8
 406 0100 6069     		ldr	r0, [r4, #20]
 407 0102 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 408              	.LVL26:
 409 0106 A0E7     		b	.L15
 410              	.LVL27:
 411              	.L16:
  39:Core/Src/menu.cpp ****             sprintf(temp, "DS:%.2s    ",tmo);
 412              		.loc 1 39 9 is_stmt 1 view .LVU60
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 413              		.loc 1 40 13 view .LVU61
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 414              		.loc 1 40 20 is_stmt 0 view .LVU62
 415 0108 00F10E02 		add	r2, r0, #14
 416 010c 1049     		ldr	r1, .L25+36
 417 010e 02A8     		add	r0, sp, #8
 418              	.LVL28:
  40:Core/Src/menu.cpp ****             oled1->oled_print(temp, Font_16x26, 0,19);
 419              		.loc 1 40 20 view .LVU63
 420 0110 FFF7FEFF 		bl	sprintf
 421              	.LVL29:
  41:Core/Src/menu.cpp ****             break;
 422              		.loc 1 41 13 is_stmt 1 view .LVU64
  41:Core/Src/menu.cpp ****             break;
 423              		.loc 1 41 30 is_stmt 0 view .LVU65
 424 0114 064B     		ldr	r3, .L25+4
 425 0116 1322     		movs	r2, #19
 426 0118 0192     		str	r2, [sp, #4]
 427 011a 0022     		movs	r2, #0
 428 011c 0092     		str	r2, [sp]
 429 011e 0CCB     		ldm	r3, {r2, r3}
 430 0120 02A9     		add	r1, sp, #8
 431 0122 6069     		ldr	r0, [r4, #20]
 432 0124 FFF7FEFF 		bl	_ZN4oled10oled_printEPc9FontDef_ttt
 433              	.LVL30:
 434 0128 8FE7     		b	.L15
 435              	.L26:
 436 012a 00BF     		.align	2
 437              	.L25:
 438 012c 00000000 		.word	.LC1
 439 0130 00000000 		.word	Font_16x26
 440 0134 00000000 		.word	Font_11x18
 441 0138 58000000 		.word	.LC8
 442 013c 10000000 		.word	.LC2
 443 0140 1C000000 		.word	.LC3
 444 0144 28000000 		.word	.LC4
 445 0148 34000000 		.word	.LC5
 446 014c 40000000 		.word	.LC6
 447 0150 4C000000 		.word	.LC7
ARM GAS  /tmp/cc2EeMC6.s 			page 19


 448              		.cfi_endproc
 449              	.LFE1987:
 450              		.fnend
 452              		.section	.text._ZN4menu7menu_okEv,"ax",%progbits
 453              		.align	1
 454              		.global	_ZN4menu7menu_okEv
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	_ZN4menu7menu_okEv:
 461              		.fnstart
 462              	.LVL31:
 463              	.LFB1988:
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 464              		.loc 1 51 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
  51:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 468              		.loc 1 51 1 is_stmt 0 view .LVU67
 469 0000 38B5     		push	{r3, r4, r5, lr}
 470              		.save {r3, r4, r5, lr}
 471              	.LCFI7:
 472              		.cfi_def_cfa_offset 16
 473              		.cfi_offset 3, -16
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 5, -8
 476              		.cfi_offset 14, -4
 477 0002 0446     		mov	r4, r0
  52:Core/Src/menu.cpp ****     {
 478              		.loc 1 52 5 is_stmt 1 view .LVU68
  52:Core/Src/menu.cpp ****     {
 479              		.loc 1 52 28 is_stmt 0 view .LVU69
 480 0004 4069     		ldr	r0, [r0, #20]
 481              	.LVL32:
  52:Core/Src/menu.cpp ****     {
 482              		.loc 1 52 28 view .LVU70
 483 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 484              	.LVL33:
  52:Core/Src/menu.cpp ****     {
 485              		.loc 1 52 5 view .LVU71
 486 000a A0B1     		cbz	r0, .L28
  54:Core/Src/menu.cpp ****     }
 487              		.loc 1 54 9 is_stmt 1 view .LVU72
  54:Core/Src/menu.cpp ****     }
 488              		.loc 1 54 31 is_stmt 0 view .LVU73
 489 000c 6069     		ldr	r0, [r4, #20]
 490 000e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 491              	.LVL34:
 492              	.L29:
  62:Core/Src/menu.cpp ****     {
 493              		.loc 1 62 5 is_stmt 1 view .LVU74
  62:Core/Src/menu.cpp ****     {
 494              		.loc 1 62 13 is_stmt 0 view .LVU75
 495 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 496 0014 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc2EeMC6.s 			page 20


 497 0016 172B     		cmp	r3, #23
 498 0018 16D8     		bhi	.L27
 499 001a DFE803F0 		tbb	[pc, r3]
 500              	.L32:
 501 001e 13       		.byte	(.L37-.L32)/2
 502 001f 16       		.byte	(.L36-.L32)/2
 503 0020 19       		.byte	(.L35-.L32)/2
 504 0021 15       		.byte	(.L27-.L32)/2
 505 0022 15       		.byte	(.L27-.L32)/2
 506 0023 15       		.byte	(.L27-.L32)/2
 507 0024 15       		.byte	(.L27-.L32)/2
 508 0025 1C       		.byte	(.L34-.L32)/2
 509 0026 15       		.byte	(.L27-.L32)/2
 510 0027 15       		.byte	(.L27-.L32)/2
 511 0028 15       		.byte	(.L27-.L32)/2
 512 0029 15       		.byte	(.L27-.L32)/2
 513 002a 15       		.byte	(.L27-.L32)/2
 514 002b 15       		.byte	(.L27-.L32)/2
 515 002c 15       		.byte	(.L27-.L32)/2
 516 002d 29       		.byte	(.L33-.L32)/2
 517 002e 15       		.byte	(.L27-.L32)/2
 518 002f 15       		.byte	(.L27-.L32)/2
 519 0030 15       		.byte	(.L27-.L32)/2
 520 0031 15       		.byte	(.L27-.L32)/2
 521 0032 15       		.byte	(.L27-.L32)/2
 522 0033 15       		.byte	(.L27-.L32)/2
 523 0034 15       		.byte	(.L27-.L32)/2
 524 0035 36       		.byte	(.L31-.L32)/2
 525              		.p2align 1
 526              	.L28:
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 527              		.loc 1 58 9 is_stmt 1 view .LVU76
  58:Core/Src/menu.cpp ****         oled1->oled_resetTimer();
 528              		.loc 1 58 23 is_stmt 0 view .LVU77
 529 0036 6069     		ldr	r0, [r4, #20]
 530 0038 FFF7FEFF 		bl	_ZN4oled7oled_onEv
 531              	.LVL35:
  59:Core/Src/menu.cpp ****     }
 532              		.loc 1 59 9 is_stmt 1 view .LVU78
  59:Core/Src/menu.cpp ****     }
 533              		.loc 1 59 31 is_stmt 0 view .LVU79
 534 003c 6069     		ldr	r0, [r4, #20]
 535 003e FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 536              	.LVL36:
 537 0042 E6E7     		b	.L29
 538              	.L37:
  66:Core/Src/menu.cpp ****         menu_value=MENU_CH_IN;
 539              		.loc 1 66 5 is_stmt 1 view .LVU80
  67:Core/Src/menu.cpp ****         break;
 540              		.loc 1 67 9 view .LVU81
  67:Core/Src/menu.cpp ****         break;
 541              		.loc 1 67 19 is_stmt 0 view .LVU82
 542 0044 0823     		movs	r3, #8
 543 0046 2370     		strb	r3, [r4]
  68:Core/Src/menu.cpp ****     case MENU_SQ:
 544              		.loc 1 68 9 is_stmt 1 view .LVU83
 545              	.L27:
ARM GAS  /tmp/cc2EeMC6.s 			page 21


 108:Core/Src/menu.cpp **** 
 546              		.loc 1 108 1 is_stmt 0 view .LVU84
 547 0048 38BD     		pop	{r3, r4, r5, pc}
 548              	.LVL37:
 549              	.L36:
  69:Core/Src/menu.cpp ****         menu_value=MENU_SQ_IN;
 550              		.loc 1 69 5 is_stmt 1 view .LVU85
  70:Core/Src/menu.cpp ****         break;
 551              		.loc 1 70 9 view .LVU86
  70:Core/Src/menu.cpp ****         break;
 552              		.loc 1 70 19 is_stmt 0 view .LVU87
 553 004a 1023     		movs	r3, #16
 554 004c 2370     		strb	r3, [r4]
  71:Core/Src/menu.cpp ****     case MENU_TMO:
 555              		.loc 1 71 9 is_stmt 1 view .LVU88
 556 004e FBE7     		b	.L27
 557              	.L35:
  72:Core/Src/menu.cpp ****         menu_value=MENU_TMO_IN;
 558              		.loc 1 72 5 view .LVU89
  73:Core/Src/menu.cpp ****         break;
 559              		.loc 1 73 9 view .LVU90
  73:Core/Src/menu.cpp ****         break;
 560              		.loc 1 73 19 is_stmt 0 view .LVU91
 561 0050 1823     		movs	r3, #24
 562 0052 2370     		strb	r3, [r4]
  74:Core/Src/menu.cpp ****     case MENU_CH_IN:
 563              		.loc 1 74 9 is_stmt 1 view .LVU92
 564 0054 F8E7     		b	.L27
 565              	.L34:
  75:Core/Src/menu.cpp ****         cursorOn^=1;//switch the state of the cursor
 566              		.loc 1 75 5 view .LVU93
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 567              		.loc 1 76 9 view .LVU94
  76:Core/Src/menu.cpp ****         if(!cursorOn)
 568              		.loc 1 76 17 is_stmt 0 view .LVU95
 569 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 570 0058 83F00103 		eor	r3, r3, #1
 571 005c E374     		strb	r3, [r4, #19]
  77:Core/Src/menu.cpp ****         {
 572              		.loc 1 77 9 is_stmt 1 view .LVU96
 573 005e 002B     		cmp	r3, #0
 574 0060 F2D1     		bne	.L27
  79:Core/Src/menu.cpp ****             cursorPos=0;
 575              		.loc 1 79 13 view .LVU97
  79:Core/Src/menu.cpp ****             cursorPos=0;
 576              		.loc 1 79 23 is_stmt 0 view .LVU98
 577 0062 A01D     		adds	r0, r4, #6
 578 0064 FFF7FEFF 		bl	atoi
 579              	.LVL38:
  79:Core/Src/menu.cpp ****             cursorPos=0;
 580              		.loc 1 79 18 view .LVU99
 581 0068 6072     		strb	r0, [r4, #9]
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 582              		.loc 1 80 13 is_stmt 1 view .LVU100
  80:Core/Src/menu.cpp ****             //TODO:Call the Modules set channel 
 583              		.loc 1 80 22 is_stmt 0 view .LVU101
 584 006a 0023     		movs	r3, #0
ARM GAS  /tmp/cc2EeMC6.s 			page 22


 585 006c A374     		strb	r3, [r4, #18]
 586 006e EBE7     		b	.L27
 587              	.L33:
  84:Core/Src/menu.cpp ****         cursorOn^=1;
 588              		.loc 1 84 5 is_stmt 1 view .LVU102
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 589              		.loc 1 85 9 view .LVU103
  85:Core/Src/menu.cpp ****         if(!cursorOn)
 590              		.loc 1 85 17 is_stmt 0 view .LVU104
 591 0070 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 592 0072 83F00103 		eor	r3, r3, #1
 593 0076 E374     		strb	r3, [r4, #19]
  86:Core/Src/menu.cpp ****         {
 594              		.loc 1 86 9 is_stmt 1 view .LVU105
 595 0078 002B     		cmp	r3, #0
 596 007a E5D1     		bne	.L27
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 597              		.loc 1 88 13 view .LVU106
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 598              		.loc 1 88 23 is_stmt 0 view .LVU107
 599 007c A01C     		adds	r0, r4, #2
 600 007e FFF7FEFF 		bl	atoi
 601              	.LVL39:
  88:Core/Src/menu.cpp ****             cursorPos=0; //reset the cursor positon
 602              		.loc 1 88 18 view .LVU108
 603 0082 6072     		strb	r0, [r4, #9]
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 604              		.loc 1 89 13 is_stmt 1 view .LVU109
  89:Core/Src/menu.cpp ****             //TODO:Call the Modules set squash function
 605              		.loc 1 89 22 is_stmt 0 view .LVU110
 606 0084 0023     		movs	r3, #0
 607 0086 A374     		strb	r3, [r4, #18]
 608 0088 DEE7     		b	.L27
 609              	.L31:
  93:Core/Src/menu.cpp ****         cursorOn%=1;
 610              		.loc 1 93 5 is_stmt 1 view .LVU111
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 611              		.loc 1 94 9 view .LVU112
  94:Core/Src/menu.cpp ****         if(!cursorOn)
 612              		.loc 1 94 17 is_stmt 0 view .LVU113
 613 008a 0025     		movs	r5, #0
 614 008c E574     		strb	r5, [r4, #19]
  95:Core/Src/menu.cpp ****         {
 615              		.loc 1 95 9 is_stmt 1 view .LVU114
  97:Core/Src/menu.cpp ****             cursorPos=0;
 616              		.loc 1 97 13 view .LVU115
  97:Core/Src/menu.cpp ****             cursorPos=0;
 617              		.loc 1 97 24 is_stmt 0 view .LVU116
 618 008e 04F10E00 		add	r0, r4, #14
 619 0092 FFF7FEFF 		bl	atoi
 620              	.LVL40:
  97:Core/Src/menu.cpp ****             cursorPos=0;
 621              		.loc 1 97 19 view .LVU117
 622 0096 6074     		strb	r0, [r4, #17]
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
 623              		.loc 1 98 13 is_stmt 1 view .LVU118
  98:Core/Src/menu.cpp ****             //TODO:Implement the display timer and use tmoVal to modify the prescaler
ARM GAS  /tmp/cc2EeMC6.s 			page 23


 624              		.loc 1 98 22 is_stmt 0 view .LVU119
 625 0098 A574     		strb	r5, [r4, #18]
 108:Core/Src/menu.cpp **** 
 626              		.loc 1 108 1 view .LVU120
 627 009a D5E7     		b	.L27
 628              		.cfi_endproc
 629              	.LFE1988:
 630              		.fnend
 632              		.section	.text._ZN4menu9menu_nextEv,"ax",%progbits
 633              		.align	1
 634              		.global	_ZN4menu9menu_nextEv
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	_ZN4menu9menu_nextEv:
 641              		.fnstart
 642              	.LVL41:
 643              	.LFB1989:
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 644              		.loc 1 111 1 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 648              		.loc 1 111 1 is_stmt 0 view .LVU122
 649 0000 10B5     		push	{r4, lr}
 650              		.save {r4, lr}
 651              	.LCFI8:
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 4, -8
 654              		.cfi_offset 14, -4
 655 0002 0446     		mov	r4, r0
 112:Core/Src/menu.cpp ****     {
 656              		.loc 1 112 5 is_stmt 1 view .LVU123
 112:Core/Src/menu.cpp ****     {
 657              		.loc 1 112 28 is_stmt 0 view .LVU124
 658 0004 4069     		ldr	r0, [r0, #20]
 659              	.LVL42:
 112:Core/Src/menu.cpp ****     {
 660              		.loc 1 112 28 view .LVU125
 661 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 662              	.LVL43:
 112:Core/Src/menu.cpp ****     {
 663              		.loc 1 112 5 view .LVU126
 664 000a 88B9     		cbnz	r0, .L49
 665              	.L40:
 116:Core/Src/menu.cpp ****     {
 666              		.loc 1 116 5 is_stmt 1 view .LVU127
 116:Core/Src/menu.cpp ****     {
 667              		.loc 1 116 13 is_stmt 0 view .LVU128
 668 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 669 000e 013B     		subs	r3, r3, #1
 670 0010 172B     		cmp	r3, #23
 671 0012 1AD8     		bhi	.L39
 672 0014 DFE803F0 		tbb	[pc, r3]
 673              	.L43:
ARM GAS  /tmp/cc2EeMC6.s 			page 24


 674 0018 10       		.byte	(.L47-.L43)/2
 675 0019 13       		.byte	(.L46-.L43)/2
 676 001a 13       		.byte	(.L46-.L43)/2
 677 001b 19       		.byte	(.L39-.L43)/2
 678 001c 19       		.byte	(.L39-.L43)/2
 679 001d 19       		.byte	(.L39-.L43)/2
 680 001e 19       		.byte	(.L39-.L43)/2
 681 001f 15       		.byte	(.L45-.L43)/2
 682 0020 19       		.byte	(.L39-.L43)/2
 683 0021 19       		.byte	(.L39-.L43)/2
 684 0022 19       		.byte	(.L39-.L43)/2
 685 0023 19       		.byte	(.L39-.L43)/2
 686 0024 19       		.byte	(.L39-.L43)/2
 687 0025 19       		.byte	(.L39-.L43)/2
 688 0026 19       		.byte	(.L39-.L43)/2
 689 0027 1A       		.byte	(.L44-.L43)/2
 690 0028 19       		.byte	(.L39-.L43)/2
 691 0029 19       		.byte	(.L39-.L43)/2
 692 002a 19       		.byte	(.L39-.L43)/2
 693 002b 19       		.byte	(.L39-.L43)/2
 694 002c 19       		.byte	(.L39-.L43)/2
 695 002d 19       		.byte	(.L39-.L43)/2
 696 002e 19       		.byte	(.L39-.L43)/2
 697 002f 1F       		.byte	(.L42-.L43)/2
 698              		.p2align 1
 699              	.L49:
 114:Core/Src/menu.cpp ****     }
 700              		.loc 1 114 9 is_stmt 1 view .LVU129
 114:Core/Src/menu.cpp ****     }
 701              		.loc 1 114 31 is_stmt 0 view .LVU130
 702 0030 6069     		ldr	r0, [r4, #20]
 703 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 704              	.LVL44:
 705 0036 E9E7     		b	.L40
 706              	.L47:
 120:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 707              		.loc 1 120 5 is_stmt 1 view .LVU131
 121:Core/Src/menu.cpp ****         break;
 708              		.loc 1 121 9 view .LVU132
 121:Core/Src/menu.cpp ****         break;
 709              		.loc 1 121 19 is_stmt 0 view .LVU133
 710 0038 0223     		movs	r3, #2
 711 003a 2370     		strb	r3, [r4]
 122:Core/Src/menu.cpp ****     case MENU_SQ:
 712              		.loc 1 122 9 is_stmt 1 view .LVU134
 713 003c 05E0     		b	.L39
 714              	.L46:
 125:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 715              		.loc 1 125 5 view .LVU135
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
 716              		.loc 1 126 9 view .LVU136
 126:Core/Src/menu.cpp ****     case MENU_CH_IN:
 717              		.loc 1 126 19 is_stmt 0 view .LVU137
 718 003e 0123     		movs	r3, #1
 719 0040 2370     		strb	r3, [r4]
 720              	.L45:
 127:Core/Src/menu.cpp ****         cursorPos^=cursorOn; // If the cursor is on switch position
ARM GAS  /tmp/cc2EeMC6.s 			page 25


 721              		.loc 1 127 5 is_stmt 1 view .LVU138
 128:Core/Src/menu.cpp ****         break;
 722              		.loc 1 128 9 view .LVU139
 128:Core/Src/menu.cpp ****         break;
 723              		.loc 1 128 20 is_stmt 0 view .LVU140
 724 0042 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 128:Core/Src/menu.cpp ****         break;
 725              		.loc 1 128 18 view .LVU141
 726 0044 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 727 0046 5340     		eors	r3, r3, r2
 728 0048 A374     		strb	r3, [r4, #18]
 129:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 729              		.loc 1 129 9 is_stmt 1 view .LVU142
 730              	.L39:
 140:Core/Src/menu.cpp **** 
 731              		.loc 1 140 1 is_stmt 0 view .LVU143
 732 004a 10BD     		pop	{r4, pc}
 733              	.LVL45:
 734              	.L44:
 130:Core/Src/menu.cpp ****         cursorPos^=cursorOn;//TODO: Add a Draw cursor function 
 735              		.loc 1 130 5 is_stmt 1 view .LVU144
 131:Core/Src/menu.cpp ****         break;
 736              		.loc 1 131 9 view .LVU145
 131:Core/Src/menu.cpp ****         break;
 737              		.loc 1 131 20 is_stmt 0 view .LVU146
 738 004c E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 131:Core/Src/menu.cpp ****         break;
 739              		.loc 1 131 18 view .LVU147
 740 004e A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 741 0050 5340     		eors	r3, r3, r2
 742 0052 A374     		strb	r3, [r4, #18]
 132:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 743              		.loc 1 132 9 is_stmt 1 view .LVU148
 744 0054 F9E7     		b	.L39
 745              	.L42:
 133:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 746              		.loc 1 133 5 view .LVU149
 134:Core/Src/menu.cpp ****         break;
 747              		.loc 1 134 9 view .LVU150
 134:Core/Src/menu.cpp ****         break;
 748              		.loc 1 134 20 is_stmt 0 view .LVU151
 749 0056 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 134:Core/Src/menu.cpp ****         break;
 750              		.loc 1 134 18 view .LVU152
 751 0058 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 752 005a 5340     		eors	r3, r3, r2
 753 005c A374     		strb	r3, [r4, #18]
 135:Core/Src/menu.cpp **** 
 754              		.loc 1 135 9 is_stmt 1 view .LVU153
 140:Core/Src/menu.cpp **** 
 755              		.loc 1 140 1 is_stmt 0 view .LVU154
 756 005e F4E7     		b	.L39
 757              		.cfi_endproc
 758              	.LFE1989:
 759              		.fnend
 761              		.section	.text._ZN4menu9menu_menuEv,"ax",%progbits
 762              		.align	1
ARM GAS  /tmp/cc2EeMC6.s 			page 26


 763              		.global	_ZN4menu9menu_menuEv
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu fpv4-sp-d16
 769              	_ZN4menu9menu_menuEv:
 770              		.fnstart
 771              	.LVL46:
 772              	.LFB1990:
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 773              		.loc 1 143 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn())
 777              		.loc 1 143 1 is_stmt 0 view .LVU156
 778 0000 10B5     		push	{r4, lr}
 779              		.save {r4, lr}
 780              	.LCFI9:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 4, -8
 783              		.cfi_offset 14, -4
 784 0002 0446     		mov	r4, r0
 144:Core/Src/menu.cpp ****     {
 785              		.loc 1 144 5 is_stmt 1 view .LVU157
 144:Core/Src/menu.cpp ****     {
 786              		.loc 1 144 28 is_stmt 0 view .LVU158
 787 0004 4069     		ldr	r0, [r0, #20]
 788              	.LVL47:
 144:Core/Src/menu.cpp ****     {
 789              		.loc 1 144 28 view .LVU159
 790 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 791              	.LVL48:
 144:Core/Src/menu.cpp ****     {
 792              		.loc 1 144 5 view .LVU160
 793 000a 10B9     		cbnz	r0, .L53
 794              	.L51:
 148:Core/Src/menu.cpp **** }
 795              		.loc 1 148 5 is_stmt 1 view .LVU161
 148:Core/Src/menu.cpp **** }
 796              		.loc 1 148 16 is_stmt 0 view .LVU162
 797 000c 0123     		movs	r3, #1
 798 000e 2370     		strb	r3, [r4]
 149:Core/Src/menu.cpp **** 
 799              		.loc 1 149 1 view .LVU163
 800 0010 10BD     		pop	{r4, pc}
 801              	.LVL49:
 802              	.L53:
 146:Core/Src/menu.cpp ****     }
 803              		.loc 1 146 9 is_stmt 1 view .LVU164
 146:Core/Src/menu.cpp ****     }
 804              		.loc 1 146 31 is_stmt 0 view .LVU165
 805 0012 6069     		ldr	r0, [r4, #20]
 806 0014 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 807              	.LVL50:
 808 0018 F8E7     		b	.L51
 809              		.cfi_endproc
ARM GAS  /tmp/cc2EeMC6.s 			page 27


 810              	.LFE1990:
 811              		.fnend
 813              		.section	.text._ZN4menu9menu_backEv,"ax",%progbits
 814              		.align	1
 815              		.global	_ZN4menu9menu_backEv
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	_ZN4menu9menu_backEv:
 822              		.fnstart
 823              	.LVL51:
 824              	.LFB1991:
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 825              		.loc 1 152 1 is_stmt 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 829              		.loc 1 152 1 is_stmt 0 view .LVU167
 830 0000 10B5     		push	{r4, lr}
 831              		.save {r4, lr}
 832              	.LCFI10:
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 4, -8
 835              		.cfi_offset 14, -4
 836 0002 0446     		mov	r4, r0
 153:Core/Src/menu.cpp ****     {
 837              		.loc 1 153 5 is_stmt 1 view .LVU168
 153:Core/Src/menu.cpp ****     {
 838              		.loc 1 153 28 is_stmt 0 view .LVU169
 839 0004 4069     		ldr	r0, [r0, #20]
 840              	.LVL52:
 153:Core/Src/menu.cpp ****     {
 841              		.loc 1 153 28 view .LVU170
 842 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 843              	.LVL53:
 153:Core/Src/menu.cpp ****     {
 844              		.loc 1 153 5 view .LVU171
 845 000a 18B9     		cbnz	r0, .L57
 846              	.L55:
 157:Core/Src/menu.cpp **** }
 847              		.loc 1 157 5 is_stmt 1 view .LVU172
 157:Core/Src/menu.cpp **** }
 848              		.loc 1 157 36 is_stmt 0 view .LVU173
 849 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 157:Core/Src/menu.cpp **** }
 850              		.loc 1 157 18 view .LVU174
 851 000e DB08     		lsrs	r3, r3, #3
 157:Core/Src/menu.cpp **** }
 852              		.loc 1 157 16 view .LVU175
 853 0010 2370     		strb	r3, [r4]
 158:Core/Src/menu.cpp **** 
 854              		.loc 1 158 1 view .LVU176
 855 0012 10BD     		pop	{r4, pc}
 856              	.LVL54:
 857              	.L57:
ARM GAS  /tmp/cc2EeMC6.s 			page 28


 155:Core/Src/menu.cpp ****     }
 858              		.loc 1 155 9 is_stmt 1 view .LVU177
 155:Core/Src/menu.cpp ****     }
 859              		.loc 1 155 31 is_stmt 0 view .LVU178
 860 0014 6069     		ldr	r0, [r4, #20]
 861 0016 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 862              	.LVL55:
 863 001a F7E7     		b	.L55
 864              		.cfi_endproc
 865              	.LFE1991:
 866              		.fnend
 868              		.section	.text._ZN4menu9menu_prevEv,"ax",%progbits
 869              		.align	1
 870              		.global	_ZN4menu9menu_prevEv
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	_ZN4menu9menu_prevEv:
 877              		.fnstart
 878              	.LVL56:
 879              	.LFB1992:
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 880              		.loc 1 161 1 is_stmt 1 view -0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 884              		.loc 1 161 1 is_stmt 0 view .LVU180
 885 0000 10B5     		push	{r4, lr}
 886              		.save {r4, lr}
 887              	.LCFI11:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 4, -8
 890              		.cfi_offset 14, -4
 891 0002 0446     		mov	r4, r0
 162:Core/Src/menu.cpp ****     {
 892              		.loc 1 162 5 is_stmt 1 view .LVU181
 162:Core/Src/menu.cpp ****     {
 893              		.loc 1 162 28 is_stmt 0 view .LVU182
 894 0004 4069     		ldr	r0, [r0, #20]
 895              	.LVL57:
 162:Core/Src/menu.cpp ****     {
 896              		.loc 1 162 28 view .LVU183
 897 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 898              	.LVL58:
 162:Core/Src/menu.cpp ****     {
 899              		.loc 1 162 5 view .LVU184
 900 000a 88B9     		cbnz	r0, .L69
 901              	.L59:
 166:Core/Src/menu.cpp ****     {
 902              		.loc 1 166 5 is_stmt 1 view .LVU185
 166:Core/Src/menu.cpp ****     {
 903              		.loc 1 166 13 is_stmt 0 view .LVU186
 904 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 905 000e 013B     		subs	r3, r3, #1
 906 0010 172B     		cmp	r3, #23
ARM GAS  /tmp/cc2EeMC6.s 			page 29


 907 0012 13D8     		bhi	.L58
 908 0014 DFE803F0 		tbb	[pc, r3]
 909              	.L62:
 910 0018 10       		.byte	(.L67-.L62)/2
 911 0019 13       		.byte	(.L66-.L62)/2
 912 001a 16       		.byte	(.L65-.L62)/2
 913 001b 12       		.byte	(.L58-.L62)/2
 914 001c 12       		.byte	(.L58-.L62)/2
 915 001d 12       		.byte	(.L58-.L62)/2
 916 001e 12       		.byte	(.L58-.L62)/2
 917 001f 19       		.byte	(.L64-.L62)/2
 918 0020 12       		.byte	(.L58-.L62)/2
 919 0021 12       		.byte	(.L58-.L62)/2
 920 0022 12       		.byte	(.L58-.L62)/2
 921 0023 12       		.byte	(.L58-.L62)/2
 922 0024 12       		.byte	(.L58-.L62)/2
 923 0025 12       		.byte	(.L58-.L62)/2
 924 0026 12       		.byte	(.L58-.L62)/2
 925 0027 1E       		.byte	(.L63-.L62)/2
 926 0028 12       		.byte	(.L58-.L62)/2
 927 0029 12       		.byte	(.L58-.L62)/2
 928 002a 12       		.byte	(.L58-.L62)/2
 929 002b 12       		.byte	(.L58-.L62)/2
 930 002c 12       		.byte	(.L58-.L62)/2
 931 002d 12       		.byte	(.L58-.L62)/2
 932 002e 12       		.byte	(.L58-.L62)/2
 933 002f 23       		.byte	(.L61-.L62)/2
 934              		.p2align 1
 935              	.L69:
 164:Core/Src/menu.cpp ****     }
 936              		.loc 1 164 9 is_stmt 1 view .LVU187
 164:Core/Src/menu.cpp ****     }
 937              		.loc 1 164 31 is_stmt 0 view .LVU188
 938 0030 6069     		ldr	r0, [r4, #20]
 939 0032 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 940              	.LVL59:
 941 0036 E9E7     		b	.L59
 942              	.L67:
 170:Core/Src/menu.cpp ****         menu_value=MENU_TMO;
 943              		.loc 1 170 5 is_stmt 1 view .LVU189
 171:Core/Src/menu.cpp ****         break;
 944              		.loc 1 171 9 view .LVU190
 171:Core/Src/menu.cpp ****         break;
 945              		.loc 1 171 19 is_stmt 0 view .LVU191
 946 0038 0323     		movs	r3, #3
 947 003a 2370     		strb	r3, [r4]
 172:Core/Src/menu.cpp ****     case MENU_SQ:
 948              		.loc 1 172 9 is_stmt 1 view .LVU192
 949              	.L58:
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 950              		.loc 1 192 1 is_stmt 0 view .LVU193
 951 003c 10BD     		pop	{r4, pc}
 952              	.LVL60:
 953              	.L66:
 173:Core/Src/menu.cpp ****         menu_value=MENU_CH;
 954              		.loc 1 173 5 is_stmt 1 view .LVU194
 174:Core/Src/menu.cpp ****         break;
ARM GAS  /tmp/cc2EeMC6.s 			page 30


 955              		.loc 1 174 9 view .LVU195
 174:Core/Src/menu.cpp ****         break;
 956              		.loc 1 174 19 is_stmt 0 view .LVU196
 957 003e 0123     		movs	r3, #1
 958 0040 2370     		strb	r3, [r4]
 175:Core/Src/menu.cpp ****     case MENU_TMO:
 959              		.loc 1 175 9 is_stmt 1 view .LVU197
 960 0042 FBE7     		b	.L58
 961              	.L65:
 176:Core/Src/menu.cpp ****         menu_value=MENU_SQ;
 962              		.loc 1 176 5 view .LVU198
 177:Core/Src/menu.cpp ****         break;
 963              		.loc 1 177 9 view .LVU199
 177:Core/Src/menu.cpp ****         break;
 964              		.loc 1 177 19 is_stmt 0 view .LVU200
 965 0044 0223     		movs	r3, #2
 966 0046 2370     		strb	r3, [r4]
 178:Core/Src/menu.cpp ****     case MENU_CH_IN:
 967              		.loc 1 178 9 is_stmt 1 view .LVU201
 968 0048 F8E7     		b	.L58
 969              	.L64:
 179:Core/Src/menu.cpp ****         cursorPos^=cursorOn; 
 970              		.loc 1 179 5 view .LVU202
 180:Core/Src/menu.cpp ****         break;
 971              		.loc 1 180 9 view .LVU203
 180:Core/Src/menu.cpp ****         break;
 972              		.loc 1 180 20 is_stmt 0 view .LVU204
 973 004a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 180:Core/Src/menu.cpp ****         break;
 974              		.loc 1 180 18 view .LVU205
 975 004c A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 976 004e 5340     		eors	r3, r3, r2
 977 0050 A374     		strb	r3, [r4, #18]
 181:Core/Src/menu.cpp ****     case MENU_SQ_IN:
 978              		.loc 1 181 9 is_stmt 1 view .LVU206
 979 0052 F3E7     		b	.L58
 980              	.L63:
 182:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 981              		.loc 1 182 5 view .LVU207
 183:Core/Src/menu.cpp ****         break;
 982              		.loc 1 183 9 view .LVU208
 183:Core/Src/menu.cpp ****         break;
 983              		.loc 1 183 20 is_stmt 0 view .LVU209
 984 0054 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 183:Core/Src/menu.cpp ****         break;
 985              		.loc 1 183 18 view .LVU210
 986 0056 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 987 0058 5340     		eors	r3, r3, r2
 988 005a A374     		strb	r3, [r4, #18]
 184:Core/Src/menu.cpp ****     case MENU_TMO_IN:
 989              		.loc 1 184 9 is_stmt 1 view .LVU211
 990 005c EEE7     		b	.L58
 991              	.L61:
 185:Core/Src/menu.cpp ****         cursorPos^=cursorOn;
 992              		.loc 1 185 5 view .LVU212
 186:Core/Src/menu.cpp ****         break;
 993              		.loc 1 186 9 view .LVU213
ARM GAS  /tmp/cc2EeMC6.s 			page 31


 186:Core/Src/menu.cpp ****         break;
 994              		.loc 1 186 20 is_stmt 0 view .LVU214
 995 005e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 186:Core/Src/menu.cpp ****         break;
 996              		.loc 1 186 18 view .LVU215
 997 0060 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 998 0062 5340     		eors	r3, r3, r2
 999 0064 A374     		strb	r3, [r4, #18]
 187:Core/Src/menu.cpp **** 
 1000              		.loc 1 187 9 is_stmt 1 view .LVU216
 192:Core/Src/menu.cpp **** void menu::menu_number(char num)
 1001              		.loc 1 192 1 is_stmt 0 view .LVU217
 1002 0066 E9E7     		b	.L58
 1003              		.cfi_endproc
 1004              	.LFE1992:
 1005              		.fnend
 1007              		.section	.text._ZN4menu11menu_numberEc,"ax",%progbits
 1008              		.align	1
 1009              		.global	_ZN4menu11menu_numberEc
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu fpv4-sp-d16
 1015              	_ZN4menu11menu_numberEc:
 1016              		.fnstart
 1017              	.LVL61:
 1018              	.LFB1993:
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1019              		.loc 1 194 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1023              		.loc 1 194 1 is_stmt 0 view .LVU219
 1024 0000 38B5     		push	{r3, r4, r5, lr}
 1025              		.save {r3, r4, r5, lr}
 1026              	.LCFI12:
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 3, -16
 1029              		.cfi_offset 4, -12
 1030              		.cfi_offset 5, -8
 1031              		.cfi_offset 14, -4
 1032 0002 0446     		mov	r4, r0
 1033 0004 0D46     		mov	r5, r1
 195:Core/Src/menu.cpp ****     {
 1034              		.loc 1 195 5 is_stmt 1 view .LVU220
 195:Core/Src/menu.cpp ****     {
 1035              		.loc 1 195 28 is_stmt 0 view .LVU221
 1036 0006 4069     		ldr	r0, [r0, #20]
 1037              	.LVL62:
 195:Core/Src/menu.cpp ****     {
 1038              		.loc 1 195 28 view .LVU222
 1039 0008 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1040              	.LVL63:
 195:Core/Src/menu.cpp ****     {
 1041              		.loc 1 195 5 view .LVU223
 1042 000c 48B9     		cbnz	r0, .L76
ARM GAS  /tmp/cc2EeMC6.s 			page 32


 1043              	.L71:
 199:Core/Src/menu.cpp ****     {
 1044              		.loc 1 199 5 is_stmt 1 view .LVU224
 199:Core/Src/menu.cpp ****     {
 1045              		.loc 1 199 8 is_stmt 0 view .LVU225
 1046 000e E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 199:Core/Src/menu.cpp ****     {
 1047              		.loc 1 199 5 view .LVU226
 1048 0010 33B1     		cbz	r3, .L70
 201:Core/Src/menu.cpp ****         {
 1049              		.loc 1 201 9 is_stmt 1 view .LVU227
 201:Core/Src/menu.cpp ****         {
 1050              		.loc 1 201 17 is_stmt 0 view .LVU228
 1051 0012 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 201:Core/Src/menu.cpp ****         {
 1052              		.loc 1 201 9 view .LVU229
 1053 0014 102A     		cmp	r2, #16
 1054 0016 0ED0     		beq	.L73
 1055 0018 182A     		cmp	r2, #24
 1056 001a 12D0     		beq	.L74
 1057 001c 082A     		cmp	r2, #8
 1058 001e 04D0     		beq	.L77
 1059              	.L70:
 220:Core/Src/menu.cpp **** void menu::menu_up()
 1060              		.loc 1 220 1 view .LVU230
 1061 0020 38BD     		pop	{r3, r4, r5, pc}
 1062              	.LVL64:
 1063              	.L76:
 197:Core/Src/menu.cpp ****     }
 1064              		.loc 1 197 9 is_stmt 1 view .LVU231
 197:Core/Src/menu.cpp ****     }
 1065              		.loc 1 197 31 is_stmt 0 view .LVU232
 1066 0022 6069     		ldr	r0, [r4, #20]
 1067 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1068              	.LVL65:
 1069 0028 F1E7     		b	.L71
 1070              	.L77:
 203:Core/Src/menu.cpp ****             ch[cursorPos]=num; //Changes the value 
 1071              		.loc 1 203 9 is_stmt 1 view .LVU233
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1072              		.loc 1 204 13 view .LVU234
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1073              		.loc 1 204 16 is_stmt 0 view .LVU235
 1074 002a A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 204:Core/Src/menu.cpp ****             cursorPos^=cursorOn; //Goes to the next position
 1075              		.loc 1 204 26 view .LVU236
 1076 002c A118     		adds	r1, r4, r2
 1077 002e 8D71     		strb	r5, [r1, #6]
 205:Core/Src/menu.cpp ****             break;
 1078              		.loc 1 205 13 is_stmt 1 view .LVU237
 205:Core/Src/menu.cpp ****             break;
 1079              		.loc 1 205 22 is_stmt 0 view .LVU238
 1080 0030 5340     		eors	r3, r3, r2
 1081 0032 A374     		strb	r3, [r4, #18]
 206:Core/Src/menu.cpp ****         case MENU_SQ_IN:
 1082              		.loc 1 206 13 is_stmt 1 view .LVU239
 1083 0034 F4E7     		b	.L70
ARM GAS  /tmp/cc2EeMC6.s 			page 33


 1084              	.L73:
 207:Core/Src/menu.cpp ****             sq[cursorPos]=num;
 1085              		.loc 1 207 9 view .LVU240
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1086              		.loc 1 208 13 view .LVU241
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1087              		.loc 1 208 16 is_stmt 0 view .LVU242
 1088 0036 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 208:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1089              		.loc 1 208 26 view .LVU243
 1090 0038 A118     		adds	r1, r4, r2
 1091 003a 8D70     		strb	r5, [r1, #2]
 209:Core/Src/menu.cpp ****             break;
 1092              		.loc 1 209 13 is_stmt 1 view .LVU244
 209:Core/Src/menu.cpp ****             break;
 1093              		.loc 1 209 22 is_stmt 0 view .LVU245
 1094 003c 5340     		eors	r3, r3, r2
 1095 003e A374     		strb	r3, [r4, #18]
 210:Core/Src/menu.cpp ****         case MENU_TMO_IN:
 1096              		.loc 1 210 13 is_stmt 1 view .LVU246
 1097 0040 EEE7     		b	.L70
 1098              	.L74:
 211:Core/Src/menu.cpp ****             tmo[cursorPos]=num;
 1099              		.loc 1 211 9 view .LVU247
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1100              		.loc 1 212 13 view .LVU248
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1101              		.loc 1 212 17 is_stmt 0 view .LVU249
 1102 0042 A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 212:Core/Src/menu.cpp ****             cursorPos^=cursorOn; 
 1103              		.loc 1 212 27 view .LVU250
 1104 0044 A118     		adds	r1, r4, r2
 1105 0046 8D73     		strb	r5, [r1, #14]
 213:Core/Src/menu.cpp ****             break;
 1106              		.loc 1 213 13 is_stmt 1 view .LVU251
 213:Core/Src/menu.cpp ****             break;
 1107              		.loc 1 213 22 is_stmt 0 view .LVU252
 1108 0048 5340     		eors	r3, r3, r2
 1109 004a A374     		strb	r3, [r4, #18]
 214:Core/Src/menu.cpp **** 
 1110              		.loc 1 214 13 is_stmt 1 view .LVU253
 220:Core/Src/menu.cpp **** void menu::menu_up()
 1111              		.loc 1 220 1 is_stmt 0 view .LVU254
 1112 004c E8E7     		b	.L70
 1113              		.cfi_endproc
 1114              	.LFE1993:
 1115              		.fnend
 1117              		.section	.text._ZN4menu7menu_upEv,"ax",%progbits
 1118              		.align	1
 1119              		.global	_ZN4menu7menu_upEv
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv4-sp-d16
 1125              	_ZN4menu7menu_upEv:
 1126              		.fnstart
 1127              	.LVL66:
ARM GAS  /tmp/cc2EeMC6.s 			page 34


 1128              	.LFB1994:
 222:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1129              		.loc 1 222 1 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 222:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1133              		.loc 1 222 1 is_stmt 0 view .LVU256
 1134 0000 10B5     		push	{r4, lr}
 1135              		.save {r4, lr}
 1136              	.LCFI13:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 4, -8
 1139              		.cfi_offset 14, -4
 1140 0002 0446     		mov	r4, r0
 223:Core/Src/menu.cpp ****     {
 1141              		.loc 1 223 5 is_stmt 1 view .LVU257
 223:Core/Src/menu.cpp ****     {
 1142              		.loc 1 223 28 is_stmt 0 view .LVU258
 1143 0004 4069     		ldr	r0, [r0, #20]
 1144              	.LVL67:
 223:Core/Src/menu.cpp ****     {
 1145              		.loc 1 223 28 view .LVU259
 1146 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1147              	.LVL68:
 223:Core/Src/menu.cpp ****     {
 1148              		.loc 1 223 5 view .LVU260
 1149 000a 50B9     		cbnz	r0, .L86
 1150              	.L79:
 227:Core/Src/menu.cpp ****     {
 1151              		.loc 1 227 5 is_stmt 1 view .LVU261
 227:Core/Src/menu.cpp ****     {
 1152              		.loc 1 227 13 is_stmt 0 view .LVU262
 1153 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 227:Core/Src/menu.cpp ****     {
 1154              		.loc 1 227 5 view .LVU263
 1155 000e 082B     		cmp	r3, #8
 1156 0010 0BD0     		beq	.L80
 1157 0012 102B     		cmp	r3, #16
 1158 0014 0FD0     		beq	.L81
 241:Core/Src/menu.cpp ****         if(volVal < 8) // Current max for volume is 8
 1159              		.loc 1 241 5 is_stmt 1 view .LVU264
 242:Core/Src/menu.cpp ****         {
 1160              		.loc 1 242 9 view .LVU265
 242:Core/Src/menu.cpp ****         {
 1161              		.loc 1 242 12 is_stmt 0 view .LVU266
 1162 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 242:Core/Src/menu.cpp ****         {
 1163              		.loc 1 242 9 view .LVU267
 1164 0018 072B     		cmp	r3, #7
 1165 001a 0BD8     		bhi	.L78
 244:Core/Src/menu.cpp ****         }
 1166              		.loc 1 244 13 is_stmt 1 view .LVU268
 244:Core/Src/menu.cpp ****         }
 1167              		.loc 1 244 19 is_stmt 0 view .LVU269
 1168 001c 0133     		adds	r3, r3, #1
 1169 001e 6373     		strb	r3, [r4, #13]
ARM GAS  /tmp/cc2EeMC6.s 			page 35


 248:Core/Src/menu.cpp **** 
 1170              		.loc 1 248 1 view .LVU270
 1171 0020 08E0     		b	.L78
 1172              	.L86:
 225:Core/Src/menu.cpp ****     }
 1173              		.loc 1 225 9 is_stmt 1 view .LVU271
 225:Core/Src/menu.cpp ****     }
 1174              		.loc 1 225 31 is_stmt 0 view .LVU272
 1175 0022 6069     		ldr	r0, [r4, #20]
 1176 0024 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1177              	.LVL69:
 1178 0028 F0E7     		b	.L79
 1179              	.L80:
 229:Core/Src/menu.cpp ****         if(chVal < 22) // Current max for ch is 22
 1180              		.loc 1 229 5 is_stmt 1 view .LVU273
 230:Core/Src/menu.cpp ****         {
 1181              		.loc 1 230 9 view .LVU274
 230:Core/Src/menu.cpp ****         {
 1182              		.loc 1 230 12 is_stmt 0 view .LVU275
 1183 002a 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 230:Core/Src/menu.cpp ****         {
 1184              		.loc 1 230 9 view .LVU276
 1185 002c 152B     		cmp	r3, #21
 1186 002e 01D8     		bhi	.L78
 232:Core/Src/menu.cpp ****         }
 1187              		.loc 1 232 13 is_stmt 1 view .LVU277
 232:Core/Src/menu.cpp ****         }
 1188              		.loc 1 232 18 is_stmt 0 view .LVU278
 1189 0030 0133     		adds	r3, r3, #1
 1190 0032 6372     		strb	r3, [r4, #9]
 1191              	.L78:
 248:Core/Src/menu.cpp **** 
 1192              		.loc 1 248 1 view .LVU279
 1193 0034 10BD     		pop	{r4, pc}
 1194              	.LVL70:
 1195              	.L81:
 235:Core/Src/menu.cpp ****         if(sqVal < 9) // Current max for Sq is 9
 1196              		.loc 1 235 5 is_stmt 1 view .LVU280
 236:Core/Src/menu.cpp ****         {
 1197              		.loc 1 236 9 view .LVU281
 236:Core/Src/menu.cpp ****         {
 1198              		.loc 1 236 12 is_stmt 0 view .LVU282
 1199 0036 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 236:Core/Src/menu.cpp ****         {
 1200              		.loc 1 236 9 view .LVU283
 1201 0038 082B     		cmp	r3, #8
 1202 003a FBD8     		bhi	.L78
 238:Core/Src/menu.cpp ****         }
 1203              		.loc 1 238 13 is_stmt 1 view .LVU284
 238:Core/Src/menu.cpp ****         }
 1204              		.loc 1 238 18 is_stmt 0 view .LVU285
 1205 003c 0133     		adds	r3, r3, #1
 1206 003e 6371     		strb	r3, [r4, #5]
 1207 0040 F8E7     		b	.L78
 1208              		.cfi_endproc
 1209              	.LFE1994:
 1210              		.fnend
ARM GAS  /tmp/cc2EeMC6.s 			page 36


 1212              		.section	.text._ZN4menu9menu_downEv,"ax",%progbits
 1213              		.align	1
 1214              		.global	_ZN4menu9menu_downEv
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu fpv4-sp-d16
 1220              	_ZN4menu9menu_downEv:
 1221              		.fnstart
 1222              	.LVL71:
 1223              	.LFB1995:
 251:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1224              		.loc 1 251 1 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 251:Core/Src/menu.cpp ****     if(oled1->oled_isOledOn()) //If the oled is on reset the timer
 1228              		.loc 1 251 1 is_stmt 0 view .LVU287
 1229 0000 10B5     		push	{r4, lr}
 1230              		.save {r4, lr}
 1231              	.LCFI14:
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 4, -8
 1234              		.cfi_offset 14, -4
 1235 0002 0446     		mov	r4, r0
 252:Core/Src/menu.cpp ****     {
 1236              		.loc 1 252 5 is_stmt 1 view .LVU288
 252:Core/Src/menu.cpp ****     {
 1237              		.loc 1 252 28 is_stmt 0 view .LVU289
 1238 0004 4069     		ldr	r0, [r0, #20]
 1239              	.LVL72:
 252:Core/Src/menu.cpp ****     {
 1240              		.loc 1 252 28 view .LVU290
 1241 0006 FFF7FEFF 		bl	_ZN4oled13oled_isOledOnEv
 1242              	.LVL73:
 252:Core/Src/menu.cpp ****     {
 1243              		.loc 1 252 5 view .LVU291
 1244 000a 48B9     		cbnz	r0, .L95
 1245              	.L88:
 256:Core/Src/menu.cpp ****     {
 1246              		.loc 1 256 5 is_stmt 1 view .LVU292
 256:Core/Src/menu.cpp ****     {
 1247              		.loc 1 256 13 is_stmt 0 view .LVU293
 1248 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 256:Core/Src/menu.cpp ****     {
 1249              		.loc 1 256 5 view .LVU294
 1250 000e 082B     		cmp	r3, #8
 1251 0010 0AD0     		beq	.L89
 1252 0012 102B     		cmp	r3, #16
 1253 0014 0DD0     		beq	.L90
 270:Core/Src/menu.cpp ****         if(volVal > 0)
 1254              		.loc 1 270 5 is_stmt 1 view .LVU295
 271:Core/Src/menu.cpp ****         {
 1255              		.loc 1 271 9 view .LVU296
 271:Core/Src/menu.cpp ****         {
 1256              		.loc 1 271 12 is_stmt 0 view .LVU297
 1257 0016 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
ARM GAS  /tmp/cc2EeMC6.s 			page 37


 271:Core/Src/menu.cpp ****         {
 1258              		.loc 1 271 9 view .LVU298
 1259 0018 53B1     		cbz	r3, .L87
 273:Core/Src/menu.cpp ****         }
 1260              		.loc 1 273 13 is_stmt 1 view .LVU299
 273:Core/Src/menu.cpp ****         }
 1261              		.loc 1 273 19 is_stmt 0 view .LVU300
 1262 001a 013B     		subs	r3, r3, #1
 1263 001c 6373     		strb	r3, [r4, #13]
 278:Core/Src/menu.cpp **** 
 1264              		.loc 1 278 1 view .LVU301
 1265 001e 07E0     		b	.L87
 1266              	.L95:
 254:Core/Src/menu.cpp ****     }
 1267              		.loc 1 254 9 is_stmt 1 view .LVU302
 254:Core/Src/menu.cpp ****     }
 1268              		.loc 1 254 31 is_stmt 0 view .LVU303
 1269 0020 6069     		ldr	r0, [r4, #20]
 1270 0022 FFF7FEFF 		bl	_ZN4oled15oled_resetTimerEv
 1271              	.LVL74:
 1272 0026 F1E7     		b	.L88
 1273              	.L89:
 258:Core/Src/menu.cpp ****         if(chVal > 0)
 1274              		.loc 1 258 5 is_stmt 1 view .LVU304
 259:Core/Src/menu.cpp ****         {
 1275              		.loc 1 259 9 view .LVU305
 259:Core/Src/menu.cpp ****         {
 1276              		.loc 1 259 12 is_stmt 0 view .LVU306
 1277 0028 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 259:Core/Src/menu.cpp ****         {
 1278              		.loc 1 259 9 view .LVU307
 1279 002a 0BB1     		cbz	r3, .L87
 261:Core/Src/menu.cpp ****         }
 1280              		.loc 1 261 9 is_stmt 1 view .LVU308
 261:Core/Src/menu.cpp ****         }
 1281              		.loc 1 261 14 is_stmt 0 view .LVU309
 1282 002c 013B     		subs	r3, r3, #1
 1283 002e 6372     		strb	r3, [r4, #9]
 1284              	.L87:
 278:Core/Src/menu.cpp **** 
 1285              		.loc 1 278 1 view .LVU310
 1286 0030 10BD     		pop	{r4, pc}
 1287              	.LVL75:
 1288              	.L90:
 264:Core/Src/menu.cpp ****         if(sqVal > 0)
 1289              		.loc 1 264 5 is_stmt 1 view .LVU311
 265:Core/Src/menu.cpp ****         {
 1290              		.loc 1 265 9 view .LVU312
 265:Core/Src/menu.cpp ****         {
 1291              		.loc 1 265 12 is_stmt 0 view .LVU313
 1292 0032 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 265:Core/Src/menu.cpp ****         {
 1293              		.loc 1 265 9 view .LVU314
 1294 0034 002B     		cmp	r3, #0
 1295 0036 FBD0     		beq	.L87
 267:Core/Src/menu.cpp ****         }
 1296              		.loc 1 267 9 is_stmt 1 view .LVU315
ARM GAS  /tmp/cc2EeMC6.s 			page 38


 267:Core/Src/menu.cpp ****         }
 1297              		.loc 1 267 14 is_stmt 0 view .LVU316
 1298 0038 013B     		subs	r3, r3, #1
 1299 003a 6371     		strb	r3, [r4, #5]
 1300 003c F8E7     		b	.L87
 1301              		.cfi_endproc
 1302              	.LFE1995:
 1303              		.fnend
 1305              		.section	.rodata._ZN4menu13keyboard_pollEv.str1.4,"aMS",%progbits,1
 1306              		.align	2
 1307              	.LC9:
 1308 0000 6E657874 		.ascii	"next\000"
 1308      00
 1309 0005 000000   		.align	2
 1310              	.LC10:
 1311 0008 3600     		.ascii	"6\000"
 1312 000a 0000     		.align	2
 1313              	.LC11:
 1314 000c 3500     		.ascii	"5\000"
 1315 000e 0000     		.align	2
 1316              	.LC12:
 1317 0010 3400     		.ascii	"4\000"
 1318 0012 0000     		.align	2
 1319              	.LC13:
 1320 0014 70726576 		.ascii	"prev\000"
 1320      00
 1321 0019 000000   		.align	2
 1322              	.LC14:
 1323 001c 3800     		.ascii	"8\000"
 1324 001e 0000     		.align	2
 1325              	.LC15:
 1326 0020 3700     		.ascii	"7\000"
 1327 0022 0000     		.align	2
 1328              	.LC16:
 1329 0024 3900     		.ascii	"9\000"
 1330 0026 0000     		.align	2
 1331              	.LC17:
 1332 0028 646F776E 		.ascii	"down\000"
 1332      00
 1333 002d 000000   		.align	2
 1334              	.LC18:
 1335 0030 4D454E55 		.ascii	"MENUs\000"
 1335      7300
 1336 0036 0000     		.align	2
 1337              	.LC19:
 1338 0038 4D454E55 		.ascii	"MENU\000"
 1338      00
 1339 003d 000000   		.align	2
 1340              	.LC20:
 1341 0040 3000     		.ascii	"0\000"
 1342 0042 0000     		.align	2
 1343              	.LC21:
 1344 0044 4261636B 		.ascii	"Back\000"
 1344      00
 1345 0049 000000   		.align	2
 1346              	.LC22:
 1347 004c 757000   		.ascii	"up\000"
ARM GAS  /tmp/cc2EeMC6.s 			page 39


 1348 004f 00       		.align	2
 1349              	.LC23:
 1350 0050 3300     		.ascii	"3\000"
 1351 0052 0000     		.align	2
 1352              	.LC24:
 1353 0054 3200     		.ascii	"2\000"
 1354 0056 0000     		.align	2
 1355              	.LC25:
 1356 0058 3100     		.ascii	"1\000"
 1357              		.section	.text._ZN4menu13keyboard_pollEv,"ax",%progbits
 1358              		.align	1
 1359              		.global	_ZN4menu13keyboard_pollEv
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1363              		.fpu fpv4-sp-d16
 1365              	_ZN4menu13keyboard_pollEv:
 1366              		.fnstart
 1367              	.LVL76:
 1368              	.LFB1996:
 283:Core/Src/menu.cpp ****     int sds=0;
 1369              		.loc 1 283 1 is_stmt 1 view -0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 24
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 283:Core/Src/menu.cpp ****     int sds=0;
 1373              		.loc 1 283 1 is_stmt 0 view .LVU318
 1374 0000 30B5     		push	{r4, r5, lr}
 1375              		.save {r4, r5, lr}
 1376              	.LCFI15:
 1377              		.cfi_def_cfa_offset 12
 1378              		.cfi_offset 4, -12
 1379              		.cfi_offset 5, -8
 1380              		.cfi_offset 14, -4
 1381              		.pad #28
 1382 0002 87B0     		sub	sp, sp, #28
 1383              	.LCFI16:
 1384              		.cfi_def_cfa_offset 40
 1385 0004 0546     		mov	r5, r0
 284:Core/Src/menu.cpp ****     char x[20];
 1386              		.loc 1 284 5 is_stmt 1 view .LVU319
 1387              	.LVL77:
 285:Core/Src/menu.cpp **** 
 1388              		.loc 1 285 5 view .LVU320
 287:Core/Src/menu.cpp ****     //Set The KEY1(PD11) One on
 1389              		.loc 1 287 5 view .LVU321
 290:Core/Src/menu.cpp ****     while(sds<10)
 1390              		.loc 1 290 5 view .LVU322
 290:Core/Src/menu.cpp ****     while(sds<10)
 1391              		.loc 1 290 15 is_stmt 0 view .LVU323
 1392 0006 A94A     		ldr	r2, .L127
 1393 0008 5369     		ldr	r3, [r2, #20]
 1394 000a 43F40063 		orr	r3, r3, #2048
 1395 000e 5361     		str	r3, [r2, #20]
 284:Core/Src/menu.cpp ****     char x[20];
 1396              		.loc 1 284 9 view .LVU324
 1397 0010 0023     		movs	r3, #0
ARM GAS  /tmp/cc2EeMC6.s 			page 40


 1398              	.LVL78:
 1399              	.L98:
 291:Core/Src/menu.cpp ****     {
 1400              		.loc 1 291 5 is_stmt 1 view .LVU325
 291:Core/Src/menu.cpp ****     {
 1401              		.loc 1 291 14 view .LVU326
 1402 0012 092B     		cmp	r3, #9
 1403 0014 01DC     		bgt	.L97
 293:Core/Src/menu.cpp ****     }
 1404              		.loc 1 293 9 view .LVU327
 293:Core/Src/menu.cpp ****     }
 1405              		.loc 1 293 12 is_stmt 0 view .LVU328
 1406 0016 0133     		adds	r3, r3, #1
 1407              	.LVL79:
 291:Core/Src/menu.cpp ****     {
 1408              		.loc 1 291 5 view .LVU329
 1409 0018 FBE7     		b	.L98
 1410              	.L97:
 295:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1411              		.loc 1 295 5 is_stmt 1 view .LVU330
 1412              	.LVL80:
 297:Core/Src/menu.cpp ****     {
 1413              		.loc 1 297 5 view .LVU331
 297:Core/Src/menu.cpp ****     {
 1414              		.loc 1 297 20 is_stmt 0 view .LVU332
 1415 001a A44B     		ldr	r3, .L127
 1416 001c 1B69     		ldr	r3, [r3, #16]
 297:Core/Src/menu.cpp ****     {
 1417              		.loc 1 297 23 view .LVU333
 1418 001e 03F40743 		and	r3, r3, #34560
 297:Core/Src/menu.cpp ****     {
 1419              		.loc 1 297 5 view .LVU334
 1420 0022 B3F5806F 		cmp	r3, #1024
 1421 0026 31D0     		beq	.L99
 1422 0028 12D8     		bhi	.L100
 1423 002a B3F5807F 		cmp	r3, #256
 1424 002e 3AD0     		beq	.L101
 1425 0030 B3F5007F 		cmp	r3, #512
 1426 0034 1CD1     		bne	.L103
 309:Core/Src/menu.cpp ****             menu_number('5');
 1427              		.loc 1 309 9 is_stmt 1 view .LVU335
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1428              		.loc 1 310 13 view .LVU336
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1429              		.loc 1 310 24 is_stmt 0 view .LVU337
 1430 0036 3521     		movs	r1, #53
 1431 0038 2846     		mov	r0, r5
 1432              	.LVL81:
 310:Core/Src/menu.cpp ****             sprintf(x,"5");
 1433              		.loc 1 310 24 view .LVU338
 1434 003a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1435              	.LVL82:
 311:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1436              		.loc 1 311 13 is_stmt 1 view .LVU339
 311:Core/Src/menu.cpp ****             uart1->send_recive(x,"5");   
 1437              		.loc 1 311 20 is_stmt 0 view .LVU340
 1438 003e 3523     		movs	r3, #53
ARM GAS  /tmp/cc2EeMC6.s 			page 41


 1439 0040 ADF80430 		strh	r3, [sp, #4]	@ movhi
 312:Core/Src/menu.cpp ****             break;
 1440              		.loc 1 312 13 is_stmt 1 view .LVU341
 312:Core/Src/menu.cpp ****             break;
 1441              		.loc 1 312 31 is_stmt 0 view .LVU342
 1442 0044 9A4A     		ldr	r2, .L127+4
 1443 0046 01A9     		add	r1, sp, #4
 1444 0048 A869     		ldr	r0, [r5, #24]
 1445 004a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1446              	.LVL83:
 1447 004e 0FE0     		b	.L103
 1448              	.LVL84:
 1449              	.L100:
 297:Core/Src/menu.cpp ****     {
 1450              		.loc 1 297 5 view .LVU343
 1451 0050 B3F5004F 		cmp	r3, #32768
 1452 0054 0CD1     		bne	.L103
 299:Core/Src/menu.cpp ****             menu_next();//R
 1453              		.loc 1 299 9 is_stmt 1 view .LVU344
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1454              		.loc 1 300 13 view .LVU345
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1455              		.loc 1 300 22 is_stmt 0 view .LVU346
 1456 0056 2846     		mov	r0, r5
 1457              	.LVL85:
 300:Core/Src/menu.cpp ****             sprintf(x,"next");
 1458              		.loc 1 300 22 view .LVU347
 1459 0058 FFF7FEFF 		bl	_ZN4menu9menu_nextEv
 1460              	.LVL86:
 301:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1461              		.loc 1 301 13 is_stmt 1 view .LVU348
 301:Core/Src/menu.cpp ****             uart1->send_recive(x,"next");   
 1462              		.loc 1 301 20 is_stmt 0 view .LVU349
 1463 005c 954A     		ldr	r2, .L127+8
 1464 005e 92E80300 		ldm	r2, {r0, r1}
 1465 0062 0190     		str	r0, [sp, #4]
 1466 0064 8DF80810 		strb	r1, [sp, #8]
 302:Core/Src/menu.cpp ****             break;
 1467              		.loc 1 302 13 is_stmt 1 view .LVU350
 302:Core/Src/menu.cpp ****             break;
 1468              		.loc 1 302 31 is_stmt 0 view .LVU351
 1469 0068 01A9     		add	r1, sp, #4
 1470 006a A869     		ldr	r0, [r5, #24]
 1471 006c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1472              	.LVL87:
 1473              	.L103:
 322:Core/Src/menu.cpp **** 
 1474              		.loc 1 322 5 is_stmt 1 view .LVU352
 322:Core/Src/menu.cpp **** 
 1475              		.loc 1 322 15 is_stmt 0 view .LVU353
 1476 0070 8E4B     		ldr	r3, .L127
 1477 0072 5A69     		ldr	r2, [r3, #20]
 1478 0074 22F40062 		bic	r2, r2, #2048
 1479 0078 5A61     		str	r2, [r3, #20]
 324:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1480              		.loc 1 324 5 is_stmt 1 view .LVU354
 1481              	.LVL88:
ARM GAS  /tmp/cc2EeMC6.s 			page 42


 325:Core/Src/menu.cpp ****     
 1482              		.loc 1 325 5 view .LVU355
 325:Core/Src/menu.cpp ****     
 1483              		.loc 1 325 15 is_stmt 0 view .LVU356
 1484 007a 5A69     		ldr	r2, [r3, #20]
 1485 007c 42F48052 		orr	r2, r2, #4096
 1486 0080 5A61     		str	r2, [r3, #20]
 295:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1487              		.loc 1 295 8 view .LVU357
 1488 0082 0023     		movs	r3, #0
 1489              	.LVL89:
 1490              	.L105:
 327:Core/Src/menu.cpp ****     {
 1491              		.loc 1 327 5 is_stmt 1 view .LVU358
 327:Core/Src/menu.cpp ****     {
 1492              		.loc 1 327 14 view .LVU359
 1493 0084 092B     		cmp	r3, #9
 1494 0086 1BDC     		bgt	.L104
 329:Core/Src/menu.cpp ****     }
 1495              		.loc 1 329 9 view .LVU360
 329:Core/Src/menu.cpp ****     }
 1496              		.loc 1 329 12 is_stmt 0 view .LVU361
 1497 0088 0133     		adds	r3, r3, #1
 1498              	.LVL90:
 327:Core/Src/menu.cpp ****     {
 1499              		.loc 1 327 5 view .LVU362
 1500 008a FBE7     		b	.L105
 1501              	.LVL91:
 1502              	.L99:
 304:Core/Src/menu.cpp ****             menu_number('6');
 1503              		.loc 1 304 9 is_stmt 1 view .LVU363
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1504              		.loc 1 305 13 view .LVU364
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1505              		.loc 1 305 24 is_stmt 0 view .LVU365
 1506 008c 3621     		movs	r1, #54
 1507 008e 2846     		mov	r0, r5
 1508              	.LVL92:
 305:Core/Src/menu.cpp ****             sprintf(x,"6");
 1509              		.loc 1 305 24 view .LVU366
 1510 0090 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1511              	.LVL93:
 306:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1512              		.loc 1 306 13 is_stmt 1 view .LVU367
 306:Core/Src/menu.cpp ****             uart1->send_recive(x,"6");   
 1513              		.loc 1 306 20 is_stmt 0 view .LVU368
 1514 0094 3623     		movs	r3, #54
 1515 0096 ADF80430 		strh	r3, [sp, #4]	@ movhi
 307:Core/Src/menu.cpp ****             break;
 1516              		.loc 1 307 13 is_stmt 1 view .LVU369
 307:Core/Src/menu.cpp ****             break;
 1517              		.loc 1 307 31 is_stmt 0 view .LVU370
 1518 009a 874A     		ldr	r2, .L127+12
 1519 009c 01A9     		add	r1, sp, #4
 1520 009e A869     		ldr	r0, [r5, #24]
 1521 00a0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1522              	.LVL94:
ARM GAS  /tmp/cc2EeMC6.s 			page 43


 1523 00a4 E4E7     		b	.L103
 1524              	.LVL95:
 1525              	.L101:
 314:Core/Src/menu.cpp ****             menu_number('4');
 1526              		.loc 1 314 9 is_stmt 1 view .LVU371
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1527              		.loc 1 315 13 view .LVU372
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1528              		.loc 1 315 24 is_stmt 0 view .LVU373
 1529 00a6 3421     		movs	r1, #52
 1530 00a8 2846     		mov	r0, r5
 1531              	.LVL96:
 315:Core/Src/menu.cpp ****             sprintf(x,"4");
 1532              		.loc 1 315 24 view .LVU374
 1533 00aa FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1534              	.LVL97:
 316:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1535              		.loc 1 316 13 is_stmt 1 view .LVU375
 316:Core/Src/menu.cpp ****             uart1->send_recive(x,"4");   
 1536              		.loc 1 316 20 is_stmt 0 view .LVU376
 1537 00ae 3423     		movs	r3, #52
 1538 00b0 ADF80430 		strh	r3, [sp, #4]	@ movhi
 317:Core/Src/menu.cpp ****             break;
 1539              		.loc 1 317 13 is_stmt 1 view .LVU377
 317:Core/Src/menu.cpp ****             break;
 1540              		.loc 1 317 31 is_stmt 0 view .LVU378
 1541 00b4 814A     		ldr	r2, .L127+16
 1542 00b6 01A9     		add	r1, sp, #4
 1543 00b8 A869     		ldr	r0, [r5, #24]
 1544 00ba FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1545              	.LVL98:
 1546 00be D7E7     		b	.L103
 1547              	.LVL99:
 1548              	.L104:
 331:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1549              		.loc 1 331 5 is_stmt 1 view .LVU379
 333:Core/Src/menu.cpp ****     {
 1550              		.loc 1 333 5 view .LVU380
 333:Core/Src/menu.cpp ****     {
 1551              		.loc 1 333 20 is_stmt 0 view .LVU381
 1552 00c0 7A4B     		ldr	r3, .L127
 1553 00c2 1B69     		ldr	r3, [r3, #16]
 333:Core/Src/menu.cpp ****     {
 1554              		.loc 1 333 23 view .LVU382
 1555 00c4 03F40743 		and	r3, r3, #34560
 333:Core/Src/menu.cpp ****     {
 1556              		.loc 1 333 5 view .LVU383
 1557 00c8 B3F5806F 		cmp	r3, #1024
 1558 00cc 31D0     		beq	.L106
 1559 00ce 12D8     		bhi	.L107
 1560 00d0 B3F5807F 		cmp	r3, #256
 1561 00d4 3AD0     		beq	.L108
 1562 00d6 B3F5007F 		cmp	r3, #512
 1563 00da 1CD1     		bne	.L110
 345:Core/Src/menu.cpp ****             menu_number('7');
 1564              		.loc 1 345 9 is_stmt 1 view .LVU384
 346:Core/Src/menu.cpp ****             sprintf(x,"7");
ARM GAS  /tmp/cc2EeMC6.s 			page 44


 1565              		.loc 1 346 13 view .LVU385
 346:Core/Src/menu.cpp ****             sprintf(x,"7");
 1566              		.loc 1 346 24 is_stmt 0 view .LVU386
 1567 00dc 3721     		movs	r1, #55
 1568 00de 2846     		mov	r0, r5
 1569 00e0 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1570              	.LVL100:
 347:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1571              		.loc 1 347 13 is_stmt 1 view .LVU387
 347:Core/Src/menu.cpp ****             uart1->send_recive(x,"7");   
 1572              		.loc 1 347 20 is_stmt 0 view .LVU388
 1573 00e4 3723     		movs	r3, #55
 1574 00e6 ADF80430 		strh	r3, [sp, #4]	@ movhi
 348:Core/Src/menu.cpp ****             break;
 1575              		.loc 1 348 13 is_stmt 1 view .LVU389
 348:Core/Src/menu.cpp ****             break;
 1576              		.loc 1 348 31 is_stmt 0 view .LVU390
 1577 00ea 754A     		ldr	r2, .L127+20
 1578 00ec 01A9     		add	r1, sp, #4
 1579 00ee A869     		ldr	r0, [r5, #24]
 1580 00f0 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1581              	.LVL101:
 1582 00f4 0FE0     		b	.L110
 1583              	.L107:
 333:Core/Src/menu.cpp ****     {
 1584              		.loc 1 333 5 view .LVU391
 1585 00f6 B3F5004F 		cmp	r3, #32768
 1586 00fa 0CD1     		bne	.L110
 335:Core/Src/menu.cpp ****             menu_prev();//L
 1587              		.loc 1 335 9 is_stmt 1 view .LVU392
 336:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1588              		.loc 1 336 13 view .LVU393
 336:Core/Src/menu.cpp ****             sprintf(x,"prev");
 1589              		.loc 1 336 22 is_stmt 0 view .LVU394
 1590 00fc 2846     		mov	r0, r5
 1591 00fe FFF7FEFF 		bl	_ZN4menu9menu_prevEv
 1592              	.LVL102:
 337:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1593              		.loc 1 337 13 is_stmt 1 view .LVU395
 337:Core/Src/menu.cpp ****             uart1->send_recive(x,"prev");
 1594              		.loc 1 337 20 is_stmt 0 view .LVU396
 1595 0102 704A     		ldr	r2, .L127+24
 1596 0104 92E80300 		ldm	r2, {r0, r1}
 1597 0108 0190     		str	r0, [sp, #4]
 1598 010a 8DF80810 		strb	r1, [sp, #8]
 338:Core/Src/menu.cpp ****             break;
 1599              		.loc 1 338 13 is_stmt 1 view .LVU397
 338:Core/Src/menu.cpp ****             break;
 1600              		.loc 1 338 31 is_stmt 0 view .LVU398
 1601 010e 01A9     		add	r1, sp, #4
 1602 0110 A869     		ldr	r0, [r5, #24]
 1603 0112 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1604              	.LVL103:
 1605              	.L110:
 359:Core/Src/menu.cpp **** 
 1606              		.loc 1 359 5 is_stmt 1 view .LVU399
 359:Core/Src/menu.cpp **** 
ARM GAS  /tmp/cc2EeMC6.s 			page 45


 1607              		.loc 1 359 15 is_stmt 0 view .LVU400
 1608 0116 654B     		ldr	r3, .L127
 1609 0118 5A69     		ldr	r2, [r3, #20]
 1610 011a 22F48052 		bic	r2, r2, #4096
 1611 011e 5A61     		str	r2, [r3, #20]
 362:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1612              		.loc 1 362 5 is_stmt 1 view .LVU401
 1613              	.LVL104:
 363:Core/Src/menu.cpp ****     while(sds<10)
 1614              		.loc 1 363 5 view .LVU402
 363:Core/Src/menu.cpp ****     while(sds<10)
 1615              		.loc 1 363 15 is_stmt 0 view .LVU403
 1616 0120 5A69     		ldr	r2, [r3, #20]
 1617 0122 42F40052 		orr	r2, r2, #8192
 1618 0126 5A61     		str	r2, [r3, #20]
 331:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1619              		.loc 1 331 8 view .LVU404
 1620 0128 0024     		movs	r4, #0
 1621              	.LVL105:
 1622              	.L112:
 364:Core/Src/menu.cpp ****     {
 1623              		.loc 1 364 5 is_stmt 1 view .LVU405
 364:Core/Src/menu.cpp ****     {
 1624              		.loc 1 364 14 view .LVU406
 1625 012a 092C     		cmp	r4, #9
 1626 012c 1BDC     		bgt	.L111
 366:Core/Src/menu.cpp ****     }
 1627              		.loc 1 366 9 view .LVU407
 366:Core/Src/menu.cpp ****     }
 1628              		.loc 1 366 12 is_stmt 0 view .LVU408
 1629 012e 0134     		adds	r4, r4, #1
 1630              	.LVL106:
 364:Core/Src/menu.cpp ****     {
 1631              		.loc 1 364 5 view .LVU409
 1632 0130 FBE7     		b	.L112
 1633              	.LVL107:
 1634              	.L106:
 340:Core/Src/menu.cpp ****             menu_number('8');
 1635              		.loc 1 340 9 is_stmt 1 view .LVU410
 341:Core/Src/menu.cpp ****             sprintf(x,"8");
 1636              		.loc 1 341 13 view .LVU411
 341:Core/Src/menu.cpp ****             sprintf(x,"8");
 1637              		.loc 1 341 24 is_stmt 0 view .LVU412
 1638 0132 3821     		movs	r1, #56
 1639 0134 2846     		mov	r0, r5
 1640 0136 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1641              	.LVL108:
 342:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1642              		.loc 1 342 13 is_stmt 1 view .LVU413
 342:Core/Src/menu.cpp ****             uart1->send_recive(x,"8");   
 1643              		.loc 1 342 20 is_stmt 0 view .LVU414
 1644 013a 3823     		movs	r3, #56
 1645 013c ADF80430 		strh	r3, [sp, #4]	@ movhi
 343:Core/Src/menu.cpp ****             break;
 1646              		.loc 1 343 13 is_stmt 1 view .LVU415
 343:Core/Src/menu.cpp ****             break;
 1647              		.loc 1 343 31 is_stmt 0 view .LVU416
ARM GAS  /tmp/cc2EeMC6.s 			page 46


 1648 0140 614A     		ldr	r2, .L127+28
 1649 0142 01A9     		add	r1, sp, #4
 1650 0144 A869     		ldr	r0, [r5, #24]
 1651 0146 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1652              	.LVL109:
 1653 014a E4E7     		b	.L110
 1654              	.L108:
 350:Core/Src/menu.cpp ****             menu_number('9');
 1655              		.loc 1 350 9 is_stmt 1 view .LVU417
 351:Core/Src/menu.cpp ****             sprintf(x,"9");
 1656              		.loc 1 351 13 view .LVU418
 351:Core/Src/menu.cpp ****             sprintf(x,"9");
 1657              		.loc 1 351 24 is_stmt 0 view .LVU419
 1658 014c 3921     		movs	r1, #57
 1659 014e 2846     		mov	r0, r5
 1660 0150 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1661              	.LVL110:
 352:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1662              		.loc 1 352 13 is_stmt 1 view .LVU420
 352:Core/Src/menu.cpp ****             uart1->send_recive(x,"9");   
 1663              		.loc 1 352 20 is_stmt 0 view .LVU421
 1664 0154 3923     		movs	r3, #57
 1665 0156 ADF80430 		strh	r3, [sp, #4]	@ movhi
 353:Core/Src/menu.cpp ****             break;
 1666              		.loc 1 353 13 is_stmt 1 view .LVU422
 353:Core/Src/menu.cpp ****             break;
 1667              		.loc 1 353 31 is_stmt 0 view .LVU423
 1668 015a 5C4A     		ldr	r2, .L127+32
 1669 015c 01A9     		add	r1, sp, #4
 1670 015e A869     		ldr	r0, [r5, #24]
 1671 0160 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1672              	.LVL111:
 1673 0164 D7E7     		b	.L110
 1674              	.LVL112:
 1675              	.L111:
 370:Core/Src/menu.cpp ****     {
 1676              		.loc 1 370 5 is_stmt 1 view .LVU424
 370:Core/Src/menu.cpp ****     {
 1677              		.loc 1 370 20 is_stmt 0 view .LVU425
 1678 0166 514B     		ldr	r3, .L127
 1679 0168 1B69     		ldr	r3, [r3, #16]
 370:Core/Src/menu.cpp ****     {
 1680              		.loc 1 370 23 view .LVU426
 1681 016a 03F40743 		and	r3, r3, #34560
 370:Core/Src/menu.cpp ****     {
 1682              		.loc 1 370 5 view .LVU427
 1683 016e B3F5806F 		cmp	r3, #1024
 1684 0172 49D0     		beq	.L113
 1685 0174 12D8     		bhi	.L114
 1686 0176 B3F5807F 		cmp	r3, #256
 1687 017a 54D0     		beq	.L115
 1688 017c B3F5007F 		cmp	r3, #512
 1689 0180 1CD1     		bne	.L117
 382:Core/Src/menu.cpp ****             menu_number('0');
 1690              		.loc 1 382 9 is_stmt 1 view .LVU428
 383:Core/Src/menu.cpp ****             sprintf(x,"0");
 1691              		.loc 1 383 13 view .LVU429
ARM GAS  /tmp/cc2EeMC6.s 			page 47


 383:Core/Src/menu.cpp ****             sprintf(x,"0");
 1692              		.loc 1 383 24 is_stmt 0 view .LVU430
 1693 0182 3021     		movs	r1, #48
 1694 0184 2846     		mov	r0, r5
 1695 0186 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1696              	.LVL113:
 384:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1697              		.loc 1 384 13 is_stmt 1 view .LVU431
 384:Core/Src/menu.cpp ****             uart1->send_recive(x,"0");   
 1698              		.loc 1 384 20 is_stmt 0 view .LVU432
 1699 018a 3023     		movs	r3, #48
 1700 018c ADF80430 		strh	r3, [sp, #4]	@ movhi
 385:Core/Src/menu.cpp ****             break;
 1701              		.loc 1 385 13 is_stmt 1 view .LVU433
 385:Core/Src/menu.cpp ****             break;
 1702              		.loc 1 385 31 is_stmt 0 view .LVU434
 1703 0190 4F4A     		ldr	r2, .L127+36
 1704 0192 01A9     		add	r1, sp, #4
 1705 0194 A869     		ldr	r0, [r5, #24]
 1706 0196 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1707              	.LVL114:
 1708 019a 0FE0     		b	.L117
 1709              	.L114:
 370:Core/Src/menu.cpp ****     {
 1710              		.loc 1 370 5 view .LVU435
 1711 019c B3F5004F 		cmp	r3, #32768
 1712 01a0 0CD1     		bne	.L117
 372:Core/Src/menu.cpp ****             menu_down();//D
 1713              		.loc 1 372 9 is_stmt 1 view .LVU436
 373:Core/Src/menu.cpp ****             sprintf(x,"down");
 1714              		.loc 1 373 13 view .LVU437
 373:Core/Src/menu.cpp ****             sprintf(x,"down");
 1715              		.loc 1 373 22 is_stmt 0 view .LVU438
 1716 01a2 2846     		mov	r0, r5
 1717 01a4 FFF7FEFF 		bl	_ZN4menu9menu_downEv
 1718              	.LVL115:
 374:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1719              		.loc 1 374 13 is_stmt 1 view .LVU439
 374:Core/Src/menu.cpp ****             uart1->send_recive(x,"down");
 1720              		.loc 1 374 20 is_stmt 0 view .LVU440
 1721 01a8 4A4A     		ldr	r2, .L127+40
 1722 01aa 92E80300 		ldm	r2, {r0, r1}
 1723 01ae 0190     		str	r0, [sp, #4]
 1724 01b0 8DF80810 		strb	r1, [sp, #8]
 375:Core/Src/menu.cpp ****             break;
 1725              		.loc 1 375 13 is_stmt 1 view .LVU441
 375:Core/Src/menu.cpp ****             break;
 1726              		.loc 1 375 31 is_stmt 0 view .LVU442
 1727 01b4 01A9     		add	r1, sp, #4
 1728 01b6 A869     		ldr	r0, [r5, #24]
 1729 01b8 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1730              	.LVL116:
 1731              	.L117:
 396:Core/Src/menu.cpp **** 
 1732              		.loc 1 396 5 is_stmt 1 view .LVU443
 396:Core/Src/menu.cpp **** 
 1733              		.loc 1 396 15 is_stmt 0 view .LVU444
ARM GAS  /tmp/cc2EeMC6.s 			page 48


 1734 01bc 3B4B     		ldr	r3, .L127
 1735 01be 5A69     		ldr	r2, [r3, #20]
 1736 01c0 22F40052 		bic	r2, r2, #8192
 1737 01c4 5A61     		str	r2, [r3, #20]
 398:Core/Src/menu.cpp ****     GPIOD->ODR|=pin;
 1738              		.loc 1 398 5 is_stmt 1 view .LVU445
 1739              	.LVL117:
 399:Core/Src/menu.cpp ****     while(sds<10)
 1740              		.loc 1 399 5 view .LVU446
 399:Core/Src/menu.cpp ****     while(sds<10)
 1741              		.loc 1 399 15 is_stmt 0 view .LVU447
 1742 01c6 5A69     		ldr	r2, [r3, #20]
 1743 01c8 42F48042 		orr	r2, r2, #16384
 1744 01cc 5A61     		str	r2, [r3, #20]
 1745              	.L119:
 400:Core/Src/menu.cpp ****     {
 1746              		.loc 1 400 5 is_stmt 1 view .LVU448
 400:Core/Src/menu.cpp ****     {
 1747              		.loc 1 400 14 view .LVU449
 1748 01ce 092C     		cmp	r4, #9
 1749 01d0 37DD     		ble	.L126
 404:Core/Src/menu.cpp ****         //Scan to see which port is on filter out PD8,PD9,PD10,PD15
 1750              		.loc 1 404 5 view .LVU450
 1751              	.LVL118:
 406:Core/Src/menu.cpp ****     {
 1752              		.loc 1 406 5 view .LVU451
 406:Core/Src/menu.cpp ****     {
 1753              		.loc 1 406 20 is_stmt 0 view .LVU452
 1754 01d2 364B     		ldr	r3, .L127
 1755 01d4 1B69     		ldr	r3, [r3, #16]
 406:Core/Src/menu.cpp ****     {
 1756              		.loc 1 406 23 view .LVU453
 1757 01d6 03F40743 		and	r3, r3, #34560
 406:Core/Src/menu.cpp ****     {
 1758              		.loc 1 406 5 view .LVU454
 1759 01da B3F5806F 		cmp	r3, #1024
 1760 01de 4AD0     		beq	.L120
 1761 01e0 31D8     		bhi	.L121
 1762 01e2 B3F5807F 		cmp	r3, #256
 1763 01e6 53D0     		beq	.L122
 1764 01e8 B3F5007F 		cmp	r3, #512
 1765 01ec 3CD1     		bne	.L124
 418:Core/Src/menu.cpp ****             menu_number('2');
 1766              		.loc 1 418 9 is_stmt 1 view .LVU455
 419:Core/Src/menu.cpp ****             sprintf(x,"2");
 1767              		.loc 1 419 13 view .LVU456
 419:Core/Src/menu.cpp ****             sprintf(x,"2");
 1768              		.loc 1 419 24 is_stmt 0 view .LVU457
 1769 01ee 3221     		movs	r1, #50
 1770 01f0 2846     		mov	r0, r5
 1771 01f2 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1772              	.LVL119:
 420:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1773              		.loc 1 420 13 is_stmt 1 view .LVU458
 420:Core/Src/menu.cpp ****             uart1->send_recive(x,"2");   
 1774              		.loc 1 420 20 is_stmt 0 view .LVU459
 1775 01f6 3223     		movs	r3, #50
ARM GAS  /tmp/cc2EeMC6.s 			page 49


 1776 01f8 ADF80430 		strh	r3, [sp, #4]	@ movhi
 421:Core/Src/menu.cpp ****             break;
 1777              		.loc 1 421 13 is_stmt 1 view .LVU460
 421:Core/Src/menu.cpp ****             break;
 1778              		.loc 1 421 31 is_stmt 0 view .LVU461
 1779 01fc 364A     		ldr	r2, .L127+44
 1780 01fe 01A9     		add	r1, sp, #4
 1781 0200 A869     		ldr	r0, [r5, #24]
 1782 0202 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1783              	.LVL120:
 1784 0206 2FE0     		b	.L124
 1785              	.LVL121:
 1786              	.L113:
 377:Core/Src/menu.cpp ****             menu_menu();//M
 1787              		.loc 1 377 9 is_stmt 1 view .LVU462
 378:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1788              		.loc 1 378 13 view .LVU463
 378:Core/Src/menu.cpp ****             sprintf(x,"MENUs");
 1789              		.loc 1 378 22 is_stmt 0 view .LVU464
 1790 0208 2846     		mov	r0, r5
 1791 020a FFF7FEFF 		bl	_ZN4menu9menu_menuEv
 1792              	.LVL122:
 379:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1793              		.loc 1 379 13 is_stmt 1 view .LVU465
 379:Core/Src/menu.cpp ****             uart1->send_recive(x,"MENU");
 1794              		.loc 1 379 20 is_stmt 0 view .LVU466
 1795 020e 334B     		ldr	r3, .L127+48
 1796 0210 93E80300 		ldm	r3, {r0, r1}
 1797 0214 0190     		str	r0, [sp, #4]
 1798 0216 ADF80810 		strh	r1, [sp, #8]	@ movhi
 380:Core/Src/menu.cpp ****             break;
 1799              		.loc 1 380 13 is_stmt 1 view .LVU467
 380:Core/Src/menu.cpp ****             break;
 1800              		.loc 1 380 31 is_stmt 0 view .LVU468
 1801 021a 314A     		ldr	r2, .L127+52
 1802 021c 01A9     		add	r1, sp, #4
 1803 021e A869     		ldr	r0, [r5, #24]
 1804 0220 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1805              	.LVL123:
 1806 0224 CAE7     		b	.L117
 1807              	.L115:
 387:Core/Src/menu.cpp ****             menu_back();//B
 1808              		.loc 1 387 9 is_stmt 1 view .LVU469
 388:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1809              		.loc 1 388 13 view .LVU470
 388:Core/Src/menu.cpp ****             sprintf(x,"Back");
 1810              		.loc 1 388 22 is_stmt 0 view .LVU471
 1811 0226 2846     		mov	r0, r5
 1812 0228 FFF7FEFF 		bl	_ZN4menu9menu_backEv
 1813              	.LVL124:
 389:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1814              		.loc 1 389 13 is_stmt 1 view .LVU472
 389:Core/Src/menu.cpp ****             uart1->send_recive(x,"Back");
 1815              		.loc 1 389 20 is_stmt 0 view .LVU473
 1816 022c 2D4A     		ldr	r2, .L127+56
 1817 022e 92E80300 		ldm	r2, {r0, r1}
 1818 0232 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/cc2EeMC6.s 			page 50


 1819 0234 8DF80810 		strb	r1, [sp, #8]
 390:Core/Src/menu.cpp ****             break;
 1820              		.loc 1 390 13 is_stmt 1 view .LVU474
 390:Core/Src/menu.cpp ****             break;
 1821              		.loc 1 390 31 is_stmt 0 view .LVU475
 1822 0238 01A9     		add	r1, sp, #4
 1823 023a A869     		ldr	r0, [r5, #24]
 1824 023c FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1825              	.LVL125:
 1826 0240 BCE7     		b	.L117
 1827              	.LVL126:
 1828              	.L126:
 402:Core/Src/menu.cpp ****     }
 1829              		.loc 1 402 9 is_stmt 1 view .LVU476
 402:Core/Src/menu.cpp ****     }
 1830              		.loc 1 402 12 is_stmt 0 view .LVU477
 1831 0242 0134     		adds	r4, r4, #1
 1832              	.LVL127:
 400:Core/Src/menu.cpp ****     {
 1833              		.loc 1 400 5 view .LVU478
 1834 0244 C3E7     		b	.L119
 1835              	.LVL128:
 1836              	.L121:
 406:Core/Src/menu.cpp ****     {
 1837              		.loc 1 406 5 view .LVU479
 1838 0246 B3F5004F 		cmp	r3, #32768
 1839 024a 0DD1     		bne	.L124
 408:Core/Src/menu.cpp ****             menu_up();//U
 1840              		.loc 1 408 9 is_stmt 1 view .LVU480
 409:Core/Src/menu.cpp ****             sprintf(x,"up");
 1841              		.loc 1 409 13 view .LVU481
 409:Core/Src/menu.cpp ****             sprintf(x,"up");
 1842              		.loc 1 409 20 is_stmt 0 view .LVU482
 1843 024c 2846     		mov	r0, r5
 1844 024e FFF7FEFF 		bl	_ZN4menu7menu_upEv
 1845              	.LVL129:
 410:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1846              		.loc 1 410 13 is_stmt 1 view .LVU483
 410:Core/Src/menu.cpp ****             uart1->send_recive(x,"up");   
 1847              		.loc 1 410 20 is_stmt 0 view .LVU484
 1848 0252 254A     		ldr	r2, .L127+60
 1849 0254 1368     		ldr	r3, [r2]
 1850 0256 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1851 025a 1B0C     		lsrs	r3, r3, #16
 1852 025c 8DF80630 		strb	r3, [sp, #6]
 411:Core/Src/menu.cpp ****             break;
 1853              		.loc 1 411 13 is_stmt 1 view .LVU485
 411:Core/Src/menu.cpp ****             break;
 1854              		.loc 1 411 31 is_stmt 0 view .LVU486
 1855 0260 01A9     		add	r1, sp, #4
 1856 0262 A869     		ldr	r0, [r5, #24]
 1857 0264 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1858              	.LVL130:
 1859              	.L124:
 432:Core/Src/menu.cpp **** 
 1860              		.loc 1 432 5 is_stmt 1 view .LVU487
 432:Core/Src/menu.cpp **** 
ARM GAS  /tmp/cc2EeMC6.s 			page 51


 1861              		.loc 1 432 15 is_stmt 0 view .LVU488
 1862 0268 104A     		ldr	r2, .L127
 1863 026a 5369     		ldr	r3, [r2, #20]
 1864 026c 23F48043 		bic	r3, r3, #16384
 1865 0270 5361     		str	r3, [r2, #20]
 1866              		.loc 1 434 1 view .LVU489
 1867 0272 07B0     		add	sp, sp, #28
 1868              	.LCFI17:
 1869              		.cfi_remember_state
 1870              		.cfi_def_cfa_offset 12
 1871              		@ sp needed
 1872 0274 30BD     		pop	{r4, r5, pc}
 1873              	.LVL131:
 1874              	.L120:
 1875              	.LCFI18:
 1876              		.cfi_restore_state
 413:Core/Src/menu.cpp ****             menu_number('3');
 1877              		.loc 1 413 9 is_stmt 1 view .LVU490
 414:Core/Src/menu.cpp ****             sprintf(x,"3");
 1878              		.loc 1 414 13 view .LVU491
 414:Core/Src/menu.cpp ****             sprintf(x,"3");
 1879              		.loc 1 414 24 is_stmt 0 view .LVU492
 1880 0276 3321     		movs	r1, #51
 1881 0278 2846     		mov	r0, r5
 1882 027a FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1883              	.LVL132:
 415:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1884              		.loc 1 415 13 is_stmt 1 view .LVU493
 415:Core/Src/menu.cpp ****             uart1->send_recive(x,"3");   
 1885              		.loc 1 415 20 is_stmt 0 view .LVU494
 1886 027e 3323     		movs	r3, #51
 1887 0280 ADF80430 		strh	r3, [sp, #4]	@ movhi
 416:Core/Src/menu.cpp ****             break;
 1888              		.loc 1 416 13 is_stmt 1 view .LVU495
 416:Core/Src/menu.cpp ****             break;
 1889              		.loc 1 416 31 is_stmt 0 view .LVU496
 1890 0284 194A     		ldr	r2, .L127+64
 1891 0286 01A9     		add	r1, sp, #4
 1892 0288 A869     		ldr	r0, [r5, #24]
 1893 028a FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1894              	.LVL133:
 1895 028e EBE7     		b	.L124
 1896              	.L122:
 423:Core/Src/menu.cpp ****             menu_number('1');
 1897              		.loc 1 423 9 is_stmt 1 view .LVU497
 424:Core/Src/menu.cpp ****             sprintf(x,"1");
 1898              		.loc 1 424 13 view .LVU498
 424:Core/Src/menu.cpp ****             sprintf(x,"1");
 1899              		.loc 1 424 24 is_stmt 0 view .LVU499
 1900 0290 3121     		movs	r1, #49
 1901 0292 2846     		mov	r0, r5
 1902 0294 FFF7FEFF 		bl	_ZN4menu11menu_numberEc
 1903              	.LVL134:
 425:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1904              		.loc 1 425 13 is_stmt 1 view .LVU500
 425:Core/Src/menu.cpp ****             uart1->send_recive(x,"1");   
 1905              		.loc 1 425 20 is_stmt 0 view .LVU501
ARM GAS  /tmp/cc2EeMC6.s 			page 52


 1906 0298 3123     		movs	r3, #49
 1907 029a ADF80430 		strh	r3, [sp, #4]	@ movhi
 426:Core/Src/menu.cpp ****             break;
 1908              		.loc 1 426 13 is_stmt 1 view .LVU502
 426:Core/Src/menu.cpp ****             break;
 1909              		.loc 1 426 31 is_stmt 0 view .LVU503
 1910 029e 144A     		ldr	r2, .L127+68
 1911 02a0 01A9     		add	r1, sp, #4
 1912 02a2 A869     		ldr	r0, [r5, #24]
 1913 02a4 FFF7FEFF 		bl	_ZN4uart11send_reciveEPcPKc
 1914              	.LVL135:
 1915 02a8 DEE7     		b	.L124
 1916              	.L128:
 1917 02aa 00BF     		.align	2
 1918              	.L127:
 1919 02ac 000C0240 		.word	1073875968
 1920 02b0 0C000000 		.word	.LC11
 1921 02b4 00000000 		.word	.LC9
 1922 02b8 08000000 		.word	.LC10
 1923 02bc 10000000 		.word	.LC12
 1924 02c0 20000000 		.word	.LC15
 1925 02c4 14000000 		.word	.LC13
 1926 02c8 1C000000 		.word	.LC14
 1927 02cc 24000000 		.word	.LC16
 1928 02d0 40000000 		.word	.LC20
 1929 02d4 28000000 		.word	.LC17
 1930 02d8 54000000 		.word	.LC24
 1931 02dc 30000000 		.word	.LC18
 1932 02e0 38000000 		.word	.LC19
 1933 02e4 44000000 		.word	.LC21
 1934 02e8 4C000000 		.word	.LC22
 1935 02ec 50000000 		.word	.LC23
 1936 02f0 58000000 		.word	.LC25
 1937              		.cfi_endproc
 1938              	.LFE1996:
 1939              		.fnend
 1941              		.section	.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart,"ax",%progbits
 1942              		.align	1
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv4-sp-d16
 1948              	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:
 1949              		.fnstart
 1950              	.LFB2477:
 1951              		.loc 1 434 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955 0000 08B5     		push	{r3, lr}
 1956              	.LCFI19:
 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 3, -8
 1959              		.cfi_offset 14, -4
 1960              		.loc 1 434 1 is_stmt 0 view .LVU505
 1961 0002 4FF6FF71 		movw	r1, #65535
 1962 0006 0120     		movs	r0, #1
ARM GAS  /tmp/cc2EeMC6.s 			page 53


 1963 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 1964              	.LVL136:
 1965 000c 08BD     		pop	{r3, pc}
 1966              		.cfi_endproc
 1967              	.LFE2477:
 1968              		.cantunwind
 1969              		.fnend
 1971              		.section	.init_array,"aw",%init_array
 1972              		.align	2
 1973 0000 00000000 		.word	_GLOBAL__sub_I__ZN4menuC2EP4oledP4uart(target1)
 1974              		.section	.bss._ZStL8__ioinit,"aw",%nobits
 1975              		.align	2
 1976              		.set	.LANCHOR0,. + 0
 1979              	_ZStL8__ioinit:
 1980 0000 00       		.space	1
 1981              		.text
 1982              	.Letext0:
 1983              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1984              		.file 4 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1985              		.file 5 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1986              		.file 6 "/usr/include/newlib/c++/9.2.1/cwchar"
 1987              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 1988              		.file 8 "/usr/include/newlib/c++/9.2.1/new"
 1989              		.file 9 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/c++config.h"
 1990              		.file 10 "/usr/include/newlib/c++/9.2.1/type_traits"
 1991              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 1992              		.file 12 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 1993              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
 1994              		.file 14 "/usr/include/newlib/c++/9.2.1/cstdint"
 1995              		.file 15 "/usr/include/newlib/c++/9.2.1/clocale"
 1996              		.file 16 "/usr/include/newlib/c++/9.2.1/cstdio"
 1997              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 1998              		.file 18 "/usr/include/newlib/c++/9.2.1/system_error"
 1999              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/ios_base.h"
 2000              		.file 20 "/usr/include/newlib/c++/9.2.1/cwctype"
 2001              		.file 21 "/usr/include/newlib/c++/9.2.1/iosfwd"
 2002              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 2003              		.file 23 "/usr/include/newlib/c++/9.2.1/tuple"
 2004              		.file 24 "/usr/include/newlib/c++/9.2.1/functional"
 2005              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2006              		.file 26 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2007              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2008              		.file 28 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2009              		.file 29 "/usr/include/newlib/sys/_types.h"
 2010              		.file 30 "<built-in>"
 2011              		.file 31 "/usr/include/newlib/sys/reent.h"
 2012              		.file 32 "/usr/include/newlib/sys/lock.h"
 2013              		.file 33 "/usr/include/newlib/stdlib.h"
 2014              		.file 34 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2015              		.file 35 "Drivers/CMSIS/Include/core_cm4.h"
 2016              		.file 36 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2017              		.file 37 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2018              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2019              		.file 39 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2020              		.file 40 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2021              		.file 41 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2022              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/cc2EeMC6.s 			page 54


 2023              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2024              		.file 44 "Core/Inc/fonts.h"
 2025              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2026              		.file 46 "/usr/include/newlib/stdio.h"
 2027              		.file 47 "Core/Inc/oled.h"
 2028              		.file 48 "/usr/include/newlib/wchar.h"
 2029              		.file 49 "/usr/include/newlib/locale.h"
 2030              		.file 50 "/usr/include/newlib/ctype.h"
 2031              		.file 51 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+fp/hard/bits/atomic_word.h"
 2032              		.file 52 "/usr/include/newlib/sys/errno.h"
 2033              		.file 53 "/usr/include/newlib/wctype.h"
 2034              		.file 54 "Core/Inc/uart.hpp"
 2035              		.file 55 "Core/Inc/menu.hpp"
ARM GAS  /tmp/cc2EeMC6.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.cpp
     /tmp/cc2EeMC6.s:18     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/cc2EeMC6.s:25     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/cc2EeMC6.s:69     .text._Z41__static_initialization_and_destruction_0ii:0000000000000024 $d
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/cc2EeMC6.s:78     .rodata._ZN4menuC2EP4oledP4uart.str1.4:0000000000000000 $d
     /tmp/cc2EeMC6.s:82     .text._ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc2EeMC6.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC2EP4oledP4uart
     /tmp/cc2EeMC6.s:142    .text._ZN4menuC2EP4oledP4uart:000000000000002c $d
.ARM.exidx.text._ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc2EeMC6.s:89     .text._ZN4menuC2EP4oledP4uart:0000000000000000 _ZN4menuC1EP4oledP4uart
     /tmp/cc2EeMC6.s:151    .rodata._ZN4menu10menu_printEv.str1.4:0000000000000000 $d
     /tmp/cc2EeMC6.s:176    .text._ZN4menu10menu_printEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:183    .text._ZN4menu10menu_printEv:0000000000000000 _ZN4menu10menu_printEv
     /tmp/cc2EeMC6.s:211    .text._ZN4menu10menu_printEv:0000000000000010 $d
     /tmp/cc2EeMC6.s:438    .text._ZN4menu10menu_printEv:000000000000012c $d
.ARM.exidx.text._ZN4menu10menu_printEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:453    .text._ZN4menu7menu_okEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:460    .text._ZN4menu7menu_okEv:0000000000000000 _ZN4menu7menu_okEv
     /tmp/cc2EeMC6.s:501    .text._ZN4menu7menu_okEv:000000000000001e $d
     /tmp/cc2EeMC6.s:525    .text._ZN4menu7menu_okEv:0000000000000036 $t
.ARM.exidx.text._ZN4menu7menu_okEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:633    .text._ZN4menu9menu_nextEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:640    .text._ZN4menu9menu_nextEv:0000000000000000 _ZN4menu9menu_nextEv
     /tmp/cc2EeMC6.s:674    .text._ZN4menu9menu_nextEv:0000000000000018 $d
     /tmp/cc2EeMC6.s:698    .text._ZN4menu9menu_nextEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_nextEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:762    .text._ZN4menu9menu_menuEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:769    .text._ZN4menu9menu_menuEv:0000000000000000 _ZN4menu9menu_menuEv
.ARM.exidx.text._ZN4menu9menu_menuEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:814    .text._ZN4menu9menu_backEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:821    .text._ZN4menu9menu_backEv:0000000000000000 _ZN4menu9menu_backEv
.ARM.exidx.text._ZN4menu9menu_backEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:869    .text._ZN4menu9menu_prevEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:876    .text._ZN4menu9menu_prevEv:0000000000000000 _ZN4menu9menu_prevEv
     /tmp/cc2EeMC6.s:910    .text._ZN4menu9menu_prevEv:0000000000000018 $d
     /tmp/cc2EeMC6.s:934    .text._ZN4menu9menu_prevEv:0000000000000030 $t
.ARM.exidx.text._ZN4menu9menu_prevEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:1008   .text._ZN4menu11menu_numberEc:0000000000000000 $t
     /tmp/cc2EeMC6.s:1015   .text._ZN4menu11menu_numberEc:0000000000000000 _ZN4menu11menu_numberEc
.ARM.exidx.text._ZN4menu11menu_numberEc:0000000000000000 $d
     /tmp/cc2EeMC6.s:1118   .text._ZN4menu7menu_upEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:1125   .text._ZN4menu7menu_upEv:0000000000000000 _ZN4menu7menu_upEv
.ARM.exidx.text._ZN4menu7menu_upEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:1213   .text._ZN4menu9menu_downEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:1220   .text._ZN4menu9menu_downEv:0000000000000000 _ZN4menu9menu_downEv
.ARM.exidx.text._ZN4menu9menu_downEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:1306   .rodata._ZN4menu13keyboard_pollEv.str1.4:0000000000000000 $d
     /tmp/cc2EeMC6.s:1358   .text._ZN4menu13keyboard_pollEv:0000000000000000 $t
     /tmp/cc2EeMC6.s:1365   .text._ZN4menu13keyboard_pollEv:0000000000000000 _ZN4menu13keyboard_pollEv
     /tmp/cc2EeMC6.s:1919   .text._ZN4menu13keyboard_pollEv:00000000000002ac $d
.ARM.exidx.text._ZN4menu13keyboard_pollEv:0000000000000000 $d
     /tmp/cc2EeMC6.s:1942   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $t
     /tmp/cc2EeMC6.s:1948   .text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 _GLOBAL__sub_I__ZN4menuC2EP4oledP4uart
.ARM.exidx.text._GLOBAL__sub_I__ZN4menuC2EP4oledP4uart:0000000000000000 $d
     /tmp/cc2EeMC6.s:1972   .init_array:0000000000000000 $d
ARM GAS  /tmp/cc2EeMC6.s 			page 56


     /tmp/cc2EeMC6.s:1975   .bss._ZStL8__ioinit:0000000000000000 $d
     /tmp/cc2EeMC6.s:1979   .bss._ZStL8__ioinit:0000000000000000 _ZStL8__ioinit
     /tmp/cc2EeMC6.s:236    .text._ZN4menu10menu_printEv:0000000000000029 $d
     /tmp/cc2EeMC6.s:236    .text._ZN4menu10menu_printEv:000000000000002a $t

UNDEFINED SYMBOLS
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
__dso_handle
_ZNSt8ios_base4InitD1Ev
sprintf
_ZN4oled10oled_printEPc9FontDef_ttt
Font_16x26
Font_11x18
__aeabi_unwind_cpp_pr0
_ZN4oled13oled_isOledOnEv
_ZN4oled15oled_resetTimerEv
_ZN4oled7oled_onEv
atoi
_ZN4uart11send_reciveEPcPKc
